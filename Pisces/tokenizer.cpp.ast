typedef char *__builtin_va_list;
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x9dee250 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x9dee2b0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x9dee310 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9dee370 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x9dee510 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x9dee570 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9dee5d0 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x9e95160 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x9e951b8 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x9e95208 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x9e95258 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x9e952a8 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x9e952f8 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x9e95348 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x9e95398 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x9e953e8 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x9e95438 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x9e95488 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x9e954d8 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9e99d08 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e99ce8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e95570 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e95540 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e95524 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e95558 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e95668 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e95658 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e95630 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e95618 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e955e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e955d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e95588 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e955b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e955a0 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e95600 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e99cd0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e99cb0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e956c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e95698 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e95680 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e956b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e957c0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e957b0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e95788 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e95770 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e95740 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e95728 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e956e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e95710 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e956f8 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e95758 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e99c98 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e99c78 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e95820 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e957f0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e957d8 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e95808 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e99b68 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e95908 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e958e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e958c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e95898 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e95880 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e95838 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e95868 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e95850 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e958b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e99c60 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e99c50 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e99c28 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e99c10 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e99be0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e99bc8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e99b80 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e99bb0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e99b98 <line:87:24> 'int' EnumConstant 0x9e95180 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e99bf8 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9e9a2e8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9a2c8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e99da0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e99d70 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e99d54 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e99d88 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e99e98 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e99e88 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e99e60 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e99e48 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e99e18 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e99e00 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e99db8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e99de8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e99dd0 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e99e30 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9a2b0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9a290 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e99ef8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e99ec8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e99eb0 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e99ee0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e99ff0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e99fe0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e99fb8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e99fa0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e99f70 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e99f58 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e99f10 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e99f40 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e99f28 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e99f88 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9a278 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9a258 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9a050 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9a020 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9a008 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9a038 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9a148 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9a138 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9a110 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9a0f8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9a0c8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9a0b0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9a068 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9a098 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9a080 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9a0e0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9a240 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9a230 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9a208 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9a1f0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9a1c0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9a1a8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9a160 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9a190 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9a178 <line:88:24> 'int' EnumConstant 0x9e951d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9a1d8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9e9a8c8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9a8a8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9a380 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9a350 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9a334 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9a368 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9a478 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9a468 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9a440 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9a428 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9a3f8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9a3e0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9a398 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9a3c8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9a3b0 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9a410 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9a890 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9a870 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9a4d8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9a4a8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9a490 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9a4c0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9a5d0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9a5c0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9a598 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9a580 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9a550 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9a538 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9a4f0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9a520 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9a508 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9a568 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9a858 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9a838 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9a630 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9a600 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9a5e8 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9a618 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9a728 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9a718 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9a6f0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9a6d8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9a6a8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9a690 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9a648 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9a678 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9a660 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9a6c0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9a820 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9a810 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9a7e8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9a7d0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9a7a0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9a788 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9a740 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9a770 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9a758 <line:89:24> 'int' EnumConstant 0x9e95220 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9a7b8 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9e9aeb8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9ae98 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9a960 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9a930 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9a914 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9a948 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9aa58 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9aa48 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9aa20 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9aa08 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9a9d8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9a9c0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9a978 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9a9a8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9a990 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9a9f0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9ae80 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9ae60 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9aab8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9aa88 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9aa70 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9aaa0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9abc0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9abb0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9ab88 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9ab70 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9ab30 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9ab18 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9aad0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9ab00 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9aae8 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9ab48 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9ae48 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9ae28 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9ac20 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9abf0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9abd8 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9ac08 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9ad18 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9ad08 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9ace0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9acc8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9ac98 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9ac80 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9ac38 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9ac68 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9ac50 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9acb0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9ae10 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9ae00 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9add8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9adc0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9ad90 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9ad78 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9ad30 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9ad60 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9ad48 <line:90:24> 'int' EnumConstant 0x9e95270 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9ada8 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9e9b498 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9b478 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9af50 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9af20 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9af04 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9af38 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9b048 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9b038 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9b010 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9aff8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9afc8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9afb0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9af68 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9af98 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9af80 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9afe0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9b460 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9b440 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9b0a8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9b078 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9b060 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9b090 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9b1a0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9b190 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9b168 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9b150 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9b120 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9b108 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9b0c0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9b0f0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9b0d8 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9b138 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9b428 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9b408 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9b200 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9b1d0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9b1b8 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9b1e8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9b2f8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9b2e8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9b2c0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9b2a8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9b278 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9b260 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9b218 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9b248 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9b230 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9b290 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9b3f0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9b3e0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9b3b8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9b3a0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9b370 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9b358 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9b310 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9b340 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9b328 <line:91:25> 'int' EnumConstant 0x9e952c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9b388 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x9e9ba78 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9ba58 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9b530 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9b500 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9b4e4 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9b518 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9b628 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9b618 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9b5f0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9b5d8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9b5a8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9b590 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9b548 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9b578 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9b560 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9b5c0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9ba40 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9ba20 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9b688 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9b658 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9b640 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9b670 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9b780 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9b770 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9b748 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9b730 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9b700 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9b6e8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9b6a0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9b6d0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9b6b8 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9b718 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9ba08 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9b9e8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9b7e0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9b7b0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9b798 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9b7c8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9b8d8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9b8c8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9b8a0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9b888 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9b858 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9b840 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9b7f8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9b828 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9b810 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9b870 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9b9d0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9b9c0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9b998 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9b980 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9b950 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9b938 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9b8f0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9b920 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9b908 <line:92:24> 'int' EnumConstant 0x9e95310 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9b968 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9e9c078 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9c058 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9bb10 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9bae0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9bac4 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9baf8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9bc28 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9bc18 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9bbf0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9bbd8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9bba8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9bb90 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9bb28 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9bb78 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9bb40 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9bbc0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9c040 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9c020 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9bc88 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9bc58 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9bc40 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9bc70 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9bd80 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9bd70 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9bd48 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9bd30 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9bd00 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9bce8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9bca0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9bcd0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9bcb8 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9bd18 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9c008 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9bfe8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9bde0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9bdb0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9bd98 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9bdc8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9bed8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9bec8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9bea0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9be88 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9be58 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9be40 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9bdf8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9be28 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9be10 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9be70 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9bfd0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9bfc0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9bf98 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9bf80 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9bf50 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9bf38 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9bef0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9bf20 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9bf08 <line:93:24> 'int' EnumConstant 0x9e95360 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9bf68 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x9e9c658 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9c638 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9c110 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9c0e0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9c0c4 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9c0f8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9c208 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9c1f8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9c1d0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9c1b8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9c188 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9c170 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9c128 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9c158 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9c140 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9c1a0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9c620 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9c600 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9c268 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9c238 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9c220 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9c250 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9c360 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9c350 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9c328 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9c310 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9c2e0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9c2c8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9c280 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9c2b0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9c298 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9c2f8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9c5e8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9c5c8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9c3c0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9c390 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9c378 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9c3a8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9c4b8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9c4a8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9c480 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9c468 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9c438 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9c420 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9c3d8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9c408 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9c3f0 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9c450 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9c5b0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9c5a0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9c578 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9c560 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9c530 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9c518 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9c4d0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9c500 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9c4e8 <line:94:24> 'int' EnumConstant 0x9e953b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9c548 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x9e9cc48 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9cc28 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9c6f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9c6c0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9c6a4 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9c6d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9c7e8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9c7d8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9c7b0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9c798 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9c768 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9c750 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9c708 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9c738 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9c720 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9c780 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9cc10 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9cbf0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9c848 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9c818 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9c800 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9c830 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9c940 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9c930 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9c908 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9c8f0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9c8c0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9c8a8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9c860 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9c890 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9c878 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9c8d8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9cbd8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9cbb8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9c9a0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9c970 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9c958 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9c988 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9ca98 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9ca88 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9ca60 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9ca48 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9ca18 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9ca00 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9c9b8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9c9e8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9c9d0 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9ca30 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9cba0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9cb90 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9cb58 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9cb40 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9cb10 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9caf8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9cab0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9cae0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9cac8 <line:95:24> 'int' EnumConstant 0x9e95400 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9cb28 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9e9d228 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9d208 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9cce0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9ccb0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9cc94 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9ccc8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9cdd8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9cdc8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9cda0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9cd88 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9cd58 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9cd40 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9ccf8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9cd28 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9cd10 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9cd70 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9d1f0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9d1d0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9ce38 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9ce08 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9cdf0 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9ce20 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9cf30 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9cf20 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9cef8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9cee0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9ceb0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9ce98 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9ce50 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9ce80 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9ce68 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9cec8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9d1b8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9d198 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9cf90 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9cf60 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9cf48 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9cf78 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9d088 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9d078 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9d050 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9d038 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9d008 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9cff0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9cfa8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9cfd8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9cfc0 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9d020 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9d180 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9d170 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9d148 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9d130 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9d100 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9d0e8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9d0a0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9d0d0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9d0b8 <line:96:24> 'int' EnumConstant 0x9e95450 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9d118 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9e9d808 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9d7e8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9d2c0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9d290 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9d274 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9d2a8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9d3b8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9d3a8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9d380 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9d368 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9d338 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9d320 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9d2d8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9d308 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9d2f0 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9d350 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9d7d0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9d7b0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9d418 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9d3e8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9d3d0 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9d400 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9d510 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9d500 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9d4d8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9d4c0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9d490 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9d478 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9d430 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9d460 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9d448 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9d4a8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9d798 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9d778 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9d570 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9d540 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9d528 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9d558 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9d668 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9d658 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9d630 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9d618 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9d5e8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9d5d0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9d588 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9d5b8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9d5a0 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9d600 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9d760 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9d750 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9d728 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9d710 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9d6e0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9d6c8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9d680 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9d6b0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9d698 <line:97:24> 'int' EnumConstant 0x9e954a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9d6f8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9e9de08 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e9dde8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e9d8a0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e9d870 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e9d854 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e9d888 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e9d998 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e9d988 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e9d960 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e9d948 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e9d918 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e9d900 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e9d8b8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e9d8e8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e9d8d0 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e9d930 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e9ddd0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e9ddb0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e9d9f8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e9d9c8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e9d9b0 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e9d9e0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e9daf0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e9dae0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e9dab8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e9daa0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e9da70 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e9da58 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e9da10 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e9da40 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e9da28 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e9da88 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e9dd98 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e9dd78 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e9db50 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e9db20 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e9db08 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e9db38 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e9dc68 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9dc58 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e9dc30 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e9dc18 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e9dbe8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e9dbd0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9db88 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e9dbb8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e9dba0 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9dc00 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e9dd60 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e9dd50 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e9dd28 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e9dd10 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e9dce0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e9dcc8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e9dc80 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e9dcb0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e9dc98 <line:98:24> 'int' EnumConstant 0x9e954f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e9dcf8 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9ed5808 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec2834 <col:26> 'int' EnumConstant 0x9ec2800 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9ed5818 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ed1448 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9ed1414 <line:468:33> 'int' EnumConstant 0x9ed1060 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9ed1430 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9eda8e8 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ed5a08 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9eda8f8 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ed5c18 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0x9ef2238 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee6100 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0x9ef2248 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee6158 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0x9ef2258 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee61a8 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0x9effeb8 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0x9effea0 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0x9efff20 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0x9efff08 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0x9f000f8 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0x9f003c8 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f001b0 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0x9f00658 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f00440 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0x9f00768 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f006d0 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0x9f03d38 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f007e0 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0x9f03e48 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f03db0 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0x9f04058 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f03ec0 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0x9f04268 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f040d0 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0x9f04bf8 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f04ad0 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0x9f04c08 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f04ba8 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0x9f1d768 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f1d6d0 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0x9f21988 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f1db40 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0x9f265c8 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x9f265b8 <line:18:5, col:18>
    (ConditionalOperator 0x9f26598 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9f26550 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0x9f26520 <col:12> 'T' lvalue ParmVar 0x9f263b0 'a' 'T')
        (DeclRefExpr 0x9f26538 <col:14> 'T' lvalue ParmVar 0x9f263f0 'b' 'T'))
      (DeclRefExpr 0x9f26568 <col:16> 'T' lvalue ParmVar 0x9f263b0 'a' 'T')
      (DeclRefExpr 0x9f26580 <col:18> 'T' lvalue ParmVar 0x9f263f0 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0x9f26838 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0x9f26828 <line:27:5, col:18>
    (ConditionalOperator 0x9f26808 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9f267c0 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0x9f26790 <col:12> 'T' lvalue ParmVar 0x9f26640 'a' 'T')
        (DeclRefExpr 0x9f267a8 <col:14> 'T' lvalue ParmVar 0x9f26680 'b' 'T'))
      (DeclRefExpr 0x9f267d8 <col:16> 'T' lvalue ParmVar 0x9f26640 'a' 'T')
      (DeclRefExpr 0x9f267f0 <col:18> 'T' lvalue ParmVar 0x9f26680 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
extern "C" {
    struct dirent {
        struct dirent;
        __ino_t d_ino;
        __off_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    struct dirent64 {
        struct dirent64;
        __ino64_t d_ino;
        __off64_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    enum  {
        DT_UNKNOWN = (ImplicitCastExpr 0x9f2c9a8 </usr/include/dirent.h:101:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c6d0 <col:18> 'int' 0))
,
        DT_FIFO = (ImplicitCastExpr 0x9f2c9b8 </usr/include/dirent.h:103:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c728 <col:15> 'int' 1))
,
        DT_CHR = (ImplicitCastExpr 0x9f2c9c8 </usr/include/dirent.h:105:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c778 <col:14> 'int' 2))
,
        DT_DIR = (ImplicitCastExpr 0x9f2c9d8 </usr/include/dirent.h:107:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c7c8 <col:14> 'int' 4))
,
        DT_BLK = (ImplicitCastExpr 0x9f2c9e8 </usr/include/dirent.h:109:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c818 <col:14> 'int' 6))
,
        DT_REG = (ImplicitCastExpr 0x9f2c9f8 </usr/include/dirent.h:111:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c868 <col:14> 'int' 8))
,
        DT_LNK = (ImplicitCastExpr 0x9f2ca08 </usr/include/dirent.h:113:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c8b8 <col:14> 'int' 10))
,
        DT_SOCK = (ImplicitCastExpr 0x9f2ca18 </usr/include/dirent.h:115:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c908 <col:15> 'int' 12))
,
        DT_WHT = (ImplicitCastExpr 0x9f2ca28 </usr/include/dirent.h:117:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2c958 <col:14> 'int' 14))

    };
    struct __dirstream;
    typedef struct __dirstream DIR;
    extern DIR *opendir(const char *__name);
    extern DIR *fdopendir(int __fd);
    extern int closedir(DIR *__dirp);
    extern struct dirent *readdir(DIR *__dirp);
    extern struct dirent64 *readdir64(DIR *__dirp);
    extern int readdir_r(DIR *restrict __dirp, struct dirent *restrict __entry, struct dirent **restrict __result);
    extern int readdir64_r(DIR *restrict __dirp, struct dirent64 *restrict __entry, struct dirent64 **restrict __result);
    extern void rewinddir(DIR *__dirp) throw();
    extern void seekdir(DIR *__dirp, long __pos) throw();
    extern long telldir(DIR *__dirp) throw();
    extern int dirfd(DIR *__dirp) throw();
    extern int scandir(const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandir64(const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int scandirat(int __dfd, const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandirat64(int __dfd, const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int alphasort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int alphasort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
    extern __ssize_t getdirentries(int __fd, char *restrict __buf, size_t __nbytes, __off_t *restrict __basep) throw();
    extern __ssize_t getdirentries64(int __fd, char *restrict __buf, size_t __nbytes, __off64_t *restrict __basep) throw();
    extern int versionsort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int versionsort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
}
extern "C" {
    struct stat {
        struct stat;
        __dev_t st_dev;
        unsigned short __pad1;
        __ino_t st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short __pad2;
        __off_t st_size;
        __blksize_t st_blksize;
        __blkcnt_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        unsigned long __unused4;
        unsigned long __unused5;
    };
    struct stat64 {
        struct stat64;
        __dev_t st_dev;
        unsigned int __pad1;
        __ino_t __st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned int __pad2;
        __off64_t st_size;
        __blksize_t st_blksize;
        __blkcnt64_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        __ino64_t st_ino;
    };
    extern int stat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int fstat(int __fd, struct stat *__buf) throw();
    extern int stat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int fstat64(int __fd, struct stat64 *__buf) throw();
    extern int fstatat(int __fd, const char *restrict __file, struct stat *restrict __buf, int __flag) throw();
    extern int fstatat64(int __fd, const char *restrict __file, struct stat64 *restrict __buf, int __flag) throw();
    extern int lstat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int lstat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int chmod(const char *__file, __mode_t __mode) throw();
    extern int lchmod(const char *__file, __mode_t __mode) throw();
    extern int fchmod(int __fd, __mode_t __mode) throw();
    extern int fchmodat(int __fd, const char *__file, __mode_t __mode, int __flag) throw();
    extern __mode_t umask(__mode_t __mask) throw();
    extern __mode_t getumask() throw();
    extern int mkdir(const char *__path, __mode_t __mode) throw();
    extern int mkdirat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int mknod(const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mknodat(int __fd, const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mkfifo(const char *__path, __mode_t __mode) throw();
    extern int mkfifoat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int utimensat(int __fd, const char *__path, const struct timespec __times[2], int __flags) throw();
    extern int futimens(int __fd, const struct timespec __times[2]) throw();
    extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf) throw();
    extern int __xstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __lxstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __fxstatat(int __ver, int __fildes, const char *__filename, struct stat *__stat_buf, int __flag) throw();
    extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf) throw();
    extern int __xstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __lxstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __fxstatat64(int __ver, int __fildes, const char *__filename, struct stat64 *__stat_buf, int __flag) throw();
    extern int __xmknod(int __ver, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
    extern int __xmknodat(int __ver, int __fd, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa013af8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa437860 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4375b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa01ae10 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa013c10 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa013c30 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc> class allocator;
    template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003798 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa003780 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa003740 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0004e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa003770 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa003758 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003828 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa003818 <col:9, col:24>
    (BinaryOperator 0xa003800 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0037e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000690 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0037f0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037c4 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0006e0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0038b8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0038a8 <col:9, col:23>
    (BinaryOperator 0xa003890 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa003870 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa00383c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002700 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa003880 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003854 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002750 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003a20 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa003a10 <col:9, col:39>
    (CallExpr 0xa0039b8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0039a8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa00394c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d560 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee630 'wmemcmp')))
      (ImplicitCastExpr 0xa0039e0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003904 <col:24> 'const char_type *' lvalue ParmVar 0xa002850 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0039f0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa00391c <col:30> 'const char_type *' lvalue ParmVar 0xa0028a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003a00 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003934 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0028e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa003b28 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa003b18 <col:9, col:26>
    (CallExpr 0xa003ae8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa003ad8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003a84 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9e8cea0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9fee080 'wcslen')))
      (ImplicitCastExpr 0xa003b08 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003a6c <col:23> 'const char_type *' lvalue ParmVar 0xa0029f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa003c68 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa003c58 <col:9, col:37>
    (ImplicitCastExpr 0xa003c48 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa003bf0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa003be0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa003bc0 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8d3b0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9feea90 'wmemchr')))
        (ImplicitCastExpr 0xa003c18 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa003b78 <col:24> 'const char_type *' lvalue ParmVar 0xa002af0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa003c28 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa003b90 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002b80 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa003c38 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa003ba8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa002b30 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003dd0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa003dc0 <col:9, col:40>
    (CallExpr 0xa003d68 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa003d58 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003cfc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d8f0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee710 'wmemmove')))
      (ImplicitCastExpr 0xa003d90 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003cb4 <col:25> 'char_type *' lvalue ParmVar 0xa002ce0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003da0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003ccc <col:31> 'const char_type *' lvalue ParmVar 0xa002d30 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003db0 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003ce4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa002d70 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003f10 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa003f00 <col:9, col:39>
    (CallExpr 0xa003ea8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa003e98 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003e64 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9e8d710 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9fee6a0 'wmemcpy')))
      (ImplicitCastExpr 0xa003ed0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e1c <col:24> 'char_type *' lvalue ParmVar 0xa002e80 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003ee0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e34 <col:30> 'const char_type *' lvalue ParmVar 0xa002ed0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003ef0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003e4c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa002f10 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa004070 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa004060 <col:9, col:37>
    (CallExpr 0xa004008 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa003ff8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003fa4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8dab0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9fee780 'wmemset')))
      (ImplicitCastExpr 0xa004030 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003f5c <col:24> 'char_type *' lvalue ParmVar 0xa002ff0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa004040 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003f74 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa003070 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa004050 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003f8c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa003030 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0040f0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0040e0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0040c8 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0040b8 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0040a8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa004090 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0031e0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa004170 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa004160 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa004148 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa004138 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa004128 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa004110 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa003300 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa004200 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0041f0 <col:9, col:24>
    (BinaryOperator 0xa0041d8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0041b8 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa004184 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003420 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0041c8 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa00419c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003470 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa004278 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa004268 <col:9, col:42>
    (CXXStaticCastExpr 0xa004250 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa004230 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa004218 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa004450 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa004440 <col:9, col:46>
    (ConditionalOperator 0xa004420 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa004398 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa004388 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa00428c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa003510 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0042a4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0043c0 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa004328 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa004318 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0042bc <col:33> 'int_type (void)' lvalue CXXMethod 0xa0035b0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa004410 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0043d0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa004400 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0043e8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')))))


    }
template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff168 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9fff150 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9fff110 <col:9> 'char_type':'char' lvalue ParmVar 0x9ffce40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9fff140 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9fff128 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffced0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff218 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9fff208 <col:9, col:24>
    (BinaryOperator 0x9fff1f0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9fff1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffcff0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff1e0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1d0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff194 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ffd040 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff2c8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9fff2b8 <col:9, col:23>
    (BinaryOperator 0x9fff2a0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9fff270 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff260 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff22c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffd160 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff290 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff280 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff244 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ffd1b0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff3f0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9fff3e0 <col:9, col:48>
    (CallExpr 0x9fff368 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9fff358 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff2dc <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9fff3a0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff390 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff2f4 <col:33> 'const char_type *' lvalue ParmVar 0x9ffd2b0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3c0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff3b0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff30c <col:39> 'const char_type *' lvalue ParmVar 0x9ffd300 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3d0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fff324 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd340 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9fff588 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9fff578 <col:9, col:36>
    (CallExpr 0x9fff548 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9fff538 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff4e4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9fff410 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9fff568 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9fff4fc <col:33> 'const char_type *' lvalue ParmVar 0x9ffd450 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9fff848 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9fff838 <col:9, col:77>
    (CXXStaticCastExpr 0x9fff820 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9fff798 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9fff788 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff704 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9fff5a0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fff7d0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff7c0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff71c <col:63> 'const char_type *' lvalue ParmVar 0x9ffd550 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9fff7f0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fff7e0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fff734 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ffd5e0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9fff800 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff74c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd590 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff998 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9fff988 <col:9, col:74>
    (CXXStaticCastExpr 0x9fff970 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fff8e8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9fff8d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff85c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fff920 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fff910 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff874 <col:58> 'char_type *' lvalue ParmVar 0x9ffd740 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fff940 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff930 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff88c <col:64> 'const char_type *' lvalue ParmVar 0x9ffd790 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fff950 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff8a4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd7d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fffc38 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9fffc28 <col:9, col:73>
    (CXXStaticCastExpr 0x9fffc10 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffb88 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9fffb78 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffb14 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fffbc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffbb0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb2c <col:57> 'char_type *' lvalue ParmVar 0x9ffe830 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fffbe0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fffbd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb44 <col:63> 'const char_type *' lvalue ParmVar 0x9ffe880 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fffbf0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffb5c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe8c0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9fffd88 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9fffd78 <col:9, col:71>
    (CXXStaticCastExpr 0x9fffd60 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffcd8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9fffcc8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffc4c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9fd5760 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fffd10 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffd00 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffc64 <col:57> 'char_type *' lvalue ParmVar 0x9ffe9a0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9fffd30 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fffd20 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fffc7c <col:62> 'char_type':'char' lvalue ParmVar 0x9ffea20 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9fffd40 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffc94 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe9e0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9fffe08 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9fffdf8 <col:9, col:42>
    (CXXStaticCastExpr 0x9fffde0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9fffdd0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9fffdc0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9fffd9c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ffebb0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9fffec0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9fffeb0 <col:9, col:69>
    (CXXStaticCastExpr 0x9fffe98 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9fffe88 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9fffe68 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9fffe58 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9fffe48 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9fffe1c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ffecd0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ffff50 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ffff40 <col:9, col:24>
    (BinaryOperator 0x9ffff28 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ffff08 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffed4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ffedf0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ffff18 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffeec <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ffee40 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ffffc8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ffffb8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ffffa0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ffff80 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ffff68 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa000128 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa000118 <col:9, col:37>
    (ConditionalOperator 0xa0000f8 <col:16, col:37> 'int'
      (ParenExpr 0xa0000a0 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa000088 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa000078 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ffffdc <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &'))
          (CallExpr 0xa000058 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa000048 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fffff4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ffef80 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0000b8 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0000e8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0000d0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa4373c8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa437228 <line:180:4, col:62>
    0xa437050 "void *__p =
      (CXXReinterpretCastExpr 0xa437210 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa4371f8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa4371a0 <col:41> 'size_type []' lvalue Var 0xa192210 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa4373b8 <line:181:4, col:39>
    (UnaryOperator 0xa4373a0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa437388 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa437378 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa43735c <col:36> 'void *' lvalue Var 0xa437050 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw() (CompoundStmt 0xa43c8f0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa43c8e0 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa43c8c8 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0xa43c8b0 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0xa43c8a0 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0xa0f29b0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa437038 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa437018 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa436d40 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa436cf8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa436ce8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0f2cac <col:8> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa436d20 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa436cd0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa436b30 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa436cb8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa436c98 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa436c88 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa436c50 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa192390 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa436d30 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa0f2d98 <col:50> '_Bool' false))))
    (CompoundStmt 0xa437000 <line:236:6, line:245:6>
      (NullStmt 0xa0f2dd0 <line:238:67>)
      (IfStmt 0xa436fe0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa436e38 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa436e10 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa436e00 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0f2e00 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa436de8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa436dc8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa1919e0
                (ImplicitCastExpr 0xa436db8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa436d90 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa0f2e98 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa0f2e80 <col:10> 'int' 1)))
          (IntegerLiteral 0xa0f2ed8 <col:16> 'int' 0))
        (CompoundStmt 0xa436fc8 <line:241:3, line:244:3>
          (NullStmt 0xa0f2f58 <line:242:63>)
          (CXXMemberCallExpr 0xa436fa8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa436f70 <col:5> '<bound member function type>' ->_M_destroy 0xa1930a0
              (CXXThisExpr 0xa436e50 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa436f90 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa192f80 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a) : std::allocator<wchar_t>((DeclRefExpr 0xa43c904 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa1716d0 '__a' 'const class std::allocator<wchar_t> &')
), _M_p((ImplicitCastExpr 0xa43cac0 </usr/include/c++/4.6/bits/basic_string.h:269:22> 'wchar_t *' <LValueToRValue>
  (DeclRefExpr 0xa43c998 <col:22> 'wchar_t *' lvalue ParmVar 0xa171660 '__dat' 'wchar_t *'))
) (CompoundStmt 0xa0f33a0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa436290 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


            inline _Alloc_hider(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider &) throw();
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa1713b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa1713a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa0d4118 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa436ad0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa436ac0 <col:9, col:29>
    (ImplicitCastExpr 0xa436ab0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa436a90 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa171940
        (MemberExpr 0xa436a70 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa171970
          (CXXThisExpr 0xa436950 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa436938 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa436928 <col:9, col:59>
    (UnaryOperator 0xa436910 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa4368f8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4368e0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa4368c8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4368b0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa436890 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa436870 <col:44> '<bound member function type>' ->_M_data 0xa1719f0
                  (CXXThisExpr 0xa436860 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa43c840 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0xa43c830 <col:9, col:35>
    (CallExpr 0xa43c810 <col:16, col:35> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0xa43c800 <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa43c7dc <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa192390 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))


    public:
    public:
        basic_string() : _M_dataplus((CXXMemberCallExpr 0xa43c318 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> 'wchar_t *'
  (MemberExpr 0xa43c2f4 <col:21, col:36> '<bound member function type>' ._M_refdata 0xa1927f0
    (CallExpr 0xa43c2d8 <col:21, col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0xa43c2c8 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa43c2b0 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa174f60 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))
, (MaterializeTemporaryExpr 0xa43c638 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
  (ImplicitCastExpr 0xa43c628 <col:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
    (CXXBindTemporaryExpr 0xa43c378 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>' (CXXTemporary 0xa43c370)
      (CXXTemporaryObjectExpr 0xa43c340 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>''void (void) throw()'))))
) (CompoundStmt 0xa0f9b00 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa4361e0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa4361c0 <col:9, col:51> 'void'
    (CXXTemporary 0xa436140)
    (CXXMemberCallExpr 0xa436158 <col:9, col:51> 'void'
      (MemberExpr 0xa4360bc <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa192fd0
        (CXXMemberCallExpr 0xa436090 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa436070 <col:9> '<bound member function type>' ->_M_rep 0xa171ce0
            (ImplicitCastExpr 0xa4360b0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa435f50 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa4361b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa4361a0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa436148 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa436140)
            (CXXMemberCallExpr 0xa436110 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa4360f0 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa1897e0
                (ImplicitCastExpr 0xa436130 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa4360e0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str) (CompoundStmt 0xa43cbb8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa43cba8 <col:9, col:34>
    (CXXMemberCallExpr 0xa43cb88 <col:16, col:34> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43cb68 <col:16, col:22> '<bound member function type>' ->assign 0xa17c4e0
        (CXXThisExpr 0xa43caf0 <col:16> 'class std::basic_string<wchar_t> *' this))
      (DeclRefExpr 0xa43cb50 <col:29> 'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa177700 '__str' 'const class std::basic_string<wchar_t> &'))))


        std::basic_string<wchar_t> &operator=(const wchar_t *__s) (CompoundStmt 0xa43c180 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0xa43c170 <col:9, col:32>
    (CXXMemberCallExpr 0xa43c140 <col:16, col:32> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43c120 <col:16, col:22> '<bound member function type>' ->assign 0xa17cff0
        (CXXThisExpr 0xa43c0a8 <col:16> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa43c160 <col:29> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa43c108 <col:29> 'const wchar_t *' lvalue ParmVar 0xa177910 '__s' 'const wchar_t *')))))


        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa43b4c0 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa43b4b0 <col:9, col:26>
    (ImplicitCastExpr 0xa43b4a0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa43b480 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa191860
        (ImplicitCastExpr 0xa43b470 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa43b450 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa43b430 <col:16> '<bound member function type>' ->_M_rep 0xa171ce0
              (CXXThisExpr 0xa43b310 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear() (CompoundStmt 0xa43cdb8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CXXMemberCallExpr 0xa43cd70 <col:9, col:37> 'void'
    (MemberExpr 0xa43ccf0 <col:9> '<bound member function type>' ->_M_mutate 0xa174d10
      (CXXThisExpr 0xa43cbd0 <col:9> 'class std::basic_string<wchar_t> *' this))
    (ImplicitCastExpr 0xa43cd98 <col:19> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa0faa08 <col:19> 'int' 0))
    (CXXMemberCallExpr 0xa43cd40 <col:22, col:33> 'size_type':'unsigned int'
      (MemberExpr 0xa43cd20 <col:22, col:28> '<bound member function type>' ->size 0xa178bb0
        (ImplicitCastExpr 0xa43cd60 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0xa43cd10 <col:22> 'class std::basic_string<wchar_t> *' this))))
    (ImplicitCastExpr 0xa43cda8 <col:36> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa0faa88 <col:36> 'int' 0))))


        bool empty() const (CompoundStmt 0xa43b2f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa43b2e8 <col:9, col:32>
    (BinaryOperator 0xa43b2d0 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa43b2a0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa43b280 <col:16, col:22> '<bound member function type>' ->size 0xa178bb0
          (CXXThisExpr 0xa43b270 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa43b2c0 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0fab48 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa43bb60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa43b5e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa43b590 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa43b580 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa43b514 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa17a110 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa43b560 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa43b540 <col:13, col:19> '<bound member function type>' ->size 0xa178bb0
          (CXXThisExpr 0xa43b530 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa43b5b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa43b5a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa43b5d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa43bb50 <line:859:2, col:22>
    (ImplicitCastExpr 0xa43bb40 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa43bb28 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa43bae0 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa43bac0 <col:9> '<bound member function type>' ->_M_data 0xa1719f0
            (CXXThisExpr 0xa43bab0 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa43bb18 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa43bafc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa17a110 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s) (CompoundStmt 0xa43d200 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0xa0fed00 <line:1119:32>)
  (ReturnStmt 0xa43d1f0 <line:1120:2, col:51>
    (CXXMemberCallExpr 0xa43d1b8 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43d194 <col:9, col:15> '<bound member function type>' ->assign 0xa17ce00
        (CXXThisExpr 0xa43cdd0 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa43d1e0 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa43ce30 <col:22> 'const wchar_t *' lvalue ParmVar 0xa17cf90 '__s' 'const wchar_t *'))
      (CallExpr 0xa43d128 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0xa43d118 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa43d0bc <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0xa002a70 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0xa43d148 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa43d0dc <col:47> 'const wchar_t *' lvalue ParmVar 0xa17cf90 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa43c090 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa43c080 <col:9, col:24>
    (ImplicitCastExpr 0xa43c070 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa43c050 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa43c030 <col:16> '<bound member function type>' ->_M_data 0xa1719f0
          (CXXThisExpr 0xa43c020 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa4375a0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa437590 <col:9, col:16>
    (CXXConstructExpr 0xa437568 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa437558 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa437548 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa437500 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa171970
            (CXXThisExpr 0xa4373e0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa149df8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa149de8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa0d4118 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa4383c0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4383b0 <col:9, col:29>
    (ImplicitCastExpr 0xa4383a0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa438380 <col:17, col:29> 'char *' lvalue ._M_p 0xa14a380
        (MemberExpr 0xa438360 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa14a3b0
          (CXXThisExpr 0xa438240 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa438228 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa438218 <col:9, col:59>
    (UnaryOperator 0xa438200 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa4381e8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4381d0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa4381b8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4381a0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa438180 <col:44, col:52> 'char *'
                (MemberExpr 0xa438160 <col:44> '<bound member function type>' ->_M_data 0xa14a430
                  (CXXThisExpr 0xa438150 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa437b78 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa437b68 <col:9, col:26>
    (ImplicitCastExpr 0xa437b58 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa437b38 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa16c340
        (ImplicitCastExpr 0xa437b28 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa437af0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa437ad0 <col:16> '<bound member function type>' ->_M_rep 0xa14a700
              (CXXThisExpr 0xa4379a8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa437990 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa437980 <col:9, col:32>
    (BinaryOperator 0xa437968 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa437938 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa437918 <col:16, col:22> '<bound member function type>' ->size 0xa151680
          (CXXThisExpr 0xa437908 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa437958 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0fab48 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa43b210 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4384e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa438490 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa438480 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa438414 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa152be0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa438460 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa438440 <col:13, col:19> '<bound member function type>' ->size 0xa151680
          (CXXThisExpr 0xa438430 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa4384b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4384a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4384d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa43b200 <line:859:2, col:22>
    (ImplicitCastExpr 0xa43b1f0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa43b1d8 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa43b190 <col:9, col:17> 'char *'
          (MemberExpr 0xa43b170 <col:9> '<bound member function type>' ->_M_data 0xa14a430
            (CXXThisExpr 0xa43b160 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa43b1c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa43b1ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa152be0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa434f08 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa434eb8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa434c70 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa434c60 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa434c40 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0xa4349a0 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0xa434ea0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa434e90 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa434e6c <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0xa434df0 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa4349d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa434988 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa434748 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa434738 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa434714 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x9f66350 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0xa434970 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa434960 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa43493c <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0xa4348c0 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x9f61570 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x9f614d8 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x9f614b0 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x9f61550 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x9f61528 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9f62300 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9f62790 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9f62e38 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f62de0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x9f62ae0 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9f62e38 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f62de0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f66388 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f66330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f643a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64350 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f7b738 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64050 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f65a58 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f65a00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f79ec8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64050 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f66698 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f66640 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f64cd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64c80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f66078 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f66020 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f65d68 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f65d10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67478 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67420 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f649c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64970 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67da8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67d50 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67a98 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67a40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f7b1c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64050 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67788 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67730 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f646b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64660 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x9f64050 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f643a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64350 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f646b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64660 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f649c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64970 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f64cd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f64c80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f65a58 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f65a00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f65d68 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f65d10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f66078 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f66020 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f66388 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f66330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f66698 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f66640 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67478 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67420 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67788 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67730 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67a98 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67a40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9f67da8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f67d50 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa4348f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f680b0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9f69128 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f690d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9f69748 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f696f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9f69438 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f693e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x9f680b0 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9f69128 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f690d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9f69438 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f693e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9f69748 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f696f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa434e28 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f69a50 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9f69a50 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9f69e70 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa433348 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6b0a0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9f6b0a0 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9f6b620 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9f6ebc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6dca0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9f6d9e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6d990 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x9f6d690 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9f6d9e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6d990 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9f6ebc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6dca0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9f6f848 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6f7f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9f6f538 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6f4e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9f6f228 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6f1d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x9f6eed0 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9f6f228 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6f1d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9f6f538 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6f4e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9f6f848 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f6f7f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x9f6fb50 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x9f79258 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x9f79248 <col:7, col:23>
    (BinaryOperator 0x9f79230 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x9f791fc <col:14> '_Type *' lvalue ParmVar 0x9f78430 '__ptr' '_Type *')
      (IntegerLiteral 0x9f79218 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x9f79420 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x9f79410 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9f79400 <col:14> '_Bool' false)))

;
    template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x9f79540 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0xa0f8fb8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0xa0f8f98 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0xa0f8e50 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa0f8e38 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa0f8e20 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9f808f8 <col:37, col:40> 'int'
            (UnaryOperator 0x9f808e0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f808c8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9f80930 <col:44> 'int' 0)))
    (BinaryOperator 0xa0f8f60 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0xa0f8e70 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x9f80978 <col:33> 'int' 1))
      (ParenExpr 0xa0f8f48 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa0f8f30 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa0f8eb8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa0f8e90 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0xa0f8ea8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f809d0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa0f8f20 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa0f8f08 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa0f8ef0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa0f8ed8 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x9f80a40 <col:37, col:40> 'int'
                    (UnaryOperator 0x9f80a28 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9f80a10 <col:39> 'int' 1))))
                (IntegerLiteral 0x9f80a78 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0xa0f8f80 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x9f80b08 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0xa0f92c8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0xa0f92a8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0xa0f9060 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa0f9048 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa0f9030 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9f80be8 <col:37, col:40> 'int'
            (UnaryOperator 0x9f80bd0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f80bb8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9f80c20 <col:44> 'int' 0)))
    (ParenExpr 0xa0f9258 <line:51:4, col:61> 'int'
      (BinaryOperator 0xa0f9240 <col:5, col:60> 'int' '+'
        (ParenExpr 0xa0f9228 <col:5, col:56> 'int'
          (BinaryOperator 0xa0f9210 <col:6, col:55> 'int' '<<'
            (ParenExpr 0xa0f91f8 <col:6, col:50> 'int'
              (BinaryOperator 0xa0f91e0 <col:7, col:49> 'int' '-'
                (ParenExpr 0xa0f91c8 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0xa0f91b0 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0xa0f9080 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x9f80c68 <col:13> 'int' 1))
                    (ParenExpr 0xa0f9198 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa0f9180 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa0f9158 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa0f9140 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa0f90c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa0f90a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0xa0f90b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9f80cc0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa0f9130 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa0f9118 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa0f9100 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa0f90e8 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x9f80d30 <col:37, col:40> 'int'
                                      (UnaryOperator 0x9f80d18 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x9f80d00 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x9f80d68 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0xa0f9170 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9f80de0 <col:43> 'int' 1))))))
                (IntegerLiteral 0x9f80e58 <col:49> 'int' 1)))
            (IntegerLiteral 0x9f80ea0 <col:55> 'int' 1)))
        (IntegerLiteral 0x9f80ee8 <col:60> 'int' 1)))
    (UnaryOperator 0xa0f9290 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0xa0f9278 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x9f80f30 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0xa0f9360 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa0f9348 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa0f9330 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x9f81028 <col:37, col:40> 'int'
        (UnaryOperator 0x9f81010 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9f80ff8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9f81060 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa0f94a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa0f9488 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa0f9470 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa0f93f8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa0f93d0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0xa0f93e8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f81118 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa0f9460 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa0f9448 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa0f9430 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa0f9418 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x9f81188 <col:37, col:40> 'int'
                (UnaryOperator 0x9f81170 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x9f81158 <col:39> 'int' 1))))
            (IntegerLiteral 0x9f811c0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0xa329670 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa329658 <col:3, col:68> 'int'
    (ConditionalOperator 0xa329638 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa329490 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa329478 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa329468 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa329450 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa329440 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9f808f8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9f808e0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9f808c8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9f80930 <col:44> 'int' 0)))
      (BinaryOperator 0xa3295e0 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa3295d0 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa3294c0 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa3294b0 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9f80978 <col:33> 'int' 1))))
        (ParenExpr 0xa3295b8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa3295a0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa329508 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa3294e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0xa3294f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f809d0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa329590 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa329578 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa329560 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa329550 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa329538 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0xa329528 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x9f80a40 <col:37, col:40> 'int'
                          (UnaryOperator 0x9f80a28 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9f80a10 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9f80a78 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa329628 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa329610 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0xa329600 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x9f80b08 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0xa329a10 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa3299f8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa3299d8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa329730 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa329718 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa329708 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa3296f0 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa3296e0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9f80be8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9f80bd0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9f80bb8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9f80c20 <col:44> 'int' 0)))
      (ParenExpr 0xa329968 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa329950 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa329938 <col:5, col:56> 'int'
            (BinaryOperator 0xa329920 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa329908 <col:6, col:50> 'int'
                (BinaryOperator 0xa3298f0 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa3298d8 <col:7, col:45> 'int'
                    (BinaryOperator 0xa3298c0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa3298b0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa329760 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0xa329750 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x9f80c68 <col:13> 'int' 1))))
                      (ParenExpr 0xa329898 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa329880 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa329858 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa329840 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa3297a8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa329780 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0xa329798 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9f80cc0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa329830 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa329818 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa329800 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa3297f0 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa3297d8 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0xa3297c8 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x9f80d30 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9f80d18 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9f80d00 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9f80d68 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa329870 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9f80de0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9f80e58 <col:49> 'int' 1)))
              (IntegerLiteral 0x9f80ea0 <col:55> 'int' 1)))
          (IntegerLiteral 0x9f80ee8 <col:60> 'int' 1)))
      (UnaryOperator 0xa3299c0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa3299b0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa329998 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa329988 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9f80f30 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa329ac0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa329aa8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa329a98 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa329a80 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0xa329a70 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x9f81028 <col:37, col:40> 'int'
            (UnaryOperator 0x9f81010 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f80ff8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9f81060 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa329c20 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa329c08 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa329bf0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa329b58 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa329b30 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0xa329b48 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f81118 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa329be0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa329bc8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa329bb0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa329ba0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa329b88 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0xa329b78 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x9f81188 <col:37, col:40> 'int'
                    (UnaryOperator 0x9f81170 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9f81158 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9f811c0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0xa1de5a8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0xa1de588 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0xa1de400 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa1de3e8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa1de3c0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa1de3b0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9f808f8 <col:37, col:40> 'int'
              (UnaryOperator 0x9f808e0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9f808c8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa1de3d8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9f80930 <col:44> 'int' 0))))
    (BinaryOperator 0xa1de540 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0xa1de430 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa1de420 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9f80978 <col:33> 'int' 1)))
      (ParenExpr 0xa1de528 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa1de510 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa1de478 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa1de450 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0xa1de468 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f809d0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa1de500 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa1de4e8 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa1de4d0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa1de4a8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0xa1de498 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x9f80a40 <col:37, col:40> 'int'
                      (UnaryOperator 0x9f80a28 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x9f80a10 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0xa1de4c0 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9f80a78 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0xa1de570 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa1de560 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9f80b08 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0xa1de938 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0xa1de918 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0xa1de670 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa1de658 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa1de630 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa1de620 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9f80be8 <col:37, col:40> 'int'
              (UnaryOperator 0x9f80bd0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9f80bb8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa1de648 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9f80c20 <col:44> 'int' 0))))
    (ParenExpr 0xa1de8b8 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0xa1de8a0 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0xa1de878 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0xa1de860 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0xa1de848 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0xa1de830 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0xa1de808 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0xa1de7f0 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0xa1de6a0 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0xa1de690 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x9f80c68 <col:13> 'int' 1)))
                    (ParenExpr 0xa1de7d8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa1de7c0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa1de798 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa1de780 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa1de6e8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa1de6c0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0xa1de6d8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9f80cc0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa1de770 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa1de758 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa1de740 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa1de718 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0xa1de708 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x9f80d30 <col:37, col:40> 'int'
                                        (UnaryOperator 0x9f80d18 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x9f80d00 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0xa1de730 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x9f80d68 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0xa1de7b0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9f80de0 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0xa1de820 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9f80e58 <col:49> 'int' 1))))
            (IntegerLiteral 0x9f80ea0 <col:55> 'int' 1)))
        (ImplicitCastExpr 0xa1de890 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9f80ee8 <col:60> 'int' 1))))
    (UnaryOperator 0xa1de900 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0xa1de8e8 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa1de8d8 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9f80f30 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0xa1de9f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa1de9d8 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa1de9b0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa1de9a0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x9f81028 <col:37, col:40> 'int'
          (UnaryOperator 0x9f81010 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x9f80ff8 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0xa1de9c8 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x9f81060 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0xa1deb50 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa1deb38 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa1deb20 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa1dea88 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa1dea60 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0xa1dea78 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f81118 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa1deb10 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa1deaf8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa1deae0 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa1deab8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0xa1deaa8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x9f81188 <col:37, col:40> 'int'
                  (UnaryOperator 0x9f81170 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9f81158 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0xa1dead0 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x9f811c0 <col:44> 'int' 0))))))))
;
    }
template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0xa275a00 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa2759e8 <col:3, col:68> 'int'
    (ConditionalOperator 0xa2759c8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa275820 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa275808 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa2757f8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa2757e0 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa2757d0 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9f808f8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9f808e0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9f808c8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9f80930 <col:44> 'int' 0)))
      (BinaryOperator 0xa275970 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa275960 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa275850 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa275840 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9f80978 <col:33> 'int' 1))))
        (ParenExpr 0xa275948 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa275930 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa275898 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa275870 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0xa275888 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f809d0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa275920 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa275908 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa2758f0 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa2758e0 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa2758c8 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0xa2758b8 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x9f80a40 <col:37, col:40> 'int'
                          (UnaryOperator 0x9f80a28 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9f80a10 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9f80a78 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa2759b8 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa2759a0 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0xa275990 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x9f80b08 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0xa275da0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa275d88 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa275d68 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa275ac0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa275aa8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa275a98 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa275a80 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa275a70 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9f80be8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9f80bd0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9f80bb8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9f80c20 <col:44> 'int' 0)))
      (ParenExpr 0xa275cf8 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa275ce0 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa275cc8 <col:5, col:56> 'int'
            (BinaryOperator 0xa275cb0 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa275c98 <col:6, col:50> 'int'
                (BinaryOperator 0xa275c80 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa275c68 <col:7, col:45> 'int'
                    (BinaryOperator 0xa275c50 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa275c40 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa275af0 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0xa275ae0 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x9f80c68 <col:13> 'int' 1))))
                      (ParenExpr 0xa275c28 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa275c10 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa275be8 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa275bd0 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa275b38 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa275b10 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0xa275b28 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9f80cc0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa275bc0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa275ba8 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa275b90 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa275b80 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa275b68 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0xa275b58 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x9f80d30 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9f80d18 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9f80d00 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9f80d68 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa275c00 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9f80de0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9f80e58 <col:49> 'int' 1)))
              (IntegerLiteral 0x9f80ea0 <col:55> 'int' 1)))
          (IntegerLiteral 0x9f80ee8 <col:60> 'int' 1)))
      (UnaryOperator 0xa275d50 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa275d40 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa275d28 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa275d18 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9f80f30 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa275e50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa275e38 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa275e28 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa275e10 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0xa275e00 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x9f81028 <col:37, col:40> 'int'
            (UnaryOperator 0x9f81010 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f80ff8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9f81060 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa275fb0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa275f98 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa275f80 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa275ee8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa275ec0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0xa275ed8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f81118 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa275f70 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa275f58 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa275f40 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa275f30 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa275f18 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0xa275f08 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x9f81188 <col:37, col:40> 'int'
                    (UnaryOperator 0x9f81170 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9f81158 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9f811c0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x9f80b60 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x9f80b40 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x9f80960 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9f80948 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9f80918 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9f808f8 <col:37, col:40> 'int'
            (UnaryOperator 0x9f808e0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f808c8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9f80930 <col:44> 'int' 0)))
    (BinaryOperator 0x9f80af0 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x9f80998 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x9f80978 <col:33> 'int' 1))
      (ParenExpr 0x9f80ad8 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x9f80ac0 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x9f809f8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9f809b8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x9f809e8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f809d0 <col:22> 'int' 8)))
          (ParenExpr 0x9f80aa8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x9f80a90 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x9f80a60 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x9f80a40 <col:37, col:40> 'int'
                  (UnaryOperator 0x9f80a28 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9f80a10 <col:39> 'int' 1))))
              (IntegerLiteral 0x9f80a78 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x9f80b28 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x9f80b08 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x9f80fa0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x9f80f80 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x9f80c50 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9f80c38 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9f80c08 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9f80be8 <col:37, col:40> 'int'
            (UnaryOperator 0x9f80bd0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f80bb8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9f80c20 <col:44> 'int' 0)))
    (ParenExpr 0x9f80f18 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x9f80f00 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x9f80ed0 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x9f80eb8 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x9f80e88 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x9f80e70 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x9f80e40 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x9f80e28 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x9f80c88 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x9f80c68 <col:13> 'int' 1))
                    (ParenExpr 0x9f80e10 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x9f80df8 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x9f80dc8 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x9f80db0 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x9f80ce8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9f80ca8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x9f80cd8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9f80cc0 <col:22> 'int' 8)))
                            (ParenExpr 0x9f80d98 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x9f80d80 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x9f80d50 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x9f80d30 <col:37, col:40> 'int'
                                    (UnaryOperator 0x9f80d18 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x9f80d00 <col:39> 'int' 1))))
                                (IntegerLiteral 0x9f80d68 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x9f80de0 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x9f80e58 <col:49> 'int' 1)))
            (IntegerLiteral 0x9f80ea0 <col:55> 'int' 1)))
        (IntegerLiteral 0x9f80ee8 <col:60> 'int' 1)))
    (UnaryOperator 0x9f80f68 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x9f80f50 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x9f80f30 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9f81090 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x9f81078 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x9f81048 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x9f81028 <col:37, col:40> 'int'
        (UnaryOperator 0x9f81010 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9f80ff8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9f81060 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x9f81220 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x9f81208 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x9f81140 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x9f81100 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x9f81130 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f81118 <col:22> 'int' 8)))
    (ParenExpr 0x9f811f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9f811d8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9f811a8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9f81188 <col:37, col:40> 'int'
            (UnaryOperator 0x9f81170 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9f81158 <col:39> 'int' 1))))
        (IntegerLiteral 0x9f811c0 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x9f84358 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x9f84340 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x9f84328 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x9f84318 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x9f83e98 <col:4> 'int' 2))
      (BinaryOperator 0x9f84300 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x9f842c0 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x9f842b0 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x9f84280 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x9f84260 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x9f84040 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x9f84068 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x9f84240 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x9f841e8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x9f84210 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x9f84228 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x9f84298 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x9f842f0 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x9f842d8 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x9f843a8 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x9f84c60 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9f84c40 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x9f84a70 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9f84a98 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x9f84c20 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x9f84bc8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9f84bf0 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x9f84c08 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x9f84fe0 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9f84fc0 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x9f84df0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9f84e18 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x9f84fa0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x9f84f48 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9f84f70 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x9f84f88 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x9f86460 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x9f86450 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x9f86438 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x9f86410 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x9f863f8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x9f86398 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x9f8634c <col:61> '_Tp' lvalue ParmVar 0x9f86200 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x9f86888 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x9f867b8 <line:127:7, col:37>
    0x9f86750 "_Tp __tmp =
      (ParenExpr 0x9f867a0 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x9f86784 <line:127:33> '_Tp' lvalue ParmVar 0x9f865c0 '__a' '_Tp &'))")
  (BinaryOperator 0x9f86810 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9f867c8 <line:128:7> '_Tp' lvalue ParmVar 0x9f865c0 '__a' '_Tp &')
    (ParenExpr 0x9f867f8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9f867e0 <line:128:27> '_Tp' lvalue ParmVar 0x9f86610 '__b' '_Tp &')))
  (BinaryOperator 0x9f86870 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9f86828 <line:129:7> '_Tp' lvalue ParmVar 0x9f86610 '__b' '_Tp &')
    (ParenExpr 0x9f86858 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9f86840 <line:129:27> '_Tp' lvalue Var 0x9f86750 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x9f8c4b0 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x9f8c488 <line:138:7, line:139:25>
    (DeclStmt 0x9f8c300 <line:138:12, col:26>
      0x9f8c2a0 "size_t __n =
        (ImplicitCastExpr 0x9f8c2f0 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f8c2d8 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9f8c350 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x9f8c340 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9f8c310 <col:28> 'size_t':'unsigned int' lvalue Var 0x9f8c2a0 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x9f8c328 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x9f86920 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x9f8c380 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9f8c368 <col:41> 'size_t':'unsigned int' lvalue Var 0x9f8c2a0 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x9f8c460 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9f8c398 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8c260 0x9f86710)
      (ArraySubscriptExpr 0x9f8c400 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9f8c3d0 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9f86a70 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9f8c3e8 <col:11> 'size_t':'unsigned int' lvalue Var 0x9f8c2a0 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x9f8c448 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x9f8c414 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9f8c160 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9f8c42c <col:21> 'size_t':'unsigned int' lvalue Var 0x9f8c2a0 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1 = unsigned long long, class _T2 = unsigned long> struct pair
template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x9f8d030 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x9f8d040 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x9f8ca50 '__a' 'const _T1 &')
), second((DeclRefExpr 0x9f8d098 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x9f8cae0 '__b' 'const _T2 &')
) (CompoundStmt 0x9f8d810 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x9f8d838 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x9f8d820 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x9f8ce80 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x9f8d8c0 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x9f8d8a8 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x9f8ce80 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x9f8d940 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9f8e018 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x9f8e008 <col:7, col:58>
    (BinaryOperator 0x9f8dff0 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9f8dec8 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x9f8de90 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0)
        (CXXDependentScopeMemberExpr 0x9f8de08 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8ddf0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8db50 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9f8de58 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8de3c <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8dcc0 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x9f8dfc8 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9f8df90 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0)
        (CXXDependentScopeMemberExpr 0x9f8df08 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8deec <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8db50 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9f8df58 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8df3c <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8dcc0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9f8e830 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x9f8e820 <line:208:7, line:209:62>
    (BinaryOperator 0x9f8e808 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9f8e568 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9f8e530 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460)
        (CXXDependentScopeMemberExpr 0x9f8e4a8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8e490 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8e210 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9f8e4f8 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8e4dc <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8e380 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x9f8e7f0 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x9f8e7d8 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x9f8e6a8 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x9f8e690 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x9f8e668 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x9f8e630 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460)
                (CXXDependentScopeMemberExpr 0x9f8e5a8 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f8e58c <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8e380 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x9f8e5f8 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f8e5dc <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8e210 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x9f8e798 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9f8e760 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460)
            (CXXDependentScopeMemberExpr 0x9f8e6d8 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8e6bc <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8e210 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x9f8e728 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8e70c <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8e380 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9f8ed80 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x9f8ed70 <col:7, col:26>
    (UnaryOperator 0x9f8ed58 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9f8ed40 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9f8ed18 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9f8ece0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0)
          (DeclRefExpr 0x9f8ecb0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8ea30 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9f8ecc8 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8eba0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9f8f2a0 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x9f8f290 <col:7, col:20>
    (CXXOperatorCallExpr 0x9f8f268 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f8f230 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460)
      (DeclRefExpr 0x9f8f200 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8f0f0 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x9f8f218 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8ef80 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9f91258 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x9f91248 <col:7, col:25>
    (UnaryOperator 0x9f91230 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9f8f7b0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9f8f788 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f8f750 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460)
          (DeclRefExpr 0x9f8f720 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8f610 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9f8f738 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f8f4a0 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9f917a0 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x9f91790 <col:7, col:25>
    (UnaryOperator 0x9f91778 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9f91760 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9f91738 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f91700 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460)
          (DeclRefExpr 0x9f916d0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f91450 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9f916e8 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9f915c0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x9f91c58 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x9f91c48 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x9f91c28 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x9f91bf8 <col:29> '_T1' lvalue ParmVar 0x9f91950 '__x' '_T1')
      (DeclRefExpr 0x9f91c10 <col:34> '_T2' lvalue ParmVar 0x9f91990 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0xa3b0090 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0xa3b4710 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x9f98510 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x9f98500 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x9f984e8 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0xa435c58 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa435c48 <col:9, col:16>
    (ImplicitCastExpr 0xa435c38 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0xa435c1c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa433720 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9f989d8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9f989c8 <col:9, col:16>
    (DeclRefExpr 0x9f989b0 <col:16> '_Iterator' lvalue ParmVar 0x9f98890 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9f99840 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x9f99830 <col:9, col:26>
    (CallExpr 0x9f99810 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f997d8 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x9f997c0 <col:16> '_Iterator' lvalue ParmVar 0x9f996a0 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f99ed8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x9f99d80 <line:78:7, col:72>
    0x9f99d30 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x9f99d68 <col:71> 'int' 0)")
  (WhileStmt 0x9f99e98 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f99df8 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9f99dc0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80)
      (DeclRefExpr 0x9f99d90 <col:14> '_InputIterator' lvalue ParmVar 0x9f99a60 '__first' '_InputIterator')
      (DeclRefExpr 0x9f99da8 <col:25> '_InputIterator' lvalue ParmVar 0x9f99aa0 '__last' '_InputIterator'))
    (CompoundStmt 0x9f99e80 <line:80:2, line:83:2>
      (UnaryOperator 0x9f99e38 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f99e1c <col:6> '_InputIterator' lvalue ParmVar 0x9f99a60 '__first' '_InputIterator'))
      (UnaryOperator 0x9f99e68 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f99e4c <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9f99d30 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x9f99ec8 <line:84:7, col:14>
    (DeclRefExpr 0x9f99eac <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9f99d30 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x9f9c238 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x9f9c228 <line:95:7, col:23>
    (BinaryOperator 0x9f9c210 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x9f9c1e0 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x9f9a070 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x9f9c1f8 <col:23> '_RandomAccessIterator' lvalue ParmVar 0x9f9a030 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9f9c650 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x9f9c640 <line:115:7, line:116:42>
    (CallExpr 0x9f9c618 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x9f9c528 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f99c10 0x9f9a1e0)
      (DeclRefExpr 0x9f9c560 <col:30> '_InputIterator' lvalue ParmVar 0x9f9c380 '__first' '_InputIterator')
      (DeclRefExpr 0x9f9c578 <col:39> '_InputIterator' lvalue ParmVar 0x9f9c3c0 '__last' '_InputIterator')
      (CallExpr 0x9f9c5f8 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f9c5a8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f983d0)
        (DeclRefExpr 0x9f9c5dc <col:34> '_InputIterator' lvalue ParmVar 0x9f9c380 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x9f9c9b8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x9f9c9a0 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x9f9c958 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x9f9c924 <col:14> '_Distance' lvalue ParmVar 0x9f9c790 '__n' '_Distance'))
    (UnaryOperator 0x9f9c988 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9f9c96c <col:4> '_InputIterator' lvalue ParmVar 0x9f9c750 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x9f9ce58 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x9f9ce38 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f9ccf0 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9f9ccb8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0)
      (DeclRefExpr 0x9f9cc84 <col:11> '_Distance' lvalue ParmVar 0x9f9caf0 '__n' '_Distance')
      (IntegerLiteral 0x9f9cca0 <col:17> 'int' 0))
    (WhileStmt 0x9f9cd90 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x9f9cd48 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x9f9cd14 <col:16> '_Distance' lvalue ParmVar 0x9f9caf0 '__n' '_Distance'))
      (UnaryOperator 0x9f9cd78 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f9cd5c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9f9cab0 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x9f9ce20 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x9f9cdd8 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9f9cda4 <col:16> '_Distance' lvalue ParmVar 0x9f9caf0 '__n' '_Distance'))
      (UnaryOperator 0x9f9ce08 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9f9cdec <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9f9cab0 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x9f9d178 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x9f9d158 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9f9d124 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x9f9cf50 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x9f9d13c <col:14> '_Distance' lvalue ParmVar 0x9f9cf90 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x9f083b8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x9f08260 <line:173:7, col:74>
    0x9f08210 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x9f08244 <col:71> '_Distance' lvalue ParmVar 0x9f07ff0 '__n' '_Distance')")
  (CallExpr 0x9f08390 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9f08298 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c8f0 0x9f9cc50 0x9f9d0f0)
    (DeclRefExpr 0x9f082d4 <col:22> '_InputIterator' lvalue ParmVar 0x9f07fb0 '__i' '_InputIterator &')
    (DeclRefExpr 0x9f082ec <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9f08210 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x9f08370 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9f08320 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f983d0)
      (DeclRefExpr 0x9f08354 <col:57> '_InputIterator' lvalue ParmVar 0x9f07fb0 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x9fa4f40 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x9fa4f50 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x9fa2df0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x9fa4fb0 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x9fa4fd8 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x9fa4fc0 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa2f30 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x9fa5050 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x9fa50b0 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fa5078 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x9fa5060 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x9fa3190 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x9fa5110 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x9fa5198 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x9fa5188 <col:9, col:16>
    (MemberExpr 0x9fa5164 <col:16> 'const _Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa5138 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x9fa5290 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x9fa5228 <line:158:2, col:27>
    0x9fa51c0 "_Iterator __tmp =
      (MemberExpr 0x9fa5208 <col:20> 'const _Iterator' lvalue ->current 0x9f08e40
        (CXXThisExpr 0x9fa51f8 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x9fa5280 <line:159:2, col:12>
    (UnaryOperator 0x9fa5268 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x9fa5250 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9fa5238 <col:12> '_Iterator' lvalue Var 0x9fa51c0 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x9fa5338 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x9fa5328 <col:9, col:29>
    (UnaryOperator 0x9fa5310 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x9fa52f8 <col:17, col:29> '<dependent type>'
        (CallExpr 0x9fa52d8 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x9fa52b8 <col:18, col:26> '<bound member function type>' ->operator* 0x9fa33e0
            (CXXThisExpr 0x9fa52a8 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x9fa53d0 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x9fa5380 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9fa5360 <col:4> '_Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa5350 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9fa53c0 <line:180:2, col:10>
    (UnaryOperator 0x9fa53a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fa5398 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x9fa54d0 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x9fa5450 <line:191:2, col:32>
    0x9fa53f0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9fa5438 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9fa5428 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9fa5490 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9fa5470 <col:4> '_Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa5460 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9fa54c0 <line:193:2, col:9>
    (DeclRefExpr 0x9fa54a4 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9fa53f0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x9fa5570 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x9fa5520 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9fa5500 <col:4> '_Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa54f0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9fa5560 <line:205:2, col:10>
    (UnaryOperator 0x9fa5548 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fa5538 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x9fa5670 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x9fa55f0 <line:216:2, col:32>
    0x9fa5590 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9fa55d8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9fa55c8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9fa5630 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9fa5610 <col:4> '_Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa5600 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9fa5660 <line:218:2, col:9>
    (DeclRefExpr 0x9fa5644 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9fa5590 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x9fa5728 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x9fa5718 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9fa56f8 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9fa56e0 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x9fa56a8 <col:33> 'const _Iterator' lvalue ->current 0x9f08e40
          (CXXThisExpr 0x9fa5698 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9fa56c8 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9fa3810 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x9fa57e0 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x9fa5788 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9fa5750 <col:2> '_Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa5740 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9fa5770 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9fa3920 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9fa57d0 <line:239:2, col:10>
    (UnaryOperator 0x9fa57b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fa57a8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x9fa5890 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x9fa5880 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9fa5860 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9fa5848 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x9fa5810 <col:33> 'const _Iterator' lvalue ->current 0x9f08e40
          (CXXThisExpr 0x9fa5800 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9fa5830 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9fa3a30 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x9fa5948 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x9fa58f0 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9fa58b8 <col:2> '_Iterator' lvalue ->current 0x9f08e40
      (CXXThisExpr 0x9fa58a8 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9fa58d8 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9fa4d30 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9fa5938 <line:260:2, col:10>
    (UnaryOperator 0x9fa5920 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fa5910 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x9fa59f8 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x9fa59e8 <col:9, col:29>
    (UnaryOperator 0x9fa59d0 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x9fa59b8 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x9fa59a0 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x9fa5970 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9fa5960 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x9fa5984 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9fa4e00 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa7b60 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x9fa7b50 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fa7b28 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fa7af0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa79e0 0x9f8ddc0)
      (CallExpr 0x9fa7a60 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa7a28 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa7a10 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa5b50 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9fa7ad0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa7a98 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa7a7c <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa5c50 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa8000 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x9fa7ff0 <col:7, col:36>
    (CXXOperatorCallExpr 0x9fa7fc8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9fa7f90 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa7e80 0x9f8e460)
      (CallExpr 0x9fa7f00 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa7ec8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa7eb0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa7da0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9fa7f70 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa7f38 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa7f1c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa7ca0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa8420 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x9fa8410 <col:7, col:26>
    (UnaryOperator 0x9fa83f8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9fa83e0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9fa83b8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9fa8380 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa79e0 0x9f8ddc0)
          (DeclRefExpr 0x9fa8350 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8140 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9fa8368 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8240 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa8810 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x9fa8800 <col:7, col:20>
    (CXXOperatorCallExpr 0x9fa87d8 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9fa87a0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa7e80 0x9f8e460)
      (DeclRefExpr 0x9fa8770 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8660 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x9fa8788 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8560 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa8c50 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x9fa8c40 <col:7, col:25>
    (UnaryOperator 0x9fa8c28 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9fa8c10 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9fa8be8 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fa8bb0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa7e80 0x9f8e460)
          (DeclRefExpr 0x9fa8b80 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8a70 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9fa8b98 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8970 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa9070 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x9fa9060 <col:7, col:25>
    (UnaryOperator 0x9fa9048 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9fa9030 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9fa9008 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fa8fd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa7e80 0x9f8e460)
          (DeclRefExpr 0x9fa8fa0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8d90 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9fa8fb8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa8e90 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9fa9640 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x9fa9630 <col:7, col:36>
    (CXXOperatorCallExpr 0x9fa9608 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9fa95d0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0)
      (CallExpr 0x9fa9540 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa9508 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa94f0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa93b0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9fa95b0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa9578 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa955c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa92b0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x9fa9c68 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x9fa9c58 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9fa9c38 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x9fa9c10 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa9bd8 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0)
        (CallExpr 0x9fa9ba0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa9b68 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x9fa9b50 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9fa9950 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x9fa9bbc <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x9fa9830 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9faa1d8 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x9faa1c8 <col:7, col:37>
    (CXXOperatorCallExpr 0x9faa1a0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9faa160 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9faa050 0x9fa79e0 0x9f8ddc0)
      (CallExpr 0x9faa0d0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9faa098 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9faa080 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9fa9e00 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x9faa140 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9faa108 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9faa0ec <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9fa9f50 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9faa6d8 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x9faa6c8 <col:7, col:36>
    (CXXOperatorCallExpr 0x9faa6a0 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9faa660 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9faa550 0x9fa7e80 0x9f8e460)
      (CallExpr 0x9faa5d0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9faa598 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9faa580 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9faa470 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9faa640 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9faa608 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9faa5ec <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9faa370 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9faad78 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x9faad68 <col:7, col:26>
    (UnaryOperator 0x9faad50 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9faad38 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9faad10 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9faacd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9faa050 0x9fa79e0 0x9f8ddc0)
          (DeclRefExpr 0x9faaca0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9faa870 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9faacb8 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9faab90 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9fab1c8 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x9fab1b8 <col:7, col:20>
    (CXXOperatorCallExpr 0x9fab190 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9fab150 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9faa550 0x9fa7e80 0x9f8e460)
      (DeclRefExpr 0x9fab120 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9fab010 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x9fab138 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9faaf10 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9fab648 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x9fab638 <col:7, col:25>
    (UnaryOperator 0x9fab620 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9fab608 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9fab5e0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fab5a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9faa550 0x9fa7e80 0x9f8e460)
          (DeclRefExpr 0x9fab570 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9fab460 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x9fab588 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9fab360 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9fabac8 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x9fabab8 <col:7, col:25>
    (UnaryOperator 0x9fabaa0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9faba88 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9faba60 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9faba20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9faa550 0x9fa7e80 0x9f8e460)
          (DeclRefExpr 0x9fab9f0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9fab7e0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9faba08 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9fab8e0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9fac920 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x9fac910 <col:7, col:36>
    (CXXOperatorCallExpr 0x9fac8e8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9fac8b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fac7a0 0x9fa94c0)
      (CallExpr 0x9fac820 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fac7e8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9fac7d0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9fac690 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9fac890 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fac858 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9fac83c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9fac590 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9fadcc0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9fadca4 <col:58> '_Container' lvalue ParmVar 0x9fad190 '__x' '_Container &'))
) (CompoundStmt 0x9fadd20 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9fade20 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x9faddc8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fadd78 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9fadd58 <col:2> '_Container *' lvalue ->container 0x9fad0b0
        (CXXThisExpr 0x9fadd48 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9faddac <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x9fad340 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9fade10 <line:426:2, col:10>
    (UnaryOperator 0x9faddf8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fadde8 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x9fade70 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x9fade60 <col:9, col:17>
    (UnaryOperator 0x9fade48 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fade38 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x9fadec0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x9fadeb0 <col:9, col:17>
    (UnaryOperator 0x9fade98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fade88 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9fadf10 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x9fadf00 <col:9, col:17>
    (UnaryOperator 0x9fadee8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9faded8 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x9fae278 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x9fae268 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x9fae248 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x9fae230 <col:47> '_Container' lvalue ParmVar 0x9fae040 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9faf680 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9faf664 <col:68> '_Container' lvalue ParmVar 0x9fae780 '__x' '_Container &'))
) (CompoundStmt 0x9faf6e0 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9faf7e0 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x9faf788 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9faf738 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9faf718 <col:2> '_Container *' lvalue ->container 0x9fae6a0
        (CXXThisExpr 0x9faf708 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9faf76c <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x9fae8f0 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9faf7d0 <line:516:2, col:10>
    (UnaryOperator 0x9faf7b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9faf7a8 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x9faf830 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x9faf820 <col:9, col:17>
    (UnaryOperator 0x9faf808 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9faf7f8 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x9faf880 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x9faf870 <col:9, col:17>
    (UnaryOperator 0x9faf858 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9faf848 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9faf8d0 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x9faf8c0 <col:9, col:17>
    (UnaryOperator 0x9faf8a8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9faf898 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x9fafc38 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x9fafc28 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9fafc08 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x9fafbf0 <col:48> '_Container' lvalue ParmVar 0x9fafa00 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x9fb1390 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9fb1374 <col:20> '_Container' lvalue ParmVar 0x9fb0200 '__x' '_Container &'))
), iter((DeclRefExpr 0x9fb13e8 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x9fb0280 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x9fb1440 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9fb1608 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x9fb1570 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x9fb1478 <col:2> 'typename _Container::iterator' lvalue ->iter 0x9fb0120
      (CXXThisExpr 0x9fb1468 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x9fb1548 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fb14c8 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x9fb14a8 <col:9> '_Container *' lvalue ->container 0x9fb0060
          (CXXThisExpr 0x9fb1498 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x9fb1510 <col:27> 'typename _Container::iterator' lvalue ->iter 0x9fb0120
        (CXXThisExpr 0x9fb1500 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x9fb1530 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x9fb1040 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x9fb15b8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9fb1598 <col:4> 'typename _Container::iterator' lvalue ->iter 0x9fb0120
      (CXXThisExpr 0x9fb1588 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x9fb15f8 <line:628:2, col:10>
    (UnaryOperator 0x9fb15e0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb15d0 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x9fb1660 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x9fb1650 <col:9, col:17>
    (UnaryOperator 0x9fb1638 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb1628 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x9fb16b0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x9fb16a0 <col:9, col:17>
    (UnaryOperator 0x9fb1688 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb1678 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x9fb1700 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x9fb16f0 <col:9, col:17>
    (UnaryOperator 0x9fb16d8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb16c8 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x9fb1bb0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x9fb1ba0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x9fb1b80 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x9fb1ad0 <line:679:42> '_Container' lvalue ParmVar 0x9fb1890 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x9fb1b60 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x9fb1b44 <col:37> '_Iterator' lvalue ParmVar 0x9fb18d0 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x9fb4478 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x9fb44d0 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x9fb44e0 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x9fb2ee0 '__i' 'const _Iterator &')
) (CompoundStmt 0x9fb4540 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x9fb45a0 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fb4568 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x9fb4550 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x9fb3600 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x9fb4600 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x9fb46a0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9fb4690 <col:9, col:17>
    (UnaryOperator 0x9fb4678 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x9fb4654 <col:17> 'const _Iterator' lvalue ->_M_current 0x9fb1fb0
        (CXXThisExpr 0x9fb4628 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x9fb46f8 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x9fb46e8 <col:9, col:16>
    (MemberExpr 0x9fb46c8 <col:16> 'const _Iterator' lvalue ->_M_current 0x9fb1fb0
      (CXXThisExpr 0x9fb46b8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x9fb4790 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9fb4740 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9fb4720 <col:4> '_Iterator' lvalue ->_M_current 0x9fb1fb0
      (CXXThisExpr 0x9fb4710 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9fb4780 <line:743:2, col:10>
    (UnaryOperator 0x9fb4768 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb4758 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x9fb4840 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x9fb4830 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9fb4810 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9fb47f8 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x9fb47c0 <col:34> '_Iterator' lvalue ->_M_current 0x9fb1fb0
          (CXXThisExpr 0x9fb47b0 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x9fb48d8 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x9fb4888 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9fb4868 <col:4> '_Iterator' lvalue ->_M_current 0x9fb1fb0
      (CXXThisExpr 0x9fb4858 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9fb48c8 <line:755:2, col:10>
    (UnaryOperator 0x9fb48b0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb48a0 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x9fb4988 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x9fb4978 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9fb4958 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9fb4940 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x9fb4908 <col:34> '_Iterator' lvalue ->_M_current 0x9fb1fb0
          (CXXThisExpr 0x9fb48f8 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x9fb4a10 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x9fb4a00 <col:9, col:30>
    (ArraySubscriptExpr 0x9fb49e8 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x9fb49b0 <col:16> 'const _Iterator' lvalue ->_M_current 0x9fb1fb0
        (CXXThisExpr 0x9fb49a0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x9fb49d0 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9fb3ec0 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x9fb4ac8 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x9fb4a70 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9fb4a38 <col:9> '_Iterator' lvalue ->_M_current 0x9fb1fb0
      (CXXThisExpr 0x9fb4a28 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9fb4a58 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9fb3fe0 '__n' 'const difference_type &'))
  (ReturnStmt 0x9fb4ab8 <col:28, col:36>
    (UnaryOperator 0x9fb4aa0 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb4a90 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x9fb4b78 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x9fb4b68 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9fb4b48 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9fb4b30 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x9fb4af8 <col:34> 'const _Iterator' lvalue ->_M_current 0x9fb1fb0
          (CXXThisExpr 0x9fb4ae8 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9fb4b18 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9fb4100 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x9fb4c30 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x9fb4bd8 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9fb4ba0 <col:9> '_Iterator' lvalue ->_M_current 0x9fb1fb0
      (CXXThisExpr 0x9fb4b90 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9fb4bc0 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9fb4220 '__n' 'const difference_type &'))
  (ReturnStmt 0x9fb4c20 <col:28, col:36>
    (UnaryOperator 0x9fb4c08 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb4bf8 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x9fb67a8 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x9fb6798 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9fb6778 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9fb6760 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x9fb4c60 <col:34> 'const _Iterator' lvalue ->_M_current 0x9fb1fb0
          (CXXThisExpr 0x9fb4c50 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9fb4c80 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9fb4300 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x9fb6800 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9fb67f0 <col:9, col:16>
    (MemberExpr 0x9fb67d0 <col:16> 'const _Iterator' lvalue ->_M_current 0x9fb1fb0
      (CXXThisExpr 0x9fb67c0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fb6f20 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x9fb6f10 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fb6ee8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb6eb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb6da0)
      (CallExpr 0x9fb6e20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb6de8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb6dd0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fb6ac0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fb6e90 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb6e58 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb6e3c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fb6ca0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fb7530 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x9fb7520 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fb74f8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb74c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb73b0 0x9fb6da0)
      (CallExpr 0x9fb7430 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb73f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb73e0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb7140 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fb74a0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb7468 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb744c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb72b0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fb7b70 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x9fb7b60 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fb7b38 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb7b00 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb79f0)
      (CallExpr 0x9fb7a70 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb7a38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb7a20 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fb77a0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fb7ae0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb7aa8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb7a8c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fb7910 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fb8140 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x9fb8130 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fb8108 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb80d0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb7fc0 0x9fb79f0)
      (CallExpr 0x9fb8040 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8008 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb7ff0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb7d70 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fb80b0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8078 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb805c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb7ee0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fb8770 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x9fb8750 <col:7, col:40>
    (CXXOperatorCallExpr 0x9fb8728 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb86f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb85e0)
      (CallExpr 0x9fb8660 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8628 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb8610 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fb8390 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fb86d0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8698 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb867c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fb8500 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fb8d40 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x9fb8d30 <col:7, col:40>
    (CXXOperatorCallExpr 0x9fb8d08 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb8cd0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb8bc0 0x9fb85e0)
      (CallExpr 0x9fb8c40 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8c08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb8bf0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb8970 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fb8cb0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8c78 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb8c5c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb8ae0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fb9360 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x9fb9350 <col:7, col:40>
    (CXXOperatorCallExpr 0x9fb9328 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb92f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb91e0)
      (CallExpr 0x9fb9260 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb9228 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb9210 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fb8f90 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fb92d0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb9298 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb927c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fb9100 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fb9930 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x9fb9920 <col:7, col:40>
    (CXXOperatorCallExpr 0x9fb98f8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb98c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb97b0 0x9fb91e0)
      (CallExpr 0x9fb9830 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb97f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb97e0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb9560 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fb98a0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb9868 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb984c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fb96d0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fb9f50 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x9fb9f40 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fb9f18 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb9ee0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb9dd0)
      (CallExpr 0x9fb9e50 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb9e18 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb9e00 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fb9b80 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fb9ec0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb9e88 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb9e6c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fb9cf0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fba520 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x9fba510 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fba4e8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fba4b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fba3a0 0x9fb9dd0)
      (CallExpr 0x9fba420 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fba3e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fba3d0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fba150 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fba490 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fba458 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fba43c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fba2c0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fbbfa0 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x9fbbf90 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fbbf68 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbbf30 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbbe20)
      (CallExpr 0x9fbbea0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbbe68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbbe50 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fbbbd0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fbbf10 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbbed8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbbebc <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fbbd40 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fbc570 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x9fbc560 <col:7, col:41>
    (CXXOperatorCallExpr 0x9fbc538 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbc500 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbc3f0 0x9fbbe20)
      (CallExpr 0x9fbc470 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbc438 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbc420 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fbc1a0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fbc4e0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbc4a8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbc48c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fbc310 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9fbcd10 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x9fbcd00 <col:7, col:40>
    (CXXOperatorCallExpr 0x9fbccd8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbcca0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbcb90)
      (CallExpr 0x9fbcc10 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbcbd8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbcbc0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9fbc910 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9fbcc80 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbcc48 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbcc2c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9fbca80 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9fbd460 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x9fbd450 <col:7, col:40>
    (CXXOperatorCallExpr 0x9fbd428 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbd3f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbd2e0 0x9fbcb90)
      (CallExpr 0x9fbd360 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbd328 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbd310 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fbd060 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9fbd3d0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbd398 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fbd37c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fbd1d0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x9fbe688 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x9fbe678 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x9fbe658 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x9fbe630 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbe5f8 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbd9f0)
        (CallExpr 0x9fbe5c0 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fbdb40 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x9fbdb28 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9fbd8c0 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x9fbe5dc <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x9fbd750 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9fbf5b0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9fbf588 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9fbf4f0 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9f86710 0x9f8c260)
    (UnaryOperator 0x9fbf540 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fbf528 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9fbf370 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9fbf570 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fbf554 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9fbf3b0 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9fbf088 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x9fbeec0 <line:87:11, line:88:24>
    0x9fbee90 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9fbef70 <line:89:11, col:50>
    0x9fbeef0 "_ValueType1 __tmp =
      (ParenExpr 0x9fbef58 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x9fbef40 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fbef24 <col:46> '_ForwardIterator1' lvalue ParmVar 0x9fbebc0 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x9fbeff8 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9fbef98 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fbef80 <col:12> '_ForwardIterator1' lvalue ParmVar 0x9fbebc0 '__a' '_ForwardIterator1'))
    (ParenExpr 0x9fbefe0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x9fbefc8 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fbefac <col:33> '_ForwardIterator2' lvalue ParmVar 0x9fbec00 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x9fbf070 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9fbf028 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fbf010 <col:12> '_ForwardIterator2' lvalue ParmVar 0x9fbec00 '__b' '_ForwardIterator2'))
    (ParenExpr 0x9fbf058 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x9fbf03c </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x9fbeef0 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9fbf5b0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9fbf588 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9fbf4f0 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9f86710 0x9f8c260)
    (UnaryOperator 0x9fbf540 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fbf528 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9fbf370 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9fbf570 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fbf554 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9fbf3b0 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9fc0468 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x9fbf900 <line:120:7, line:121:13>
    0x9fbf8d0 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9fbfa90 <line:122:7, line:123:13>
    0x9fbfa60 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x9fbfbc0 <line:135:7, line:136:17>
    0x9fbfb90 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x9fbfd10 <line:137:7, line:138:17>
    0x9fbfce0 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x9fc0440 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9fc03e8 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9fc040c <col:12> '_ForwardIterator1' lvalue ParmVar 0x9fbf690 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x9fc0424 <col:17> '_ForwardIterator2' lvalue ParmVar 0x9fbf6d0 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x9fc4ed0 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x9fc4ca8 <line:167:56>)
  (ForStmt 0x9fc4e80 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc4d28 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc4ce8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fc4cb4 <col:14> '_ForwardIterator1' lvalue ParmVar 0x9fc0550 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9fc4ccc <col:26> '_ForwardIterator1' lvalue ParmVar 0x9fc4b10 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x9fc4db0 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9fc4d68 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc4d4c <col:37> '_ForwardIterator1' lvalue ParmVar 0x9fc0550 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x9fc4d98 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc4d7c <col:49> '_ForwardIterator2' lvalue ParmVar 0x9fc4b50 '__first2' '_ForwardIterator2')))
    (CallExpr 0x9fc4e58 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc4df0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbf7b0)
      (DeclRefExpr 0x9fc4e24 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9fc0550 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9fc4e3c <col:27> '_ForwardIterator2' lvalue ParmVar 0x9fc4b50 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x9fc4ec0 <line:171:7, col:14>
    (DeclRefExpr 0x9fc4ea4 <col:14> '_ForwardIterator2' lvalue ParmVar 0x9fc4b50 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9fc5208 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x9fc51c0 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc5170 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc5130 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
      (DeclRefExpr 0x9fc5100 <col:11> 'const _Tp' lvalue ParmVar 0x9fc4fd0 '__b' 'const _Tp &')
      (DeclRefExpr 0x9fc5118 <col:17> 'const _Tp' lvalue ParmVar 0x9fc4f80 '__a' 'const _Tp &'))
    (ReturnStmt 0x9fc51b0 <line:193:2, col:9>
      (DeclRefExpr 0x9fc5194 <col:9> 'const _Tp' lvalue ParmVar 0x9fc4fd0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9fc51f8 <line:194:7, col:14>
    (DeclRefExpr 0x9fc51dc <col:14> 'const _Tp' lvalue ParmVar 0x9fc4f80 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9fc5518 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x9fc54d0 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc5480 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc5440 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
      (DeclRefExpr 0x9fc5410 <col:11> 'const _Tp' lvalue ParmVar 0x9fc52b0 '__a' 'const _Tp &')
      (DeclRefExpr 0x9fc5428 <col:17> 'const _Tp' lvalue ParmVar 0x9fc5300 '__b' 'const _Tp &'))
    (ReturnStmt 0x9fc54c0 <line:216:2, col:9>
      (DeclRefExpr 0x9fc54a4 <col:9> 'const _Tp' lvalue ParmVar 0x9fc5300 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9fc5508 <line:217:7, col:14>
    (DeclRefExpr 0x9fc54ec <col:14> 'const _Tp' lvalue ParmVar 0x9fc52b0 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9fc58d8 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x9fc5890 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x9fc5840 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9fc57f4 <col:11> '_Compare' lvalue ParmVar 0x9fc56a0 '__comp' '_Compare')
      (DeclRefExpr 0x9fc580c <col:18> 'const _Tp' lvalue ParmVar 0x9fc5660 '__b' 'const _Tp &')
      (DeclRefExpr 0x9fc5824 <col:23> 'const _Tp' lvalue ParmVar 0x9fc5610 '__a' 'const _Tp &'))
    (ReturnStmt 0x9fc5880 <line:237:2, col:9>
      (DeclRefExpr 0x9fc5864 <col:9> 'const _Tp' lvalue ParmVar 0x9fc5660 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9fc58c8 <line:238:7, col:14>
    (DeclRefExpr 0x9fc58ac <col:14> 'const _Tp' lvalue ParmVar 0x9fc5610 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9fc5c68 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x9fc5c20 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x9fc5bd0 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9fc5b84 <col:11> '_Compare' lvalue ParmVar 0x9fc5a60 '__comp' '_Compare')
      (DeclRefExpr 0x9fc5b9c <col:18> 'const _Tp' lvalue ParmVar 0x9fc59d0 '__a' 'const _Tp &')
      (DeclRefExpr 0x9fc5bb4 <col:23> 'const _Tp' lvalue ParmVar 0x9fc5a20 '__b' 'const _Tp &'))
    (ReturnStmt 0x9fc5c10 <line:258:2, col:9>
      (DeclRefExpr 0x9fc5bf4 <col:9> 'const _Tp' lvalue ParmVar 0x9fc5a20 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9fc5c58 <line:259:7, col:14>
    (DeclRefExpr 0x9fc5c3c <col:14> 'const _Tp' lvalue ParmVar 0x9fc59d0 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0xa435c08 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa435bf8 <col:7, col:55>
    (CallExpr 0xa435bc8 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa435bb8 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa435b5c <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0xa4337c0 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0xa435be8 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa435b7c <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4338d0 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x9fc64f0 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9fc64e0 <col:7, col:55>
    (CallExpr 0x9fc64c0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fc6480 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fc64a4 <col:51> '_Iterator' lvalue ParmVar 0x9fc6280 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x9fc7cd0 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x9fc7cc0 <col:7, col:55>
    (CallExpr 0x9fc7ca0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fc7c60 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fc7c84 <col:51> '_Iterator' lvalue ParmVar 0x9fc7a60 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9fc8f78 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9fc8b40 <line:326:4, col:68>
    0x9fc8b10 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9fc8f28 <line:327:4, line:332:6>
    (DeclStmt 0x9fc8c38 <line:327:8, col:40>
      0x9fc8b70 "_Distance __n =
        (CXXOperatorCallExpr 0x9fc8c10 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc8bd8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (DeclRefExpr 0x9fc8ba4 <col:24> '_II' lvalue ParmVar 0x9fc88a0 '__last' '_II')
          (DeclRefExpr 0x9fc8bbc <col:33> '_II' lvalue ParmVar 0x9fc8860 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc8cb8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc8c78 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fc8c48 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9fc8b70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9fc8c60 <col:48> 'int' 0))
    (UnaryOperator 0x9fc8cf8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9fc8cdc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9fc8b70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9fc8f08 <line:328:6, line:332:6>
      (BinaryOperator 0x9fc8e90 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9fc8d28 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fc8d0c <col:9> '_OI' lvalue ParmVar 0x9fc88e0 '__result' '_OI'))
        (UnaryOperator 0x9fc8d58 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fc8d3c <col:21> '_II' lvalue ParmVar 0x9fc8860 '__first' '_II')))
      (UnaryOperator 0x9fc8ec0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc8ea8 <col:10> '_II' lvalue ParmVar 0x9fc8860 '__first' '_II'))
      (UnaryOperator 0x9fc8ef0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc8ed4 <col:10> '_OI' lvalue ParmVar 0x9fc88e0 '__result' '_OI'))))
  (ReturnStmt 0x9fc8f68 <line:333:4, col:11>
    (DeclRefExpr 0x9fc8f4c <col:11> '_OI' lvalue ParmVar 0x9fc88e0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9fc84e8 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x9fc8498 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc8380 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc8340 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fc8310 <col:11> '_II' lvalue ParmVar 0x9fc8120 '__first' '_II')
      (DeclRefExpr 0x9fc8328 <col:22> '_II' lvalue ParmVar 0x9fc8160 '__last' '_II'))
    (BinaryOperator 0x9fc8408 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x9fc83c0 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc83a4 <col:32> '_OI' lvalue ParmVar 0x9fc81a0 '__result' '_OI'))
      (UnaryOperator 0x9fc83f0 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc83d4 <col:44> '_II' lvalue ParmVar 0x9fc8120 '__first' '_II')))
    (BinaryOperator 0x9fc8480 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x9fc8438 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fc8420 <col:7> '_OI' lvalue ParmVar 0x9fc81a0 '__result' '_OI'))
      (UnaryOperator 0x9fc8468 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fc844c <col:19> '_II' lvalue ParmVar 0x9fc8120 '__first' '_II'))))
  (ReturnStmt 0x9fc84d8 <line:300:4, col:11>
    (DeclRefExpr 0x9fc84bc <col:11> '_OI' lvalue ParmVar 0x9fc81a0 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9fc8f78 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9fc8b40 <line:326:4, col:68>
    0x9fc8b10 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9fc8f28 <line:327:4, line:332:6>
    (DeclStmt 0x9fc8c38 <line:327:8, col:40>
      0x9fc8b70 "_Distance __n =
        (CXXOperatorCallExpr 0x9fc8c10 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc8bd8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (DeclRefExpr 0x9fc8ba4 <col:24> '_II' lvalue ParmVar 0x9fc88a0 '__last' '_II')
          (DeclRefExpr 0x9fc8bbc <col:33> '_II' lvalue ParmVar 0x9fc8860 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc8cb8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc8c78 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fc8c48 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9fc8b70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9fc8c60 <col:48> 'int' 0))
    (UnaryOperator 0x9fc8cf8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9fc8cdc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9fc8b70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9fc8f08 <line:328:6, line:332:6>
      (BinaryOperator 0x9fc8e90 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9fc8d28 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fc8d0c <col:9> '_OI' lvalue ParmVar 0x9fc88e0 '__result' '_OI'))
        (UnaryOperator 0x9fc8d58 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fc8d3c <col:21> '_II' lvalue ParmVar 0x9fc8860 '__first' '_II')))
      (UnaryOperator 0x9fc8ec0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc8ea8 <col:10> '_II' lvalue ParmVar 0x9fc8860 '__first' '_II'))
      (UnaryOperator 0x9fc8ef0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc8ed4 <col:10> '_OI' lvalue ParmVar 0x9fc88e0 '__result' '_OI'))))
  (ReturnStmt 0x9fc8f68 <line:333:4, col:11>
    (DeclRefExpr 0x9fc8f4c <col:11> '_OI' lvalue ParmVar 0x9fc88e0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9fcada0 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x9fc9798 <line:364:4, col:43>
    0x9fc96d0 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9fc9770 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc9738 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fc9704 <col:27> 'const _Tp *' lvalue ParmVar 0x9fc94c0 '__last' 'const _Tp *')
        (DeclRefExpr 0x9fc971c <col:36> 'const _Tp *' lvalue ParmVar 0x9fc9470 '__first' 'const _Tp *'))")
  (IfStmt 0x9fc9a28 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fc97d0 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9fc97c0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9fc97a8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9fc96d0 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9fc9a00 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x9fc9944 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x9fc995c <col:24> '_Tp *' lvalue ParmVar 0x9fc9550 '__result' '_Tp *')
      (DeclRefExpr 0x9fc9974 <col:34> 'const _Tp *' lvalue ParmVar 0x9fc9470 '__first' 'const _Tp *')
      (BinaryOperator 0x9fc99e8 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9fc9998 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9fc99d8 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9fc99c8 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9fc99b0 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x9fc96d0 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9fcad90 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x9fcad68 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcad30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
      (DeclRefExpr 0x9fcad00 <col:11> '_Tp *' lvalue ParmVar 0x9fc9550 '__result' '_Tp *')
      (DeclRefExpr 0x9fcad18 <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9fc96d0 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x9fcbbd8 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x9fcb1c0 <line:375:7, col:68>
    0x9fcb190 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x9fcb350 <line:376:7, col:68>
    0x9fcb320 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x9fcb4a0 <line:377:7, col:73>
    0x9fcb470 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x9fcb930 <line:378:7, line:381:58>
    0x9fcb4c0 "const bool __simple =
      (ParenExpr 0x9fcb918 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x9fcb900 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x9fcb758 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x9fcb638 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9fcb518 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9fcb610 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9fcb730 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9fcb8d8 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9fcbbc8 <line:383:7, line:384:70>
    (CallExpr 0x9fcbba0 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fcbb30 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fcbb54 <col:45> '_II' lvalue ParmVar 0x9fcaed0 '__first' '_II')
      (DeclRefExpr 0x9fcbb6c <col:54> '_II' lvalue ParmVar 0x9fcaf10 '__last' '_II')
      (DeclRefExpr 0x9fcbb84 <col:62> '_OI' lvalue ParmVar 0x9fcaf50 '__result' '_OI'))))

;
    template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003798 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa003780 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa003740 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0004e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa003770 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa003758 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003828 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa003818 <col:9, col:24>
    (BinaryOperator 0xa003800 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0037e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000690 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0037f0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037c4 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0006e0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0038b8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0038a8 <col:9, col:23>
    (BinaryOperator 0xa003890 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa003870 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa00383c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002700 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa003880 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003854 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002750 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003a20 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa003a10 <col:9, col:39>
    (CallExpr 0xa0039b8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0039a8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa00394c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d560 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee630 'wmemcmp')))
      (ImplicitCastExpr 0xa0039e0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003904 <col:24> 'const char_type *' lvalue ParmVar 0xa002850 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0039f0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa00391c <col:30> 'const char_type *' lvalue ParmVar 0xa0028a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003a00 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003934 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0028e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa003b28 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa003b18 <col:9, col:26>
    (CallExpr 0xa003ae8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa003ad8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003a84 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9e8cea0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9fee080 'wcslen')))
      (ImplicitCastExpr 0xa003b08 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003a6c <col:23> 'const char_type *' lvalue ParmVar 0xa0029f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa003c68 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa003c58 <col:9, col:37>
    (ImplicitCastExpr 0xa003c48 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa003bf0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa003be0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa003bc0 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8d3b0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9feea90 'wmemchr')))
        (ImplicitCastExpr 0xa003c18 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa003b78 <col:24> 'const char_type *' lvalue ParmVar 0xa002af0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa003c28 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa003b90 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002b80 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa003c38 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa003ba8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa002b30 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003dd0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa003dc0 <col:9, col:40>
    (CallExpr 0xa003d68 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa003d58 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003cfc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d8f0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee710 'wmemmove')))
      (ImplicitCastExpr 0xa003d90 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003cb4 <col:25> 'char_type *' lvalue ParmVar 0xa002ce0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003da0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003ccc <col:31> 'const char_type *' lvalue ParmVar 0xa002d30 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003db0 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003ce4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa002d70 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003f10 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa003f00 <col:9, col:39>
    (CallExpr 0xa003ea8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa003e98 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003e64 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9e8d710 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9fee6a0 'wmemcpy')))
      (ImplicitCastExpr 0xa003ed0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e1c <col:24> 'char_type *' lvalue ParmVar 0xa002e80 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003ee0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e34 <col:30> 'const char_type *' lvalue ParmVar 0xa002ed0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003ef0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003e4c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa002f10 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa004070 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa004060 <col:9, col:37>
    (CallExpr 0xa004008 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa003ff8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003fa4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8dab0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9fee780 'wmemset')))
      (ImplicitCastExpr 0xa004030 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003f5c <col:24> 'char_type *' lvalue ParmVar 0xa002ff0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa004040 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003f74 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa003070 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa004050 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003f8c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa003030 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0040f0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0040e0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0040c8 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0040b8 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0040a8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa004090 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0031e0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa004170 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa004160 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa004148 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa004138 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa004128 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa004110 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa003300 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa004200 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0041f0 <col:9, col:24>
    (BinaryOperator 0xa0041d8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0041b8 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa004184 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003420 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0041c8 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa00419c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003470 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa004278 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa004268 <col:9, col:42>
    (CXXStaticCastExpr 0xa004250 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa004230 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa004218 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa004450 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa004440 <col:9, col:46>
    (ConditionalOperator 0xa004420 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa004398 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa004388 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa00428c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa003510 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0042a4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0043c0 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa004328 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa004318 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0042bc <col:33> 'int_type (void)' lvalue CXXMethod 0xa0035b0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa004410 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0043d0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa004400 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0043e8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')))))


    }
template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff168 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9fff150 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9fff110 <col:9> 'char_type':'char' lvalue ParmVar 0x9ffce40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9fff140 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9fff128 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffced0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff218 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9fff208 <col:9, col:24>
    (BinaryOperator 0x9fff1f0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9fff1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffcff0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff1e0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1d0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff194 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ffd040 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff2c8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9fff2b8 <col:9, col:23>
    (BinaryOperator 0x9fff2a0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9fff270 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff260 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff22c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffd160 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff290 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff280 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff244 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ffd1b0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff3f0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9fff3e0 <col:9, col:48>
    (CallExpr 0x9fff368 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9fff358 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff2dc <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9fff3a0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff390 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff2f4 <col:33> 'const char_type *' lvalue ParmVar 0x9ffd2b0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3c0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff3b0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff30c <col:39> 'const char_type *' lvalue ParmVar 0x9ffd300 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3d0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fff324 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd340 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9fff588 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9fff578 <col:9, col:36>
    (CallExpr 0x9fff548 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9fff538 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff4e4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9fff410 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9fff568 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9fff4fc <col:33> 'const char_type *' lvalue ParmVar 0x9ffd450 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9fff848 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9fff838 <col:9, col:77>
    (CXXStaticCastExpr 0x9fff820 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9fff798 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9fff788 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff704 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9fff5a0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fff7d0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff7c0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff71c <col:63> 'const char_type *' lvalue ParmVar 0x9ffd550 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9fff7f0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fff7e0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fff734 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ffd5e0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9fff800 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff74c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd590 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff998 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9fff988 <col:9, col:74>
    (CXXStaticCastExpr 0x9fff970 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fff8e8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9fff8d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff85c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fff920 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fff910 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff874 <col:58> 'char_type *' lvalue ParmVar 0x9ffd740 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fff940 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff930 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff88c <col:64> 'const char_type *' lvalue ParmVar 0x9ffd790 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fff950 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff8a4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd7d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fffc38 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9fffc28 <col:9, col:73>
    (CXXStaticCastExpr 0x9fffc10 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffb88 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9fffb78 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffb14 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fffbc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffbb0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb2c <col:57> 'char_type *' lvalue ParmVar 0x9ffe830 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fffbe0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fffbd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb44 <col:63> 'const char_type *' lvalue ParmVar 0x9ffe880 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fffbf0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffb5c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe8c0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9fffd88 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9fffd78 <col:9, col:71>
    (CXXStaticCastExpr 0x9fffd60 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffcd8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9fffcc8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffc4c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9fd5760 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fffd10 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffd00 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffc64 <col:57> 'char_type *' lvalue ParmVar 0x9ffe9a0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9fffd30 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fffd20 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fffc7c <col:62> 'char_type':'char' lvalue ParmVar 0x9ffea20 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9fffd40 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffc94 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe9e0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9fffe08 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9fffdf8 <col:9, col:42>
    (CXXStaticCastExpr 0x9fffde0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9fffdd0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9fffdc0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9fffd9c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ffebb0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9fffec0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9fffeb0 <col:9, col:69>
    (CXXStaticCastExpr 0x9fffe98 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9fffe88 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9fffe68 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9fffe58 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9fffe48 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9fffe1c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ffecd0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ffff50 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ffff40 <col:9, col:24>
    (BinaryOperator 0x9ffff28 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ffff08 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffed4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ffedf0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ffff18 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffeec <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ffee40 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ffffc8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ffffb8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ffffa0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ffff80 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ffff68 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa000128 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa000118 <col:9, col:37>
    (ConditionalOperator 0xa0000f8 <col:16, col:37> 'int'
      (ParenExpr 0xa0000a0 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa000088 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa000078 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ffffdc <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &'))
          (CallExpr 0xa000058 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa000048 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fffff4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ffef80 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0000b8 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0000e8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0000d0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x9fce588 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x9fce578 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x9fce558 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x9fce530 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9fce330 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x9fcb070)
        (CallExpr 0x9fce400 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9fce3b0 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fce3e4 <col:64> '_II' lvalue ParmVar 0x9fce140 '__first' '_II'))
        (CallExpr 0x9fce488 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fce438 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fce46c <col:29> '_II' lvalue ParmVar 0x9fce180 '__last' '_II'))
        (CallExpr 0x9fce510 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9fce4c0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fce4f4 <col:29> '_OI' lvalue ParmVar 0x9fce1c0 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x9fceb28 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x9fce808 <line:450:54>)
  (ReturnStmt 0x9fceb18 <line:452:7, line:454:18>
    (ParenExpr 0x9fceb00 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x9fcead8 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9fce938 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x9fcca60 0x9fcd700 0x9fce000 0x9fce2b0)
        (CallExpr 0x9fcea18 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9fce9c8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc7b70)
          (DeclRefExpr 0x9fce9fc <col:27> '_II' lvalue ParmVar 0x9fce660 '__first' '_II'))
        (CallExpr 0x9fceaa0 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9fcea50 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc7b70)
          (DeclRefExpr 0x9fcea84 <col:55> '_II' lvalue ParmVar 0x9fce6a0 '__last' '_II'))
        (DeclRefExpr 0x9fceac0 <line:454:9> '_OI' lvalue ParmVar 0x9fce6e0 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9fd0718 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9fd0368 <line:529:4, col:55>
    0x9fd0330 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9fd06c8 <line:530:4, line:531:23>
    (BinaryOperator 0x9fd0540 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9fd0378 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9fd0330 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9fd03f8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd03c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fd0390 <col:15> '_BI1' lvalue ParmVar 0x9fd00c0 '__last' '_BI1')
        (DeclRefExpr 0x9fd03a8 <col:24> '_BI1' lvalue ParmVar 0x9fd0080 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd05c8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd0588 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fd0558 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9fd0330 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9fd0570 <col:39> 'int' 0))
    (UnaryOperator 0x9fd0608 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9fd05ec <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9fd0330 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9fd06b0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9fd0650 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9fd0638 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9fd061c <col:9> '_BI2' lvalue ParmVar 0x9fd0100 '__result' '_BI2')))
      (UnaryOperator 0x9fd0698 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9fd0680 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9fd0664 <col:23> '_BI1' lvalue ParmVar 0x9fd00c0 '__last' '_BI1')))))
  (ReturnStmt 0x9fd0708 <line:532:4, col:11>
    (DeclRefExpr 0x9fd06ec <col:11> '_BI2' lvalue ParmVar 0x9fd0100 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9fcfd10 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x9fcfcd0 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fcfc00 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcfbc0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fcfb90 <col:11> '_BI1' lvalue ParmVar 0x9fcef80 '__first' '_BI1')
      (DeclRefExpr 0x9fcfba8 <col:22> '_BI1' lvalue ParmVar 0x9fcefc0 '__last' '_BI1'))
    (BinaryOperator 0x9fcfcb8 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9fcfc58 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9fcfc40 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9fcfc24 <col:9> '_BI2' lvalue ParmVar 0x9fcf000 '__result' '_BI2')))
      (UnaryOperator 0x9fcfca0 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9fcfc88 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9fcfc6c <col:23> '_BI1' lvalue ParmVar 0x9fcefc0 '__last' '_BI1')))))
  (ReturnStmt 0x9fcfd00 <line:503:4, col:11>
    (DeclRefExpr 0x9fcfce4 <col:11> '_BI2' lvalue ParmVar 0x9fcf000 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9fd0718 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9fd0368 <line:529:4, col:55>
    0x9fd0330 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9fd06c8 <line:530:4, line:531:23>
    (BinaryOperator 0x9fd0540 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9fd0378 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9fd0330 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9fd03f8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd03c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fd0390 <col:15> '_BI1' lvalue ParmVar 0x9fd00c0 '__last' '_BI1')
        (DeclRefExpr 0x9fd03a8 <col:24> '_BI1' lvalue ParmVar 0x9fd0080 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd05c8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd0588 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fd0558 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9fd0330 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9fd0570 <col:39> 'int' 0))
    (UnaryOperator 0x9fd0608 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9fd05ec <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9fd0330 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9fd06b0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9fd0650 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9fd0638 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9fd061c <col:9> '_BI2' lvalue ParmVar 0x9fd0100 '__result' '_BI2')))
      (UnaryOperator 0x9fd0698 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9fd0680 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9fd0664 <col:23> '_BI1' lvalue ParmVar 0x9fd00c0 '__last' '_BI1')))))
  (ReturnStmt 0x9fd0708 <line:532:4, col:11>
    (DeclRefExpr 0x9fd06ec <col:11> '_BI2' lvalue ParmVar 0x9fd0100 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9fd1128 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x9fd0ec8 <line:559:4, col:43>
    0x9fd0e00 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9fd0ea0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd0e68 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fd0e34 <col:27> 'const _Tp *' lvalue ParmVar 0x9fd0c40 '__last' 'const _Tp *')
        (DeclRefExpr 0x9fd0e4c <col:36> 'const _Tp *' lvalue ParmVar 0x9fd0bf0 '__first' 'const _Tp *'))")
  (IfStmt 0x9fd1068 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fd0f00 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9fd0ef0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ed8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9fd0e00 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9fd1040 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x9fd0f0c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x9fd0f90 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd0f58 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fd0f24 <col:24> '_Tp *' lvalue ParmVar 0x9fd0cb0 '__result' '_Tp *')
        (DeclRefExpr 0x9fd0f3c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x9fd0e00 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x9fd0fb4 <col:41> 'const _Tp *' lvalue ParmVar 0x9fd0bf0 '__first' 'const _Tp *')
      (BinaryOperator 0x9fd1028 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9fd0fd8 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9fd1018 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9fd1008 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9fd0ff0 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x9fd0e00 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9fd1118 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x9fd10f0 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd10b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0x9fd1084 <col:11> '_Tp *' lvalue ParmVar 0x9fd0cb0 '__result' '_Tp *')
      (DeclRefExpr 0x9fd109c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9fd0e00 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9fd2d98 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x9fd1510 <line:570:7, col:69>
    0x9fd14e0 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x9fd1640 <line:571:7, col:69>
    0x9fd1610 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x9fd1770 <line:572:7, col:74>
    0x9fd1740 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x9fd1b50 <line:573:7, line:576:58>
    0x9fd1790 "const bool __simple =
      (ParenExpr 0x9fd1b38 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x9fd1b20 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x9fd19c8 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x9fd18d8 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9fd17e8 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9fd18b0 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9fd19a0 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9fd1af8 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9fd2d88 <line:578:7, line:581:18>
    (CallExpr 0x9fd2d60 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fd2cf0 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fd2d14 <col:59> '_BI1' lvalue ParmVar 0x9fd1250 '__first' '_BI1')
      (DeclRefExpr 0x9fd2d2c <line:580:10> '_BI1' lvalue ParmVar 0x9fd1290 '__last' '_BI1')
      (DeclRefExpr 0x9fd2d44 <line:581:10> '_BI2' lvalue ParmVar 0x9fd12d0 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9fd3318 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x9fd3308 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x9fd32e8 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x9fd32c0 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd30c0 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x9fd13c0)
        (CallExpr 0x9fd3190 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd3140 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fd3174 <col:24> '_BI1' lvalue ParmVar 0x9fd2ed0 '__first' '_BI1'))
        (CallExpr 0x9fd3218 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd31c8 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fd31fc <col:52> '_BI1' lvalue ParmVar 0x9fd2f10 '__last' '_BI1'))
        (CallExpr 0x9fd32a0 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd3250 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fd3284 <col:24> '_BI2' lvalue ParmVar 0x9fd2f50 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9fd3898 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x9fd3598 <line:621:54>)
  (ReturnStmt 0x9fd3888 <line:623:7, line:625:18>
    (ParenExpr 0x9fd3870 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x9fd3848 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd36b8 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x9fd3040)
        (CallExpr 0x9fd3788 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd3738 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc7b70)
          (DeclRefExpr 0x9fd376c <col:27> '_BI1' lvalue ParmVar 0x9fd33f0 '__first' '_BI1'))
        (CallExpr 0x9fd3810 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd37c0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc7b70)
          (DeclRefExpr 0x9fd37f4 <col:55> '_BI1' lvalue ParmVar 0x9fd3430 '__last' '_BI1'))
        (DeclRefExpr 0x9fd3830 <line:625:9> '_BI2' lvalue ParmVar 0x9fd3470 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9fd3fa8 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x9fd3f80 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd3ec8 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd3e88 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fd3e54 <col:14> '_ForwardIterator' lvalue ParmVar 0x9fd3c40 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9fd3e6c <col:25> '_ForwardIterator' lvalue ParmVar 0x9fd3c80 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9fd3f08 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9fd3eec <col:35> '_ForwardIterator' lvalue ParmVar 0x9fd3c40 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9fd3f68 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9fd3f38 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fd3f1c <col:3> '_ForwardIterator' lvalue ParmVar 0x9fd3c40 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9fd3f4c <col:13> 'const _Tp' lvalue ParmVar 0x9fd3cf0 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa435eb8 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa435ce0 <line:685:7, col:32>
    0xa435c80 "const int __tmp =
      (ImplicitCastExpr 0xa435cd0 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa435cb4 <col:25> 'const int':'const int' lvalue ParmVar 0xa4358c0 '__value' 'const int &'))")
  (ForStmt 0xa435e90 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa435d80 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0xa435d60 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa435d2c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa435810 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0xa435d70 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa435d44 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa435850 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0xa435db0 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0xa435d98 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa435810 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0xa435e40 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0xa435df0 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa435de0 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0xa435dc4 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa435810 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0xa435e30 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0xa435e20 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa435e04 <col:13> 'const int':'const int' lvalue Var 0xa435c80 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9fd46d0 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9fd4570 <line:685:7, col:32>
    0x9fd4520 "const _Tp __tmp =
      (DeclRefExpr 0x9fd4554 <col:25> 'const _Tp' lvalue ParmVar 0x9fd43b0 '__value' 'const _Tp &')")
  (ForStmt 0x9fd46a8 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd45f0 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd45b0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fd4580 <col:14> '_ForwardIterator' lvalue ParmVar 0x9fd4300 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9fd4598 <col:25> '_ForwardIterator' lvalue ParmVar 0x9fd4340 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9fd4630 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9fd4614 <col:35> '_ForwardIterator' lvalue ParmVar 0x9fd4300 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9fd4690 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9fd4660 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fd4644 <col:3> '_ForwardIterator' lvalue ParmVar 0x9fd4300 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9fd4674 <col:13> 'const _Tp' lvalue Var 0x9fd4520 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x9fd59f0 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x9fd5750 <line:696:7, col:28>
    0x9fd5700 "const _Tp __tmp =
      (DeclRefExpr 0x9fd5734 <col:25> 'const _Tp' lvalue ParmVar 0x9fd5590 '__c' 'const _Tp &')")
  (CallExpr 0x9fd59c8 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x9fd58c4 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x9fd5760 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x9fd58dc <col:24> '_Tp *' lvalue ParmVar 0x9fd4a00 '__first' '_Tp *')
    (CXXStaticCastExpr 0x9fd5920 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x9fd58f4 <col:60> 'const _Tp' lvalue Var 0x9fd5700 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x9fd59a0 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd5968 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0x9fd5938 <col:10> '_Tp *' lvalue ParmVar 0x9fd4a50 '__last' '_Tp *')
      (DeclRefExpr 0x9fd5950 <col:19> '_Tp *' lvalue ParmVar 0x9fd4a00 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa435ad0 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9fd5cd8 <line:720:54>)
  (CallExpr 0xa435aa8 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0xa435a98 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa435a54 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa435950 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9fd44e0 '__fill_a')))
    (CallExpr 0xa433a68 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa433a58 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4339f8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa433950 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9fc6390 '__niter_base')))
      (ImplicitCastExpr 0xa433a88 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa432e84 <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa3b8050 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0xa433b50 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa433b40 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa433b18 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa433950 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9fc6390 '__niter_base')))
      (ImplicitCastExpr 0xa433b70 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa433acc <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa3b8090 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0xa433b7c <line:723:7> 'const int':'const int' lvalue ParmVar 0xa3b8120 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9fd5e98 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9fd5cd8 <line:720:54>)
  (CallExpr 0x9fd5e70 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x9fd5d08 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3e20 0x9fd44e0 0x9fd56c0)
    (CallExpr 0x9fd5db0 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd5d60 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
      (DeclRefExpr 0x9fd5d94 <col:39> '_ForwardIterator' lvalue ParmVar 0x9fd5ad0 '__first' '_ForwardIterator'))
    (CallExpr 0x9fd5e38 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd5de8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
      (DeclRefExpr 0x9fd5e1c <col:67> '_ForwardIterator' lvalue ParmVar 0x9fd5b10 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x9fd5e58 <line:723:7> 'const _Tp' lvalue ParmVar 0x9fd5b80 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9fd67b0 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x9fd6760 <line:731:7, line:733:13>
    (DeclStmt 0x9fd65e0 <line:731:12, col:45>
      0x9fd6590 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9fd65c4 <col:42> '_Size' lvalue ParmVar 0x9fd62d0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd6660 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd6620 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fd65f0 <col:5> 'decltype(__n + 0)' lvalue Var 0x9fd6590 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9fd6608 <col:15> 'int' 0))
    (BinaryOperator 0x9fd66e8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9fd66a0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9fd6684 <col:20> 'decltype(__n + 0)' lvalue Var 0x9fd6590 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9fd66d0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fd66b4 <col:31> '_OutputIterator' lvalue ParmVar 0x9fd6290 '__first' '_OutputIterator')))
    (BinaryOperator 0x9fd6748 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9fd6718 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fd6700 <col:3> '_OutputIterator' lvalue ParmVar 0x9fd6290 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9fd672c <col:13> 'const _Tp' lvalue ParmVar 0x9fd6360 '__value' 'const _Tp &')))
  (ReturnStmt 0x9fd67a0 <line:734:7, col:14>
    (DeclRefExpr 0x9fd6784 <col:14> '_OutputIterator' lvalue ParmVar 0x9fd6290 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9fd70b0 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x9fd6dd0 <line:742:7, col:32>
    0x9fd6d80 "const _Tp __tmp =
      (DeclRefExpr 0x9fd6db4 <col:25> 'const _Tp' lvalue ParmVar 0x9fd6c10 '__value' 'const _Tp &')")
  (ForStmt 0x9fd7060 <line:743:7, line:745:13>
    (DeclStmt 0x9fd6ee0 <line:743:12, col:45>
      0x9fd6e90 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9fd6ec4 <col:42> '_Size' lvalue ParmVar 0x9fd6ba0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd6f60 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd6f20 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fd6ef0 <col:5> 'decltype(__n + 0)' lvalue Var 0x9fd6e90 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9fd6f08 <col:15> 'int' 0))
    (BinaryOperator 0x9fd6fe8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9fd6fa0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9fd6f84 <col:20> 'decltype(__n + 0)' lvalue Var 0x9fd6e90 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9fd6fd0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fd6fb4 <col:31> '_OutputIterator' lvalue ParmVar 0x9fd6b60 '__first' '_OutputIterator')))
    (BinaryOperator 0x9fd7048 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9fd7018 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fd7000 <col:3> '_OutputIterator' lvalue ParmVar 0x9fd6b60 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9fd702c <col:13> 'const _Tp' lvalue Var 0x9fd6d80 '__tmp' 'const _Tp')))
  (ReturnStmt 0x9fd70a0 <line:746:7, col:14>
    (DeclRefExpr 0x9fd7084 <col:14> '_OutputIterator' lvalue ParmVar 0x9fd6b60 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x9fd84a0 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x9fd83d8 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x9fd82d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3e20 0x9fd44e0 0x9fd56c0)
    (DeclRefExpr 0x9fd8314 <col:21> '_Tp *' lvalue ParmVar 0x9fd7470 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x9fd8398 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd8360 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
      (DeclRefExpr 0x9fd832c <col:30> '_Tp *' lvalue ParmVar 0x9fd7470 '__first' '_Tp *')
      (DeclRefExpr 0x9fd8344 <col:40> '_Size' lvalue ParmVar 0x9fd74b0 '__n' '_Size'))
    (DeclRefExpr 0x9fd83bc <col:45> 'const _Tp' lvalue ParmVar 0x9fd7520 '__c' 'const _Tp &'))
  (ReturnStmt 0x9fd8490 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x9fd8468 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd8430 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
      (DeclRefExpr 0x9fd8400 <col:14> '_Tp *' lvalue ParmVar 0x9fd7470 '__first' '_Tp *')
      (DeclRefExpr 0x9fd8418 <col:24> '_Size' lvalue ParmVar 0x9fd74b0 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9fd8948 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x9fd8938 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x9fd8918 <col:14, col:75> '_OI'
      (CallExpr 0x9fd88f0 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd87f8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd6490 0x9fd6d40 0x9fd8280)
        (CallExpr 0x9fd88a0 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd8850 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
          (DeclRefExpr 0x9fd8884 <col:52> '_OI' lvalue ParmVar 0x9fd85d0 '__first' '_OI'))
        (DeclRefExpr 0x9fd88c0 <col:62> '_Size' lvalue ParmVar 0x9fd8610 '__n' '_Size')
        (DeclRefExpr 0x9fd88d8 <col:67> 'const _Tp' lvalue ParmVar 0x9fd8680 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9fd98b0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9fd98a0 <line:804:4, line:805:30>
    (UnaryOperator 0x9fd9888 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9fd9860 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9fd9734 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9fd974c <col:29> 'const _Tp *' lvalue ParmVar 0x9fd93c0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9fd9764 <col:39> 'const _Tp *' lvalue ParmVar 0x9fd9460 '__first2' 'const _Tp *')
        (BinaryOperator 0x9fd9848 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9fd9788 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9fd9830 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9fd9808 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9fd97d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (DeclRefExpr 0x9fd97a0 <col:11> 'const _Tp *' lvalue ParmVar 0x9fd9410 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9fd97b8 <col:21> 'const _Tp *' lvalue ParmVar 0x9fd93c0 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9fd9110 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x9fd90c8 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fd8ef0 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd8eb0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fd8e80 <col:11> '_II1' lvalue ParmVar 0x9fd8c90 '__first1' '_II1')
      (DeclRefExpr 0x9fd8e98 <col:23> '_II1' lvalue ParmVar 0x9fd8cd0 '__last1' '_II1'))
    (BinaryOperator 0x9fd8f78 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x9fd8f30 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fd8f14 <col:34> '_II1' lvalue ParmVar 0x9fd8c90 '__first1' '_II1'))
      (UnaryOperator 0x9fd8f60 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fd8f44 <col:46> '_II2' lvalue ParmVar 0x9fd8d10 '__first2' '_II2')))
    (IfStmt 0x9fd90a8 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x9fd9070 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x9fd9058 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9fd9030 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9fd8ff0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050)
            (UnaryOperator 0x9fd8fa8 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fd8f90 <col:13> '_II1' lvalue ParmVar 0x9fd8c90 '__first1' '_II1'))
            (UnaryOperator 0x9fd8fd8 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fd8fbc <col:26> '_II2' lvalue ParmVar 0x9fd8d10 '__first2' '_II2')))))
      (ReturnStmt 0x9fd9098 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x9fd9088 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9fd9100 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x9fd90f0 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9fd98b0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9fd98a0 <line:804:4, line:805:30>
    (UnaryOperator 0x9fd9888 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9fd9860 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9fd9734 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9fd974c <col:29> 'const _Tp *' lvalue ParmVar 0x9fd93c0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9fd9764 <col:39> 'const _Tp *' lvalue ParmVar 0x9fd9460 '__first2' 'const _Tp *')
        (BinaryOperator 0x9fd9848 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9fd9788 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9fd9830 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9fd9808 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9fd97d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (DeclRefExpr 0x9fd97a0 <col:11> 'const _Tp *' lvalue ParmVar 0x9fd9410 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9fd97b8 <col:21> 'const _Tp *' lvalue ParmVar 0x9fd93c0 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9fdba18 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x9fd9c80 <line:813:7, col:69>
    0x9fd9c50 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9fd9db0 <line:814:7, col:69>
    0x9fd9d80 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9fdb850 <line:815:7, line:818:58>
    0x9fd9dd0 "const bool __simple =
      (ParenExpr 0x9fdb838 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x9fdb820 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x9fda0f8 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x9fda008 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x9fd9f10 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x9fd9fe0 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9fda0d0 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9fdb7f8 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9fdba08 <line:820:7, col:71>
    (CallExpr 0x9fdb9e0 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fdb970 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fdb994 <col:44> '_II1' lvalue ParmVar 0x9fd9990 '__first1' '_II1')
      (DeclRefExpr 0x9fdb9ac <col:54> '_II1' lvalue ParmVar 0x9fd99d0 '__last1' '_II1')
      (DeclRefExpr 0x9fdb9c4 <col:63> '_II2' lvalue ParmVar 0x9fd9a10 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9fdcef8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9fdcb98 <line:846:4, line:847:34>
    0x9fdcad0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9fdcb70 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdcb38 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdcb04 <col:16> '_RAI1' lvalue ParmVar 0x9fdc620 '__last1' '_RAI1')
        (DeclRefExpr 0x9fdcb1c <col:26> '_RAI1' lvalue ParmVar 0x9fdc5e0 '__first1' '_RAI1'))")
  (DeclStmt 0x9fdcd78 <line:848:4, line:849:34>
    0x9fdccb0 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9fdcd50 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdcd18 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdcce4 <col:16> '_RAI2' lvalue ParmVar 0x9fdc6a0 '__last2' '_RAI2')
        (DeclRefExpr 0x9fdccfc <col:26> '_RAI2' lvalue ParmVar 0x9fdc660 '__first2' '_RAI2'))")
  (ReturnStmt 0x9fdcee8 <line:850:4, col:52>
    (ConditionalOperator 0x9fdcec8 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9fdcdf8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdcdb8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
        (DeclRefExpr 0x9fdcd88 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9fdccb0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9fdcda0 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9fdcad0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9fdce88 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdce50 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (DeclRefExpr 0x9fdce1c <col:31> '_RAI1' lvalue ParmVar 0x9fdc5e0 '__first1' '_RAI1')
        (DeclRefExpr 0x9fdce34 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9fdccb0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9fdceac <col:52> '_RAI1' lvalue ParmVar 0x9fdc620 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9fdcf38 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9fdcf28 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9fdcf18 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x9fdc208 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x9fdc1f8 <col:11, col:18>
    (DeclRefExpr 0x9fdc1e0 <col:18> '_II1' lvalue ParmVar 0x9fdbe20 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x9fdc2c8 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x9fdc2b8 <col:11, col:29>
    (CXXOperatorCallExpr 0x9fdc290 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdc250 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fdc21c <col:18> '_II' lvalue ParmVar 0x9fdc060 '__first' '_II')
      (DeclRefExpr 0x9fdc234 <col:29> '_II' lvalue ParmVar 0x9fdc0a0 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9fdcef8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9fdcb98 <line:846:4, line:847:34>
    0x9fdcad0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9fdcb70 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdcb38 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdcb04 <col:16> '_RAI1' lvalue ParmVar 0x9fdc620 '__last1' '_RAI1')
        (DeclRefExpr 0x9fdcb1c <col:26> '_RAI1' lvalue ParmVar 0x9fdc5e0 '__first1' '_RAI1'))")
  (DeclStmt 0x9fdcd78 <line:848:4, line:849:34>
    0x9fdccb0 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9fdcd50 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdcd18 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdcce4 <col:16> '_RAI2' lvalue ParmVar 0x9fdc6a0 '__last2' '_RAI2')
        (DeclRefExpr 0x9fdccfc <col:26> '_RAI2' lvalue ParmVar 0x9fdc660 '__first2' '_RAI2'))")
  (ReturnStmt 0x9fdcee8 <line:850:4, col:52>
    (ConditionalOperator 0x9fdcec8 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9fdcdf8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdcdb8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
        (DeclRefExpr 0x9fdcd88 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9fdccb0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9fdcda0 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9fdcad0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9fdce88 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdce50 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (DeclRefExpr 0x9fdce1c <col:31> '_RAI1' lvalue ParmVar 0x9fdc5e0 '__first1' '_RAI1')
        (DeclRefExpr 0x9fdce34 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9fdccb0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9fdceac <col:52> '_RAI1' lvalue ParmVar 0x9fdc620 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9fdcf38 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9fdcf28 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9fdcf18 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9fe01e0 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9fdfb68 <line:897:4, col:44>
    0x9fdfaa0 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9fdfb40 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdfb08 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdfad4 <col:26> 'const _Tp *' lvalue ParmVar 0x9fdf860 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9fdfaec <col:36> 'const _Tp *' lvalue ParmVar 0x9fdf810 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9fdfc48 <line:898:4, col:44>
    0x9fdfb80 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9fdfc20 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdfbe8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdfbb4 <col:26> 'const _Up *' lvalue ParmVar 0x9fdf920 '__last2' 'const _Up *')
        (DeclRefExpr 0x9fdfbcc <col:36> 'const _Up *' lvalue ParmVar 0x9fdf8d0 '__first2' 'const _Up *'))")
  (DeclStmt 0x9fe0088 <line:899:4, line:900:32>
    0x9fdfc70 "const int __result =
      (CallExpr 0x9fe0060 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9fdfca4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9fdfcbc <col:42> 'const _Tp *' lvalue ParmVar 0x9fdf810 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9fdfcd4 <col:52> 'const _Up *' lvalue ParmVar 0x9fdf8d0 '__first2' 'const _Up *')
        (CallExpr 0x9fe0038 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9fe0028 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9fdffc8 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9fdff20 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9fc50d0 'min')))
          (DeclRefExpr 0x9fdfd40 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9fdfaa0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9fdfd58 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9fdfb80 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9fe01d0 <line:901:4, col:51>
    (ConditionalOperator 0x9fe01b0 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9fe00d8 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9fe00c8 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fe0098 <col:11> 'const int' lvalue Var 0x9fdfc70 '__result' 'const int'))
        (IntegerLiteral 0x9fe00b0 <col:23> 'int' 0))
      (BinaryOperator 0x9fe0130 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9fe0120 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fe00f0 <col:27> 'const int' lvalue Var 0x9fdfc70 '__result' 'const int'))
        (IntegerLiteral 0x9fe0108 <col:38> 'int' 0))
      (BinaryOperator 0x9fe0198 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9fe0178 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fe0148 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9fdfaa0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9fe0188 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fe0160 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9fdfb80 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9fdf508 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x9fdeab0 <line:872:2, col:70>
    0x9fdea80 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9fdec40 <line:873:2, col:70>
    0x9fdec10 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9fdee60 <line:874:2, col:59>
    0x9fdee30 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x9fdef80 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x9fdee70 <line:876:2> '_II1' lvalue ParmVar 0x9fde760 '__last1' '_II1')
    (CallExpr 0x9fdef50 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fdeec8 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fdeeec <col:35> '_II1' lvalue ParmVar 0x9fde720 '__first1' '_II1')
      (DeclRefExpr 0x9fdef04 <col:45> '_II1' lvalue ParmVar 0x9fde760 '__last1' '_II1')
      (DeclRefExpr 0x9fdef1c <line:877:7> '_II2' lvalue ParmVar 0x9fde7a0 '__first2' '_II2')
      (DeclRefExpr 0x9fdef34 <col:17> '_II2' lvalue ParmVar 0x9fde7e0 '__last2' '_II2')))
  (ForStmt 0x9fdf388 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9fdf0d0 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fdf008 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdefc8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
        (DeclRefExpr 0x9fdef98 <col:9> '_II1' lvalue ParmVar 0x9fde720 '__first1' '_II1')
        (DeclRefExpr 0x9fdefb0 <col:21> '_II1' lvalue ParmVar 0x9fde760 '__last1' '_II1'))
      (CallExpr 0x9fdf0a8 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9fdf050 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fdf074 <col:51> '_II2' lvalue ParmVar 0x9fde7a0 '__first2' '_II2')
        (DeclRefExpr 0x9fdf08c <col:61> '_II2' lvalue ParmVar 0x9fde7e0 '__last2' '_II2')))
    (BinaryOperator 0x9fdf148 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x9fdf100 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fdf0e8 <col:9> '_II1' lvalue ParmVar 0x9fde720 '__first1' '_II1'))
      (UnaryOperator 0x9fdf130 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fdf114 <col:21> '_II2' lvalue ParmVar 0x9fde7a0 '__first2' '_II2')))
    (CompoundStmt 0x9fdf370 <line:880:4, line:885:4>
      (IfStmt 0x9fdf248 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fdf200 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9fdf1c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
          (UnaryOperator 0x9fdf178 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fdf160 <col:11> '_II1' lvalue ParmVar 0x9fde720 '__first1' '_II1'))
          (UnaryOperator 0x9fdf1a8 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fdf18c <col:23> '_II2' lvalue ParmVar 0x9fde7a0 '__first2' '_II2')))
        (ReturnStmt 0x9fdf238 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x9fdf228 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9fdf350 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fdf308 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9fdf2c8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
          (UnaryOperator 0x9fdf280 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fdf264 <col:11> '_II2' lvalue ParmVar 0x9fde7a0 '__first2' '_II2'))
          (UnaryOperator 0x9fdf2b0 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fdf294 <col:23> '_II1' lvalue ParmVar 0x9fde720 '__first1' '_II1')))
        (ReturnStmt 0x9fdf340 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x9fdf330 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9fdf4f8 <line:886:2, col:44>
    (BinaryOperator 0x9fdf4e0 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fdf420 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdf3e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050)
        (DeclRefExpr 0x9fdf3ac <col:9> '_II1' lvalue ParmVar 0x9fde720 '__first1' '_II1')
        (DeclRefExpr 0x9fdf3c4 <col:21> '_II1' lvalue ParmVar 0x9fde760 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9fdf4b8 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdf478 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
        (DeclRefExpr 0x9fdf444 <col:32> '_II2' lvalue ParmVar 0x9fde7a0 '__first2' '_II2')
        (DeclRefExpr 0x9fdf45c <col:44> '_II2' lvalue ParmVar 0x9fde7e0 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9fe01e0 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9fdfb68 <line:897:4, col:44>
    0x9fdfaa0 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9fdfb40 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdfb08 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdfad4 <col:26> 'const _Tp *' lvalue ParmVar 0x9fdf860 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9fdfaec <col:36> 'const _Tp *' lvalue ParmVar 0x9fdf810 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9fdfc48 <line:898:4, col:44>
    0x9fdfb80 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9fdfc20 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdfbe8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0x9fdfbb4 <col:26> 'const _Up *' lvalue ParmVar 0x9fdf920 '__last2' 'const _Up *')
        (DeclRefExpr 0x9fdfbcc <col:36> 'const _Up *' lvalue ParmVar 0x9fdf8d0 '__first2' 'const _Up *'))")
  (DeclStmt 0x9fe0088 <line:899:4, line:900:32>
    0x9fdfc70 "const int __result =
      (CallExpr 0x9fe0060 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9fdfca4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9fdfcbc <col:42> 'const _Tp *' lvalue ParmVar 0x9fdf810 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9fdfcd4 <col:52> 'const _Up *' lvalue ParmVar 0x9fdf8d0 '__first2' 'const _Up *')
        (CallExpr 0x9fe0038 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9fe0028 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9fdffc8 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9fdff20 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9fc50d0 'min')))
          (DeclRefExpr 0x9fdfd40 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9fdfaa0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9fdfd58 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9fdfb80 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9fe01d0 <line:901:4, col:51>
    (ConditionalOperator 0x9fe01b0 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9fe00d8 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9fe00c8 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fe0098 <col:11> 'const int' lvalue Var 0x9fdfc70 '__result' 'const int'))
        (IntegerLiteral 0x9fe00b0 <col:23> 'int' 0))
      (BinaryOperator 0x9fe0130 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9fe0120 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fe00f0 <col:27> 'const int' lvalue Var 0x9fdfc70 '__result' 'const int'))
        (IntegerLiteral 0x9fe0108 <col:38> 'int' 0))
      (BinaryOperator 0x9fe0198 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9fe0178 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fe0148 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9fdfaa0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9fe0188 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fe0160 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9fdfb80 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9fe1da8 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x9fe05f0 <line:910:7, col:69>
    0x9fe05c0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9fe1480 <line:911:7, col:69>
    0x9fe1450 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9fe1bc8 <line:912:7, line:917:34>
    0x9fe14a0 "const bool __simple =
      (ParenExpr 0x9fe1bb0 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x9fe1b98 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x9fe1aa8 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x9fe19c0 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x9fe1880 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x9fe1728 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x9fe15e0 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x9fe1700 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x9fe1868 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x9fe1840 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x9fe19a8 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x9fe1980 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x9fe1a80 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9fe1b70 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9fe1d98 <line:919:7, line:920:29>
    (CallExpr 0x9fe1d68 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fe1ce0 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fe1d04 <col:61> '_II1' lvalue ParmVar 0x9fe02c0 '__first1' '_II1')
      (DeclRefExpr 0x9fe1d1c <col:71> '_II1' lvalue ParmVar 0x9fe0300 '__last1' '_II1')
      (DeclRefExpr 0x9fe1d34 <line:920:12> '_II2' lvalue ParmVar 0x9fe0340 '__first2' '_II2')
      (DeclRefExpr 0x9fe1d4c <col:22> '_II2' lvalue ParmVar 0x9fe0380 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x9fe29b0 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x9fe21b0 <line:939:7, line:940:12>
    0x9fe2180 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x9fe22e0 <line:941:7, line:942:15>
    0x9fe22b0 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x9fe22f0 <line:947:67>)
  (DeclStmt 0x9fe2400 <line:949:7, col:59>
    0x9fe2320 "_DistanceType __len =
      (CallExpr 0x9fe23d8 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe2370 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
        (DeclRefExpr 0x9fe23a4 <col:43> '_ForwardIterator' lvalue ParmVar 0x9fe1e90 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fe23bc <col:52> '_ForwardIterator' lvalue ParmVar 0x9fe1ed0 '__last' '_ForwardIterator'))")
  (WhileStmt 0x9fe2970 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe2480 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe2440 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0x9fe2410 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe2320 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x9fe2428 <col:22> 'int' 0))
    (CompoundStmt 0x9fe2950 <line:952:2, line:964:2>
      (DeclStmt 0x9fe2530 <line:953:4, col:37>
        0x9fe24b0 "_DistanceType __half =
          (BinaryOperator 0x9fe2518 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x9fe24e4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe2320 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x9fe2500 <col:36> 'int' 1))")
      (DeclStmt 0x9fe25a0 <line:954:4, col:39>
        0x9fe2550 "_ForwardIterator __middle =
          (DeclRefExpr 0x9fe2584 <col:32> '_ForwardIterator' lvalue ParmVar 0x9fe1e90 '__first' '_ForwardIterator')")
      (CallExpr 0x9fe2640 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe25d8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f080f0)
        (DeclRefExpr 0x9fe260c <col:17> '_ForwardIterator' lvalue Var 0x9fe2550 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x9fe2624 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe24b0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x9fe2930 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fe26f0 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe26b0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
          (UnaryOperator 0x9fe2680 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe2664 <col:9> '_ForwardIterator' lvalue Var 0x9fe2550 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x9fe2694 <col:20> 'const _Tp' lvalue ParmVar 0x9fe1f40 '__val' 'const _Tp &'))
        (CompoundStmt 0x9fe28c8 <line:957:6, line:961:6>
          (BinaryOperator 0x9fe2748 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x9fe2714 <col:8> '_ForwardIterator' lvalue ParmVar 0x9fe1e90 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9fe272c <col:18> '_ForwardIterator' lvalue Var 0x9fe2550 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x9fe2778 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fe2760 <col:10> '_ForwardIterator' lvalue ParmVar 0x9fe1e90 '__first' '_ForwardIterator'))
          (BinaryOperator 0x9fe28b0 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x9fe278c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe2320 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x9fe2888 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9fe2850 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (CXXOperatorCallExpr 0x9fe2810 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x9fe27d8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                (DeclRefExpr 0x9fe27a4 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe2320 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x9fe27bc <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe24b0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x9fe2838 <col:33> 'int' 1))))
        (BinaryOperator 0x9fe2918 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x9fe28e4 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe2320 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x9fe28fc <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9fe24b0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x9fe29a0 <line:965:7, col:14>
    (DeclRefExpr 0x9fe2984 <col:14> '_ForwardIterator' lvalue ParmVar 0x9fe1e90 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x9fe2dd0 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x9fe2b98 <line:974:7, col:16>
    0x9fe2b60 "_Size __k")
  (ForStmt 0x9fe2d08 <line:975:7, line:976:4>
    (BinaryOperator 0x9fe2bd8 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x9fe2ba8 <col:12> '_Size' lvalue Var 0x9fe2b60 '__k' '_Size')
      (IntegerLiteral 0x9fe2bc0 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe2c60 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe2c20 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fe2bf0 <col:21> '_Size' lvalue ParmVar 0x9fe2a40 '__n' '_Size')
      (IntegerLiteral 0x9fe2c08 <col:28> 'int' 0))
    (CompoundAssignOperator 0x9fe2cb8 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9fe2c84 <col:31> '_Size' lvalue ParmVar 0x9fe2a40 '__n' '_Size')
      (IntegerLiteral 0x9fe2ca0 <col:39> 'int' 1))
    (UnaryOperator 0x9fe2cf0 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9fe2cd8 <col:4> '_Size' lvalue Var 0x9fe2b60 '__k' '_Size')))
  (ReturnStmt 0x9fe2dc0 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x9fe2d98 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe2d60 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0x9fe2d2c <col:14> '_Size' lvalue Var 0x9fe2b60 '__k' '_Size')
      (IntegerLiteral 0x9fe2d48 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x9fe3140 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x9fe3130 <col:5, col:63>
    (ImplicitCastExpr 0x9fe3120 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x9fe3108 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x9fe2f58 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9fe2f18 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9fe2ed8 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x9fe2f08 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9fe2ef0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9fe2f48 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9fe2f30 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9fe30f8 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x9fe30b8 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x9fe30a8 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fe3060 <col:46> 'int (unsigned int)' lvalue Function 0x9fe2f70 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x9fe30e8 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9fe30d8 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x9fe3078 <col:60> 'int' lvalue ParmVar 0x9fe2e00 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x9fe4d10 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x9fe4d00 <col:5, col:64>
    (ImplicitCastExpr 0x9fe4cf0 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x9fe4cd8 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x9fe32c8 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9fe3288 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9fe3248 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x9fe3278 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9fe3260 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9fe32b8 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9fe32a0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9fe4cc8 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x9fe4c88 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x9fe4c78 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fe33f0 <col:46> 'int (unsigned long)' lvalue Function 0x9fe3300 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x9fe4cb8 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x9fe4ca8 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x9fe3408 <col:61> 'long' lvalue ParmVar 0x9fe3170 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x9fe50a0 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x9fe5090 <col:5, col:70>
    (ImplicitCastExpr 0x9fe5080 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x9fe5068 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x9fe4e98 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x9fe4e58 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9fe4e18 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x9fe4e48 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9fe4e30 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9fe4e88 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9fe4e70 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x9fe5058 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x9fe5018 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x9fe5008 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fe4fc0 <col:51> 'int (unsigned long long)' lvalue Function 0x9fe4ed0 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x9fe5048 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x9fe5038 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x9fe4fd8 <col:67> 'long long' lvalue ParmVar 0x9fe4d40 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9fe5558 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x9fe5328 <line:1018:56>)
  (ReturnStmt 0x9fe5548 <line:1020:7, line:1022:37>
    (CallExpr 0x9fe5520 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe5350 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd9b30)
      (CallExpr 0x9fe53f0 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe53a0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe53d4 <col:49> '_II1' lvalue ParmVar 0x9fe5180 '__first1' '_II1'))
      (CallExpr 0x9fe5478 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe5428 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe545c <col:28> '_II1' lvalue ParmVar 0x9fe51c0 '__last1' '_II1'))
      (CallExpr 0x9fe5500 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe54b0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe54e4 <col:28> '_II2' lvalue ParmVar 0x9fe5200 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9fe5b20 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x9fe5898 <line:1048:56>)
  (ForStmt 0x9fe5ad8 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe5918 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe58d8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
      (DeclRefExpr 0x9fe58a4 <col:14> '_IIter1' lvalue ParmVar 0x9fe5680 '__first1' '_IIter1')
      (DeclRefExpr 0x9fe58bc <col:26> '_IIter1' lvalue ParmVar 0x9fe56c0 '__last1' '_IIter1'))
    (BinaryOperator 0x9fe59a0 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9fe5958 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe593c <col:37> '_IIter1' lvalue ParmVar 0x9fe5680 '__first1' '_IIter1'))
      (UnaryOperator 0x9fe5988 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe596c <col:49> '_IIter2' lvalue ParmVar 0x9fe5700 '__first2' '_IIter2')))
    (IfStmt 0x9fe5ab8 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x9fe5a80 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x9fe5a60 <col:7, col:47> '_Bool'
          (CallExpr 0x9fe5a38 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x9fe59c0 <col:12> '_BinaryPredicate' lvalue ParmVar 0x9fe5740 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x9fe59f0 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fe59d8 <col:27> '_IIter1' lvalue ParmVar 0x9fe5680 '__first1' '_IIter1'))
            (UnaryOperator 0x9fe5a20 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fe5a04 <col:38> '_IIter2' lvalue ParmVar 0x9fe5700 '__first2' '_IIter2')))))
      (ReturnStmt 0x9fe5aa8 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x9fe5a98 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9fe5b10 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x9fe5b00 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9fe6310 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x9fe5f00 <line:1077:7, col:69>
    0x9fe5ed0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9fe6030 <line:1078:7, col:69>
    0x9fe6000 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x9fe6040 <line:1083:56>)
  (NullStmt 0x9fe6050 <line:1084:56>)
  (ReturnStmt 0x9fe6300 <line:1086:7, line:1089:33>
    (CallExpr 0x9fe62d0 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe6078 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fe04a0)
      (CallExpr 0x9fe6118 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe60c8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe60fc <col:67> '_II1' lvalue ParmVar 0x9fe5c00 '__first1' '_II1'))
      (CallExpr 0x9fe61a0 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe6150 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe6184 <col:25> '_II1' lvalue ParmVar 0x9fe5c40 '__last1' '_II1'))
      (CallExpr 0x9fe6228 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe61d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe620c <col:25> '_II2' lvalue ParmVar 0x9fe5c80 '__first2' '_II2'))
      (CallExpr 0x9fe62b0 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe6260 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc6390)
        (DeclRefExpr 0x9fe6294 <col:25> '_II2' lvalue ParmVar 0x9fe5cc0 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x9fe7de8 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x9fe67e0 <line:1110:7, col:75>
    0x9fe67b0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9fe6910 <line:1111:7, col:75>
    0x9fe68e0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9fe6b20 <line:1112:7, col:64>
    0x9fe6af0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x9fe6b30 <line:1117:56>)
  (NullStmt 0x9fe6b40 <line:1118:56>)
  (BinaryOperator 0x9fe78b0 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x9fe6b4c <col:7> '_II1' lvalue ParmVar 0x9fe6490 '__last1' '_II1')
    (CallExpr 0x9fe6c30 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fe6ba8 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fe6bcc <col:40> '_II1' lvalue ParmVar 0x9fe6450 '__first1' '_II1')
      (DeclRefExpr 0x9fe6be4 <col:50> '_II1' lvalue ParmVar 0x9fe6490 '__last1' '_II1')
      (DeclRefExpr 0x9fe6bfc <col:59> '_II2' lvalue ParmVar 0x9fe64d0 '__first2' '_II2')
      (DeclRefExpr 0x9fe6c14 <col:69> '_II2' lvalue ParmVar 0x9fe6510 '__last2' '_II2')))
  (ForStmt 0x9fe7c68 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9fe7a00 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe7938 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe78f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
        (DeclRefExpr 0x9fe78c8 <col:14> '_II1' lvalue ParmVar 0x9fe6450 '__first1' '_II1')
        (DeclRefExpr 0x9fe78e0 <col:26> '_II1' lvalue ParmVar 0x9fe6490 '__last1' '_II1'))
      (CallExpr 0x9fe79d8 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9fe7980 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fe79a4 <col:56> '_II2' lvalue ParmVar 0x9fe64d0 '__first2' '_II2')
        (DeclRefExpr 0x9fe79bc <col:66> '_II2' lvalue ParmVar 0x9fe6510 '__last2' '_II2')))
    (BinaryOperator 0x9fe7a78 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x9fe7a30 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe7a18 <col:7> '_II1' lvalue ParmVar 0x9fe6450 '__first1' '_II1'))
      (UnaryOperator 0x9fe7a60 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe7a44 <col:19> '_II2' lvalue ParmVar 0x9fe64d0 '__first2' '_II2')))
    (CompoundStmt 0x9fe7c50 <line:1123:2, line:1128:2>
      (IfStmt 0x9fe7b50 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x9fe7b08 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9fe7a90 <col:8> '_Compare' lvalue ParmVar 0x9fe6550 '__comp' '_Compare')
          (UnaryOperator 0x9fe7ac0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe7aa8 <col:16> '_II1' lvalue ParmVar 0x9fe6450 '__first1' '_II1'))
          (UnaryOperator 0x9fe7af0 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe7ad4 <col:27> '_II2' lvalue ParmVar 0x9fe64d0 '__first2' '_II2')))
        (ReturnStmt 0x9fe7b40 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x9fe7b30 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9fe7c30 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x9fe7be8 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9fe7b6c <col:8> '_Compare' lvalue ParmVar 0x9fe6550 '__comp' '_Compare')
          (UnaryOperator 0x9fe7ba0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe7b84 <col:16> '_II2' lvalue ParmVar 0x9fe64d0 '__first2' '_II2'))
          (UnaryOperator 0x9fe7bd0 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe7bb4 <col:27> '_II1' lvalue ParmVar 0x9fe6450 '__first1' '_II1')))
        (ReturnStmt 0x9fe7c20 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x9fe7c10 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9fe7dd8 <line:1129:7, col:49>
    (BinaryOperator 0x9fe7dc0 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe7d00 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe7cc0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050)
        (DeclRefExpr 0x9fe7c8c <col:14> '_II1' lvalue ParmVar 0x9fe6450 '__first1' '_II1')
        (DeclRefExpr 0x9fe7ca4 <col:26> '_II1' lvalue ParmVar 0x9fe6490 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9fe7d98 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe7d58 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
        (DeclRefExpr 0x9fe7d24 <col:37> '_II2' lvalue ParmVar 0x9fe64d0 '__first2' '_II2')
        (DeclRefExpr 0x9fe7d3c <col:49> '_II2' lvalue ParmVar 0x9fe6510 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x9fe8528 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x9fe81a8 <line:1156:56>)
  (WhileStmt 0x9fe83a8 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x9fe8318 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe8228 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe81e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
        (DeclRefExpr 0x9fe81b4 <col:14> '_InputIterator1' lvalue ParmVar 0x9fe7fb0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9fe81cc <col:26> '_InputIterator1' lvalue ParmVar 0x9fe7ff0 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x9fe82f0 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe82b0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050)
        (UnaryOperator 0x9fe8268 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fe824c <col:38> '_InputIterator1' lvalue ParmVar 0x9fe7fb0 '__first1' '_InputIterator1'))
        (UnaryOperator 0x9fe8298 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fe827c <col:51> '_InputIterator2' lvalue ParmVar 0x9fe8030 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x9fe8390 <line:1159:9, line:1162:9>
      (UnaryOperator 0x9fe8348 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe8330 <col:6> '_InputIterator1' lvalue ParmVar 0x9fe7fb0 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9fe8378 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe835c <col:6> '_InputIterator2' lvalue ParmVar 0x9fe8030 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9fe8518 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x9fe84f8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9fe84c8 <col:53> '_InputIterator1' lvalue ParmVar 0x9fe7fb0 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9fe84e0 <col:63> '_InputIterator2' lvalue ParmVar 0x9fe8030 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9fe8cf8 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x9fe8978 <line:1191:56>)
  (WhileStmt 0x9fe8b78 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x9fe8ae8 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe89f8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe89b8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70)
        (DeclRefExpr 0x9fe8984 <col:14> '_InputIterator1' lvalue ParmVar 0x9fe8730 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9fe899c <col:26> '_InputIterator1' lvalue ParmVar 0x9fe8770 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x9fe8ac8 <col:37, col:77> '_Bool'
        (CallExpr 0x9fe8aa0 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x9fe8a28 <col:42> '_BinaryPredicate' lvalue ParmVar 0x9fe87f0 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x9fe8a58 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe8a40 <col:57> '_InputIterator1' lvalue ParmVar 0x9fe8730 '__first1' '_InputIterator1'))
          (UnaryOperator 0x9fe8a88 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fe8a6c <col:68> '_InputIterator2' lvalue ParmVar 0x9fe87b0 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x9fe8b60 <line:1194:9, line:1197:9>
      (UnaryOperator 0x9fe8b18 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe8b00 <col:6> '_InputIterator1' lvalue ParmVar 0x9fe8730 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9fe8b48 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe8b2c <col:6> '_InputIterator2' lvalue ParmVar 0x9fe87b0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9fe8ce8 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x9fe8cc8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9fe8c98 <col:53> '_InputIterator1' lvalue ParmVar 0x9fe8730 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9fe8cb0 <col:63> '_InputIterator2' lvalue ParmVar 0x9fe87b0 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9feed50 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x9feed40 <col:5, col:55>
    (CallExpr 0x9feed08 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x9feecf8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9feec98 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9e8c220 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9fee8d0 'wcschr')))
      (CXXConstCastExpr 0x9feec68 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9feec58 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9feec30 <col:46> 'wchar_t *' lvalue ParmVar 0x9feead0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9feed30 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9feec80 <col:52> 'wchar_t' lvalue ParmVar 0x9feeb10 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9feeff0 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x9feefe0 <col:5, col:58>
    (CallExpr 0x9feefa8 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x9feef98 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9feef38 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9e8c9d0 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9fee940 'wcspbrk')))
      (CXXConstCastExpr 0x9feef08 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9feeef8 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9feeed0 <col:47> 'wchar_t *' lvalue ParmVar 0x9feed80 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9feefd0 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9feef20 <col:54> 'const wchar_t *' lvalue ParmVar 0x9feedd0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9fef240 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x9fef230 <col:5, col:56>
    (CallExpr 0x9fef1f8 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x9fef1e8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fef1c8 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9e8c380 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9fee9b0 'wcsrchr')))
      (CXXConstCastExpr 0x9fef198 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9fef188 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fef160 <col:47> 'wchar_t *' lvalue ParmVar 0x9fef020 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9fef220 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9fef1b0 <col:53> 'wchar_t' lvalue ParmVar 0x9fef060 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9fef4a0 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x9fef490 <col:5, col:57>
    (CallExpr 0x9fef458 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x9fef448 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fef428 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9e8cb40 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9feea20 'wcsstr')))
      (CXXConstCastExpr 0x9fef3f8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9fef3e8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fef3c0 <col:46> 'wchar_t *' lvalue ParmVar 0x9fef270 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9fef480 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fef410 <col:53> 'const wchar_t *' lvalue ParmVar 0x9fef2c0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x9fef7d0 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x9fef7c0 <col:5, col:61>
    (CallExpr 0x9fef778 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x9fef768 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fef708 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8d3b0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9feea90 'wmemchr')))
      (CXXConstCastExpr 0x9fef6c0 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9fef6b0 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fef688 <col:47> 'wchar_t *' lvalue ParmVar 0x9fef4d0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9fef7a0 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9fef6d8 <col:53> 'wchar_t' lvalue ParmVar 0x9fef510 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x9fef7b0 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fef6f0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x9fef550 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x9ff1ab8 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x9ff1b50 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x9ff1b60 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x9ff1230 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x9ff1c00 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x9ff1c88 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x9ff1c78 <col:36, col:43>
    (MemberExpr 0x9ff1c54 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x9ff10e0
      (CXXThisExpr 0x9ff1c28 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x9ff1d00 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x9ff1ce8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x9ff1cb0 <col:9> '_StateT' lvalue ->_M_state 0x9ff1120
      (CXXThisExpr 0x9ff1ca0 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ff1cd0 <col:20> '_StateT' lvalue ParmVar 0x9ff1420 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x9ff1d58 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x9ff1d48 <col:9, col:16>
    (MemberExpr 0x9ff1d28 <col:16> 'const _StateT' lvalue ->_M_state 0x9ff1120
      (CXXThisExpr 0x9ff1d18 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x9ff1e10 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x9ff1db8 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9ff1d80 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9ff10e0
      (CXXThisExpr 0x9ff1d70 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ff1da0 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9ff15b0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ff1e00 <line:158:2, col:10>
    (UnaryOperator 0x9ff1de8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ff1dd8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x9ff1ec8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x9ff1e70 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9ff1e38 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9ff10e0
      (CXXThisExpr 0x9ff1e28 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ff1e58 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9ff16e0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ff1eb8 <line:169:2, col:10>
    (UnaryOperator 0x9ff1ea0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ff1e90 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x9ff1ff8 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x9ff1f70 <line:181:2, col:19>
    0x9ff1ef0 "fpos<_StateT> __pos =
      (ParenListExpr 0x9ff1f50 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9ff1f38 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ff1f28 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9ff1fb0 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ff1f80 <col:2> 'fpos<_StateT>' lvalue Var 0x9ff1ef0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9ff1f98 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9ff17b0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ff1fe8 <line:183:2, col:9>
    (DeclRefExpr 0x9ff1fd0 <col:9> 'fpos<_StateT>' lvalue Var 0x9ff1ef0 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x9ff2128 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x9ff20a0 <line:195:2, col:19>
    0x9ff2020 "fpos<_StateT> __pos =
      (ParenListExpr 0x9ff2080 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9ff2068 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ff2058 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9ff20e0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ff20b0 <col:2> 'fpos<_StateT>' lvalue Var 0x9ff2020 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9ff20c8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9ff18c0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ff2118 <line:197:2, col:9>
    (DeclRefExpr 0x9ff2100 <col:9> 'fpos<_StateT>' lvalue Var 0x9ff2020 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x9ff2238 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x9ff2228 <col:9, col:33>
    (CXXOperatorCallExpr 0x9ff2200 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff21c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (MemberExpr 0x9ff2158 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x9ff10e0
        (CXXThisExpr 0x9ff2148 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x9ff2190 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9ff2178 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x9ff19b0 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9ff2668 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x9ff2658 <col:7, col:49>
    (BinaryOperator 0x9ff2640 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x9ff25e0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9ff25c8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9ff2390 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9ff2620 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9ff2608 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9ff2490 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9ff2a58 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x9ff2a48 <col:7, col:49>
    (BinaryOperator 0x9ff2a30 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x9ff29d0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9ff29b8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9ff27a0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9ff2a10 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9ff29f8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9ff28a0 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ff8ce8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x9ff8cd0 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x9ff8ca0 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x9ff6eb0 '__c1' 'char_type &')
    (DeclRefExpr 0x9ff8cb8 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ff6f20 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ff8da0 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x9ff8d90 <col:9, col:24>
    (CXXOperatorCallExpr 0x9ff8d68 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff8d30 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb6da0 0x9fb73b0)
      (DeclRefExpr 0x9ff8cfc <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ff7040 '__c1' 'const char_type &')
      (DeclRefExpr 0x9ff8d14 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x9ff7090 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ff8e58 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x9ff8e48 <col:9, col:23>
    (CXXOperatorCallExpr 0x9ff8e20 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff8de8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb85e0 0x9fb8bc0)
      (DeclRefExpr 0x9ff8db4 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ff71b0 '__c1' 'const char_type &')
      (DeclRefExpr 0x9ff8dcc <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x9ff7200 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ff8eb8 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x9ff8ea8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ff8e90 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x9ff8e6c <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ff7e10 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ff8f18 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x9ff8f08 <col:9, col:41>
    (CXXStaticCastExpr 0x9ff8ef0 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x9ff8ecc <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x9ff7f30 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ff8fd0 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x9ff8fc0 <col:9, col:24>
    (CXXOperatorCallExpr 0x9ff8f98 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff8f60 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb6da0 0x9fb73b0)
      (DeclRefExpr 0x9ff8f2c <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ff8050 '__c1' 'const int_type &')
      (DeclRefExpr 0x9ff8f44 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ff80a0 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x9ff9048 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x9ff9038 <col:9, col:56>
    (CXXStaticCastExpr 0x9ff9020 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x9ff9000 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ff8fe8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ff91a8 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x9ff9198 <col:9, col:72>
    (ConditionalOperator 0x9ff9178 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x9ff90f0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x9ff90c8 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x9ff905c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9ff8140 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x9ff9074 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ff8270 '__c' 'const int_type &')
          (CallExpr 0x9ff90a8 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x9ff908c <col:34> 'int_type (void)' lvalue CXXMethod 0x9ff8200 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x9ff9104 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ff8270 '__c' 'const int_type &')
      (CallExpr 0x9ff9158 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x9ff911c <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x9ff7fd0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x9ff9140 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9ff98f0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x9ff98a0 <line:148:7, line:152:11>
    (DeclStmt 0x9ff95b0 <line:148:12, col:31>
      0x9ff9550 "std::size_t __i =
        (ImplicitCastExpr 0x9ff95a0 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ff9588 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9ff9610 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9ff95f0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ff95c0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9ff9550 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ff9600 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ff95d8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ff9420 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9ff9640 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9ff9628 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9ff9550 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9ff9880 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x9ff9700 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x9ff9654 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ff7260 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9ff96a0 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9ff966c <col:9> 'const char_type *' lvalue ParmVar 0x9ff9370 '__s1' 'const char_type *')
          (DeclRefExpr 0x9ff9684 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9ff9550 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x9ff96e8 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x9ff96b4 <col:20> 'const char_type *' lvalue ParmVar 0x9ff93c0 '__s2' 'const char_type *')
          (DeclRefExpr 0x9ff96cc <col:25> 'std::size_t':'unsigned int' lvalue Var 0x9ff9550 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x9ff9758 <line:150:4, col:12>
        (UnaryOperator 0x9ff9740 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x9ff9728 <col:12> 'int' 1)))
      (IfStmt 0x9ff9860 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x9ff9810 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x9ff9768 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ff7260 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x9ff97b0 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9ff9780 <col:14> 'const char_type *' lvalue ParmVar 0x9ff93c0 '__s2' 'const char_type *')
            (DeclRefExpr 0x9ff9798 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x9ff9550 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x9ff97f8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9ff97c4 <col:25> 'const char_type *' lvalue ParmVar 0x9ff9370 '__s1' 'const char_type *')
            (DeclRefExpr 0x9ff97dc <col:30> 'std::size_t':'unsigned int' lvalue Var 0x9ff9550 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x9ff9850 <line:152:4, col:11>
          (IntegerLiteral 0x9ff9838 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x9ff98e0 <line:153:7, col:14>
    (IntegerLiteral 0x9ff98c8 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x9ff9db0 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x9ff9c60 <line:161:7, col:26>
    0x9ff9c00 "std::size_t __i =
      (ImplicitCastExpr 0x9ff9c50 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ff9c38 <col:25> 'int' 0))")
  (WhileStmt 0x9ff9d60 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x9ff9d18 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x9ff9cf0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x9ff9c70 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ff7130 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9ff9cb8 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9ff9c88 <col:18> 'const char_type *' lvalue ParmVar 0x9ff9ae0 '__p' 'const char_type *')
          (DeclRefExpr 0x9ff9ca0 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x9ff9c00 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x9ff9cd8 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x9ff9d48 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9ff9d2c <col:11> 'std::size_t':'unsigned int' lvalue Var 0x9ff9c00 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x9ff9da0 <line:164:7, col:14>
    (ImplicitCastExpr 0x9ff9d90 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9ff9d74 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9ff9c00 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x9ffa648 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x9ffa5f8 <line:172:7, line:174:24>
    (DeclStmt 0x9ffa3f0 <line:172:12, col:31>
      0x9ffa390 "std::size_t __i =
        (ImplicitCastExpr 0x9ffa3e0 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ffa3c8 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9ffa450 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9ffa430 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ffa400 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9ffa390 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ffa440 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ffa418 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ffa0e0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9ffa480 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9ffa468 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9ffa390 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9ffa5d8 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x9ffa510 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x9ffa494 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ff7130 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9ffa4e0 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x9ffa4ac <col:16> 'const char_type *' lvalue ParmVar 0x9ffa080 '__s' 'const char_type *')
          (DeclRefExpr 0x9ffa4c4 <col:20> 'std::size_t':'unsigned int' lvalue Var 0x9ffa390 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x9ffa4f4 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x9ffa130 '__a' 'const char_type &'))
      (ReturnStmt 0x9ffa5c8 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x9ffa5a0 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9ffa568 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbd9f0)
          (DeclRefExpr 0x9ffa534 <col:18> 'const char_type *' lvalue ParmVar 0x9ffa080 '__s' 'const char_type *')
          (DeclRefExpr 0x9ffa54c <col:24> 'std::size_t':'unsigned int' lvalue Var 0x9ffa390 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x9ffa638 <line:175:7, col:14>
    (IntegerLiteral 0x9ffa620 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9ffba10 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x9ffba00 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x9ffb9e8 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x9ffb990 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x9ffb8e8 <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x9ffb900 <col:53> 'char_type *' lvalue ParmVar 0x9ffa8e0 '__s1' 'char_type *')
        (DeclRefExpr 0x9ffb918 <col:59> 'const char_type *' lvalue ParmVar 0x9ffa930 '__s2' 'const char_type *')
        (BinaryOperator 0x9ffb978 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x9ffb968 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ffb930 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ffa990 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9ffb950 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9ffc0f8 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x9ffc0a8 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x9ffbfb0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0)
    (DeclRefExpr 0x9ffbfe4 <col:17> 'const char_type *' lvalue ParmVar 0x9ffbd00 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x9ffc068 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9ffc030 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbd9f0)
      (DeclRefExpr 0x9ffbffc <col:23> 'const char_type *' lvalue ParmVar 0x9ffbd00 '__s2' 'const char_type *')
      (DeclRefExpr 0x9ffc014 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ffbd60 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x9ffc08c <col:35> 'char_type *' lvalue ParmVar 0x9ffbcb0 '__s1' 'char_type *'))
  (ReturnStmt 0x9ffc0e8 <line:194:7, col:14>
    (DeclRefExpr 0x9ffc0d0 <col:14> 'char_type *' lvalue ParmVar 0x9ffbcb0 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x9ffc750 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x9ffc700 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9ffc680 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd87a0)
    (DeclRefExpr 0x9ffc6b4 <col:19> 'char_type *' lvalue ParmVar 0x9ffc390 '__s' 'char_type *')
    (DeclRefExpr 0x9ffc6cc <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ffc3f0 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x9ffc6e4 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x9ffc430 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x9ffc740 <line:204:7, col:14>
    (DeclRefExpr 0x9ffc728 <col:14> 'char_type *' lvalue ParmVar 0x9ffc390 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003798 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa003780 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa003740 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0004e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa003770 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa003758 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003828 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa003818 <col:9, col:24>
    (BinaryOperator 0xa003800 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0037e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000690 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0037f0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037c4 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0006e0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0038b8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0038a8 <col:9, col:23>
    (BinaryOperator 0xa003890 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa003870 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa00383c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002700 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa003880 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003854 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002750 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003a20 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa003a10 <col:9, col:39>
    (CallExpr 0xa0039b8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0039a8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa00394c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d560 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee630 'wmemcmp')))
      (ImplicitCastExpr 0xa0039e0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003904 <col:24> 'const char_type *' lvalue ParmVar 0xa002850 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0039f0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa00391c <col:30> 'const char_type *' lvalue ParmVar 0xa0028a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003a00 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003934 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0028e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa003b28 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa003b18 <col:9, col:26>
    (CallExpr 0xa003ae8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa003ad8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003a84 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9e8cea0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9fee080 'wcslen')))
      (ImplicitCastExpr 0xa003b08 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003a6c <col:23> 'const char_type *' lvalue ParmVar 0xa0029f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa003c68 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa003c58 <col:9, col:37>
    (ImplicitCastExpr 0xa003c48 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa003bf0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa003be0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa003bc0 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8d3b0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9feea90 'wmemchr')))
        (ImplicitCastExpr 0xa003c18 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa003b78 <col:24> 'const char_type *' lvalue ParmVar 0xa002af0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa003c28 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa003b90 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002b80 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa003c38 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa003ba8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa002b30 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003dd0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa003dc0 <col:9, col:40>
    (CallExpr 0xa003d68 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa003d58 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003cfc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d8f0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee710 'wmemmove')))
      (ImplicitCastExpr 0xa003d90 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003cb4 <col:25> 'char_type *' lvalue ParmVar 0xa002ce0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003da0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003ccc <col:31> 'const char_type *' lvalue ParmVar 0xa002d30 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003db0 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003ce4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa002d70 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003f10 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa003f00 <col:9, col:39>
    (CallExpr 0xa003ea8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa003e98 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003e64 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9e8d710 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9fee6a0 'wmemcpy')))
      (ImplicitCastExpr 0xa003ed0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e1c <col:24> 'char_type *' lvalue ParmVar 0xa002e80 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003ee0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e34 <col:30> 'const char_type *' lvalue ParmVar 0xa002ed0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003ef0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003e4c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa002f10 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa004070 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa004060 <col:9, col:37>
    (CallExpr 0xa004008 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa003ff8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003fa4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8dab0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9fee780 'wmemset')))
      (ImplicitCastExpr 0xa004030 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003f5c <col:24> 'char_type *' lvalue ParmVar 0xa002ff0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa004040 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003f74 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa003070 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa004050 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003f8c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa003030 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0040f0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0040e0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0040c8 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0040b8 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0040a8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa004090 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0031e0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa004170 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa004160 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa004148 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa004138 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa004128 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa004110 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa003300 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa004200 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0041f0 <col:9, col:24>
    (BinaryOperator 0xa0041d8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0041b8 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa004184 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003420 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0041c8 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa00419c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003470 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa004278 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa004268 <col:9, col:42>
    (CXXStaticCastExpr 0xa004250 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa004230 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa004218 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa004450 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa004440 <col:9, col:46>
    (ConditionalOperator 0xa004420 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa004398 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa004388 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa00428c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa003510 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0042a4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0043c0 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa004328 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa004318 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0042bc <col:33> 'int_type (void)' lvalue CXXMethod 0xa0035b0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa004410 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0043d0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa004400 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0043e8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')))))


    }
template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff168 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9fff150 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9fff110 <col:9> 'char_type':'char' lvalue ParmVar 0x9ffce40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9fff140 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9fff128 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffced0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff218 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9fff208 <col:9, col:24>
    (BinaryOperator 0x9fff1f0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9fff1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffcff0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff1e0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1d0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff194 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ffd040 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff2c8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9fff2b8 <col:9, col:23>
    (BinaryOperator 0x9fff2a0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9fff270 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff260 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff22c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffd160 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff290 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff280 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff244 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ffd1b0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff3f0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9fff3e0 <col:9, col:48>
    (CallExpr 0x9fff368 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9fff358 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff2dc <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9fff3a0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff390 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff2f4 <col:33> 'const char_type *' lvalue ParmVar 0x9ffd2b0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3c0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff3b0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff30c <col:39> 'const char_type *' lvalue ParmVar 0x9ffd300 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3d0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fff324 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd340 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9fff588 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9fff578 <col:9, col:36>
    (CallExpr 0x9fff548 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9fff538 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff4e4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9fff410 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9fff568 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9fff4fc <col:33> 'const char_type *' lvalue ParmVar 0x9ffd450 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9fff848 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9fff838 <col:9, col:77>
    (CXXStaticCastExpr 0x9fff820 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9fff798 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9fff788 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff704 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9fff5a0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fff7d0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff7c0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff71c <col:63> 'const char_type *' lvalue ParmVar 0x9ffd550 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9fff7f0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fff7e0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fff734 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ffd5e0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9fff800 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff74c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd590 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff998 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9fff988 <col:9, col:74>
    (CXXStaticCastExpr 0x9fff970 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fff8e8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9fff8d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff85c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fff920 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fff910 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff874 <col:58> 'char_type *' lvalue ParmVar 0x9ffd740 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fff940 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff930 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff88c <col:64> 'const char_type *' lvalue ParmVar 0x9ffd790 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fff950 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff8a4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd7d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fffc38 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9fffc28 <col:9, col:73>
    (CXXStaticCastExpr 0x9fffc10 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffb88 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9fffb78 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffb14 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fffbc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffbb0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb2c <col:57> 'char_type *' lvalue ParmVar 0x9ffe830 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fffbe0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fffbd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb44 <col:63> 'const char_type *' lvalue ParmVar 0x9ffe880 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fffbf0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffb5c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe8c0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9fffd88 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9fffd78 <col:9, col:71>
    (CXXStaticCastExpr 0x9fffd60 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffcd8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9fffcc8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffc4c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9fd5760 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fffd10 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffd00 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffc64 <col:57> 'char_type *' lvalue ParmVar 0x9ffe9a0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9fffd30 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fffd20 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fffc7c <col:62> 'char_type':'char' lvalue ParmVar 0x9ffea20 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9fffd40 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffc94 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe9e0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9fffe08 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9fffdf8 <col:9, col:42>
    (CXXStaticCastExpr 0x9fffde0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9fffdd0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9fffdc0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9fffd9c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ffebb0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9fffec0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9fffeb0 <col:9, col:69>
    (CXXStaticCastExpr 0x9fffe98 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9fffe88 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9fffe68 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9fffe58 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9fffe48 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9fffe1c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ffecd0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ffff50 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ffff40 <col:9, col:24>
    (BinaryOperator 0x9ffff28 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ffff08 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffed4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ffedf0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ffff18 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffeec <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ffee40 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ffffc8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ffffb8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ffffa0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ffff80 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ffff68 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa000128 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa000118 <col:9, col:37>
    (ConditionalOperator 0xa0000f8 <col:16, col:37> 'int'
      (ParenExpr 0xa0000a0 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa000088 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa000078 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ffffdc <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &'))
          (CallExpr 0xa000058 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa000048 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fffff4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ffef80 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0000b8 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0000e8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0000d0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff168 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9fff150 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9fff110 <col:9> 'char_type':'char' lvalue ParmVar 0x9ffce40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9fff140 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9fff128 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffced0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff218 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9fff208 <col:9, col:24>
    (BinaryOperator 0x9fff1f0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9fff1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffcff0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff1e0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff1d0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff194 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ffd040 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9fff2c8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9fff2b8 <col:9, col:23>
    (BinaryOperator 0x9fff2a0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9fff270 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff260 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff22c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ffd160 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9fff290 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9fff280 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9fff244 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ffd1b0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff3f0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9fff3e0 <col:9, col:48>
    (CallExpr 0x9fff368 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9fff358 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff2dc <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9fd95d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9fff3a0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff390 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff2f4 <col:33> 'const char_type *' lvalue ParmVar 0x9ffd2b0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3c0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9fff3b0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9fff30c <col:39> 'const char_type *' lvalue ParmVar 0x9ffd300 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9fff3d0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fff324 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd340 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9fff588 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9fff578 <col:9, col:36>
    (CallExpr 0x9fff548 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9fff538 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fff4e4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9fff410 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9fff568 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9fff4fc <col:33> 'const char_type *' lvalue ParmVar 0x9ffd450 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9fff848 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9fff838 <col:9, col:77>
    (CXXStaticCastExpr 0x9fff820 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9fff798 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9fff788 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff704 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9fff5a0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fff7d0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff7c0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff71c <col:63> 'const char_type *' lvalue ParmVar 0x9ffd550 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9fff7f0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fff7e0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fff734 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ffd5e0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9fff800 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff74c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd590 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fff998 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9fff988 <col:9, col:74>
    (CXXStaticCastExpr 0x9fff970 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fff8e8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9fff8d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fff85c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fc97e0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fff920 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fff910 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff874 <col:58> 'char_type *' lvalue ParmVar 0x9ffd740 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fff940 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fff930 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fff88c <col:64> 'const char_type *' lvalue ParmVar 0x9ffd790 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fff950 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fff8a4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ffd7d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9fffc38 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9fffc28 <col:9, col:73>
    (CXXStaticCastExpr 0x9fffc10 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffb88 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9fffb78 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffb14 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9fffbc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffbb0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb2c <col:57> 'char_type *' lvalue ParmVar 0x9ffe830 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9fffbe0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9fffbd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffb44 <col:63> 'const char_type *' lvalue ParmVar 0x9ffe880 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9fffbf0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffb5c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe8c0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9fffd88 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9fffd78 <col:9, col:71>
    (CXXStaticCastExpr 0x9fffd60 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9fffcd8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9fffcc8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fffc4c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9fd5760 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9fffd10 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9fffd00 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9fffc64 <col:57> 'char_type *' lvalue ParmVar 0x9ffe9a0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9fffd30 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fffd20 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9fffc7c <col:62> 'char_type':'char' lvalue ParmVar 0x9ffea20 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9fffd40 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fffc94 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ffe9e0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9fffe08 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9fffdf8 <col:9, col:42>
    (CXXStaticCastExpr 0x9fffde0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9fffdd0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9fffdc0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9fffd9c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ffebb0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9fffec0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9fffeb0 <col:9, col:69>
    (CXXStaticCastExpr 0x9fffe98 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9fffe88 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9fffe68 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9fffe58 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9fffe48 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9fffe1c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ffecd0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ffff50 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ffff40 <col:9, col:24>
    (BinaryOperator 0x9ffff28 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ffff08 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffed4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ffedf0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ffff18 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fffeec <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ffee40 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ffffc8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ffffb8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ffffa0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ffff80 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ffff68 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa000128 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa000118 <col:9, col:37>
    (ConditionalOperator 0xa0000f8 <col:16, col:37> 'int'
      (ParenExpr 0xa0000a0 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa000088 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa000078 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ffffdc <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &'))
          (CallExpr 0xa000058 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa000048 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fffff4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ffef80 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0000b8 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0000e8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0000d0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ffeff0 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003798 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa003780 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa003740 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0004e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa003770 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa003758 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa003828 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa003818 <col:9, col:24>
    (BinaryOperator 0xa003800 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0037e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa000690 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0037f0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0037c4 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0006e0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0038b8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0038a8 <col:9, col:23>
    (BinaryOperator 0xa003890 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa003870 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa00383c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002700 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa003880 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003854 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002750 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003a20 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa003a10 <col:9, col:39>
    (CallExpr 0xa0039b8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0039a8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa00394c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d560 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee630 'wmemcmp')))
      (ImplicitCastExpr 0xa0039e0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003904 <col:24> 'const char_type *' lvalue ParmVar 0xa002850 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0039f0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa00391c <col:30> 'const char_type *' lvalue ParmVar 0xa0028a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003a00 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003934 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0028e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa003b28 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa003b18 <col:9, col:26>
    (CallExpr 0xa003ae8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa003ad8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003a84 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9e8cea0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9fee080 'wcslen')))
      (ImplicitCastExpr 0xa003b08 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003a6c <col:23> 'const char_type *' lvalue ParmVar 0xa0029f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa003c68 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa003c58 <col:9, col:37>
    (ImplicitCastExpr 0xa003c48 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa003bf0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa003be0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa003bc0 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8d3b0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9feea90 'wmemchr')))
        (ImplicitCastExpr 0xa003c18 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa003b78 <col:24> 'const char_type *' lvalue ParmVar 0xa002af0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa003c28 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa003b90 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa002b80 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa003c38 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa003ba8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa002b30 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003dd0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa003dc0 <col:9, col:40>
    (CallExpr 0xa003d68 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa003d58 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003cfc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9e8d8f0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9fee710 'wmemmove')))
      (ImplicitCastExpr 0xa003d90 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003cb4 <col:25> 'char_type *' lvalue ParmVar 0xa002ce0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003da0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003ccc <col:31> 'const char_type *' lvalue ParmVar 0xa002d30 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003db0 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003ce4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa002d70 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa003f10 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa003f00 <col:9, col:39>
    (CallExpr 0xa003ea8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa003e98 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003e64 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9e8d710 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9fee6a0 'wmemcpy')))
      (ImplicitCastExpr 0xa003ed0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e1c <col:24> 'char_type *' lvalue ParmVar 0xa002e80 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa003ee0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003e34 <col:30> 'const char_type *' lvalue ParmVar 0xa002ed0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa003ef0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003e4c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa002f10 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa004070 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa004060 <col:9, col:37>
    (CallExpr 0xa004008 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa003ff8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa003fa4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9e8dab0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9fee780 'wmemset')))
      (ImplicitCastExpr 0xa004030 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa003f5c <col:24> 'char_type *' lvalue ParmVar 0xa002ff0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa004040 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa003f74 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa003070 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa004050 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa003f8c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa003030 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0040f0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0040e0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0040c8 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0040b8 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0040a8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa004090 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0031e0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa004170 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa004160 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa004148 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa004138 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa004128 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa004110 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa003300 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa004200 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0041f0 <col:9, col:24>
    (BinaryOperator 0xa0041d8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0041b8 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa004184 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003420 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0041c8 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa00419c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003470 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa004278 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa004268 <col:9, col:42>
    (CXXStaticCastExpr 0xa004250 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa004230 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa004218 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa004450 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa004440 <col:9, col:46>
    (ConditionalOperator 0xa004420 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa004398 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa004388 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa00428c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa003510 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0042a4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0043c0 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa004328 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa004318 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0042bc <col:33> 'int_type (void)' lvalue CXXMethod 0xa0035b0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa004410 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0043d0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa004400 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0043e8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa003620 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0xa00adc0 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0xa00b3a0 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0xa00beb0 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0xa00db48 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0xa00db38 <col:61, col:68>
    (ImplicitCastExpr 0xa00db28 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0xa00db0c <col:68> 'void *' lvalue ParmVar 0xa00d9c0 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0xa00dd28 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0xa00dd18 <col:63, col:70>
    (ImplicitCastExpr 0xa00dd08 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0xa00dcec <col:70> 'void *' lvalue ParmVar 0xa00dbe0 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0xa00def0 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0xa00e070 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0xa010a60 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0xa010a70 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0xa010a90 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0xa010a60 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0xa010a70 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0xa010a80 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0xa010a90 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0xa010b38 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0xa010b28 <col:38, col:65>
    (CallExpr 0xa010b08 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0xa010ab8 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
      (DeclRefExpr 0xa010aec <col:62> '_Tp' lvalue ParmVar 0xa00ef90 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0xa010be8 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0xa010bd8 <col:44, col:71>
    (CallExpr 0xa010bb8 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0xa010b68 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
      (DeclRefExpr 0xa010b9c <col:68> 'const _Tp' lvalue ParmVar 0xa00f0d0 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0xa010a50 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0xa010a38 <col:45> 'int' 0))
) (CompoundStmt 0xa010f40 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0xa010d88 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa010cd8 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa010ca0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb91e0 0x9fb97b0)
      (DeclRefExpr 0xa010bfc <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa00f200 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa010c80 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa010c48 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa010c38 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0xa010d68 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0xa010d58 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa010d20 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9f593f0 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa010f30 <line:92:2, col:60>
    (CXXStaticCastExpr 0xa010f18 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0xa010ee8 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0xa010ed8 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa010e80 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0xa00c370 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0xa010e68 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0xa010e58 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa010e1c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa00f200 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0xa010e40 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0xa010fe8 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0xa010fc8 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa010f70 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0xa00c5e0 0xa00d700 0xa00de40)
    (DeclRefExpr 0xa010fac <col:27> 'pointer':'_Tp *' lvalue ParmVar 0xa00f360 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0xa0110a8 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0xa011098 <col:9, col:39>
    (BinaryOperator 0xa011080 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0xa011048 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0xa011038 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0xa011020 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0xa011008 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0xa011068 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0xa011160 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0xa011120 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0xa0110e8 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0xa0110bc <col:23> 'pointer':'_Tp *' lvalue ParmVar 0xa0107d0 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0xa011100 <col:32> 'const _Tp' lvalue ParmVar 0xa010820 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0xa0111e8 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0xa0111c8 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0xa011198 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0xa011174 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0xa010930 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0xa011590 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0xa011580 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa011570 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0xa011900 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0xa0118f0 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0118e0 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa013af8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa437860 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4375b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa01ae10 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa013c10 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa013c30 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa013af8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa437860 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4375b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa01ae10 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa013c10 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa013c30 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0xa013af8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0xa013bb8 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0xa0136d0 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0xa013c10 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0xa013c20 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0xa013c30 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0xa014080 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0xa014070 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa014060 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0xa014410 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0xa014400 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0143f0 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0xa0147e0 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0xa0147d0 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0147c0 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0xa014b50 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0xa014b40 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa014b30 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa013af8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa437860 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4375b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa01ae10 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa013c10 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa013c30 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0xa01b430 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0xa01b880 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0xa01bef0 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0xa01bed0 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa01be18 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa01bdd0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa014b00 0xa014790 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980)
      (DeclRefExpr 0xa01bda0 <col:6> '_Alloc' lvalue ParmVar 0xa01bc50 '__one' '_Alloc &')
      (DeclRefExpr 0xa01bdb8 <col:15> '_Alloc' lvalue ParmVar 0xa01bca0 '__two' '_Alloc &'))
    (CallExpr 0xa01bea8 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa01be40 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9f86710 0x9f8c260)
      (DeclRefExpr 0xa01be78 <col:9> '_Alloc' lvalue ParmVar 0xa01bc50 '__one' '_Alloc &')
      (DeclRefExpr 0xa01be90 <col:16> '_Alloc' lvalue ParmVar 0xa01bca0 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0xa01bf60 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0xa01c3d0 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0xa01c3c0 <col:9, col:16>
    (CXXBoolLiteralExpr 0xa01c3b0 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0xa01c9b0 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0xa01c9a0 <col:9, col:25>
    (CXXOperatorCallExpr 0xa01c978 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa01c930 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa014b00 0xa014790 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980)
      (DeclRefExpr 0xa01c900 <col:16> 'const _Alloc' lvalue ParmVar 0xa01c7b0 '__one' 'const _Alloc &')
      (DeclRefExpr 0xa01c918 <col:25> 'const _Alloc' lvalue ParmVar 0xa01c800 '__two' 'const _Alloc &'))))


    };
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0xa023858 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01ca30 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0xa023868 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01ca88 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0xa023878 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01cad8 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0xa023888 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01cb28 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0xa023898 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01cb78 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0xa0238a8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01cbc8 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0xa0238b8 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01cc18 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0xa0238c8 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01cc68 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0xa0238d8 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa01ccb8 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0xa0238e8 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023718 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0xa0238f8 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023768 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0xa023908 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0237b8 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0xa023918 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023808 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0xa029de0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0xa0250c8 <line:75:5, col:54>
    0xa024fc0 "__c_locale __old =
      (CallExpr 0xa025098 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0xa025088 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa025018 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0xa024b10 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0xa0250b8 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0xa025038 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0xa024d10 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0xa025118 <line:88:5, col:29>
    0xa0250e0 "__builtin_va_list __args")
  (CallExpr 0xa025318 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0xa025308 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa025284 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0xa0251b0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0xa02529c <col:24> '__builtin_va_list':'char *' lvalue Var 0xa0250e0 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0xa0252b4 <col:32> 'const char *' lvalue ParmVar 0xa024e80 '__fmt' 'const char *'))
  (DeclStmt 0xa0256a8 <line:92:5, col:72>
    0xa025350 "const int __ret =
      (CallExpr 0xa025628 <col:23, col:71> 'int'
        (ImplicitCastExpr 0xa025618 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa025560 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0xa025390 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0xa025658 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0xa025578 <col:43> 'char *' lvalue ParmVar 0xa024da0 '__out' 'char *'))
        (ImplicitCastExpr 0xa025678 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa025668 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa025590 <col:50> 'const int' lvalue ParmVar 0xa024df0 '__size' 'const int')))
        (ImplicitCastExpr 0xa025688 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa0255a8 <col:58> 'const char *' lvalue ParmVar 0xa024e80 '__fmt' 'const char *'))
        (ImplicitCastExpr 0xa025698 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0xa0255c0 <col:65> '__builtin_va_list':'char *' lvalue Var 0xa0250e0 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0xa029ce8 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0xa029cd8 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa029c64 <col:5> 'void (__builtin_va_list &)' lvalue Function 0xa029b90 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0xa029c7c <col:22> '__builtin_va_list':'char *' lvalue Var 0xa0250e0 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0xa029d78 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0xa029d68 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0xa029d2c <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0xa024b10 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0xa029d98 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0xa029d4c <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0xa024fc0 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0xa029dd0 <line:108:5, col:12>
    (ImplicitCastExpr 0xa029dc0 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0xa029da4 <col:12> 'const int' lvalue Var 0xa025350 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0xa035e98 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa0344d0 <col:23, col:77> 'int'
    (ConditionalOperator 0xa0344b0 <col:24, col:76> 'int'
      (BinaryOperator 0xa034318 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa0342e8 <col:24, col:28> 'int'
          (IntegerLiteral 0xa0342d0 <line:50:22> 'int' 0))
        (IntegerLiteral 0xa034300 <line:45:32> 'int' 8))
      (ParenExpr 0xa0343d8 <col:36, col:54> 'int'
        (BinaryOperator 0xa0343c0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa034390 <col:37, col:48> 'int'
            (BinaryOperator 0xa034378 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa034330 <col:38> 'int' 1)
              (ParenExpr 0xa034360 <col:43, col:47> 'int'
                (IntegerLiteral 0xa034348 <line:50:22> 'int' 0))))
          (IntegerLiteral 0xa0343a8 <line:45:53> 'int' 8)))
      (ParenExpr 0xa034498 <col:58, col:76> 'int'
        (BinaryOperator 0xa034480 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa034450 <col:59, col:70> 'int'
            (BinaryOperator 0xa034438 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa0343f0 <col:60> 'int' 1)
              (ParenExpr 0xa034420 <col:65, col:69> 'int'
                (IntegerLiteral 0xa034408 <line:50:22> 'int' 0))))
          (IntegerLiteral 0xa034468 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0xa035ea8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa034728 <col:23, col:77> 'int'
    (ConditionalOperator 0xa034708 <col:24, col:76> 'int'
      (BinaryOperator 0xa034570 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa034540 <col:24, col:28> 'int'
          (IntegerLiteral 0xa034528 <line:51:22> 'int' 1))
        (IntegerLiteral 0xa034558 <line:45:32> 'int' 8))
      (ParenExpr 0xa034630 <col:36, col:54> 'int'
        (BinaryOperator 0xa034618 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa0345e8 <col:37, col:48> 'int'
            (BinaryOperator 0xa0345d0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa034588 <col:38> 'int' 1)
              (ParenExpr 0xa0345b8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa0345a0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0xa034600 <line:45:53> 'int' 8)))
      (ParenExpr 0xa0346f0 <col:58, col:76> 'int'
        (BinaryOperator 0xa0346d8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa0346a8 <col:59, col:70> 'int'
            (BinaryOperator 0xa034690 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa034648 <col:60> 'int' 1)
              (ParenExpr 0xa034678 <col:65, col:69> 'int'
                (IntegerLiteral 0xa034660 <line:51:22> 'int' 1))))
          (IntegerLiteral 0xa0346c0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0xa035eb8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa034978 <col:23, col:77> 'int'
    (ConditionalOperator 0xa034958 <col:24, col:76> 'int'
      (BinaryOperator 0xa0347c0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa034790 <col:24, col:28> 'int'
          (IntegerLiteral 0xa034778 <line:52:22> 'int' 2))
        (IntegerLiteral 0xa0347a8 <line:45:32> 'int' 8))
      (ParenExpr 0xa034880 <col:36, col:54> 'int'
        (BinaryOperator 0xa034868 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa034838 <col:37, col:48> 'int'
            (BinaryOperator 0xa034820 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa0347d8 <col:38> 'int' 1)
              (ParenExpr 0xa034808 <col:43, col:47> 'int'
                (IntegerLiteral 0xa0347f0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0xa034850 <line:45:53> 'int' 8)))
      (ParenExpr 0xa034940 <col:58, col:76> 'int'
        (BinaryOperator 0xa034928 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa0348f8 <col:59, col:70> 'int'
            (BinaryOperator 0xa0348e0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa034898 <col:60> 'int' 1)
              (ParenExpr 0xa0348c8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa0348b0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0xa034910 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0xa035ec8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa034bc8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa034ba8 <col:24, col:76> 'int'
      (BinaryOperator 0xa034a10 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa0349e0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa0349c8 <line:53:22> 'int' 3))
        (IntegerLiteral 0xa0349f8 <line:45:32> 'int' 8))
      (ParenExpr 0xa034ad0 <col:36, col:54> 'int'
        (BinaryOperator 0xa034ab8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa034a88 <col:37, col:48> 'int'
            (BinaryOperator 0xa034a70 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa034a28 <col:38> 'int' 1)
              (ParenExpr 0xa034a58 <col:43, col:47> 'int'
                (IntegerLiteral 0xa034a40 <line:53:22> 'int' 3))))
          (IntegerLiteral 0xa034aa0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa034b90 <col:58, col:76> 'int'
        (BinaryOperator 0xa034b78 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa034b48 <col:59, col:70> 'int'
            (BinaryOperator 0xa034b30 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa034ae8 <col:60> 'int' 1)
              (ParenExpr 0xa034b18 <col:65, col:69> 'int'
                (IntegerLiteral 0xa034b00 <line:53:22> 'int' 3))))
          (IntegerLiteral 0xa034b60 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0xa035ed8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa034e18 <col:23, col:77> 'int'
    (ConditionalOperator 0xa034df8 <col:24, col:76> 'int'
      (BinaryOperator 0xa034c60 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa034c30 <col:24, col:28> 'int'
          (IntegerLiteral 0xa034c18 <line:54:23> 'int' 4))
        (IntegerLiteral 0xa034c48 <line:45:32> 'int' 8))
      (ParenExpr 0xa034d20 <col:36, col:54> 'int'
        (BinaryOperator 0xa034d08 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa034cd8 <col:37, col:48> 'int'
            (BinaryOperator 0xa034cc0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa034c78 <col:38> 'int' 1)
              (ParenExpr 0xa034ca8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa034c90 <line:54:23> 'int' 4))))
          (IntegerLiteral 0xa034cf0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa034de0 <col:58, col:76> 'int'
        (BinaryOperator 0xa034dc8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa034d98 <col:59, col:70> 'int'
            (BinaryOperator 0xa034d80 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa034d38 <col:60> 'int' 1)
              (ParenExpr 0xa034d68 <col:65, col:69> 'int'
                (IntegerLiteral 0xa034d50 <line:54:23> 'int' 4))))
          (IntegerLiteral 0xa034db0 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0xa035ee8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa035068 <col:23, col:77> 'int'
    (ConditionalOperator 0xa035048 <col:24, col:76> 'int'
      (BinaryOperator 0xa034eb0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa034e80 <col:24, col:28> 'int'
          (IntegerLiteral 0xa034e68 <line:55:22> 'int' 5))
        (IntegerLiteral 0xa034e98 <line:45:32> 'int' 8))
      (ParenExpr 0xa034f70 <col:36, col:54> 'int'
        (BinaryOperator 0xa034f58 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa034f28 <col:37, col:48> 'int'
            (BinaryOperator 0xa034f10 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa034ec8 <col:38> 'int' 1)
              (ParenExpr 0xa034ef8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa034ee0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0xa034f40 <line:45:53> 'int' 8)))
      (ParenExpr 0xa035030 <col:58, col:76> 'int'
        (BinaryOperator 0xa035018 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa034fe8 <col:59, col:70> 'int'
            (BinaryOperator 0xa034fd0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa034f88 <col:60> 'int' 1)
              (ParenExpr 0xa034fb8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa034fa0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0xa035000 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0xa035ef8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa0352b8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa035298 <col:24, col:76> 'int'
      (BinaryOperator 0xa035100 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa0350d0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa0350b8 <line:56:22> 'int' 6))
        (IntegerLiteral 0xa0350e8 <line:45:32> 'int' 8))
      (ParenExpr 0xa0351c0 <col:36, col:54> 'int'
        (BinaryOperator 0xa0351a8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa035178 <col:37, col:48> 'int'
            (BinaryOperator 0xa035160 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa035118 <col:38> 'int' 1)
              (ParenExpr 0xa035148 <col:43, col:47> 'int'
                (IntegerLiteral 0xa035130 <line:56:22> 'int' 6))))
          (IntegerLiteral 0xa035190 <line:45:53> 'int' 8)))
      (ParenExpr 0xa035280 <col:58, col:76> 'int'
        (BinaryOperator 0xa035268 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa035238 <col:59, col:70> 'int'
            (BinaryOperator 0xa035220 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa0351d8 <col:60> 'int' 1)
              (ParenExpr 0xa035208 <col:65, col:69> 'int'
                (IntegerLiteral 0xa0351f0 <line:56:22> 'int' 6))))
          (IntegerLiteral 0xa035250 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0xa035f08 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa035508 <col:23, col:77> 'int'
    (ConditionalOperator 0xa0354e8 <col:24, col:76> 'int'
      (BinaryOperator 0xa035350 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa035320 <col:24, col:28> 'int'
          (IntegerLiteral 0xa035308 <line:57:22> 'int' 7))
        (IntegerLiteral 0xa035338 <line:45:32> 'int' 8))
      (ParenExpr 0xa035410 <col:36, col:54> 'int'
        (BinaryOperator 0xa0353f8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa0353c8 <col:37, col:48> 'int'
            (BinaryOperator 0xa0353b0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa035368 <col:38> 'int' 1)
              (ParenExpr 0xa035398 <col:43, col:47> 'int'
                (IntegerLiteral 0xa035380 <line:57:22> 'int' 7))))
          (IntegerLiteral 0xa0353e0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa0354d0 <col:58, col:76> 'int'
        (BinaryOperator 0xa0354b8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa035488 <col:59, col:70> 'int'
            (BinaryOperator 0xa035470 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa035428 <col:60> 'int' 1)
              (ParenExpr 0xa035458 <col:65, col:69> 'int'
                (IntegerLiteral 0xa035440 <line:57:22> 'int' 7))))
          (IntegerLiteral 0xa0354a0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0xa035f18 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa035758 <col:23, col:77> 'int'
    (ConditionalOperator 0xa035738 <col:24, col:76> 'int'
      (BinaryOperator 0xa0355a0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa035570 <col:24, col:28> 'int'
          (IntegerLiteral 0xa035558 <line:58:22> 'int' 8))
        (IntegerLiteral 0xa035588 <line:45:32> 'int' 8))
      (ParenExpr 0xa035660 <col:36, col:54> 'int'
        (BinaryOperator 0xa035648 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa035618 <col:37, col:48> 'int'
            (BinaryOperator 0xa035600 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa0355b8 <col:38> 'int' 1)
              (ParenExpr 0xa0355e8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa0355d0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0xa035630 <line:45:53> 'int' 8)))
      (ParenExpr 0xa035720 <col:58, col:76> 'int'
        (BinaryOperator 0xa035708 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa0356d8 <col:59, col:70> 'int'
            (BinaryOperator 0xa0356c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa035678 <col:60> 'int' 1)
              (ParenExpr 0xa0356a8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa035690 <line:58:22> 'int' 8))))
          (IntegerLiteral 0xa0356f0 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0xa035f28 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa0359a8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa035988 <col:24, col:76> 'int'
      (BinaryOperator 0xa0357f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa0357c0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa0357a8 <line:59:22> 'int' 9))
        (IntegerLiteral 0xa0357d8 <line:45:32> 'int' 8))
      (ParenExpr 0xa0358b0 <col:36, col:54> 'int'
        (BinaryOperator 0xa035898 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa035868 <col:37, col:48> 'int'
            (BinaryOperator 0xa035850 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa035808 <col:38> 'int' 1)
              (ParenExpr 0xa035838 <col:43, col:47> 'int'
                (IntegerLiteral 0xa035820 <line:59:22> 'int' 9))))
          (IntegerLiteral 0xa035880 <line:45:53> 'int' 8)))
      (ParenExpr 0xa035970 <col:58, col:76> 'int'
        (BinaryOperator 0xa035958 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa035928 <col:59, col:70> 'int'
            (BinaryOperator 0xa035910 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa0358c8 <col:60> 'int' 1)
              (ParenExpr 0xa0358f8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa0358e0 <line:59:22> 'int' 9))))
          (IntegerLiteral 0xa035940 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0xa035f38 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa035bf8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa035bd8 <col:24, col:76> 'int'
      (BinaryOperator 0xa035a40 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa035a10 <col:24, col:28> 'int'
          (IntegerLiteral 0xa0359f8 <line:60:22> 'int' 10))
        (IntegerLiteral 0xa035a28 <line:45:32> 'int' 8))
      (ParenExpr 0xa035b00 <col:36, col:54> 'int'
        (BinaryOperator 0xa035ae8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa035ab8 <col:37, col:48> 'int'
            (BinaryOperator 0xa035aa0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa035a58 <col:38> 'int' 1)
              (ParenExpr 0xa035a88 <col:43, col:47> 'int'
                (IntegerLiteral 0xa035a70 <line:60:22> 'int' 10))))
          (IntegerLiteral 0xa035ad0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa035bc0 <col:58, col:76> 'int'
        (BinaryOperator 0xa035ba8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa035b78 <col:59, col:70> 'int'
            (BinaryOperator 0xa035b60 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa035b18 <col:60> 'int' 1)
              (ParenExpr 0xa035b48 <col:65, col:69> 'int'
                (IntegerLiteral 0xa035b30 <line:60:22> 'int' 10))))
          (IntegerLiteral 0xa035b90 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0xa035f48 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa035e48 <col:23, col:77> 'int'
    (ConditionalOperator 0xa035e28 <col:24, col:76> 'int'
      (BinaryOperator 0xa035c90 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa035c60 <col:24, col:28> 'int'
          (IntegerLiteral 0xa035c48 <line:61:22> 'int' 11))
        (IntegerLiteral 0xa035c78 <line:45:32> 'int' 8))
      (ParenExpr 0xa035d50 <col:36, col:54> 'int'
        (BinaryOperator 0xa035d38 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa035d08 <col:37, col:48> 'int'
            (BinaryOperator 0xa035cf0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa035ca8 <col:38> 'int' 1)
              (ParenExpr 0xa035cd8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa035cc0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0xa035d20 <line:45:53> 'int' 8)))
      (ParenExpr 0xa035e10 <col:58, col:76> 'int'
        (BinaryOperator 0xa035df8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa035dc8 <col:59, col:70> 'int'
            (BinaryOperator 0xa035db0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa035d68 <col:60> 'int' 1)
              (ParenExpr 0xa035d98 <col:65, col:69> 'int'
                (IntegerLiteral 0xa035d80 <line:61:22> 'int' 11))))
          (IntegerLiteral 0xa035de0 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa254a68 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa254a50 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa254a90 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa254a78 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa248b70 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa248b58 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa248ac8 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa248b48 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa248b30 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa248b20 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa248af8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa248ae0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa24b0a8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa24b090 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa24b0b8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa24b0e0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa24b0c8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa24b108 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa24b0f0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa24b118 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa24b140 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa24b128 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa24b230 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa24b220 <col:9, col:36>
    (CXXMemberCallExpr 0xa24b1f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa24b1d0 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa24a460
        (CXXThisExpr 0xa24b168 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b210 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa24b1b8 <col:33> 'char_type':'char' lvalue ParmVar 0xa249620 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa24b340 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa24b330 <col:9, col:43>
    (CXXMemberCallExpr 0xa24b2e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa24b2c8 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa24a590
        (CXXThisExpr 0xa24b248 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b310 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b298 <col:33> 'char_type *' lvalue ParmVar 0xa249760 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa24b320 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b2b0 <col:39> 'const char_type *' lvalue ParmVar 0xa2497d0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa24b420 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa24b410 <col:9, col:36>
    (CXXMemberCallExpr 0xa24b3e0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa24b3c0 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa24a650
        (CXXThisExpr 0xa24b358 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b400 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa24b3a8 <col:33> 'char_type':'char' lvalue ParmVar 0xa2498e0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa24b530 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa24b520 <col:9, col:43>
    (CXXMemberCallExpr 0xa24b4d8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa24b4b8 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa24a780
        (CXXThisExpr 0xa24b438 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b500 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b488 <col:33> 'char_type *' lvalue ParmVar 0xa2499b0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa24b510 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b4a0 <col:39> 'const char_type *' lvalue ParmVar 0xa249a00 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa24b7c8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa24b690 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24b5a8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa24b598 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa24b574 <col:6> 'char' lvalue ->_M_widen_ok 0xa248790
          (CXXThisExpr 0xa24b548 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa24b680 <line:868:4, col:51>
      (ImplicitCastExpr 0xa24b670 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24b658 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa24b648 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24b5c8 <col:11> 'char [256]' lvalue ->_M_widen 0xa248880
              (CXXThisExpr 0xa24b5b8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24b630 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24b620 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24b610 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa24b5e8 <col:47> 'char' lvalue ParmVar 0xa249ad0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa24b6e0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa24b6c0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa24adf0
      (CXXThisExpr 0xa24b6b0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa24b7b8 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa24b788 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa24b768 <col:9, col:15> '<bound member function type>' ->do_widen 0xa24a840
        (CXXThisExpr 0xa24b700 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b7a8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24b750 <col:24> 'char' lvalue ParmVar 0xa249ad0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa24bc08 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa24b9f0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa24b850 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa24b840 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24b830 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa24b7f8 <col:6> 'char' lvalue ->_M_widen_ok 0xa248790
            (CXXThisExpr 0xa24b7e8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa24b818 <col:21> 'int' 1))
    (CompoundStmt 0xa24b9d8 <line:895:4, line:898:4>
      (CallExpr 0xa24b928 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa24b918 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24b868 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa24b960 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa24b950 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa24b880 <col:23> 'char_type *' lvalue ParmVar 0xa249d20 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa24b980 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa24b970 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa24b898 <col:29> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa24b990 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa24b900 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa24b8e0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa24b8b0 <col:35> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa24b8f0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa24b8c8 <col:42> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *')))))
      (ReturnStmt 0xa24b9c8 <line:897:6, col:13>
        (ImplicitCastExpr 0xa24b9b8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24b99c <col:13> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa24bac8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa24ba60 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa24ba50 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa24ba40 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa24ba20 <col:7> 'char' lvalue ->_M_widen_ok 0xa248790
            (CXXThisExpr 0xa24ba10 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa24baa8 <line:900:4, col:18> 'void'
      (MemberExpr 0xa24ba88 <col:4> '<bound member function type>' ->_M_widen_init 0xa24adf0
        (CXXThisExpr 0xa24ba78 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa24bbf8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa24bba0 <col:9, col:40> 'const char *'
      (MemberExpr 0xa24bb80 <col:9, col:15> '<bound member function type>' ->do_widen 0xa24a9c0
        (CXXThisExpr 0xa24bae8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24bbc8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24bb38 <col:24> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa24bbd8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24bb50 <col:30> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa24bbe8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24bb68 <col:36> 'char_type *' lvalue ParmVar 0xa249d20 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa24c150 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa24bdd8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24bcf0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa24bce0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24bcc8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa24bcb8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24bc38 <col:6> 'char [256]' lvalue ->_M_narrow 0xa248970
              (CXXThisExpr 0xa24bc28 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24bca0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24bc90 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24bc80 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa24bc58 <col:43> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa24bdc8 <line:926:4, col:52>
      (ImplicitCastExpr 0xa24bdb8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24bda0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa24bd90 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24bd10 <col:11> 'char [256]' lvalue ->_M_narrow 0xa248970
              (CXXThisExpr 0xa24bd00 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24bd78 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24bd68 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24bd58 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa24bd30 <col:48> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa24bf30 <line:927:2, col:43>
    0xa24be00 "const char __t =
      (CXXMemberCallExpr 0xa24bee8 <col:19, col:42> 'char'
        (MemberExpr 0xa24bec8 <col:19> '<bound member function type>' ->do_narrow 0xa24aae0
          (CXXThisExpr 0xa24beb8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa24bf10 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa24be88 <col:29> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa24bf20 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bea0 <col:34> 'char' lvalue ParmVar 0xa249ea0 '__dfault' 'char')))")
  (IfStmt 0xa24c0f8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa24bfb0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa24bf80 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24bf70 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bf40 <col:6> 'const char' lvalue Var 0xa24be00 '__t' 'const char')))
      (ImplicitCastExpr 0xa24bfa0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24bf90 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bf58 <col:13> 'char' lvalue ParmVar 0xa249ea0 '__dfault' 'char'))))
    (BinaryOperator 0xa24c0e0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa24c0a0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa24c090 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa24c010 <col:4> 'char [256]' lvalue ->_M_narrow 0xa248970
            (CXXThisExpr 0xa24c000 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa24c078 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa24c068 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa24c058 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa24c030 <col:41> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa24c0d0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24c0b4 <col:49> 'const char' lvalue Var 0xa24be00 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa24c140 <line:930:2, col:9>
    (ImplicitCastExpr 0xa24c130 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa24c114 <col:9> 'const char' lvalue Var 0xa24be00 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa24c650 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa24c408 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24c270 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa24c228 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa24c218 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24c170 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa24c250 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa24c1f0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa24c1e0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa24c1d0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa24c198 <col:23> 'char' lvalue ->_M_narrow_ok 0xa2489b0
                  (CXXThisExpr 0xa24c188 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa24c1b8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa24c260 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa24c208 <col:42> '_Bool' true))))
    (CompoundStmt 0xa24c3f0 <line:960:4, line:963:4>
      (CallExpr 0xa24c340 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa24c330 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24c27c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa24c378 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa24c368 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa24c294 <col:23> 'char *' lvalue ParmVar 0xa24a0a0 '__to' 'char *')))
        (ImplicitCastExpr 0xa24c398 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa24c388 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa24c2ac <col:29> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa24c3a8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa24c318 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa24c2f8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa24c2c4 <col:35> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa24c308 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa24c2dc <col:42> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa24c3e0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa24c3d0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c3b4 <col:13> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa24c4e0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa24c478 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa24c468 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa24c458 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa24c438 <col:7> 'char' lvalue ->_M_narrow_ok 0xa2489b0
            (CXXThisExpr 0xa24c428 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa24c4c0 <line:965:4, col:19> 'void'
      (MemberExpr 0xa24c4a0 <col:4> '<bound member function type>' ->_M_narrow_init 0xa24ad70
        (CXXThisExpr 0xa24c490 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa24c640 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa24c5d0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa24c5b0 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa24aca0
        (CXXThisExpr 0xa24c500 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24c600 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c550 <col:25> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa24c610 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c568 <col:31> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa24c620 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24c580 <col:37> 'char' lvalue ParmVar 0xa24a050 '__dfault' 'char'))
      (ImplicitCastExpr 0xa24c630 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa24c598 <col:47> 'char *' lvalue ParmVar 0xa24a0a0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa24c6c0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa24c6b0 <col:9, col:16>
    (ImplicitCastExpr 0xa24c6a0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa24c680 <col:16> 'const mask *const' lvalue ->_M_table 0xa248750
        (CXXThisExpr 0xa24c670 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa24c710 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa24c700 <col:9, col:16>
    (ImplicitCastExpr 0xa24c6f0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa24c6d4 <col:16> 'char' lvalue ParmVar 0xa24a7f0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa24c898 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa24c7e8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa24c7d8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa24c724 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa24c820 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa24c810 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c73c <col:19> 'char_type *' lvalue ParmVar 0xa24a960 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa24c840 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa24c830 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24c754 <col:27> 'const char *' lvalue ParmVar 0xa24a8c0 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa24c850 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa24c7c0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa24c7a0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24c76c <col:33> 'const char *' lvalue ParmVar 0xa24a910 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa24c7b0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24c784 <col:40> 'const char *' lvalue ParmVar 0xa24a8c0 '__lo' 'const char *')))))
  (ReturnStmt 0xa24c888 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa24c878 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa24c85c <col:9> 'const char *' lvalue ParmVar 0xa24a910 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa24c8e8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa24c8d8 <col:9, col:16>
    (ImplicitCastExpr 0xa24c8c8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa24c8b0 <col:16> 'char_type':'char' lvalue ParmVar 0xa24aa40 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa24ca70 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa24c9c0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa24c9b0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa24c8fc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa24c9f8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa24c9e8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa24c914 <col:19> 'char *' lvalue ParmVar 0xa24ac40 '__dest' 'char *')))
    (ImplicitCastExpr 0xa24ca18 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa24ca08 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c92c <col:27> 'const char_type *' lvalue ParmVar 0xa24ab60 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa24ca28 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa24c998 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa24c978 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c944 <col:33> 'const char_type *' lvalue ParmVar 0xa24abb0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa24c988 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c95c <col:40> 'const char_type *' lvalue ParmVar 0xa24ab60 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa24ca60 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa24ca50 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa24ca34 <col:9> 'const char_type *' lvalue ParmVar 0xa24abb0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT = char> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0xa052968 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0xa052bb8 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0xa054550 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0xa0541a0 <line:46:7, col:66>
    0xa054170 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa054290 <line:47:7, col:62>
    0xa054260 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa0543e8 <line:49:7, col:62>
    0xa0542b0 "const streamsize __put =
      (CallExpr 0xa0543c0 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa054358 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0xa054338 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa054300 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa0542e4 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa053e30 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0xa05438c <col:53> 'const _CharT *' lvalue ParmVar 0xa053ea0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa0543a4 <col:58> 'streamsize':'int' lvalue ParmVar 0xa053f00 '__n' 'streamsize':'int'))")
  (IfStmt 0xa054530 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0xa054448 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0xa054428 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa0543f8 <col:11> 'const streamsize':'const int' lvalue Var 0xa0542b0 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa054438 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa054410 <col:20> 'streamsize':'int' lvalue ParmVar 0xa053f00 '__n' 'streamsize':'int')))
    (CallExpr 0xa054510 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa054478 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa054460 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa053e30 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0xa0544e8 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0xa055020 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0xa054a00 <line:58:7, col:66>
    0xa0549d0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa054ac0 <line:59:7, col:62>
    0xa054a90 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa054b88 <line:61:7, col:38>
    0xa054ae0 "const _CharT __c =
      (CallExpr 0xa054b68 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa054b30 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa054b14 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa054750 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0xa054ff8 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa054bd8 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0xa054bc8 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa054b98 <col:14> 'streamsize':'int' lvalue ParmVar 0xa054790 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa054bb0 <col:20> 'int' 0))
    (UnaryOperator 0xa054c08 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0xa054bf0 <col:25> 'streamsize':'int' lvalue ParmVar 0xa054790 '__n' 'streamsize':'int'))
    (CompoundStmt 0xa054fe0 <line:63:2, line:70:2>
      (DeclStmt 0xa054dc8 <line:64:4, col:70>
        0xa054cb0 "const typename _Traits::int_type __put =
          (CallExpr 0xa054da8 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa054d58 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0xa054d38 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa054d00 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0xa054ce4 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa054750 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0xa054d8c <col:66> 'const _CharT' lvalue Var 0xa054ae0 '__c' 'const _CharT'))")
      (IfStmt 0xa054fc0 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0xa054ea8 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa054e00 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa054e24 <col:29> 'const typename _Traits::int_type' lvalue Var 0xa054cb0 '__put' 'const typename _Traits::int_type')
          (CallExpr 0xa054e88 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa054e60 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0xa054fa8 <line:66:6, line:69:6>
          (CallExpr 0xa054f80 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa054ee8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa054ecc <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa054750 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa054f58 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0xa054fa0 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0xa058660 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0xa0578d0 <line:78:7, col:66>
    0xa0578a0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa057990 <line:79:7, col:62>
    0xa057960 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa057a90 <line:81:7, col:52>
    0xa057a20 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0xa057a70 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0xa057a54 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0xa058618 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0xa057aa0 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0xa057a20 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0xa0585f8 <line:83:2, line:110:2>
      (IfStmt 0xa0583c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa057ab8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa0583a8 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0xa057b78 <line:86:8, col:44>
            0xa057ad0 "const streamsize __w =
              (CallExpr 0xa057b58 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa057b20 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa057b04 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0xa058300 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0xa057bd8 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa057bb8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa057b88 <col:12> 'const streamsize':'const int' lvalue Var 0xa057ad0 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0xa057bc8 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa057ba0 <col:18> 'streamsize':'int' lvalue ParmVar 0xa0553b0 '__n' 'streamsize':'int')))
            (CompoundStmt 0xa058238 <line:88:3, line:98:3>
              (DeclStmt 0xa057e10 <line:89:5, line:91:32>
                0xa057c00 "const bool __left =
                  (ParenExpr 0xa057df8 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0xa057dd0 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0xa057d88 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
                      (ParenExpr 0xa057d28 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0xa057d10 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0xa057c88 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0xa057c50 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0xa057c34 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0xa057ce8 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0xa057d60 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0xa057f40 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0xa057e48 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa057e38 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa057e20 <col:10> 'const _Bool' lvalue Var 0xa057c00 '__left' 'const _Bool')))
                (CallExpr 0xa057f18 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa057e60 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa054890)
                  (DeclRefExpr 0xa057e94 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0xa057f00 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0xa057ee0 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa057eac <col:29> 'const streamsize':'const int' lvalue Var 0xa057ad0 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0xa057ef0 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa057ec4 <col:35> 'streamsize':'int' lvalue ParmVar 0xa0553b0 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0xa058078 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0xa057fb0 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa057f78 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0xa057f5c <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0xa058050 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa057fd0 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa054020)
                  (DeclRefExpr 0xa058004 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0xa05801c <col:30> 'const _CharT *' lvalue ParmVar 0xa055370 '__s' 'const _CharT *')
                  (DeclRefExpr 0xa058034 <col:35> 'streamsize':'int' lvalue ParmVar 0xa0553b0 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0xa058218 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0xa058120 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0xa058094 <col:9> 'const _Bool' lvalue Var 0xa057c00 '__left' 'const _Bool')
                  (CallExpr 0xa058100 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0580c8 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0580ac <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0xa0581f0 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa058138 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa054890)
                  (DeclRefExpr 0xa05816c <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0xa0581d8 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0xa0581b8 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa058184 <col:29> 'const streamsize':'const int' lvalue Var 0xa057ad0 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0xa0581c8 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa05819c <col:35> 'streamsize':'int' lvalue ParmVar 0xa0553b0 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0xa0582d8 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0xa058258 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0xa054020)
              (DeclRefExpr 0xa05828c <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0xa0582a4 <col:26> 'const _CharT *' lvalue ParmVar 0xa055370 '__s' 'const _CharT *')
              (DeclRefExpr 0xa0582bc <col:31> 'streamsize':'int' lvalue ParmVar 0xa0553b0 '__n' 'streamsize':'int')))
          (CallExpr 0xa058388 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa058338 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa05831c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa058370 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa0584d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0583e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0584c0 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0xa058490 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa058410 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa0583f8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa058468 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0xa0584b0 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0xa0585d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0584f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0585c0 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0xa0585a0 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa058520 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa058508 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa058578 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa058650 <line:111:7, col:14>
    (DeclRefExpr 0xa058634 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa055300 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05aa50 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0xa05aa40 <col:9, col:22>
    (CXXOperatorCallExpr 0xa05aa18 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa05a9e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
      (DeclRefExpr 0xa05a9b0 <col:16> 'const _Tp' lvalue ParmVar 0xa05a840 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05a9c8 <col:22> 'const _Tp' lvalue ParmVar 0xa05a890 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05b030 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0xa05b020 <col:9, col:22>
    (CXXOperatorCallExpr 0xa05aff8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa05afc0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0xa05af90 <col:16> 'const _Tp' lvalue ParmVar 0xa05ae40 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05afa8 <col:22> 'const _Tp' lvalue ParmVar 0xa05ae90 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05b5c8 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0xa05b5b8 <col:9, col:22>
    (BinaryOperator 0xa05b5a0 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0xa05b570 <col:16> 'const _Tp' lvalue ParmVar 0xa05b420 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05b588 <col:22> 'const _Tp' lvalue ParmVar 0xa05b470 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05bb58 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0xa05bb48 <col:9, col:22>
    (BinaryOperator 0xa05bb30 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0xa05bb00 <col:16> 'const _Tp' lvalue ParmVar 0xa05b9b0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05bb18 <col:22> 'const _Tp' lvalue ParmVar 0xa05ba00 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05e3f8 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0xa05e3e8 <col:9, col:22>
    (BinaryOperator 0xa05e3d0 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0xa05e3a0 <col:16> 'const _Tp' lvalue ParmVar 0xa05bf40 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05e3b8 <col:22> 'const _Tp' lvalue ParmVar 0xa05bf90 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0xa05e990 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0xa05e980 <col:9, col:17>
    (CXXOperatorCallExpr 0xa05e960 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa05e928 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0xa05e910 <col:17> 'const _Tp' lvalue ParmVar 0xa05e7f0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05f000 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0xa05eff0 <col:9, col:23>
    (CXXOperatorCallExpr 0xa05efc8 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa05ef80 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (DeclRefExpr 0xa05ef50 <col:16> 'const _Tp' lvalue ParmVar 0xa05ede0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05ef68 <col:23> 'const _Tp' lvalue ParmVar 0xa05ee30 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05f5f0 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0xa05f5e0 <col:9, col:23>
    (CXXOperatorCallExpr 0xa05f5b8 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa05f570 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00)
      (DeclRefExpr 0xa05f540 <col:16> 'const _Tp' lvalue ParmVar 0xa05f3f0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05f558 <col:23> 'const _Tp' lvalue ParmVar 0xa05f440 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa05fbd8 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0xa05fbc8 <col:9, col:22>
    (CXXOperatorCallExpr 0xa05fba0 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa05fb60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0xa05fb30 <col:16> 'const _Tp' lvalue ParmVar 0xa05f9e0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa05fb48 <col:22> 'const _Tp' lvalue ParmVar 0xa05fa30 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa0601b8 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0xa0601a8 <col:9, col:22>
    (CXXOperatorCallExpr 0xa060180 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa060140 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
      (DeclRefExpr 0xa060110 <col:16> 'const _Tp' lvalue ParmVar 0xa05ffc0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa060128 <col:22> 'const _Tp' lvalue ParmVar 0xa060010 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa062a38 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0xa062a28 <col:9, col:23>
    (CXXOperatorCallExpr 0xa062a00 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa0629c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0)
      (DeclRefExpr 0xa062990 <col:16> 'const _Tp' lvalue ParmVar 0xa062840 '__x' 'const _Tp &')
      (DeclRefExpr 0xa0629a8 <col:23> 'const _Tp' lvalue ParmVar 0xa062890 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa063018 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0xa063008 <col:9, col:23>
    (CXXOperatorCallExpr 0xa062fe0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa062fa0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540)
      (DeclRefExpr 0xa062f70 <col:16> 'const _Tp' lvalue ParmVar 0xa062e20 '__x' 'const _Tp &')
      (DeclRefExpr 0xa062f88 <col:23> 'const _Tp' lvalue ParmVar 0xa062e70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa0635a8 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0xa063598 <col:9, col:23>
    (BinaryOperator 0xa063580 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0xa063550 <col:16> 'const _Tp' lvalue ParmVar 0xa063400 '__x' 'const _Tp &')
      (DeclRefExpr 0xa063568 <col:23> 'const _Tp' lvalue ParmVar 0xa063450 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa063b38 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0xa063b28 <col:9, col:23>
    (BinaryOperator 0xa063b10 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0xa063ae0 <col:16> 'const _Tp' lvalue ParmVar 0xa063990 '__x' 'const _Tp &')
      (DeclRefExpr 0xa063af8 <col:23> 'const _Tp' lvalue ParmVar 0xa0639e0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0xa064090 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0xa064080 <col:9, col:17>
    (UnaryOperator 0xa064068 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa064050 <col:17> 'const _Tp' lvalue ParmVar 0xa063f30 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa066af8 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0xa066ae8 <col:9, col:22>
    (BinaryOperator 0xa066ad0 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0xa066aa0 <col:16> 'const _Tp' lvalue ParmVar 0xa064480 '__x' 'const _Tp &')
      (DeclRefExpr 0xa066ab8 <col:22> 'const _Tp' lvalue ParmVar 0xa0644d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa067088 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0xa067078 <col:9, col:22>
    (BinaryOperator 0xa067060 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0xa067030 <col:16> 'const _Tp' lvalue ParmVar 0xa066ee0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa067048 <col:22> 'const _Tp' lvalue ParmVar 0xa066f30 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa067618 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0xa067608 <col:9, col:22>
    (BinaryOperator 0xa0675f0 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0xa0675c0 <col:16> 'const _Tp' lvalue ParmVar 0xa067470 '__x' 'const _Tp &')
      (DeclRefExpr 0xa0675d8 <col:22> 'const _Tp' lvalue ParmVar 0xa0674c0 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0xa067dd4 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0xa067b50 '__x' 'const _Predicate &')
) (CompoundStmt 0xa067e30 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0xa067f08 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0xa067ef8 <col:9, col:28>
    (UnaryOperator 0xa067ee0 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0xa067ec0 <col:17, col:28> '<dependent type>'
        (MemberExpr 0xa067e84 <col:17> 'const _Predicate' lvalue ->_M_pred 0xa067ab0
          (CXXThisExpr 0xa067e58 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0xa067ea4 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0xa067cd0 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0xa068268 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0xa068258 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0xa068238 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0xa068220 <col:39> 'const _Predicate' lvalue ParmVar 0xa068030 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0xa06b9b8 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0xa068860 '__x' 'const _Predicate &')
) (CompoundStmt 0xa06ba10 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0xa06bb08 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0xa06baf8 <col:9, col:33>
    (UnaryOperator 0xa06bae0 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0xa06bab8 <col:17, col:33> '<dependent type>'
        (MemberExpr 0xa06ba64 <col:17> 'const _Predicate' lvalue ->_M_pred 0xa0687c0
          (CXXThisExpr 0xa06ba38 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0xa06ba84 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0xa06b800 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0xa06ba9c <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0xa06b8b0 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0xa06be68 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0xa06be58 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0xa06be38 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0xa06be20 <col:40> 'const _Predicate' lvalue ParmVar 0xa06bc30 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0xa06c758 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0xa06c768 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0xa06c530 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0xa06c7c0 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0xa06c880 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0xa06c870 <col:9, col:26>
    (CallExpr 0xa06c850 <col:16, col:26> '<dependent type>'
      (MemberExpr 0xa06c814 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0xa06c3c0
        (CXXThisExpr 0xa06c7e8 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0xa06c834 <col:23> '_Arg' lvalue ParmVar 0xa06c650 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0xa06cd90 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0xa06cd80 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0xa06cd60 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0xa06cd48 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0xa06caf0 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0xa06e8b8 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0xa06e8c8 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0xa06d590 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0xa06e920 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0xa06ea00 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0xa06e9f0 <col:9, col:31>
    (CallExpr 0xa06e9c8 <col:16, col:31> '<dependent type>'
      (MemberExpr 0xa06e974 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0xa06d3e0
        (CXXThisExpr 0xa06e948 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0xa06e994 <col:23> '_Arg1' lvalue ParmVar 0xa06d6b0 '__x' '_Arg1')
      (DeclRefExpr 0xa06e9ac <col:28> '_Arg2' lvalue ParmVar 0xa06d6f0 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0xa06f058 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0xa06f048 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0xa06f028 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0xa06f010 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0xa06ed50 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0xa06f688 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0xa06f678 <col:9, col:16>
    (DeclRefExpr 0xa06f660 <col:16> '_Tp' lvalue ParmVar 0xa06f400 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0xa06f6c8 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0xa06f6b8 <col:9, col:16>
    (DeclRefExpr 0xa06f69c <col:16> 'const _Tp' lvalue ParmVar 0xa06f540 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0xa06fef0 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0xa06fee0 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa06fea8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa06fe90 <col:16> '_Pair' lvalue ParmVar 0xa06fb70 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0xa06ff68 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0xa06ff58 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa06ff20 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa06ff04 <col:16> 'const _Pair' lvalue ParmVar 0xa06fd20 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0xa070790 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0xa070780 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa070748 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa070730 <col:16> '_Pair' lvalue ParmVar 0xa070410 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0xa070808 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0xa0707f8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa0707c0 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa0707a4 <col:16> 'const _Pair' lvalue ParmVar 0xa0705c0 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0xa071fd0 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa071ce0 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0xa072030 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0xa072128 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0xa072118 <col:9, col:29>
    (CallExpr 0xa0720f8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0xa0720e0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa0720c8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa072040 <col:17> '_Tp *' lvalue ParmVar 0xa071e10 '__p' '_Tp *')
          (MemberExpr 0xa0720a4 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0xa071fa0
            (CXXThisExpr 0xa072078 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0xa0729a0 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa0726b0 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0xa072a00 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0xa072af8 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0xa072ae8 <col:9, col:29>
    (CallExpr 0xa072ac8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0xa072ab0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa072a98 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa072a10 <col:17> 'const _Tp *' lvalue ParmVar 0xa0727e0 '__p' 'const _Tp *')
          (MemberExpr 0xa072a74 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0xa072970
            (CXXThisExpr 0xa072a48 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0xa073330 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa073040 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0xa073390 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0xa073488 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0xa073478 <col:9, col:28>
    (CallExpr 0xa073458 <col:16, col:28> '<dependent type>'
      (ParenExpr 0xa073440 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa073428 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa0733a0 <col:17> '_Tp' lvalue ParmVar 0xa073170 '__r' '_Tp &')
          (MemberExpr 0xa073404 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0xa073300
            (CXXThisExpr 0xa0733d8 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0xa074fd0 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa074ce0 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0xa075030 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0xa075128 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0xa075118 <col:9, col:28>
    (CallExpr 0xa0750f8 <col:16, col:28> '<dependent type>'
      (ParenExpr 0xa0750e0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa0750c8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa075040 <col:17> 'const _Tp' lvalue ParmVar 0xa074e10 '__r' 'const _Tp &')
          (MemberExpr 0xa0750a4 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0xa074fa0
            (CXXThisExpr 0xa075078 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0xa075b50 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa0757e0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0xa075bb0 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0xa075cc0 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0xa075cb0 <col:9, col:32>
    (CallExpr 0xa075c90 <col:16, col:32> '<dependent type>'
      (ParenExpr 0xa075c60 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa075c48 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa075bc0 <col:17> '_Tp *' lvalue ParmVar 0xa075910 '__p' '_Tp *')
          (MemberExpr 0xa075c24 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0xa075b20
            (CXXThisExpr 0xa075bf8 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa075c74 <col:29> '_Arg' lvalue ParmVar 0xa075950 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0xa0766f0 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa076380 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0xa076750 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0xa076860 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0xa076850 <col:9, col:32>
    (CallExpr 0xa076830 <col:16, col:32> '<dependent type>'
      (ParenExpr 0xa076800 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa0767e8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa076760 <col:17> 'const _Tp *' lvalue ParmVar 0xa0764b0 '__p' 'const _Tp *')
          (MemberExpr 0xa0767c4 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0xa0766c0
            (CXXThisExpr 0xa076798 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa076814 <col:29> '_Arg' lvalue ParmVar 0xa0764f0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0xa078400 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa078090 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0xa078460 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0xa078570 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0xa078560 <col:9, col:31>
    (CallExpr 0xa078540 <col:16, col:31> '<dependent type>'
      (ParenExpr 0xa078510 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa0784f8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa078470 <col:17> '_Tp' lvalue ParmVar 0xa0781c0 '__r' '_Tp &')
          (MemberExpr 0xa0784d4 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0xa0783d0
            (CXXThisExpr 0xa0784a8 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa078524 <col:28> '_Arg' lvalue ParmVar 0xa078200 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0xa078ee0 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa078b70 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0xa078f40 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0xa079050 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0xa079040 <col:9, col:31>
    (CallExpr 0xa079020 <col:16, col:31> '<dependent type>'
      (ParenExpr 0xa078ff0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa078fd8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa078f50 <col:17> 'const _Tp' lvalue ParmVar 0xa078ca0 '__r' 'const _Tp &')
          (MemberExpr 0xa078fb4 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0xa078eb0
            (CXXThisExpr 0xa078f88 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa079004 <col:28> '_Arg' lvalue ParmVar 0xa078ce0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0xa079550 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0xa079540 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0xa079520 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0xa079508 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa0792b0 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0xa079a50 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0xa079a40 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0xa079a20 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0xa079a08 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa0797b0 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0xa07a9a0 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0xa07a990 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0xa07a970 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0xa07a958 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa07a700 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0xa07aea0 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0xa07ae90 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0xa07ae70 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0xa07ae58 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa07ac00 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0xa07b4e8 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0xa07b4d8 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0xa07b4b8 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa07b4a0 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa07b1e0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0xa07bb28 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0xa07bb18 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0xa07baf8 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa07bae0 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa07b820 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0xa07c168 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0xa07c158 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0xa07c138 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa07c120 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa07be60 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0xa07e568 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0xa07e558 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0xa07e538 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa07e520 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa07c4a0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0xa07f144 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0xa07ec40 '__x' 'const _Operation &')
), value((DeclRefExpr 0xa07f198 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0xa07ecd0 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0xa07f1f0 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0xa07f2e8 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0xa07f2d8 <col:9, col:29>
    (CallExpr 0xa07f2b0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa07f244 <col:16> 'const _Operation' lvalue ->op 0xa07eb10
        (CXXThisExpr 0xa07f218 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0xa07f278 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0xa07eba0
        (CXXThisExpr 0xa07f268 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0xa07f298 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0xa07ee70 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0xa07f3b0 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0xa07f3a0 <col:9, col:29>
    (CallExpr 0xa07f378 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa07f310 <col:16> 'const _Operation' lvalue ->op 0xa07eb10
        (CXXThisExpr 0xa07f300 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0xa07f340 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0xa07eba0
        (CXXThisExpr 0xa07f330 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0xa07f360 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0xa07f030 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0xa07f900 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0xa07f7a0 <line:129:7, col:66>
    0xa07f770 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0xa07f8f0 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0xa07f8d0 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0xa07f860 <col:36> 'const _Operation' lvalue ParmVar 0xa07f540 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0xa07f8b0 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0xa07f898 <col:53> 'const _Tp' lvalue ParmVar 0xa07f5b0 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0xa080414 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0xa07ff10 '__x' 'const _Operation &')
), value((DeclRefExpr 0xa083328 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0xa07ffa0 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0xa083380 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0xa083478 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0xa083468 <col:9, col:29>
    (CallExpr 0xa083440 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa0833d4 <col:16> 'const _Operation' lvalue ->op 0xa07fde0
        (CXXThisExpr 0xa0833a8 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0xa0833f4 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0xa080140 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0xa083420 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0xa07fe70
        (CXXThisExpr 0xa083410 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0xa083540 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0xa083530 <col:9, col:29>
    (CallExpr 0xa083508 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa0834a0 <col:16> 'const _Operation' lvalue ->op 0xa07fde0
        (CXXThisExpr 0xa083490 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0xa0834c0 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0xa080300 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0xa0834e8 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0xa07fe70
        (CXXThisExpr 0xa0834d8 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0xa083a90 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0xa083930 <line:164:7, col:67>
    0xa083900 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0xa083a80 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0xa083a60 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0xa0839f0 <col:36> 'const _Operation' lvalue ParmVar 0xa0836d0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0xa083a40 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0xa083a28 <col:53> 'const _Tp' lvalue ParmVar 0xa083740 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0xa096480 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0xa0964e0 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0xa096540 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0xa0965a0 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0xa096600 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0xa096660 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0xa0966c0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0xa096720 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0xa096780 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0xa0967e0 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0xa096840 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x9ec5e18 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5c84 <col:26> 'int' EnumConstant 0x9ec5b90 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x9ec5e28 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5cd4 <col:29> 'int' EnumConstant 0x9ec5bd0 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x9ec5e38 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5d24 <col:30> 'int' EnumConstant 0x9ec5c10 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x9ec5e48 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5d74 <col:27> 'int' EnumConstant 0x9ec5ca0 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x9ec5e58 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5dc4 <col:29> 'int' EnumConstant 0x9ec5b90 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x9ec5fe8 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5f04 <col:30> 'int' EnumConstant 0x9ec5ed0 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x9ec5ff8 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec5f94 <col:29> 'int' EnumConstant 0x9ec5f60 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x9ec6298 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ec6244 <col:31> 'int' EnumConstant 0x9ec6190 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0xa0c2a98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0xa0c2a00 <line:242:3, line:251:13>
    0xa0c2940 "static void *const __gthread_active_ptr =
      (UnaryOperator 0xa0c29e8 <line:243:7, <scratch space>:99:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0xa0c29d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:99:1> 'void *' <BitCast>
          (UnaryOperator 0xa0c29a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:99:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0xa0c2974 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0xa0bf760 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0xa0c2a88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0xa0c2a78 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0xa0c2a60 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0xa0c2a40 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa0c2a10 <col:10> 'void *const' lvalue Var 0xa0c2940 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0xa0c2a50 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0xa0c2a28 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0xa0c2e98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0xa0c2e88 <line:663:3, col:68>
    (CallExpr 0xa0c2e18 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0xa0c2e08 <<scratch space>:100:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c2db8 <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0xa0bee40 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0xa0c2e48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c2d54 <col:36> '__gthread_t *' lvalue ParmVar 0xa0c2af0 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0xa0c2e58 </usr/include/linux/stddef.h:8:14> 'const pthread_attr_t *' <NullToPointer>
        (IntegerLiteral 0xa0c2d70 <col:14> 'int' 0))
      (ImplicitCastExpr 0xa0c2e68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0xa0c2d88 <col:54> 'void *(*)(void *)' lvalue ParmVar 0xa0c2ba0 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0xa0c2e78 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0xa0c2da0 <col:62> 'void *' lvalue ParmVar 0xa0c2bf0 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0xa0c3120 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0xa0c3110 <line:669:3, col:57>
    (CallExpr 0xa0c30c8 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0xa0c30b8 <<scratch space>:101:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c305c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0xa0bf0e0 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0xa0c30f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa0c302c <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0xa0c2ec0 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0xa0c3100 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0xa0c3044 <col:46> 'void **' lvalue ParmVar 0xa0c2f10 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0xa0c32f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0xa0c32e8 <line:675:3, col:46>
    (CallExpr 0xa0c32b8 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0xa0c32a8 <<scratch space>:102:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c3274 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0xa0bf5d0 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0xa0c32d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa0c325c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0xa0c3140 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0xa0c3570 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0xa0c3560 <line:681:3, col:45>
    (CallExpr 0xa0c3518 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0xa0c3508 <<scratch space>:103:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c34ac <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0xa0bf2c0 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0xa0c3540 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa0c347c <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0xa0c3320 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0xa0c3550 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa0c3494 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0xa0c3360 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0xa0c3728 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0xa0c3718 <line:687:3, col:34>
    (CallExpr 0xa0c36f8 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0xa0c36e8 <<scratch space>:104:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c3694 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0xa0bf490 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0xa0c38a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0xa0c3898 <line:693:3, col:33>
    (CallExpr 0xa0c3878 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0xa0c3868 <<scratch space>:105:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c3834 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0xa0c0950 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0xa0c3ca0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0xa0c3c80 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0c3b08 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0c3ae8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa0c3ad8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c3abc <col:7> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0c3c30 <line:700:5, col:50>
      (CallExpr 0xa0c3be8 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0xa0c3bd8 <<scratch space>:106:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c3b7c <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0xa0be8a0 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0xa0c3c10 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c3b4c <col:36> '__gthread_once_t *' lvalue ParmVar 0xa0c3900 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0xa0c3c20 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0xa0c3b64 <col:44> 'void (*)(void)' lvalue ParmVar 0xa0c39a0 '__func' 'void (*)(void)'))))
    (ReturnStmt 0xa0c3c70 <line:702:5, col:13>
      (UnaryOperator 0xa0c3c58 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0xa0c3c40 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0xa0c3fc0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0xa0c3fb0 <line:708:3, col:53>
    (CallExpr 0xa0c3f68 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0xa0c3f58 <<scratch space>:107:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c3efc <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0xa0c1fa0 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0xa0c3f90 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c3ecc <col:40> '__gthread_key_t *' lvalue ParmVar 0xa0c3d00 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0xa0c3fa0 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0xa0c3ee4 <col:47> 'void (*)(void *)' lvalue ParmVar 0xa0c3db0 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0xa0c4198 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0xa0c4188 <line:714:3, col:45>
    (CallExpr 0xa0c4158 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0xa0c4148 <<scratch space>:108:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c4114 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0xa0c21a0 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0xa0c4178 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c40fc <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa0c3fe0 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0xa0c4378 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0xa0c4368 <line:720:3, col:46>
    (CallExpr 0xa0c4338 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0xa0c4328 <<scratch space>:109:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c42f4 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0xa0beab0 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0xa0c4358 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c42dc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa0c41c0 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0xa0c4600 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0xa0c45f0 <line:726:3, col:53>
    (CallExpr 0xa0c45a8 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0xa0c4598 <<scratch space>:110:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c453c <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0xa0bec50 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0xa0c45d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c450c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa0c43a0 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0xa0c45e0 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0xa0c4524 <col:48> 'const void *' lvalue ParmVar 0xa0c43f0 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0xa0c5f90 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0xa0c5f70 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0c47c8 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0c47a8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa0c4798 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c477c <col:7> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0c5f38 <line:733:5, col:52>
      (CallExpr 0xa0c5f08 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0xa0c5ef8 <<scratch space>:111:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c5ea4 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa0c1450 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa0c5f28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c5e8c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0xa0c4660 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa0c5f60 <line:735:5, col:12>
      (IntegerLiteral 0xa0c5f48 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa0c6230 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0xa0c6210 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0c6108 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0c60e8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa0c60d8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c60bc <col:7> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0c61d8 <line:742:5, col:49>
      (CallExpr 0xa0c61a8 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0xa0c6198 <<scratch space>:112:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c6164 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa0c0ad0 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa0c61c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c614c <col:42> '__gthread_mutex_t *' lvalue ParmVar 0xa0c5fc0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa0c6200 <line:744:5, col:12>
      (IntegerLiteral 0xa0c61e8 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa0c64d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0xa0c64b0 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0c63a8 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0c6388 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa0c6378 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c635c <col:7> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0c6478 <line:751:5, col:52>
      (CallExpr 0xa0c6448 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0xa0c6438 <<scratch space>:113:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c6404 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa0c0cc0 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa0c6468 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c63ec <col:45> '__gthread_mutex_t *' lvalue ParmVar 0xa0c6260 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa0c64a0 <line:753:5, col:12>
      (IntegerLiteral 0xa0c6488 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa0c6868 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0xa0c6848 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0c66e8 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0c66c8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa0c66b8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c669c <col:7> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0c6810 <line:763:5, col:69>
      (CallExpr 0xa0c67c8 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0xa0c67b8 <<scratch space>:114:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c675c <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0xa0c0e90 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0xa0c67f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c672c <col:47> '__gthread_mutex_t *' lvalue ParmVar 0xa0c6500 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0xa0c6800 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c6744 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0xa0c6580 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0xa0c6838 <line:765:5, col:12>
      (IntegerLiteral 0xa0c6820 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa0c6b00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0xa0c6ae0 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0c69d8 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0c69b8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa0c69a8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c698c <col:7> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0c6aa8 <line:774:5, col:51>
      (CallExpr 0xa0c6a78 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0xa0c6a68 <<scratch space>:115:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c6a34 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa0c10c0 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa0c6a98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa0c6a1c <col:44> '__gthread_mutex_t *' lvalue ParmVar 0xa0c6890 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa0c6ad0 <line:776:5, col:12>
      (IntegerLiteral 0xa0c6ab8 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa0c6d18 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0xa0c6d08 <line:805:3, col:39>
    (CallExpr 0xa0c6cd8 <col:10, col:39> 'int'
      (ImplicitCastExpr 0xa0c6cc8 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c6c94 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa0c6020 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa0c6cf8 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c6c7c <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa0c6b60 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa0c6ec0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0xa0c6eb0 <line:811:3, col:42>
    (CallExpr 0xa0c6e80 <col:10, col:42> 'int'
      (ImplicitCastExpr 0xa0c6e70 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c6e54 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa0c62c0 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa0c6ea0 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c6e3c <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa0c6d40 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa0c7130 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0xa0c7120 <line:820:3, col:59>
    (CallExpr 0xa0c70d8 <col:10, col:59> 'int'
      (ImplicitCastExpr 0xa0c70c8 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c708c <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0xa0c6600 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0xa0c7100 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c705c <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa0c6ef0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0xa0c7110 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7074 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0xa0c6f40 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa0c72e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0xa0c72d0 <line:828:3, col:41>
    (CallExpr 0xa0c72a0 <col:10, col:41> 'int'
      (ImplicitCastExpr 0xa0c7290 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c7274 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa0c68f0 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa0c72c0 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c725c <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa0c7160 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0xa0c7518 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0xa0c7508 <line:834:3, col:50>
    (CallExpr 0xa0c74d8 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0xa0c74c8 <<scratch space>:116:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c7474 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0xa0c1640 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa0c74f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c745c <col:44> '__gthread_cond_t *' lvalue ParmVar 0xa0c7340 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0xa0c76d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0xa0c76c8 <line:840:3, col:47>
    (CallExpr 0xa0c7698 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0xa0c7688 <<scratch space>:117:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c7654 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0xa0c17e0 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa0c76b8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c763c <col:41> '__gthread_cond_t *' lvalue ParmVar 0xa0c7540 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0xa0c7960 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0xa0c7950 <line:846:3, col:54>
    (CallExpr 0xa0c7908 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0xa0c78f8 <<scratch space>:118:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c789c <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0xa0c19c0 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0xa0c7930 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c786c <col:39> '__gthread_cond_t *' lvalue ParmVar 0xa0c7700 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa0c7940 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7884 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0xa0c7750 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa0c7c80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0xa0c7c70 <line:853:3, col:74>
    (CallExpr 0xa0c7c18 <<scratch space>:119:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0xa0c7c08 <<scratch space>:119:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c7bac <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0xa0c1bb0 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0xa0c7c40 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7b64 <col:44> '__gthread_cond_t *' lvalue ParmVar 0xa0c7990 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa0c7c50 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7b7c <col:52> '__gthread_mutex_t *' lvalue ParmVar 0xa0c79e0 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0xa0c7c60 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7b94 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0xa0c7a30 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa0c9960 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0xa0c9950 <line:860:3, col:46>
    (CallExpr 0xa0c9908 <col:10, col:46> 'int'
      (ImplicitCastExpr 0xa0c98f8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c98c8 <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0xa0c77d0 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa0c9930 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7e1c <col:31> '__gthread_cond_t *' lvalue ParmVar 0xa0c7cb0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa0c9940 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c7e34 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa0c7d00 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa0c9c60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0xa0c9c50 <line:868:3, col:66>
    (CallExpr 0xa0c9bf8 <col:10, col:66> 'int'
      (ImplicitCastExpr 0xa0c9be8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c9bac <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0xa0c7ac0 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0xa0c9c20 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c9b64 <col:36> '__gthread_cond_t *' lvalue ParmVar 0xa0c9990 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa0c9c30 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c9b7c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa0c99e0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0xa0c9c40 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c9b94 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0xa0c9a30 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0xa0c9e28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0xa0c9e18 <line:874:3, col:48>
    (CallExpr 0xa0c9de8 <<scratch space>:120:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0xa0c9dd8 <<scratch space>:120:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c9da4 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0xa0c1e00 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa0c9e08 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa0c9d8c <col:42> '__gthread_cond_t *' lvalue ParmVar 0xa0c9c90 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0xa0ca388 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0xa0ca378 <col:5, col:45>
    (CallExpr 0xa0ca1a8 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0xa0ca368 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0ca334 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0xa0ca210 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0xa0ca1d0 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa0ca144 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0xa0c9f70 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0xa0ca328 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0xa0ca15c <col:40> 'int' lvalue ParmVar 0xa0c9fc0 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0xa0ca700 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0xa0ca560 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0xa0ca6f0 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0ca6d4 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0xa0ca5b0 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0xa0ca588 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0xa0ca520 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0xa0ca3b0 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0xa0ca6c8 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0ca538 <col:33> 'int' lvalue ParmVar 0xa0ca400 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0xa0ca9e8 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0xa0ca918 <line:66:5, col:35>
    0xa0ca890 "_Atomic_word __result =
      (ImplicitCastExpr 0xa0ca908 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0xa0ca8f0 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0xa0ca8e0 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0xa0ca8c4 <col:30> '_Atomic_word *' lvalue ParmVar 0xa0ca750 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0xa0ca990 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0xa0ca950 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0xa0ca940 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa0ca928 <col:6> '_Atomic_word *' lvalue ParmVar 0xa0ca750 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0xa0ca980 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0ca964 <col:15> 'int' lvalue ParmVar 0xa0ca7a0 '__val' 'int')))
  (ReturnStmt 0xa0ca9d8 <line:68:5, col:12>
    (ImplicitCastExpr 0xa0ca9c8 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0xa0ca9b0 <col:12> '_Atomic_word':'int' lvalue Var 0xa0ca890 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0xa0cac00 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0xa0cabe0 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0xa0caba0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0xa0cab90 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa0cab78 <col:6> '_Atomic_word *' lvalue ParmVar 0xa0caa20 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0xa0cabd0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0cabb4 <col:15> 'int' lvalue ParmVar 0xa0caa70 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0xa0cb090 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0xa0cb070 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0cae08 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0cade8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0xa0cadd8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cadbc <col:9> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa0caf40 <line:81:7, col:45>
      (CallExpr 0xa0caee8 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa0caed8 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cae7c <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0xa0ca040 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0xa0caf20 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0xa0caf10 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0xa0cae4c <col:33> '_Atomic_word *' lvalue ParmVar 0xa0cac30 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0xa0caf30 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0xa0cae64 <col:40> 'int' lvalue ParmVar 0xa0cac80 '__val' 'int'))))
    (ReturnStmt 0xa0cb060 <line:83:7, col:52>
      (CallExpr 0xa0cb018 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa0cb008 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cafb4 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0ca820 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0xa0cb040 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0xa0caf84 <col:40> '_Atomic_word *' lvalue ParmVar 0xa0cac30 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0xa0cb050 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0xa0caf9c <col:47> 'int' lvalue ParmVar 0xa0cac80 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0xa0cb500 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0xa0cb4e0 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0cb298 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0cb278 <col:9, col:28> 'int'
        (ImplicitCastExpr 0xa0cb268 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cb24c <col:9> 'int (void)' lvalue Function 0xa0c28d0 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0xa0cb378 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0xa0cb368 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0cb30c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0xa0ca4a0 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0xa0cb3b0 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0xa0cb3a0 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0xa0cb2dc <col:20> '_Atomic_word *' lvalue ParmVar 0xa0cb0c0 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0xa0cb3c0 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0xa0cb2f4 <col:27> 'int' lvalue ParmVar 0xa0cb110 '__val' 'int')))
    (CallExpr 0xa0cb498 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0xa0cb488 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0cb434 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0xa0cab10 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0xa0cb4c0 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa0cb404 <col:27> '_Atomic_word *' lvalue ParmVar 0xa0cb0c0 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0xa0cb4d0 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0xa0cb41c <col:34> 'int' lvalue ParmVar 0xa0cb110 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa4373c8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa437228 <line:180:4, col:62>
    0xa437050 "void *__p =
      (CXXReinterpretCastExpr 0xa437210 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa4371f8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa4371a0 <col:41> 'size_type []' lvalue Var 0xa192210 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa4373b8 <line:181:4, col:39>
    (UnaryOperator 0xa4373a0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa437388 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa437378 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa43735c <col:36> 'void *' lvalue Var 0xa437050 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw() (CompoundStmt 0xa43c8f0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa43c8e0 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa43c8c8 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0xa43c8b0 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0xa43c8a0 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0xa0f29b0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa437038 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa437018 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa436d40 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa436cf8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa436ce8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0f2cac <col:8> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa436d20 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa436cd0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa436b30 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa436cb8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa436c98 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa436c88 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa436c50 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa192390 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa436d30 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa0f2d98 <col:50> '_Bool' false))))
    (CompoundStmt 0xa437000 <line:236:6, line:245:6>
      (NullStmt 0xa0f2dd0 <line:238:67>)
      (IfStmt 0xa436fe0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa436e38 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa436e10 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa436e00 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0f2e00 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa436de8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa436dc8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa1919e0
                (ImplicitCastExpr 0xa436db8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa436d90 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa0f2e98 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa0f2e80 <col:10> 'int' 1)))
          (IntegerLiteral 0xa0f2ed8 <col:16> 'int' 0))
        (CompoundStmt 0xa436fc8 <line:241:3, line:244:3>
          (NullStmt 0xa0f2f58 <line:242:63>)
          (CXXMemberCallExpr 0xa436fa8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa436f70 <col:5> '<bound member function type>' ->_M_destroy 0xa1930a0
              (CXXThisExpr 0xa436e50 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa436f90 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa192f80 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a) : std::allocator<wchar_t>((DeclRefExpr 0xa43c904 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa1716d0 '__a' 'const class std::allocator<wchar_t> &')
), _M_p((ImplicitCastExpr 0xa43cac0 </usr/include/c++/4.6/bits/basic_string.h:269:22> 'wchar_t *' <LValueToRValue>
  (DeclRefExpr 0xa43c998 <col:22> 'wchar_t *' lvalue ParmVar 0xa171660 '__dat' 'wchar_t *'))
) (CompoundStmt 0xa0f33a0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa436290 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


            inline _Alloc_hider(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider &) throw();
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa1713b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa1713a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa0d4118 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa436ad0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa436ac0 <col:9, col:29>
    (ImplicitCastExpr 0xa436ab0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa436a90 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa171940
        (MemberExpr 0xa436a70 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa171970
          (CXXThisExpr 0xa436950 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa436938 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa436928 <col:9, col:59>
    (UnaryOperator 0xa436910 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa4368f8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4368e0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa4368c8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4368b0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa436890 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa436870 <col:44> '<bound member function type>' ->_M_data 0xa1719f0
                  (CXXThisExpr 0xa436860 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa43c840 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0xa43c830 <col:9, col:35>
    (CallExpr 0xa43c810 <col:16, col:35> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0xa43c800 <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa43c7dc <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa192390 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))


    public:
    public:
        basic_string() : _M_dataplus((CXXMemberCallExpr 0xa43c318 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> 'wchar_t *'
  (MemberExpr 0xa43c2f4 <col:21, col:36> '<bound member function type>' ._M_refdata 0xa1927f0
    (CallExpr 0xa43c2d8 <col:21, col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0xa43c2c8 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa43c2b0 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa174f60 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))
, (MaterializeTemporaryExpr 0xa43c638 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
  (ImplicitCastExpr 0xa43c628 <col:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
    (CXXBindTemporaryExpr 0xa43c378 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>' (CXXTemporary 0xa43c370)
      (CXXTemporaryObjectExpr 0xa43c340 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>''void (void) throw()'))))
) (CompoundStmt 0xa0f9b00 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa4361e0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa4361c0 <col:9, col:51> 'void'
    (CXXTemporary 0xa436140)
    (CXXMemberCallExpr 0xa436158 <col:9, col:51> 'void'
      (MemberExpr 0xa4360bc <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa192fd0
        (CXXMemberCallExpr 0xa436090 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa436070 <col:9> '<bound member function type>' ->_M_rep 0xa171ce0
            (ImplicitCastExpr 0xa4360b0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa435f50 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa4361b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa4361a0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa436148 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa436140)
            (CXXMemberCallExpr 0xa436110 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa4360f0 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa1897e0
                (ImplicitCastExpr 0xa436130 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa4360e0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str) (CompoundStmt 0xa43cbb8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa43cba8 <col:9, col:34>
    (CXXMemberCallExpr 0xa43cb88 <col:16, col:34> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43cb68 <col:16, col:22> '<bound member function type>' ->assign 0xa17c4e0
        (CXXThisExpr 0xa43caf0 <col:16> 'class std::basic_string<wchar_t> *' this))
      (DeclRefExpr 0xa43cb50 <col:29> 'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa177700 '__str' 'const class std::basic_string<wchar_t> &'))))


        std::basic_string<wchar_t> &operator=(const wchar_t *__s) (CompoundStmt 0xa43c180 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0xa43c170 <col:9, col:32>
    (CXXMemberCallExpr 0xa43c140 <col:16, col:32> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43c120 <col:16, col:22> '<bound member function type>' ->assign 0xa17cff0
        (CXXThisExpr 0xa43c0a8 <col:16> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa43c160 <col:29> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa43c108 <col:29> 'const wchar_t *' lvalue ParmVar 0xa177910 '__s' 'const wchar_t *')))))


        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa43b4c0 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa43b4b0 <col:9, col:26>
    (ImplicitCastExpr 0xa43b4a0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa43b480 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa191860
        (ImplicitCastExpr 0xa43b470 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa43b450 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa43b430 <col:16> '<bound member function type>' ->_M_rep 0xa171ce0
              (CXXThisExpr 0xa43b310 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear() (CompoundStmt 0xa43cdb8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CXXMemberCallExpr 0xa43cd70 <col:9, col:37> 'void'
    (MemberExpr 0xa43ccf0 <col:9> '<bound member function type>' ->_M_mutate 0xa174d10
      (CXXThisExpr 0xa43cbd0 <col:9> 'class std::basic_string<wchar_t> *' this))
    (ImplicitCastExpr 0xa43cd98 <col:19> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa0faa08 <col:19> 'int' 0))
    (CXXMemberCallExpr 0xa43cd40 <col:22, col:33> 'size_type':'unsigned int'
      (MemberExpr 0xa43cd20 <col:22, col:28> '<bound member function type>' ->size 0xa178bb0
        (ImplicitCastExpr 0xa43cd60 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0xa43cd10 <col:22> 'class std::basic_string<wchar_t> *' this))))
    (ImplicitCastExpr 0xa43cda8 <col:36> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa0faa88 <col:36> 'int' 0))))


        bool empty() const (CompoundStmt 0xa43b2f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa43b2e8 <col:9, col:32>
    (BinaryOperator 0xa43b2d0 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa43b2a0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa43b280 <col:16, col:22> '<bound member function type>' ->size 0xa178bb0
          (CXXThisExpr 0xa43b270 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa43b2c0 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0fab48 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa43bb60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa43b5e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa43b590 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa43b580 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa43b514 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa17a110 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa43b560 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa43b540 <col:13, col:19> '<bound member function type>' ->size 0xa178bb0
          (CXXThisExpr 0xa43b530 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa43b5b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa43b5a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa43b5d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa43bb50 <line:859:2, col:22>
    (ImplicitCastExpr 0xa43bb40 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa43bb28 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa43bae0 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa43bac0 <col:9> '<bound member function type>' ->_M_data 0xa1719f0
            (CXXThisExpr 0xa43bab0 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa43bb18 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa43bafc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa17a110 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s) (CompoundStmt 0xa43d200 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0xa0fed00 <line:1119:32>)
  (ReturnStmt 0xa43d1f0 <line:1120:2, col:51>
    (CXXMemberCallExpr 0xa43d1b8 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43d194 <col:9, col:15> '<bound member function type>' ->assign 0xa17ce00
        (CXXThisExpr 0xa43cdd0 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa43d1e0 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa43ce30 <col:22> 'const wchar_t *' lvalue ParmVar 0xa17cf90 '__s' 'const wchar_t *'))
      (CallExpr 0xa43d128 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0xa43d118 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa43d0bc <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0xa002a70 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0xa43d148 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa43d0dc <col:47> 'const wchar_t *' lvalue ParmVar 0xa17cf90 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa43c090 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa43c080 <col:9, col:24>
    (ImplicitCastExpr 0xa43c070 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa43c050 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa43c030 <col:16> '<bound member function type>' ->_M_data 0xa1719f0
          (CXXThisExpr 0xa43c020 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa4375a0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa437590 <col:9, col:16>
    (CXXConstructExpr 0xa437568 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa437558 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa437548 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa437500 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa171970
            (CXXThisExpr 0xa4373e0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa149df8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa149de8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa0d4118 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa4383c0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4383b0 <col:9, col:29>
    (ImplicitCastExpr 0xa4383a0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa438380 <col:17, col:29> 'char *' lvalue ._M_p 0xa14a380
        (MemberExpr 0xa438360 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa14a3b0
          (CXXThisExpr 0xa438240 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa438228 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa438218 <col:9, col:59>
    (UnaryOperator 0xa438200 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa4381e8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4381d0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa4381b8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4381a0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa438180 <col:44, col:52> 'char *'
                (MemberExpr 0xa438160 <col:44> '<bound member function type>' ->_M_data 0xa14a430
                  (CXXThisExpr 0xa438150 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa437b78 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa437b68 <col:9, col:26>
    (ImplicitCastExpr 0xa437b58 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa437b38 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa16c340
        (ImplicitCastExpr 0xa437b28 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa437af0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa437ad0 <col:16> '<bound member function type>' ->_M_rep 0xa14a700
              (CXXThisExpr 0xa4379a8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa437990 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa437980 <col:9, col:32>
    (BinaryOperator 0xa437968 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa437938 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa437918 <col:16, col:22> '<bound member function type>' ->size 0xa151680
          (CXXThisExpr 0xa437908 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa437958 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0fab48 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa43b210 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4384e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa438490 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa438480 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa438414 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa152be0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa438460 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa438440 <col:13, col:19> '<bound member function type>' ->size 0xa151680
          (CXXThisExpr 0xa438430 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa4384b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4384a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4384d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa43b200 <line:859:2, col:22>
    (ImplicitCastExpr 0xa43b1f0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa43b1d8 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa43b190 <col:9, col:17> 'char *'
          (MemberExpr 0xa43b170 <col:9> '<bound member function type>' ->_M_data 0xa14a430
            (CXXThisExpr 0xa43b160 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa43b1c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa43b1ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa152be0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0xa0f2158 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa0f20e0 <line:180:4, col:62>
    0xa0f2050 "void *__p =
      (CXXReinterpretCastExpr 0xa0f20c8 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0xa0f20a0 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0xa0f2084 <col:41> 'size_type []' lvalue Var 0xa0d1230 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa0f2148 <line:181:4, col:39>
    (UnaryOperator 0xa0f2130 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0xa0f2118 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0xa0f20f0 <col:36> 'void *' lvalue Var 0xa0f2050 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0xa0f2260 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0xa0f2250 <col:11, col:38>
    (CXXOperatorCallExpr 0xa0f2228 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f21e8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
      (CXXDependentScopeMemberExpr 0xa0f2198 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa0f2188 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0xa0f21d0 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0xa0f2350 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0xa0f2340 <col:11, col:38>
    (CXXOperatorCallExpr 0xa0f2318 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f22d8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (CXXDependentScopeMemberExpr 0xa0f2288 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa0f2278 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0xa0f22c0 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0xa0f23f8 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0xa0f23e0 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0f2378 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa0f2368 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0xa0f23c8 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0xa0f23b0 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0xa0f2488 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0xa0f2470 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0f2420 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa0f2410 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0xa0f2458 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0xa0f2988 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0xa0f2968 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0xa0f26e8 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa0f25f0 <col:8> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0f26b0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f2668 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00)
        (CXXThisExpr 0xa0f2608 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa0f2650 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa0f2630 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa0f2618 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d12c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa0f26d8 <col:50> '_Bool' false))
    (CompoundStmt 0xa0f2948 <line:206:6, line:212:6>
      (CallExpr 0xa0f2758 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0f2720 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0xa0f2710 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0xa0f27d8 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0f2788 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0xa0f2778 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa0f27bc <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d1540 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa0f2920 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0f2838 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0xa0f28f0 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0xa0f28b8 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0f2880 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0xa0f2870 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0xa0f28d4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d1540 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa0f2904 <col:53> 'const _CharT' lvalue Var 0xa0d11a0 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0xa0f2a60 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa0f2a50 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa0f2a38 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0xa0f2a00 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f29c8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CXXThisExpr 0xa0f29a0 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0xa0f29b0 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0xa0f2c98 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0xa0f2c88 <line:222:4, line:223:46>
    (ConditionalOperator 0xa0f2c68 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0xa0f2b98 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0xa0f2b80 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0xa0f2ac8 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0xa0f2aa8 <col:13, col:26> '<dependent type>'
              (MemberExpr 0xa0f2a88 <col:13> '<bound member function type>' ->_M_is_leaked 0xa0d1350
                (CXXThisExpr 0xa0f2a78 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0xa0f2b58 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0xa0f2b10 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
            (DeclRefExpr 0xa0f2adc <col:31> 'const _Alloc' lvalue ParmVar 0xa0d1750 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0xa0f2af4 <col:43> 'const _Alloc' lvalue ParmVar 0xa0d17a0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0xa0f2be0 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0xa0f2bc0 <col:14> '<bound member function type>' ->_M_refcopy 0xa0d1cc0
          (CXXThisExpr 0xa0f2bb0 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0xa0f2c48 <col:29, col:46> '<dependent type>'
        (MemberExpr 0xa0f2c10 <col:29> '<bound member function type>' ->_M_clone 0xa0d3d00
          (CXXThisExpr 0xa0f2c00 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa0f2c30 <col:38> 'const _Alloc' lvalue ParmVar 0xa0d1750 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0xa0f3040 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa0f3020 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0xa0f2da8 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa0f2cac <col:8> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0f2d70 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f2d28 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00)
        (CXXThisExpr 0xa0f2cc8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa0f2d10 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa0f2cf0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa0f2cd8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d12c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa0f2d98 <col:50> '_Bool' false))
    (CompoundStmt 0xa0f3008 <line:236:6, line:245:6>
      (NullStmt 0xa0f2dd0 <line:238:67>)
      (IfStmt 0xa0f2fe8 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0f2f30 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0xa0f2ef0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540)
          (CallExpr 0xa0f2eb0 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0xa0f2e00 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0xa0f2e68 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0xa0f2e30 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0xa0f2e20 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0xa0f2e98 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa0f2e80 <col:10> 'int' 1)))
          (IntegerLiteral 0xa0f2ed8 <col:16> 'int' 0))
        (CompoundStmt 0xa0f2fd0 <line:241:3, line:244:3>
          (NullStmt 0xa0f2f58 <line:242:63>)
          (CallExpr 0xa0f2fb0 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0xa0f2f78 <col:5> '<bound member function type>' ->_M_destroy 0xa0d1c40
              (CXXThisExpr 0xa0f2f68 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0xa0f2f98 <col:16> 'const _Alloc' lvalue ParmVar 0xa0d1aa0 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0xa0f32d8 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0xa0f3258 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0xa0f3150 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa0f3054 <col:8> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0f3118 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f30d0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00)
        (CXXThisExpr 0xa0f3070 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa0f30b8 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa0f3098 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa0f3080 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d12c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa0f3140 <col:50> '_Bool' false))
    (CallExpr 0xa0f3230 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0xa0f3198 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0xa0cb170 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0xa0f3200 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0xa0f31c8 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa0f31b8 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0xa0f3218 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0xa0f32c8 <line:258:4, col:22>
    (CallExpr 0xa0f32a8 <col:11, col:22> '<dependent type>'
      (MemberExpr 0xa0f3288 <col:11> '<bound member function type>' ->_M_refdata 0xa0d16c0
        (CXXThisExpr 0xa0f3278 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0xa0f1d40 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0xa0f32f0 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0xa0d3f30 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0xa0f3348 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0xa0d3ee0 '__dat' '_CharT *')
) (CompoundStmt 0xa0f33a0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa0d4150 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0xa0d4118 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0xa0f3460 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0f3450 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0xa0f3418 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0xa0f33f4 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa0d41c0
        (CXXThisExpr 0xa0f33c8 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0xa0f3538 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0xa0f3528 <col:9, col:39>
    (ParenExpr 0xa0f3510 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0xa0f34f8 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0f34a8 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0xa0f3488 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa0d41c0
            (CXXThisExpr 0xa0f3478 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa0f34dc <col:36> '_CharT *' lvalue ParmVar 0xa0d42b0 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0xa0f3688 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0f3678 <col:9, col:59>
    (UnaryOperator 0xa0f3660 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0xa0f3648 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0xa0f3630 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0xa0f35e8 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0xa0f35d0 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0xa0f35a0 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0xa0f3560 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0xa0f3748 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0xa0f3738 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0xa0f3718 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa0f36f8 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa0f36b8 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0xa0f38d0 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0xa0f38c0 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0xa0f38a0 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa0f3878 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f3840 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa0f37b8 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0xa0f3778 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0xa0f3820 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0f37e8 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa0f37d8 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0xa0f3a18 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0xa0f39f8 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0xa0f3990 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0xa0f3970 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0f3938 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0xa0f3918 <col:7, col:14> '<dependent type>'
            (MemberExpr 0xa0f38f8 <col:7> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa0f38e8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0xa0f39d8 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0xa0f39b8 <col:4> '<bound member function type>' ->_M_leak_hard 0xa0d94d0
        (CXXThisExpr 0xa0f39a8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0xa0f3c40 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0xa0f3bf8 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f3af0 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f3ab0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0xa0f3a2c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4610 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa0f3a90 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0f3a58 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0xa0f3a48 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa0f3bc8 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0xa0f3bb8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f3b7c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0f3be8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa0f3b68 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa0f3b4c </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0xa0d4660 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0xa0f3c30 <line:319:2, col:9>
    (DeclRefExpr 0xa0f3c14 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4610 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0xa0f3f78 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0xa0f3f58 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f3e70 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f3e30 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
      (CXXOperatorCallExpr 0xa0f3df0 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f3db8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CallExpr 0xa0f3ca0 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0f3c68 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0f3c58 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0xa0f3da0 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0xa0f3d78 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa0f3d40 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (CallExpr 0xa0f3d08 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0f3cd0 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa0f3cc0 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa0f3d24 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4770 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0xa0f3e14 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d47b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa0f3f28 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0xa0f3f18 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f3efc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f598d0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0f3f48 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa0f3ee8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa0f3ecc </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0xa0d4800 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0xa0f4298 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0xa0f4138 <line:333:2, col:54>
    0xa0f3fa0 "const bool __testoff =
      (CXXOperatorCallExpr 0xa0f4110 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f40d0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
        (DeclRefExpr 0xa0f3fd4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4980 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa0f40a8 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa0f4070 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CallExpr 0xa0f4038 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0f4000 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa0f3ff0 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0xa0f4054 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4940 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0xa0f4288 <line:334:2, col:44>
    (ConditionalOperator 0xa0f4268 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0xa0f4258 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0f4148 <col:9> 'const _Bool' lvalue Var 0xa0f3fa0 '__testoff' 'const _Bool'))
      (DeclRefExpr 0xa0f4160 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4980 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa0f4230 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f41f8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CallExpr 0xa0f41c0 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0f4188 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa0f4178 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa0f41dc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4940 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0xa0f46e0 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0xa0f46d0 <line:341:2, line:342:58>
    (ParenExpr 0xa0f46b8 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0xa0f46a0 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0xa0f4430 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0xa0f4390 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0xa0f43a8 <col:32> 'const _CharT *' lvalue ParmVar 0xa0d4ac0 '__s' 'const _CharT *')
          (CallExpr 0xa0f4410 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0xa0f43d0 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0xa0f4678 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0xa0f4510 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0xa0f4638 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa0f4600 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
            (CallExpr 0xa0f4578 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0xa0f4538 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0xa0f45e0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0f45a8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa0f4598 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0xa0f465c <col:54> 'const _CharT *' lvalue ParmVar 0xa0d4ac0 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0xa0f4950 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0xa0f4930 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f4770 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f4728 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (DeclRefExpr 0xa0f46f4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4c70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa0f4710 <col:13> 'int' 1))
    (CallExpr 0xa0f4848 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f47c0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa0f4800 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f47e4 <col:25> '_CharT *' lvalue ParmVar 0xa0d4be0 '__d' '_CharT *'))
      (UnaryOperator 0xa0f4830 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f4814 <col:31> 'const _CharT *' lvalue ParmVar 0xa0d4c30 '__s' 'const _CharT *')))
    (CallExpr 0xa0f4908 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f4898 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa0f48bc <col:22> '_CharT *' lvalue ParmVar 0xa0d4be0 '__d' '_CharT *')
      (DeclRefExpr 0xa0f48d4 <col:27> 'const _CharT *' lvalue ParmVar 0xa0d4c30 '__s' 'const _CharT *')
      (DeclRefExpr 0xa0f48ec <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4c70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0xa0f4bc0 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0xa0f4ba0 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f49e0 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f4998 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (DeclRefExpr 0xa0f4964 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4e40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa0f4980 <col:13> 'int' 1))
    (CallExpr 0xa0f4ab8 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f4a30 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa0f4a70 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f4a54 <col:25> '_CharT *' lvalue ParmVar 0xa0d4db0 '__d' '_CharT *'))
      (UnaryOperator 0xa0f4aa0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f4a84 <col:31> 'const _CharT *' lvalue ParmVar 0xa0d4e00 '__s' 'const _CharT *')))
    (CallExpr 0xa0f4b78 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f4b08 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa0f4b2c <col:22> '_CharT *' lvalue ParmVar 0xa0d4db0 '__d' '_CharT *')
      (DeclRefExpr 0xa0f4b44 <col:27> 'const _CharT *' lvalue ParmVar 0xa0d4e00 '__s' 'const _CharT *')
      (DeclRefExpr 0xa0f4b5c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4e40 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0xa0f4e18 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0xa0f4df8 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f4c50 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f4c08 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (DeclRefExpr 0xa0f4bd4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4f60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa0f4bf0 <col:13> 'int' 1))
    (CallExpr 0xa0f4d10 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f4ca0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa0f4ce0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f4cc4 <col:25> '_CharT *' lvalue ParmVar 0xa0d4f20 '__d' '_CharT *'))
      (DeclRefExpr 0xa0f4cf4 <col:30> '_CharT' lvalue ParmVar 0xa0d4fa0 '__c' '_CharT'))
    (CallExpr 0xa0f4dd0 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f4d60 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa0f4d84 <col:24> '_CharT *' lvalue ParmVar 0xa0d4f20 '__d' '_CharT *')
      (DeclRefExpr 0xa0f4d9c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d4f60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0f4db4 <col:34> '_CharT' lvalue ParmVar 0xa0d4fa0 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0xa0f5048 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0xa0f5020 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f4ea8 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f4e60 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00)
      (DeclRefExpr 0xa0f4e2c <col:11> '_Iterator' lvalue ParmVar 0xa0d5180 '__k1' '_Iterator')
      (DeclRefExpr 0xa0f4e44 <col:19> '_Iterator' lvalue ParmVar 0xa0d51c0 '__k2' '_Iterator'))
    (BinaryOperator 0xa0f4f30 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0xa0f4ee8 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0f4ecc <col:27> '_Iterator' lvalue ParmVar 0xa0d5180 '__k1' '_Iterator'))
      (UnaryOperator 0xa0f4f18 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0f4efc <col:35> '_CharT *' lvalue ParmVar 0xa0d5140 '__p' '_CharT *')))
    (CallExpr 0xa0f4ff8 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f4f70 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0xa0f4fb0 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f4f94 <col:27> '_CharT *' lvalue ParmVar 0xa0d5140 '__p' '_CharT *'))
      (UnaryOperator 0xa0f4fe0 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0f4fc4 <col:33> '_Iterator' lvalue ParmVar 0xa0d5180 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0xa0f51c8 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0xa0f51a0 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0xa0f5060 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0xa0d59f0 0xa0d5810 0xa0d5630 0xa0d5470 0xa0d52e0)
    (DeclRefExpr 0xa0f50a4 <col:23> '_CharT *' lvalue ParmVar 0xa0d5330 '__p' '_CharT *')
    (CallExpr 0xa0f5110 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f50d8 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa0f50bc <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0d5370 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0xa0f5180 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f5148 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa0f512c <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0d53b0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0xa0f81f8 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0xa0f81d0 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0xa0f51e0 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0xa0d59f0 0xa0d5810 0xa0d5630 0xa0d5470 0xa0d52e0)
    (DeclRefExpr 0xa0f5224 <col:23> '_CharT *' lvalue ParmVar 0xa0d54f0 '__p' '_CharT *')
    (CallExpr 0xa0f8140 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f5258 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa0f523c <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0d5530 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0xa0f81b0 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f8178 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa0f815c <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0d5570 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0xa0f8310 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0xa0f82e8 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0xa0f820c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0xa0f8224 <col:17> '_CharT *' lvalue ParmVar 0xa0d56b0 '__p' '_CharT *')
    (DeclRefExpr 0xa0f823c <col:22> '_CharT *' lvalue ParmVar 0xa0d5700 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0xa0f82c0 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f8288 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0xa0f8254 <col:28> '_CharT *' lvalue ParmVar 0xa0d5750 '__k2' '_CharT *')
      (DeclRefExpr 0xa0f826c <col:35> '_CharT *' lvalue ParmVar 0xa0d5700 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0xa0f8428 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0xa0f8400 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0xa0f8324 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0xa0f833c <col:17> '_CharT *' lvalue ParmVar 0xa0d5890 '__p' '_CharT *')
    (DeclRefExpr 0xa0f8354 <col:22> 'const _CharT *' lvalue ParmVar 0xa0d58e0 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0xa0f83d8 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f83a0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0xa0f836c <col:28> 'const _CharT *' lvalue ParmVar 0xa0d5930 '__k2' 'const _CharT *')
      (DeclRefExpr 0xa0f8384 <col:35> 'const _CharT *' lvalue ParmVar 0xa0d58e0 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0xa0f9958 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0xa0f8550 <line:403:2, col:58>
    0xa0f8460 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0xa0f8530 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0xa0f8508 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa0f84d0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (DeclRefExpr 0xa0f84a0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d5a70 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa0f84b8 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0d5ab0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0xa0f9938 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0f95b8 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f9578 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (DeclRefExpr 0xa0f8560 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa0f8460 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0xa0f9558 <col:12, col:46> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
    (ReturnStmt 0xa0f96a0 <line:406:4, col:45>
      (ImplicitCastExpr 0xa0f9690 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa0f9670 <col:11, col:45> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int')))
    (IfStmt 0xa0f9918 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa0f97c0 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa0f9780 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550)
        (DeclRefExpr 0xa0f96b0 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa0f8460 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0xa0f9760 <col:17, col:51> 'const int':'const int' lvalue Var 0xa0f8dd0 '__min' 'const int':'const int'))
      (ReturnStmt 0xa0f98b0 <line:408:4, col:45>
        (ImplicitCastExpr 0xa0f98a0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa0f9880 <col:11, col:45> 'const int':'const int' lvalue Var 0xa0f8dd0 '__min' 'const int':'const int')))
      (ReturnStmt 0xa0f9908 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0xa0f98e8 <col:11, col:18> 'int'
          (DeclRefExpr 0xa0f98cc <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa0f8460 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0xa0f99f0 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0xa0f99e0 <col:9, col:35>
    (CallExpr 0xa0f99c0 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0f9998 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0xa0f9a78 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0f9a40 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0xa0f9a20 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0xa0f9a04 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d9550 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0xa0f9aa0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0xa0f9b00 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0xa0f1d58 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1d78 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1d98 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1db8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1dd8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa0f9c20 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0xa0f9c00 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0f9b60 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0xa0f9b40 <col:9, col:16> '<dependent type>'
        (MemberExpr 0xa0f9b20 <col:9> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa0f9b10 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa0f9be0 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f9ba8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0xa0f9b98 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa0f9cc8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa0f9cb8 <col:9, col:34>
    (CallExpr 0xa0f9c98 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f9c48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0f9c38 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0f9c7c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0da4b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0xa0f9d70 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0xa0f9d60 <col:9, col:32>
    (CallExpr 0xa0f9d40 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0f9cf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0f9ce0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0f9d24 <col:29> 'const _CharT *' lvalue ParmVar 0xa0da5d0 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0xa0f9e60 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0xa0f9e00 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0f9d98 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa0f9d88 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa0f9dd0 <col:15> 'int' 1)
    (DeclRefExpr 0xa0f9de8 <col:18> '_CharT' lvalue ParmVar 0xa0da6e0 '__c' '_CharT'))
  (ReturnStmt 0xa0f9e50 <line:562:2, col:10>
    (UnaryOperator 0xa0f9e38 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0f9e28 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0xa0f9f70 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0xa0f9ea8 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0xa0f9e88 <col:2> '<bound member function type>' ->_M_leak 0xa0d45a0
      (CXXThisExpr 0xa0f9e78 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa0f9f60 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0xa0f9f40 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa0f9f20 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa0f9ee0 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0xa0fa030 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0xa0fa020 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa0fa000 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa0f9fe0 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa0f9fa0 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0xa0fa208 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0xa0fa078 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0xa0fa058 <col:2> '<bound member function type>' ->_M_leak 0xa0d45a0
      (CXXThisExpr 0xa0fa048 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa0fa1f8 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0xa0fa1d8 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa0fa1b0 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa0fa178 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa0fa0f0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa0fa0b0 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0xa0fa158 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fa120 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa0fa110 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0xa0fa390 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0xa0fa380 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0xa0fa360 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa0fa338 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa0fa300 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa0fa278 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa0fa238 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0xa0fa2e0 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fa2a8 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa0fa298 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0xa0fa448 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0xa0fa438 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa0fa418 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa0fa3f8 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fa3c0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa0fa3b0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa0fa500 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0xa0fa4f0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa0fa4d0 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa0fa4b0 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fa478 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0xa0fa468 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0xa0fa5b8 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0xa0fa5a8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa0fa588 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa0fa568 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fa530 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa0fa520 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa0fa670 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0xa0fa660 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa0fa640 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa0fa620 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fa5e8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0xa0fa5d8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0xa0fa720 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0fa710 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa0fa6d8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa0fa6b8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa0fa698 <col:16> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa0fa688 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0xa0fa7d0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0xa0fa7c0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa0fa788 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa0fa768 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa0fa748 <col:16> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa0fa738 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0xa0fa850 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0xa0fa840 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0xa0fa808 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0xa0fa910 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0xa0fa8e8 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0fa878 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa0fa868 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa0fa8ac <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0db020 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa0fa8d0 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0xa0fa9c0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0xa0fa9b0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa0fa978 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa0fa958 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa0fa938 <col:16> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa0fa928 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0xa0f1df0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0xa0faac8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0xa0faaa0 <col:9, col:37> '<dependent type>'
    (MemberExpr 0xa0fa9e8 <col:9> '<bound member function type>' ->_M_mutate 0xa0d9440
      (CXXThisExpr 0xa0fa9d8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa0faa08 <col:19> 'int' 0)
    (CallExpr 0xa0faa68 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0faa30 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0xa0faa20 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0xa0faa88 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0xa0fabe0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0fabd0 <col:9, col:32>
    (CXXOperatorCallExpr 0xa0faba8 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa0fab60 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (CallExpr 0xa0fab28 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0faaf0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa0faae0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0xa0fab48 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0xa0facb8 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0xa0fabf8 <line:819:40>)
  (ReturnStmt 0xa0faca8 <line:820:2, col:24>
    (ArraySubscriptExpr 0xa0fac90 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0xa0fac58 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa0fac18 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0fac74 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0db330 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0xa0fadf0 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0xa0facd0 <line:837:40>)
  (NullStmt 0xa0face0 <line:839:42>)
  (CallExpr 0xa0fad20 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0xa0fad00 <col:2> '<bound member function type>' ->_M_leak 0xa0d45a0
      (CXXThisExpr 0xa0facf0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa0fade0 <line:841:2, col:24>
    (ArraySubscriptExpr 0xa0fadc8 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0xa0fad90 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa0fad50 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0fadac <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ddff0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa0fb0e0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0fb010 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0faed0 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa0fae90 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0)
      (DeclRefExpr 0xa0fae10 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0de100 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa0fae70 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fae38 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa0fae28 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa0fafe0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0fafd0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0fb000 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0fb0d0 <line:859:2, col:22>
    (ArraySubscriptExpr 0xa0fb0b8 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0xa0fb080 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa0fb040 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0fb09c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0de100 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0xa0fb3b8 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0xa0fb298 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0fb1a0 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa0fb160 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0)
      (DeclRefExpr 0xa0fb0f8 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0de1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa0fb140 <col:13, col:18> '<dependent type>'
        (MemberExpr 0xa0fb120 <col:13> '<bound member function type>' ->size 0xa0dad60
          (CXXThisExpr 0xa0fb110 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa0fb268 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0xa0fb258 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fb23c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0fb288 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fb228 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0fb1fc </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0xa0fb2e8 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0xa0fb2c8 <col:2> '<bound member function type>' ->_M_leak 0xa0d45a0
      (CXXThisExpr 0xa0fb2b8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa0fb3a8 <line:913:2, col:22>
    (ArraySubscriptExpr 0xa0fb390 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0xa0fb358 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa0fb318 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0fb374 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0de1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa0fb468 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0xa0fb458 <col:9, col:34>
    (CallExpr 0xa0fb438 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fb3e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fb3d8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0fb41c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0de290 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0xa0fb510 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0xa0fb500 <col:9, col:32>
    (CallExpr 0xa0fb4e0 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fb490 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fb480 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0fb4c4 <col:29> 'const _CharT *' lvalue ParmVar 0xa0de370 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0xa0fb5e0 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0xa0fb588 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0fb538 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa0fb528 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa0fb56c <col:18> '_CharT' lvalue ParmVar 0xa0de440 '__c' '_CharT'))
  (ReturnStmt 0xa0fb5d0 <line:944:2, col:10>
    (UnaryOperator 0xa0fb5b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fb5a8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0xa0fb730 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0xa0fb5f8 <line:998:32>)
  (ReturnStmt 0xa0fb720 <line:999:2, col:51>
    (CallExpr 0xa0fb6f8 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fb618 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fb608 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0fb64c <col:22> 'const _CharT *' lvalue ParmVar 0xa0de920 '__s' 'const _CharT *')
      (CallExpr 0xa0fb6d8 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fb688 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0xa0fb6bc <col:47> 'const _CharT *' lvalue ParmVar 0xa0de920 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa0fb8a0 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0xa0fb890 <col:11, col:69>
    (CallExpr 0xa0fb860 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fb758 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fb748 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa0fb7c0 <col:32, col:40> '<dependent type>'
        (MemberExpr 0xa0fb7a0 <col:32> '<bound member function type>' ->_M_iend 0xa0d4520
          (CXXThisExpr 0xa0fb790 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa0fb810 <col:43, col:51> '<dependent type>'
        (MemberExpr 0xa0fb7f0 <col:43> '<bound member function type>' ->_M_iend 0xa0d4520
          (CXXThisExpr 0xa0fb7e0 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa0fb82c <col:54> '_InputIterator' lvalue ParmVar 0xa0deba0 '__first' '_InputIterator')
      (DeclRefExpr 0xa0fb844 <col:63> '_InputIterator' lvalue ParmVar 0xa0debe0 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0xa0fbe80 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0xa0fb9d8 <line:1044:2, col:42>
    0xa0fb8c0 "const size_type __len =
      (CXXOperatorCallExpr 0xa0fb9b0 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa0fb978 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (IntegerLiteral 0xa0fb8f8 <col:26> 'int' 1)
        (CallExpr 0xa0fb958 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fb920 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa0fb910 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa0fbc10 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0xa0fbb78 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa0fbaa8 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa0fba68 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
        (DeclRefExpr 0xa0fb9e8 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0fb8c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa0fba48 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fba10 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0xa0fba00 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa0fbb58 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fbb20 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0xa0fbb00 <col:34, col:41> '<dependent type>'
            (MemberExpr 0xa0fbae0 <col:34> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa0fbad0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0xa0fbbf0 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fbba0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fbb90 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0fbbd4 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0fb8c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0xa0fbd98 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0fbc58 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0xa0fbd68 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0xa0fbce0 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa0fbca0 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0xa0fbd48 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fbd10 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa0fbd00 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa0fbd7c <col:47> '_CharT' lvalue ParmVar 0xa0ded20 '__c' '_CharT'))
  (CallExpr 0xa0fbe60 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0fbe10 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa0fbdf0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa0fbdd0 <col:2> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa0fbdc0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa0fbe44 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0fb8c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0xa0fece8 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0xa0fecd8 <line:1090:9, line:1092:34>
    (CallExpr 0xa0fc120 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fbeb0 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fbea0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa0fc050 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa0fc018 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa0fbf38 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fbf00 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa0fbee4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0def00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa0fbff0 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fbf70 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa0fbf54 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0def00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa0fbfa4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0def40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa0fbfbc <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0xa0fc0f8 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fc090 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa0fc074 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0def00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa0fc0c4 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0def40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa0fc0dc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0def80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0xa0fee38 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0xa0fed00 <line:1119:32>)
  (ReturnStmt 0xa0fee28 <line:1120:2, col:51>
    (CallExpr 0xa0fee00 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fed20 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fed10 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0fed54 <col:22> 'const _CharT *' lvalue ParmVar 0xa0df180 '__s' 'const _CharT *')
      (CallExpr 0xa0fede0 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fed90 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0xa0fedc4 <col:47> 'const _CharT *' lvalue ParmVar 0xa0df180 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0xa0fef98 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0xa0fef88 <col:9, col:67>
    (CallExpr 0xa0fef58 <col:16, col:67> '<dependent type>'
      (MemberExpr 0xa0fee60 <col:16> '<bound member function type>' ->_M_replace_aux 0xa0e9040
        (CXXThisExpr 0xa0fee50 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0xa0feea0 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa0fee88 <col:41> 'int' 0))
      (CallExpr 0xa0fef08 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0feed0 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0xa0feec0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa0fef24 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0df250 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0fef3c <col:64> '_CharT' lvalue ParmVar 0xa0df290 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa0ff108 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0xa0ff0f8 <col:11, col:71>
    (CallExpr 0xa0ff0c8 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fefc0 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa0fefb0 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa0ff028 <col:32, col:42> '<dependent type>'
        (MemberExpr 0xa0ff008 <col:32> '<bound member function type>' ->_M_ibegin 0xa0d44a0
          (CXXThisExpr 0xa0feff8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa0ff078 <col:45, col:53> '<dependent type>'
        (MemberExpr 0xa0ff058 <col:45> '<bound member function type>' ->_M_iend 0xa0d4520
          (CXXThisExpr 0xa0ff048 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa0ff094 <col:56> '_InputIterator' lvalue ParmVar 0xa0df3c0 '__first' '_InputIterator')
      (DeclRefExpr 0xa0ff0ac <col:65> '_InputIterator' lvalue ParmVar 0xa0df400 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0xa0ff1f8 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0xa0ff1c8 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0ff130 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa0ff120 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa0ff164 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0df520 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa0ff17c <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0df520 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa0ff194 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0df560 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa0ff1ac <col:38> '_CharT' lvalue ParmVar 0xa0df5a0 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0xa0ff2e8 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0xa0ff2b8 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0ff220 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa0ff210 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa0ff254 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0df730 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa0ff26c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0df730 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa0ff284 <col:35> '_InputIterator' lvalue ParmVar 0xa0df770 '__beg' '_InputIterator')
    (DeclRefExpr 0xa0ff29c <col:42> '_InputIterator' lvalue ParmVar 0xa0df7b0 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa0ff468 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0xa0ff458 <col:9, col:70>
    (CallExpr 0xa0ff428 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0ff310 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0ff300 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0ff344 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0df910 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0ff35c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0df960 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0xa0ff398 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa0ff380 <col:54> 'int' 0))
      (CallExpr 0xa0ff408 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ff3d0 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ff3b4 <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0df960 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0xa0ff750 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0xa0ff740 <line:1243:9, line:1245:35>
    (CallExpr 0xa0ff718 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0ff490 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0ff480 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0ff4c4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0dfa70 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa0ff648 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0ff610 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa0ff530 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0ff4f8 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0xa0ff4dc <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0dfac0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa0ff5e8 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0ff568 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa0ff54c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0dfac0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa0ff59c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0dfb00 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa0ff5b4 <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0xa0ff6f0 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ff688 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ff66c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0dfac0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa0ff6bc <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0dfb00 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa0ff6d4 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0dfb40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0xa0ff8b8 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0xa0ff768 <line:1284:32>)
  (ReturnStmt 0xa0ff8a8 <line:1285:2, col:58>
    (CallExpr 0xa0ff880 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0ff788 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa0ff778 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0ff7bc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0dfe50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0ff7d4 <col:29> 'const _CharT *' lvalue ParmVar 0xa0dfea0 '__s' 'const _CharT *')
      (CallExpr 0xa0ff860 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ff810 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0xa0ff844 <col:54> 'const _CharT *' lvalue ParmVar 0xa0dfea0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0xa0ffa50 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0xa0ffa40 <line:1306:9, line:1307:32>
    (CallExpr 0xa0ffa10 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0xa0ff8e0 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0xa0e9040
        (CXXThisExpr 0xa0ff8d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa0ff978 <col:31, col:69> '<dependent type>'
        (MemberExpr 0xa0ff910 <col:31> '<bound member function type>' ->_M_check 0xa0d4700
          (CXXThisExpr 0xa0ff900 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa0ff930 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3090 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa0ff948 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0xa0ff9c0 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa0ff9a8 <col:20> 'int' 0))
      (DeclRefExpr 0xa0ff9dc <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e30d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0ff9f4 <col:29> '_CharT' lvalue ParmVar 0xa0e3110 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0xa0ffe68 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0xa0ffa68 <line:1324:66>)
  (DeclStmt 0xa0ffb80 <line:1325:2, col:43>
    0xa0ffa80 "const size_type __pos =
      (CXXOperatorCallExpr 0xa0ffb58 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa0ffb20 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa0ffab4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e3250 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa0ffb00 <col:32, col:42> '<dependent type>'
          (MemberExpr 0xa0ffae0 <col:32> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa0ffad0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0xa0ffc70 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0xa0ffba0 <col:2> '<bound member function type>' ->_M_replace_aux 0xa0e9040
      (CXXThisExpr 0xa0ffb90 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa0ffbc0 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0ffa80 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa0ffbf8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa0ffbe0 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0xa0ffc38 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa0ffc20 <col:48> 'int' 1))
    (DeclRefExpr 0xa0ffc54 <col:52> '_CharT' lvalue ParmVar 0xa0e3290 '__c' '_CharT'))
  (CallExpr 0xa0ffd28 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0ffcf0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa0ffcd0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa0ffcb0 <col:2> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa0ffca0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0xa0ffe58 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0xa0ffe38 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa0ffe10 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa0ffdd8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa0ffda0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa0ffd60 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa0ffdbc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0ffa80 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0xa0f1e08 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0xa0f1e20 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0xa100088 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0xa100028 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0xa0ffea0 <line:1348:2> '<bound member function type>' ->_M_mutate 0xa0d9440
      (CXXThisExpr 0xa0ffe90 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0xa0fff38 <col:12, col:49> '<dependent type>'
      (MemberExpr 0xa0ffed0 <col:12> '<bound member function type>' ->_M_check 0xa0d4700
        (CXXThisExpr 0xa0ffec0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0ffef0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e33a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa0fff08 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0xa0fffc0 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0xa0fff70 <col:5> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa0fff60 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0fff90 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e33a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0fffa8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e33e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0xa100008 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa0ffff0 <col:37> 'int' 0)))
  (ReturnStmt 0xa100078 <line:1350:2, col:10>
    (UnaryOperator 0xa100060 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa100050 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0xa100488 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0xa1000a0 <line:1365:32>)
  (DeclStmt 0xa1001c0 <line:1366:2, col:50>
    0xa1000c0 "const size_type __pos =
      (CXXOperatorCallExpr 0xa100198 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa100160 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa1000f4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e34f0 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa100140 <col:39, col:49> '<dependent type>'
          (MemberExpr 0xa100120 <col:39> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa100110 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0xa100298 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0xa1001e0 <col:2> '<bound member function type>' ->_M_mutate 0xa0d9440
      (CXXThisExpr 0xa1001d0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa100200 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1000c0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa100238 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa100220 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0xa100278 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa100260 <col:43> 'int' 0)))
  (CallExpr 0xa100348 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa100310 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa1002f0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa1002d0 <col:2> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa1002c0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0xa100478 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0xa100458 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa100430 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa1003f8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa1003c0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa100380 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1003dc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1000c0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa100648 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0xa100638 <col:9, col:71>
    (CallExpr 0xa100608 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1004c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1004b0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1004f4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa10050c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3790 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa100578 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa100540 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa100524 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e37e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa1005e8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1005b0 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0xa100594 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e37e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0xa100950 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0xa100940 <line:1425:9, line:1427:37>
    (CallExpr 0xa100910 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa100670 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa100660 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1006a4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3920 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1006bc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3960 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa100840 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa100808 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70)
        (CallExpr 0xa100728 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1006f0 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0xa1006d4 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e39b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa1007e0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa100760 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0xa100744 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e39b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa100794 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e39f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa1007ac <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0xa1008e8 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa100880 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa100864 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e39b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1008b4 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e39f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1008cc <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3a30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0xa100ad8 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0xa100968 <line:1468:32>)
  (ReturnStmt 0xa100ac8 <line:1469:2, col:65>
    (CallExpr 0xa100a98 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa100988 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa100978 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1009bc <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3d90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1009d4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3dd0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1009ec <col:36> 'const _CharT *' lvalue ParmVar 0xa0e3e20 '__s' 'const _CharT *')
      (CallExpr 0xa100a78 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa100a28 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0xa100a5c <col:61> 'const _CharT *' lvalue ParmVar 0xa0e3e20 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0xa100cc0 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0xa100cb0 <line:1490:9, line:1491:42>
    (CallExpr 0xa100c80 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0xa100b00 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0xa0e9040
        (CXXThisExpr 0xa100af0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa100ba0 <col:31, col:70> '<dependent type>'
        (MemberExpr 0xa100b30 <col:31> '<bound member function type>' ->_M_check 0xa0d4700
          (CXXThisExpr 0xa100b20 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa100b50 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3f60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa100b68 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0xa100c28 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0xa100bd8 <col:10> '<bound member function type>' ->_M_limit 0xa0d4a20
          (CXXThisExpr 0xa100bc8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa100bf8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3f60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa100c10 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3fa0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa100c4c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e3fe0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa100c64 <col:39> '_CharT' lvalue ParmVar 0xa0e4020 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa100e70 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0xa100e60 <col:9, col:71>
    (CallExpr 0xa100e30 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa100ce8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa100cd8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa100d1c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4160 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa100d34 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e41a0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0xa100da0 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa100d68 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa100d4c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e41f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa100e10 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa100dd8 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0xa100dbc <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0e41f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0xa1010a8 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0xa100e88 <line:1528:27>)
  (ReturnStmt 0xa101098 <line:1529:2, col:64>
    (CallExpr 0xa101068 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa100ea8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa100e98 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa100f80 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa100f48 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa100edc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4330 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa100f28 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa100f08 <col:30> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa100ef8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa101010 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa100fd8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa100fa4 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4370 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa100fbc <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4330 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa101034 <col:56> 'const _CharT *' lvalue ParmVar 0xa0e43c0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa10104c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e4400 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0xa101230 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0xa1010c0 <line:1548:32>)
  (ReturnStmt 0xa101220 <line:1549:2, col:64>
    (CallExpr 0xa1011f0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1010e0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1010d0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa101114 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4540 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa10112c <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4580 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa101144 <col:35> 'const _CharT *' lvalue ParmVar 0xa0e45d0 '__s' 'const _CharT *')
      (CallExpr 0xa1011d0 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa101180 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1011b4 <col:60> 'const _CharT *' lvalue ParmVar 0xa0e45d0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0xa101450 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0xa101248 <line:1570:27>)
  (ReturnStmt 0xa101440 <line:1571:2, col:65>
    (CallExpr 0xa101410 <col:9, col:65> '<dependent type>'
      (MemberExpr 0xa101268 <col:9> '<bound member function type>' ->_M_replace_aux 0xa0e9040
        (CXXThisExpr 0xa101258 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa101328 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa1012f0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101288 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4710 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1012d0 <col:31, col:41> '<dependent type>'
          (MemberExpr 0xa1012b0 <col:31> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa1012a0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1013b8 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa101380 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa10134c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4750 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa101364 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4710 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1013dc <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e4790 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1013f4 <col:62> '_CharT' lvalue ParmVar 0xa0e47d0 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0xa101750 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0xa101468 <line:1594:29>)
  (NullStmt 0xa101478 <line:1595:46>)
  (DeclStmt 0xa101620 <line:1596:4, col:72>
    0xa1015f0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0xa101740 <line:1597:4, col:66>
    (CallExpr 0xa101710 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa101640 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa101680 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4960 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa101698 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e49a0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa1016b0 <col:43> '_InputIterator' lvalue ParmVar 0xa0e49e0 '__k1' '_InputIterator')
      (DeclRefExpr 0xa1016c8 <col:49> '_InputIterator' lvalue ParmVar 0xa0e4a20 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0xa1016f8 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0xa101a18 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0xa101770 <line:1606:27>)
  (NullStmt 0xa101780 <line:1607:44>)
  (ReturnStmt 0xa101a08 <line:1608:2, line:1609:26>
    (CallExpr 0xa1019d8 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1017a0 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa101790 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa101878 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa101840 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa1017d4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4b80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa101820 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa101800 <col:30> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa1017f0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa101908 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1018d0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa10189c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4bc0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1018b4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4b80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa10192c <line:1609:9> '_CharT *' lvalue ParmVar 0xa0e4c10 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0xa1019b0 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa101978 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101944 <col:15> '_CharT *' lvalue ParmVar 0xa0e4c60 '__k2' '_CharT *')
        (DeclRefExpr 0xa10195c <col:22> '_CharT *' lvalue ParmVar 0xa0e4c10 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0xa101ce0 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0xa101a38 <line:1617:27>)
  (NullStmt 0xa101a48 <line:1618:44>)
  (ReturnStmt 0xa101cd0 <line:1619:2, line:1620:26>
    (CallExpr 0xa101ca0 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa101a68 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa101a58 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa101b40 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa101b08 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101a9c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4da0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa101ae8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa101ac8 <col:30> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa101ab8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa101bd0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa101b98 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101b64 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4de0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa101b7c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4da0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa101bf4 <line:1620:9> 'const _CharT *' lvalue ParmVar 0xa0e4e30 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0xa101c78 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa101c40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101c0c <col:15> 'const _CharT *' lvalue ParmVar 0xa0e4e80 '__k2' 'const _CharT *')
        (DeclRefExpr 0xa101c24 <col:22> 'const _CharT *' lvalue ParmVar 0xa0e4e30 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0xa102000 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0xa101d00 <line:1627:27>)
  (NullStmt 0xa101d10 <line:1628:44>)
  (ReturnStmt 0xa101ff0 <line:1629:2, line:1630:33>
    (CallExpr 0xa101fc0 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa101d30 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa101d20 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa101e08 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa101dd0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101d64 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4fc0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa101db0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa101d90 <col:30> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa101d80 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa101e98 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa101e60 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101e2c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8580 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa101e44 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e4fc0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0xa101f10 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa101ed8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa101ebc <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e85c0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0xa101f98 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa101f60 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa101f2c <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8600 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa101f44 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e85c0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0xa102320 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0xa102020 <line:1638:27>)
  (NullStmt 0xa102030 <line:1639:44>)
  (ReturnStmt 0xa102310 <line:1640:2, line:1641:33>
    (CallExpr 0xa1022e0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa102050 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa102040 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa102128 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1020f0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa102084 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8740 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1020d0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa1020b0 <col:30> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa1020a0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1021b8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa102180 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa10214c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8780 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa102164 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8740 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0xa102230 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1021f8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa1021dc <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e87c0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0xa1022b8 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa102280 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa10224c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8800 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa102264 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e87c0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa102538 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0xa102528 <col:11, col:76>
    (CallExpr 0xa1024f8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0xa102350 <col:18> '<bound member function type>' ->_M_replace_aux 0xa0e9040
        (CXXThisExpr 0xa102340 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa102410 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1023d8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa102370 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e89d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1023b8 <col:40, col:50> '<dependent type>'
          (MemberExpr 0xa102398 <col:40> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa102388 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1024a0 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa102468 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa102434 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e8a10 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa10244c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa0e89d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1024c4 <col:66> '_Integer' lvalue ParmVar 0xa0e8a50 '__n' '_Integer')
      (DeclRefExpr 0xa1024dc <col:71> '_Integer' lvalue ParmVar 0xa0e8a90 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0xa102780 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0xa102670 <line:1690:11, col:80>
    0xa102640 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0xa102770 <line:1691:11, col:56>
    (CallExpr 0xa102740 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa102680 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0xa0ea1a0 0xa0ea070 0xa0e9de0 0xa0e9b50)
      (DeclRefExpr 0xa1026c0 <col:31> '_InIterator' lvalue ParmVar 0xa0e92c0 '__beg' '_InIterator')
      (DeclRefExpr 0xa1026d8 <col:38> '_InIterator' lvalue ParmVar 0xa0e9300 '__end' '_InIterator')
      (DeclRefExpr 0xa1026f0 <col:45> 'const _Alloc' lvalue ParmVar 0xa0e9350 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0xa102728 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0xa102850 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0xa102840 <line:1700:11, line:1701:19>
    (CallExpr 0xa102818 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0xa102798 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0xa0e98d0 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0xa1027d0 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa1027b0 <col:60> '_Integer' lvalue ParmVar 0xa0e9550 '__beg' '_Integer'))
      (DeclRefExpr 0xa1027e8 <line:1701:9> '_Integer' lvalue ParmVar 0xa0e9590 '__end' '_Integer')
      (DeclRefExpr 0xa102800 <col:16> 'const _Alloc' lvalue ParmVar 0xa0e95e0 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0xa102928 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0xa102918 <col:9, col:44>
    (CallExpr 0xa1028f0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0xa102868 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0xa0ea1a0 0xa0ea070 0xa0e9de0 0xa0e9b50)
      (DeclRefExpr 0xa1028a8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0e9780 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1028c0 <col:36> '_CharT' lvalue ParmVar 0xa0e97c0 '__c' '_CharT')
      (DeclRefExpr 0xa1028d8 <col:41> 'const _Alloc' lvalue ParmVar 0xa0e9810 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0xa102b70 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0xa102a70 <line:1711:4, col:69>
    0xa102a40 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0xa102b60 <line:1712:4, col:58>
    (CallExpr 0xa102b30 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa102a80 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9740 0xa0e94b0)
      (DeclRefExpr 0xa102ab8 <col:28> '_InIterator' lvalue ParmVar 0xa0e99a0 '__beg' '_InIterator')
      (DeclRefExpr 0xa102ad0 <col:35> '_InIterator' lvalue ParmVar 0xa0e99e0 '__end' '_InIterator')
      (DeclRefExpr 0xa102ae8 <col:42> 'const _Alloc' lvalue ParmVar 0xa0e9a30 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0xa102b18 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0xa0f1e38 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0xa102c08 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa102bf8 <col:9, col:24>
    (CallExpr 0xa102bd8 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0xa102b98 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0xa102ca0 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0xa102c90 <col:9, col:24>
    (CallExpr 0xa102c70 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0xa102c30 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0xa106c40 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa106c30 <col:9, col:16>
    (MemberExpr 0xa106c10 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa0d41c0
      (CXXThisExpr 0xa106c00 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa0f1e50 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0xa106dd0 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0xa106dc0 <col:9, col:60>
    (CallExpr 0xa106d98 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa106c68 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa106c58 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa106cf0 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa106cb8 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa106c9c <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0ea8d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa106d0c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ea910 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa106d78 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa106d40 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0xa106d24 <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0ea8d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa0f1e68 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0xa106f38 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0xa106de8 <line:1826:32>)
  (ReturnStmt 0xa106f28 <line:1827:2, col:56>
    (CallExpr 0xa106f00 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa106e08 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa106df8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa106e3c <col:20> 'const _CharT *' lvalue ParmVar 0xa0eaa30 '__s' 'const _CharT *')
      (DeclRefExpr 0xa106e54 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eaa70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa106ee0 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa106e90 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa106ec4 <col:52> 'const _CharT *' lvalue ParmVar 0xa0eaa30 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0xa0f1e80 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa0f1e98 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1070c8 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0xa1070b8 <col:9, col:61>
    (CallExpr 0xa107090 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa106f60 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa106f50 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa106fe8 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa106fb0 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa106f94 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0eace0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa107004 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ead20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107070 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107038 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0xa10701c <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0eace0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa0f1eb0 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa107230 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0xa1070e0 <line:1884:32>)
  (ReturnStmt 0xa107220 <line:1885:2, col:57>
    (CallExpr 0xa1071f8 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107100 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1070f0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa107134 <col:21> 'const _CharT *' lvalue ParmVar 0xa0eaf60 '__s' 'const _CharT *')
      (DeclRefExpr 0xa10714c <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eafa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1071d8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107188 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1071bc <col:53> 'const _CharT *' lvalue ParmVar 0xa0eaf60 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0xa0f1ec8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa0f1ee0 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0xa1073c0 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0xa1073b0 <col:9, col:69>
    (CallExpr 0xa107388 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107258 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa107248 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1072e0 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1072a8 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0xa10728c <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0eb190 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1072fc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eb1d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107368 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107330 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0xa107314 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0eb190 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa0f1ef8 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0xa107528 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0xa1073d8 <line:1942:32>)
  (ReturnStmt 0xa107518 <line:1943:2, col:65>
    (CallExpr 0xa1074f0 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1073f8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1073e8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa10742c <col:29> 'const _CharT *' lvalue ParmVar 0xa0eb410 '__s' 'const _CharT *')
      (DeclRefExpr 0xa107444 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eb450 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1074d0 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107480 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1074b4 <col:61> 'const _CharT *' lvalue ParmVar 0xa0eb410 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa0f1f10 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0xa1075f0 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0xa1075e0 <col:9, col:37>
    (CallExpr 0xa1075b8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107550 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa107540 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa107584 <col:27> '_CharT' lvalue ParmVar 0xa0eb520 '__c' '_CharT')
      (DeclRefExpr 0xa10759c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eb560 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa0f1f28 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa107780 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0xa107770 <col:9, col:68>
    (CallExpr 0xa107748 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107618 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa107608 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1076a0 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107668 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0xa10764c <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0eb640 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1076bc <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eb680 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107728 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1076f0 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0xa1076d4 <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0eb640 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa0f1f40 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1078e8 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0xa107798 <line:2003:32>)
  (ReturnStmt 0xa1078d8 <line:2004:2, col:64>
    (CallExpr 0xa1078b0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1077b8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1077a8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1077ec <col:28> 'const _CharT *' lvalue ParmVar 0xa0eb8c0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa107804 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eb900 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107890 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107840 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0xa107874 <col:60> 'const _CharT *' lvalue ParmVar 0xa0eb8c0 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa0f1f58 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1079b0 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0xa1079a0 <col:9, col:38>
    (CallExpr 0xa107978 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107910 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa107900 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa107944 <col:28> '_CharT' lvalue ParmVar 0xa0eb9d0 '__c' '_CharT')
      (DeclRefExpr 0xa10795c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0eba10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa0f1f70 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0xa107b40 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0xa107b30 <col:9, col:73>
    (CallExpr 0xa107b08 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1079d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1079c8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa107a60 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107a28 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa107a0c <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0ebaf0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa107a7c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ebb30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107ae8 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107ab0 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0xa107a94 <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0ebaf0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa0f1f88 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0xa107ca8 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0xa107b58 <line:2065:32>)
  (ReturnStmt 0xa107c98 <line:2066:2, col:69>
    (CallExpr 0xa107c70 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107b78 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa107b68 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa107bac <col:33> 'const _CharT *' lvalue ParmVar 0xa0ebd70 '__s' 'const _CharT *')
      (DeclRefExpr 0xa107bc4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ebdb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107c50 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107c00 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0xa107c34 <col:65> 'const _CharT *' lvalue ParmVar 0xa0ebd70 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa0f1fa0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa0f1fb8 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa107e38 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0xa107e28 <col:9, col:72>
    (CallExpr 0xa107e00 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107cd0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa107cc0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa107d58 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107d20 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0xa107d04 <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0ebfa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa107d74 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ebfe0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107de0 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107da8 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa107d8c <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0ebfa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa0f1fd0 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa107fa0 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0xa107e50 <line:2124:32>)
  (ReturnStmt 0xa107f90 <line:2125:2, col:68>
    (CallExpr 0xa107f68 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa107e70 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa107e60 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa107ea4 <col:32> 'const _CharT *' lvalue ParmVar 0xa0ec220 '__s' 'const _CharT *')
      (DeclRefExpr 0xa107ebc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ec260 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa107f48 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa107ef8 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0xa107f2c <col:64> 'const _CharT *' lvalue ParmVar 0xa0ec220 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa0f1fe8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0xa0f2000 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0xa0f2018 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1080d8 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0xa1080c8 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0xa1080a0 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0xa107fd0 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa107fc0 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa108060 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0xa107ff8 <col:8> '<bound member function type>' ->_M_check 0xa0d4700
          (CXXThisExpr 0xa107fe8 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa108018 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ec440 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa108030 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0xa108084 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0ec480 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa108688 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0xa1081a0 <line:2174:2, col:39>
    0xa108100 "const size_type __size =
      (CallExpr 0xa108180 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa108148 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa108138 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa108268 <line:2175:2, col:40>
    0xa1081c0 "const size_type __osize =
      (CallExpr 0xa108248 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa108210 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa1081f4 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0f1330 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa108360 <line:2176:2, col:51>
    0xa108280 "const size_type __len =
      (CallExpr 0xa108338 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1082d0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
        (DeclRefExpr 0xa108308 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa108100 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa108320 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1081c0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa108530 <line:2178:2, col:64>
    0xa108380 "int __r =
      (CallExpr 0xa108508 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1083d8 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0xa108460 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0xa108420 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0xa1084d0 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa108498 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0xa10847c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0f1330 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa1084ec <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa108280 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa108630 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0xa108578 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa108568 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa108558 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0xa108540 <col:7> 'int' lvalue Var 0xa108380 '__r' 'int'))))
    (BinaryOperator 0xa108618 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0xa10858c <col:4> 'int' lvalue Var 0xa108380 '__r' 'int')
      (CallExpr 0xa1085f0 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0xa1085a4 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0xa0d5b50 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1085bc <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa108100 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1085d4 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1081c0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa108678 <line:2181:2, col:9>
    (ImplicitCastExpr 0xa108668 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0xa10864c <col:9> 'int' lvalue Var 0xa108380 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa109020 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0xa108f60 <line:2308:7, col:57>
    0xa108ef0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0xa108f40 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa108f24 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa108a70 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa108fd8 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa108f88 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa108f70 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa108ef0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa108fbc <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa108c20 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa109010 <line:2310:7, col:14>
    (DeclRefExpr 0xa108ff8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa108ef0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa10a310 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0xa10a250 <line:2345:7, col:57>
    0xa10a1e0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0xa10a230 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa10a214 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa109ea0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa10a2c8 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa10a278 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa10a260 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa10a1e0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa10a2ac <col:20> 'const _CharT *' lvalue ParmVar 0xa109f10 '__rhs' 'const _CharT *'))
  (ReturnStmt 0xa10a300 <line:2347:7, col:14>
    (DeclRefExpr 0xa10a2e8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa10a1e0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0xa10acc8 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0xa10aa10 <line:2360:7, col:66>
    0xa10a9e0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa10ab00 <line:2361:7, col:61>
    0xa10aad0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa10ab90 <line:2362:7, col:33>
    0xa10ab20 "__string_type __str =
      (ParenListExpr 0xa10ab70 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa10ab54 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10a6d0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa10ac78 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa10abb8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa10aba0 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa10ab20 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0xa10ac40 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0xa10ac28 <col:32> 'int' 1))
    (DeclRefExpr 0xa10ac5c <col:36> '_CharT' lvalue ParmVar 0xa10a710 '__rhs' '_CharT'))
  (ReturnStmt 0xa10acb8 <line:2364:7, col:14>
    (DeclRefExpr 0xa10ac9c <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa10ab20 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10b378 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0xa10b368 <col:7, col:38>
    (CXXOperatorCallExpr 0xa10b340 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa10b2f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (CallExpr 0xa10b2b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10b268 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10b250 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10af70 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10b29c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10b120 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa10b2d8 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0xa10c0d8 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0xa10c0c8 <line:2435:7, line:2437:24>
    (ParenExpr 0xa10c0b0 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0xa10c098 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa10bdf0 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0xa10bda0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10bc90 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
          (CallExpr 0xa10bd10 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa10bcd8 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0xa10bcc0 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0xa10b930 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0xa10bd80 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa10bd48 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0xa10bd2c <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0xa10bb80 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0xa10c080 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0xa10c058 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa10bee0 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0xa10bf58 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa10bf20 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa10bf04 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0xa10b930 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0xa10bfc8 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa10bf90 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0xa10bf74 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0xa10bb80 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0xa10c038 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa10c000 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa10bfe4 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0xa10b930 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10c630 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0xa10c620 <col:7, col:38>
    (CXXOperatorCallExpr 0xa10c5f8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa10c5a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10c4d0 0xa10bc90 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (CallExpr 0xa10c568 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10c518 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10c500 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10c3d0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10c54c <col:28> 'const _CharT *' lvalue ParmVar 0xa10c220 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa10c588 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa10cba0 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0xa10cb90 <col:7, col:38>
    (CXXOperatorCallExpr 0xa10cb68 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa10cb10 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10ca40 0xa10c4d0 0xa10bc90 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
      (CallExpr 0xa10cad8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10ca88 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10ca70 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10c8d0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10cabc <col:28> 'const _CharT *' lvalue ParmVar 0xa10c940 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa10caf8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10d1f0 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0xa10d1e0 <col:7, col:30>
    (UnaryOperator 0xa10d1c8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa10d1b0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa10d188 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa10d130 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10ca40 0xa10c4d0 0xa10bc90 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
          (DeclRefExpr 0xa10d100 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10ce40 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0xa10d118 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10cff0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10d6f0 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0xa10d6e0 <col:7, col:30>
    (UnaryOperator 0xa10d6c8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa10d6b0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa10d688 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa10d630 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10ca40 0xa10c4d0 0xa10bc90 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
          (DeclRefExpr 0xa10d600 <col:16> 'const _CharT *' lvalue ParmVar 0xa10d340 '__lhs' 'const _CharT *')
          (DeclRefExpr 0xa10d618 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10d4f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa10dc00 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0xa10dbf0 <col:7, col:30>
    (UnaryOperator 0xa10dbd8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa10dbc0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa10db98 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa10db40 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10ca40 0xa10c4d0 0xa10bc90 0xa10b220 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0)
          (DeclRefExpr 0xa10db10 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10d990 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0xa10db28 <col:25> 'const _CharT *' lvalue ParmVar 0xa10da00 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10e278 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0xa10e268 <col:7, col:37>
    (CXXOperatorCallExpr 0xa10e240 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa10e200 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10e130 0x9f8e460 0x9fa7e80 0x9faa550)
      (CallExpr 0xa10e1c8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10e178 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10e160 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10dea0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10e1ac <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10e050 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa10e1e8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa10e7b0 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0xa10e7a0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa10e778 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa10e730 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10e660 0xa10e130 0x9f8e460 0x9fa7e80 0x9faa550)
      (CallExpr 0xa10e6f8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10e6a8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10e690 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10e510 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10e6dc <col:28> 'const _CharT *' lvalue ParmVar 0xa10e580 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa10e718 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10ed10 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0xa10ed00 <col:7, col:37>
    (CXXOperatorCallExpr 0xa10ecd8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa10ec98 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (CallExpr 0xa10ec60 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10ec10 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10ebc0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10eab0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10ec44 <col:28> 'const _CharT *' lvalue ParmVar 0xa10e900 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa10ec80 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10f388 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0xa10f378 <col:7, col:37>
    (CXXOperatorCallExpr 0xa10f350 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa10f310 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10f240 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (CallExpr 0xa10f2d8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10f288 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10f270 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10efb0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10f2bc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10f160 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa10f2f8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa10f8c0 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0xa10f8b0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa10f888 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa10f840 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10f770 0xa10f240 0x9f8f1d0 0x9fa8740 0x9fab0f0)
      (CallExpr 0xa10f808 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10f7b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10f7a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10f620 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10f7ec <col:28> 'const _CharT *' lvalue ParmVar 0xa10f690 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa10f828 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa10fdf0 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0xa10fde0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa10fdb8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa10fd70 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa10eb90 0xa10e660 0xa10e130 0x9f8e460 0x9fa7e80 0x9faa550)
      (CallExpr 0xa10fd38 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa10fce8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa10fcd0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa10fbc0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa10fd1c <col:28> 'const _CharT *' lvalue ParmVar 0xa10fa10 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa10fd58 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa110468 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0xa110458 <col:7, col:38>
    (CXXOperatorCallExpr 0xa110430 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1103f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa110320 0x9f8f6f0 0x9fa8b50 0x9fab540)
      (CallExpr 0xa1103b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa110368 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa110350 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa110090 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa11039c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa110240 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1103d8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1109a0 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0xa110990 <col:7, col:38>
    (CXXOperatorCallExpr 0xa110968 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa110920 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa110850 0xa110320 0x9f8f6f0 0x9fa8b50 0x9fab540)
      (CallExpr 0xa1108e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa110898 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa110880 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa110700 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1108cc <col:28> 'const _CharT *' lvalue ParmVar 0xa110770 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa110908 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa110ec8 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0xa110eb8 <col:7, col:38>
    (CXXOperatorCallExpr 0xa110e90 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa110e50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0)
      (CallExpr 0xa110e18 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa110dc8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa110db0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa110ca0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa110dfc <col:28> 'const _CharT *' lvalue ParmVar 0xa110af0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa110e38 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa111538 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0xa111528 <col:7, col:38>
    (CXXOperatorCallExpr 0xa111500 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1114c0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1113f0 0x9f916a0 0x9fa8f70 0x9fab9c0)
      (CallExpr 0xa111488 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa111438 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa111420 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa111160 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa11146c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa111310 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1114a8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa111a70 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0xa111a60 <col:7, col:38>
    (CXXOperatorCallExpr 0xa111a38 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1119f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa111920 0xa1113f0 0x9f916a0 0x9fa8f70 0x9fab9c0)
      (CallExpr 0xa1119b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa111968 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa111950 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1117d0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa11199c <col:28> 'const _CharT *' lvalue ParmVar 0xa111840 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa1119d8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa111fa0 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0xa111f90 <col:7, col:38>
    (CXXOperatorCallExpr 0xa111f68 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa111f20 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa110d80 0xa110850 0xa110320 0x9f8f6f0 0x9fa8b50 0x9fab540)
      (CallExpr 0xa111ee8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa111e98 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa111e80 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa111d70 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa111ecc <col:28> 'const _CharT *' lvalue ParmVar 0xa111bc0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa111f08 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1125c8 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0xa1125a8 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa112558 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa112540 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa112260 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa11258c <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa112410 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa113e18 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0xa113e08 <line:2697:7, col:63>
    (CallExpr 0xa113de0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa113cb0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa057750)
      (DeclRefExpr 0xa113ce4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa113980 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0xa113d50 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa113d18 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0xa113cfc <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa113b30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa113dc0 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa113d88 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0xa113d6c <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa113b30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa114c28 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0xa114c18 <col:7, col:51>
    (CallExpr 0xa114bf0 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0xa114b00 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa114ad0 0xa1144a0)
      (DeclRefExpr 0xa114b38 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1147f0 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0xa114b50 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1149a0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0xa114bd0 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa114b80 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0xa114b68 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1147f0 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0xa114bb8 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0xa116a20 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0xa1169f0 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0xa1169c8 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa116990 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (ParenExpr 0xa116960 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0xa116948 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0xa116910 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa1168e8 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa1168b0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (DeclRefExpr 0xa116878 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0xa116898 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0xa116930 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0xa116978 <col:72> 'int' 1)))
  (IntegerLiteral 0xa116a08 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0xa116ed0 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0xa119630 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0xa1186b0 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0xa1185f8 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa118518 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0xa1184c0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
        (DeclRefExpr 0xa11848c <col:6> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator')
        (DeclRefExpr 0xa1184a4 <col:15> '_InIterator' lvalue ParmVar 0xa118220 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa1185d0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa118578 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
        (DeclRefExpr 0xa11853c <col:24> 'const _Alloc' lvalue ParmVar 0xa118290 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa118560 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0xa1186a0 <line:84:4, col:37>
      (CallExpr 0xa118680 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa118648 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0xa118628 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0xa118610 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d9550 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0xa118788 <line:87:2, col:19>
    0xa118750 "_CharT __buf[128]")
  (DeclStmt 0xa1187f0 <line:88:2, col:21>
    0xa1187a0 "size_type __len =
      (IntegerLiteral 0xa1187d8 <col:20> 'int' 0)")
  (WhileStmt 0xa118ad8 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0xa1189b8 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa118888 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa118830 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
        (DeclRefExpr 0xa118800 <col:9> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator')
        (DeclRefExpr 0xa118818 <col:18> '_InIterator' lvalue ParmVar 0xa118220 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa118990 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa118948 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (DeclRefExpr 0xa1188ac <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa118930 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0xa1188f8 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0xa1188e0 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0xa1188c4 <col:42> '_CharT [128]' lvalue Var 0xa118750 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0xa118918 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0xa118ac0 <line:90:4, line:93:4>
      (BinaryOperator 0xa118a78 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0xa118a30 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa1189d0 <col:6> '_CharT [128]' lvalue Var 0xa118750 '__buf' '_CharT [128]')
          (UnaryOperator 0xa118a18 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa1189e8 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0xa118a60 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa118a44 <col:24> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator')))
      (UnaryOperator 0xa118aa8 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa118a90 <col:8> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator'))))
  (DeclStmt 0xa118c18 <line:94:2, col:55>
    0xa118b00 "std::basic_string::_Rep *__r =
      (CallExpr 0xa118bf0 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa118b58 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0xa118b7c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa118bb8 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa118ba0 <col:47> 'int' 0))
        (DeclRefExpr 0xa118bd4 <col:51> 'const _Alloc' lvalue ParmVar 0xa118290 '__a' 'const _Alloc &'))")
  (CallExpr 0xa118ce0 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0xa118c28 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0xa118c90 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa118c58 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa118c40 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0xa118cac <col:29> '_CharT [128]' lvalue Var 0xa118750 '__buf' '_CharT [128]')
    (DeclRefExpr 0xa118cc4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa119428 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa118d08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa119410 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0xa1193f8 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa118da0 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa118d48 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
          (DeclRefExpr 0xa118d18 <col:13> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator')
          (DeclRefExpr 0xa118d30 <col:22> '_InIterator' lvalue ParmVar 0xa118220 '__end' '_InIterator'))
        (CompoundStmt 0xa1193d8 <line:99:8, line:110:8>
          (IfStmt 0xa119270 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa118e88 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa118e30 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
              (DeclRefExpr 0xa118dc4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0xa118df8 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0xa118ddc <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0xa119250 <line:101:5, line:107:5>
              (DeclStmt 0xa119038 <line:103:7, col:63>
                0xa118ec0 "std::basic_string::_Rep *__another =
                  (CallExpr 0xa119010 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa118f18 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0xa118fb8 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0xa118f70 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                      (DeclRefExpr 0xa118f3c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0xa118f58 <col:49> 'int' 1))
                    (DeclRefExpr 0xa118fdc <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0xa118ff4 <col:59> 'const _Alloc' lvalue ParmVar 0xa118290 '__a' 'const _Alloc &'))")
              (CallExpr 0xa119158 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0xa119048 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0xa1190b0 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa119078 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa119060 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0xa118ec0 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0xa119120 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1190e8 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1190cc <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0xa11913c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0xa1191e8 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa119198 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa119180 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0xa1191cc <col:23> 'const _Alloc' lvalue ParmVar 0xa118290 '__a' 'const _Alloc &'))
              (BinaryOperator 0xa119238 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa119208 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0xa119220 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0xa118ec0 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0xa119390 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0xa119348 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0xa1192e0 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1192a8 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0xa11928c <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0xa119330 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0xa1192fc <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0xa119378 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa11935c <col:33> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator')))
          (UnaryOperator 0xa1193c0 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa1193a8 <col:5> '_InIterator' lvalue ParmVar 0xa1181e0 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0xa119508 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa119448 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa1194f0 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0xa1194c0 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa119470 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa119458 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0xa1194a4 <col:22> 'const _Alloc' lvalue ParmVar 0xa118290 '__a' 'const _Alloc &'))
      (NullStmt 0xa1194e0 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0xa119590 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa119540 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0xa119524 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa119574 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1187a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa119620 <line:118:2, col:25>
    (CallExpr 0xa119600 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1195c8 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa1195b0 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0xa118b00 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0xa11a768 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0xa119f00 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0xa119e48 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa119d68 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0xa119d10 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
        (DeclRefExpr 0xa119cdc <col:6> '_InIterator' lvalue ParmVar 0xa119a30 '__beg' '_InIterator')
        (DeclRefExpr 0xa119cf4 <col:15> '_InIterator' lvalue ParmVar 0xa119a70 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa119e20 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa119dc8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
        (DeclRefExpr 0xa119d8c <col:24> 'const _Alloc' lvalue ParmVar 0xa119ae0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa119db0 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0xa119ef0 <line:130:4, col:37>
      (CallExpr 0xa119ed0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa119e98 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0xa119e78 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0xa119e60 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d9550 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0xa11a1a8 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0xa11a060 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0xa119f90 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa119f40 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f791d0 0x9f793d0)
        (DeclRefExpr 0xa119f78 <col:35> '_InIterator' lvalue ParmVar 0xa119a30 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0xa11a038 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa119fe0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
        (DeclRefExpr 0xa119fb0 <col:45> '_InIterator' lvalue ParmVar 0xa119a30 '__beg' '_InIterator')
        (DeclRefExpr 0xa119fc8 <col:54> '_InIterator' lvalue ParmVar 0xa119a70 '__end' '_InIterator')))
    (CallExpr 0xa11a178 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0xa11a168 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa11a14c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f59660 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa11a198 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa11a138 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0xa11a0f0 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0xa11a2d8 <line:136:2, line:137:22>
    0xa11a1d0 "const size_type __dnew =
      (CXXStaticCastExpr 0xa11a2c0 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0xa11a290 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa11a228 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
          (DeclRefExpr 0xa11a25c <col:64> '_InIterator' lvalue ParmVar 0xa119a30 '__beg' '_InIterator')
          (DeclRefExpr 0xa11a274 <line:137:15> '_InIterator' lvalue ParmVar 0xa119a70 '__end' '_InIterator')))")
  (DeclStmt 0xa11a418 <line:139:2, col:56>
    0xa11a300 "std::basic_string::_Rep *__r =
      (CallExpr 0xa11a3f0 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa11a358 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0xa11a37c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa11a1d0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa11a3b8 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa11a3a0 <col:48> 'int' 0))
        (DeclRefExpr 0xa11a3d4 <col:52> 'const _Alloc' lvalue ParmVar 0xa119ae0 '__a' 'const _Alloc &'))")
  (IfStmt 0xa11a560 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa11a428 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa11a548 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0xa11a520 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa11a438 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0xa0d52e0 0xa0d5470 0xa0d5630 0xa0d5810 0xa0d59f0)
        (CallExpr 0xa11a4d0 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa11a498 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa11a47c <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0xa11a300 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0xa11a4ec <col:39> '_InIterator' lvalue ParmVar 0xa119a30 '__beg' '_InIterator')
        (DeclRefExpr 0xa11a504 <col:46> '_InIterator' lvalue ParmVar 0xa119a70 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0xa11a640 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa11a580 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa11a628 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0xa11a5f8 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11a5a8 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa11a590 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0xa11a300 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0xa11a5dc <col:22> 'const _Alloc' lvalue ParmVar 0xa119ae0 '__a' 'const _Alloc &'))
      (NullStmt 0xa11a618 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0xa11a6c8 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa11a678 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0xa11a65c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0xa11a300 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa11a6ac <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa11a1d0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa11a758 <line:148:2, col:25>
    (CallExpr 0xa11a738 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11a700 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa11a6e8 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0xa11a300 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0xa11b2d8 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0xa11af60 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0xa11aea8 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa11adc8 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa11ad70 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
        (DeclRefExpr 0xa11ad3c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11ab10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0xa11ad58 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0xa11ae80 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa11ae28 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
        (DeclRefExpr 0xa11adec <col:23> 'const _Alloc' lvalue ParmVar 0xa11abc0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa11ae10 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0xa11af50 <line:158:2, col:35>
      (CallExpr 0xa11af30 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11aef8 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0xa11aed8 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0xa11aec0 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d9550 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0xa11b0a8 <line:161:7, col:58>
    0xa11af90 "std::basic_string::_Rep *__r =
      (CallExpr 0xa11b080 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa11afe8 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa11b00c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11ab10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa11b048 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa11b030 <col:50> 'int' 0))
        (DeclRefExpr 0xa11b064 <col:54> 'const _Alloc' lvalue ParmVar 0xa11abc0 '__a' 'const _Alloc &'))")
  (IfStmt 0xa11b1b0 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0xa11b0b8 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11ab10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa11b188 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0xa11b0d0 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa0d5060 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0xa11b138 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11b100 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa11b0e8 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0xa11af90 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0xa11b154 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11ab10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa11b16c <col:36> '_CharT' lvalue ParmVar 0xa11ab50 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0xa11b238 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa11b1e8 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa11b1cc <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa11af90 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa11b21c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11ab10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa11b2c8 <line:166:7, col:30>
    (CallExpr 0xa11b2a8 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11b270 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa11b258 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa11af90 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0xa11ba88 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa11b948 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0xa11b928 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11b8f0 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa11b8d4 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11b7e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0xa11b9f8 <col:43, col:71> '_Alloc'
    (CallExpr 0xa11b9d8 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11b9a0 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0xa11b988 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11b7e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0xa11ba68 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa11ba30 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0xa11ba14 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11b7e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0xa11bb00 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa11bac8 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0xa11baac <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11b7e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0xa11bb60 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0xa11c230 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0xa11c198 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (CXXUnresolvedConstructExpr 0xa11c1e0 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0xa11c200 <col:45, col:52> '_CharT')
  (DeclRefExpr 0xa11c218 <col:55> 'const _Alloc' lvalue ParmVar 0xa11c070 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa11c258 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0xa11c070 '__a' 'const _Alloc &')
) (CompoundStmt 0xa11c2b0 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0xa0f1d58 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0xa11cd90 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0xa11c930 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (CXXOperatorCallExpr 0xa11cb38 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0xa11caf0 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
    (CallExpr 0xa11c9c0 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11c988 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0xa11c970 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11c7a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0xa11cac8 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11c9f8 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa11c9dc <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11c7a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa11ca2c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11c7e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa11ca90 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0xa11cd48 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0xa11cd00 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
    (CXXOperatorCallExpr 0xa11ccc0 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa11cc78 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
      (CallExpr 0xa11cbb0 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11cb78 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa11cb5c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11c7a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa11cc50 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11cbe8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa11cbcc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11c7a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa11cc1c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11c7e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa11cc34 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11c820 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0xa11cce4 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11c7e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0xa11cd78 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0xa11cdc0 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0xa11ce20 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0xa11d950 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0xa11d540 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (CXXOperatorCallExpr 0xa11d700 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0xa11d6b8 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
    (CallExpr 0xa11d5d0 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11d598 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0xa11d580 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11d310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0xa11d690 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa11d608 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa11d5ec <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11d310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa11d63c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11d350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa11d654 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0xa11d910 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0xa11d8c8 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
    (CXXOperatorCallExpr 0xa11d888 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa11d840 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
      (CallExpr 0xa11d778 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11d740 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa11d724 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11d310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa11d818 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11d7b0 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa11d794 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa11d310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa11d7e4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11d350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa11d7fc <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11d390 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0xa11d8ac <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11d350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0xa11d934 <col:20> 'const _Alloc' lvalue ParmVar 0xa11d400 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa11d978 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0xa11d400 '__a' 'const _Alloc &')
) (CompoundStmt 0xa11d9d0 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1d78 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0xa11e1e0 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0xa11e0d0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (DeclRefExpr 0xa11e110 <col:32> 'const _CharT *' lvalue ParmVar 0xa11dee0 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0xa11e1a0 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0xa11e158 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
    (DeclRefExpr 0xa11e128 <col:37> 'const _CharT *' lvalue ParmVar 0xa11dee0 '__s' 'const _CharT *')
    (DeclRefExpr 0xa11e140 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11df20 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0xa11e1c4 <col:48> 'const _Alloc' lvalue ParmVar 0xa11df90 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa11e208 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0xa11df90 '__a' 'const _Alloc &')
) (CompoundStmt 0xa11e260 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1d98 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0xa11eb68 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0xa11e908 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (DeclRefExpr 0xa11e948 <col:32> 'const _CharT *' lvalue ParmVar 0xa11e770 '__s' 'const _CharT *')
  (ConditionalOperator 0xa11eb30 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0xa11e960 <line:215:37> 'const _CharT *' lvalue ParmVar 0xa11e770 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0xa11ea68 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa11ea20 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
      (DeclRefExpr 0xa11e978 <col:43> 'const _CharT *' lvalue ParmVar 0xa11e770 '__s' 'const _CharT *')
      (CallExpr 0xa11ea00 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa11e9b0 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0xa11e9e4 <col:69> 'const _CharT *' lvalue ParmVar 0xa11e770 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0xa11eb08 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa11eac0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
      (DeclRefExpr 0xa11ea8c <col:11> 'const _CharT *' lvalue ParmVar 0xa11e770 '__s' 'const _CharT *')
      (DeclRefExpr 0xa11eaa4 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0xa11eb4c <col:23> 'const _Alloc' lvalue ParmVar 0xa11e7e0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa11eb90 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0xa11e7e0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa11ebf0 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1db8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0xa11f378 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0xa11f2f0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (DeclRefExpr 0xa11f330 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa11f100 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0xa11f348 <col:37> '_CharT' lvalue ParmVar 0xa11f140 '__c' '_CharT')
  (DeclRefExpr 0xa11f360 <col:42> 'const _Alloc' lvalue ParmVar 0xa11f1b0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa11f3a0 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0xa11f1b0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa11f400 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa0f1dd8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0xa11fc08 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0xa11fb80 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa0e9b50 0xa118420 0xa119c70 0xa11aca0)
  (DeclRefExpr 0xa11fbc0 <col:32> '_InputIterator' lvalue ParmVar 0xa11f930 '__beg' '_InputIterator')
  (DeclRefExpr 0xa11fbd8 <col:39> '_InputIterator' lvalue ParmVar 0xa11f970 '__end' '_InputIterator')
  (DeclRefExpr 0xa11fbf0 <col:46> 'const _Alloc' lvalue ParmVar 0xa11f9e0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa11fc30 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0xa11f9e0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa11fc90 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa120950 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0xa1208f8 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1204e0 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa120488 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
      (CallExpr 0xa1203f8 <col:11, col:18> '<dependent type>'
        (MemberExpr 0xa1203d8 <col:11> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa1203c8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa120468 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa120430 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0xa120414 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa120140 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0xa1208d8 <line:247:2, line:253:2>
      (DeclStmt 0xa1205b0 <line:249:4, col:52>
        0xa120510 "const allocator_type __a =
          (CallExpr 0xa120590 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa120558 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0xa120548 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa120780 <line:250:4, col:71>
        0xa1205f0 "_CharT *__tmp =
          (CallExpr 0xa120758 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa120698 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0xa120678 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa120640 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa120624 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa120140 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0xa1206cc <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0xa120510 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0xa120738 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa120700 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0xa1206e4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa120140 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0xa120830 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1207e0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1207c0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1207a0 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa120790 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa120814 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa120510 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa1208b8 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa120860 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0xa1208a0 <col:12> '_CharT *' lvalue Var 0xa1205f0 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0xa120940 <line:254:7, col:15>
    (UnaryOperator 0xa120928 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa120918 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0xa1219b0 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0xa1210f8 <line:262:46>)
  (CallExpr 0xa1211e8 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0xa121118 <col:7> '<bound member function type>' ->_M_check_length 0xa0d48c0
      (CXXThisExpr 0xa121108 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0xa121180 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa121148 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa121138 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa12119c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa120e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1211b4 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0xa121990 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0xa121320 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0xa121258 <col:11, col:26> '<dependent type>'
        (MemberExpr 0xa121220 <col:11> '<bound member function type>' ->_M_disjunct 0xa0d4b60
          (CXXThisExpr 0xa121210 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa121240 <col:23> 'const _CharT *' lvalue ParmVar 0xa120e30 '__s' 'const _CharT *'))
      (CallExpr 0xa121300 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1212c8 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0xa1212a8 <col:31, col:38> '<dependent type>'
            (MemberExpr 0xa121288 <col:31> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa121278 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa121470 <line:265:2, col:61>
      (CallExpr 0xa121440 <col:9, col:61> '<dependent type>'
        (MemberExpr 0xa121348 <col:9> '<bound member function type>' ->_M_replace_safe 0xa0e91f0
          (CXXThisExpr 0xa121338 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa121388 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa121370 <col:35> 'int' 0))
        (CallExpr 0xa1213f0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1213b8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa1213a8 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa12140c <col:53> 'const _CharT *' lvalue ParmVar 0xa120e30 '__s' 'const _CharT *')
        (DeclRefExpr 0xa121424 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa120e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa121970 <line:267:2, line:276:2>
      (DeclStmt 0xa1215b0 <line:269:4, col:43>
        0xa121490 "const size_type __pos =
          (CXXOperatorCallExpr 0xa121588 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa121550 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa1214c4 <col:28> 'const _CharT *' lvalue ParmVar 0xa120e30 '__s' 'const _CharT *')
            (CallExpr 0xa121530 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0xa1214f0 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0xa121858 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa121638 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa1215f0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
          (DeclRefExpr 0xa1215c0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa121490 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1215d8 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa120e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa121718 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0xa12165c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0xa1216c8 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa121688 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1216e4 <col:25> 'const _CharT *' lvalue ParmVar 0xa120e30 '__s' 'const _CharT *')
          (DeclRefExpr 0xa1216fc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa120e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa121838 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0xa121740 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa121490 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0xa121810 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0xa121758 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4ea0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0xa1217c0 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0xa121780 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1217dc <col:25> 'const _CharT *' lvalue ParmVar 0xa120e30 '__s' 'const _CharT *')
            (DeclRefExpr 0xa1217f4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa120e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0xa121918 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1218c8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1218a8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa121888 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa121878 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1218fc <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa120e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0xa121960 <line:275:4, col:12>
        (UnaryOperator 0xa121948 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa121938 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0xa1228b0 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0xa122858 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0xa122128 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa121e60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa122830 <line:285:2, line:292:2>
      (CallExpr 0xa1221f8 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0xa122150 <col:4> '<bound member function type>' ->_M_check_length 0xa0d48c0
          (CXXThisExpr 0xa122140 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa122190 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa122178 <col:30> 'int' 0))
        (DeclRefExpr 0xa1221ac <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa121e60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa1221c4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0xa122358 <line:287:4, col:46>
        0xa122230 "const size_type __len =
          (CXXOperatorCallExpr 0xa122330 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa1222e8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (DeclRefExpr 0xa122264 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa121e60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1222c8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa122290 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa122280 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa122598 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0xa122500 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa122430 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa1223e8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
            (DeclRefExpr 0xa122368 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa122230 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1223c8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa122390 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa122380 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa1224e0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1224a8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa122488 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa122468 <col:36> '<bound member function type>' ->_M_rep 0xa0d43f0
                  (CXXThisExpr 0xa122458 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa122578 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa122528 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa122518 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa12255c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa122230 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa122748 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0xa1225b4 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa0d5060 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0xa1226f0 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa1226a8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (CallExpr 0xa122620 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa1225e0 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa122688 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa122650 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0xa122640 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa122714 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa121e60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa12272c <col:45> '_CharT' lvalue ParmVar 0xa121ea0 '__c' '_CharT'))
      (CallExpr 0xa122810 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1227c0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1227a0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa122780 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa122770 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1227f4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa122230 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1228a0 <line:293:7, col:15>
    (UnaryOperator 0xa122888 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa122878 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0xa123ba8 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0xa123068 <line:301:46>)
  (IfStmt 0xa123b50 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0xa123074 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa122de0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa123b28 <line:303:2, line:319:2>
      (CallExpr 0xa123148 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0xa1230a0 <col:4> '<bound member function type>' ->_M_check_length 0xa0d48c0
          (CXXThisExpr 0xa123090 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa1230e0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1230c8 <col:30> 'int' 0))
        (DeclRefExpr 0xa1230fc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa122de0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa123114 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0xa1232a8 <line:305:4, col:46>
        0xa123180 "const size_type __len =
          (CXXOperatorCallExpr 0xa123280 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa123238 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (DeclRefExpr 0xa1231b4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa122de0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa123218 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1231e0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa1231d0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa123890 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0xa123450 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa123380 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa123338 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
            (DeclRefExpr 0xa1232b8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa123180 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa123318 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1232e0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa1232d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa123430 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1233f8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa1233d8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa1233b8 <col:36> '<bound member function type>' ->_M_rep 0xa0d43f0
                  (CXXThisExpr 0xa1233a8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0xa123878 <line:307:6, line:316:6>
          (IfStmt 0xa123858 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0xa1234b0 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0xa123478 <col:12> '<bound member function type>' ->_M_disjunct 0xa0d4b60
                (CXXThisExpr 0xa123468 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0xa123498 <col:24> 'const _CharT *' lvalue ParmVar 0xa122da0 '__s' 'const _CharT *'))
            (CallExpr 0xa123530 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1234e0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa1234d0 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0xa123514 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa123180 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0xa123838 <line:311:3, line:315:3>
              (DeclStmt 0xa123680 <line:312:5, col:44>
                0xa123560 "const size_type __off =
                  (CXXOperatorCallExpr 0xa123658 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0xa123620 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                    (DeclRefExpr 0xa123594 <col:29> 'const _CharT *' lvalue ParmVar 0xa122da0 '__s' 'const _CharT *')
                    (CallExpr 0xa123600 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0xa1235c0 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0xa1236f0 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1236a0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa123690 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa1236d4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa123180 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0xa123820 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa123710 <col:5> 'const _CharT *' lvalue ParmVar 0xa122da0 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0xa1237f8 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1237b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                  (CallExpr 0xa123778 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0xa123738 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa123794 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa123560 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0xa123a40 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0xa1238ac <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa1239e8 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa1239a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (CallExpr 0xa123918 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa1238d8 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa123980 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa123948 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa123938 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa123a0c <col:38> 'const _CharT *' lvalue ParmVar 0xa122da0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa123a24 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa122de0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa123b08 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa123ab8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa123a98 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa123a78 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa123a68 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa123aec <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa123180 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa123b98 <line:320:7, col:15>
    (UnaryOperator 0xa123b80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa123b70 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa124ab0 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0xa1243a8 <line:328:7, col:44>
    0xa124300 "const size_type __size =
      (CallExpr 0xa124388 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa124350 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa124334 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa124070 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0xa124a58 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1243b8 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa124300 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa124a38 <line:330:2, line:336:2>
      (DeclStmt 0xa124508 <line:331:4, col:49>
        0xa1243e0 "const size_type __len =
          (CXXOperatorCallExpr 0xa1244e0 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0xa124498 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (DeclRefExpr 0xa124414 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa124300 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa124478 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa124440 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0xa124430 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa124748 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0xa1246b0 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa1245e0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa124598 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
            (DeclRefExpr 0xa124518 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1243e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa124578 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa124540 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa124530 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa124690 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa124658 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa124638 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa124618 <col:36> '<bound member function type>' ->_M_rep 0xa0d43f0
                  (CXXThisExpr 0xa124608 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa124728 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1246d8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1246c8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa12470c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1243e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa124950 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0xa124764 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa1248a0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa124858 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (CallExpr 0xa1247d0 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa124790 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa124838 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa124800 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa1247f0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa124918 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1248e0 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0xa1248c4 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa124070 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa124934 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa124300 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa124a18 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1249c8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1249a8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa124988 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa124978 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1249fc <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1243e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa124aa0 <line:337:7, col:15>
    (UnaryOperator 0xa124a88 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa124a78 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0xa125ba8 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0xa125328 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1252a8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa12528c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa124f70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa1252dc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124fb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1252f4 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0xa125410 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0xa12534c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1253e8 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa125380 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa125364 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa124f70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa1253b4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124fb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1253cc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0xa125b50 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0xa125428 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa125b30 <line:348:2, line:354:2>
      (DeclStmt 0xa125578 <line:349:4, col:46>
        0xa125450 "const size_type __len =
          (CXXOperatorCallExpr 0xa125550 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa125508 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (DeclRefExpr 0xa125484 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1254e8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1254b0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa1254a0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa1257b8 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0xa125720 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa125650 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa125608 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
            (DeclRefExpr 0xa125588 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa125450 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1255e8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1255b0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa1255a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa125700 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1256c8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa1256a8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa125688 <col:36> '<bound member function type>' ->_M_rep 0xa0d43f0
                  (CXXThisExpr 0xa125678 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa125798 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa125748 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa125738 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa12577c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa125450 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa125a48 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0xa1257d4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa125910 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa1258c8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (CallExpr 0xa125840 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa125800 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa1258a8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa125870 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa125860 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa125a08 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa1259c0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (CallExpr 0xa125988 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa125950 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0xa125934 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa124f70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa1259a4 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124fb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa125a2c <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa124ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa125b10 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa125ac0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa125aa0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa125a80 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa125a70 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa125af4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa125450 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa125b98 <line:355:7, col:15>
    (UnaryOperator 0xa125b80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa125b70 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0xa1273d0 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0xa1263b0 <line:363:47>)
  (CallExpr 0xa126438 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0xa1263d0 <col:8> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa1263c0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1263f0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126060 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa126408 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0xa126518 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0xa126470 <col:8> '<bound member function type>' ->_M_check_length 0xa0d48c0
      (CXXThisExpr 0xa126460 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0xa1264b0 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa126498 <col:34> 'int' 0))
    (DeclRefExpr 0xa1264cc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1264e4 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0xa1273b0 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0xa126650 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0xa126588 <col:12, col:27> '<dependent type>'
        (MemberExpr 0xa126550 <col:12> '<bound member function type>' ->_M_disjunct 0xa0d4b60
          (CXXThisExpr 0xa126540 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa126570 <col:24> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *'))
      (CallExpr 0xa126630 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1265f8 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0xa1265d8 <col:32, col:39> '<dependent type>'
            (MemberExpr 0xa1265b8 <col:32> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa1265a8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa126750 <line:367:10, col:62>
      (CallExpr 0xa126720 <col:17, col:62> '<dependent type>'
        (MemberExpr 0xa126678 <col:17> '<bound member function type>' ->_M_replace_safe 0xa0e91f0
          (CXXThisExpr 0xa126668 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa126698 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126060 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa1266d0 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1266b8 <col:50> 'int' 0))
        (DeclRefExpr 0xa1266ec <col:54> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa126704 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa127388 <line:369:10, line:386:10>
      (DeclStmt 0xa126890 <line:371:12, col:51>
        0xa126770 "const size_type __off =
          (CXXOperatorCallExpr 0xa126868 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa126830 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa1267a4 <col:36> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
            (CallExpr 0xa126810 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0xa1267d0 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0xa126918 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0xa1268b0 <col:12> '<bound member function type>' ->_M_mutate 0xa0d9440
          (CXXThisExpr 0xa1268a0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1268d0 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126060 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0xa1268e8 <col:29> 'int' 0)
        (DeclRefExpr 0xa126900 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0xa126a50 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0xa126940 <col:12> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0xa126a28 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa1269e0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (CallExpr 0xa1269a8 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa126968 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1269c4 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa126770 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa126bd0 <line:374:12, col:43>
        0xa126aa0 "_CharT *__p =
          (CXXOperatorCallExpr 0xa126ba8 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa126b60 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CallExpr 0xa126b28 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0xa126ae8 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa126b44 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126060 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0xa127330 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa126d10 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa126cc8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
          (CXXOperatorCallExpr 0xa126c88 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa126c40 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (DeclRefExpr 0xa126be0 <col:16> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
            (DeclRefExpr 0xa126bf8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa126cac <col:30> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *'))
        (CallExpr 0xa126d98 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0xa126d34 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0xa126d4c <col:22> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *')
          (DeclRefExpr 0xa126d64 <col:27> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
          (DeclRefExpr 0xa126d7c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa127310 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa126e38 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa126df0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
            (DeclRefExpr 0xa126dc0 <col:21> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
            (DeclRefExpr 0xa126dd8 <col:28> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *'))
          (CallExpr 0xa126f48 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0xa126e5c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0xa126e74 <col:22> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *')
            (CXXOperatorCallExpr 0xa126f08 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0xa126ec0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (DeclRefExpr 0xa126e8c <col:27> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
              (DeclRefExpr 0xa126ea4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa126f2c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0xa1272f0 <line:380:14, line:384:14>
            (DeclStmt 0xa127048 <line:381:9, col:44>
              0xa126f80 "const size_type __nleft =
                (CXXOperatorCallExpr 0xa127020 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa126fe8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                  (DeclRefExpr 0xa126fb4 <col:35> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *')
                  (DeclRefExpr 0xa126fcc <col:41> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *'))")
            (CallExpr 0xa1270b8 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0xa127058 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0xa127070 <col:24> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *')
              (DeclRefExpr 0xa127088 <col:29> 'const _CharT *' lvalue ParmVar 0xa1260d0 '__s' 'const _CharT *')
              (DeclRefExpr 0xa1270a0 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa126f80 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0xa1272c8 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0xa1270e0 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0xa127170 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0xa127128 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                (DeclRefExpr 0xa1270f8 <col:24> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *')
                (DeclRefExpr 0xa127110 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa126f80 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa127210 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa1271c8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                (DeclRefExpr 0xa127194 <col:39> '_CharT *' lvalue Var 0xa126aa0 '__p' '_CharT *')
                (DeclRefExpr 0xa1271ac <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa1272a0 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa127268 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                (DeclRefExpr 0xa127234 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa126110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0xa12724c <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa126f80 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0xa127378 <line:385:12, col:20>
        (UnaryOperator 0xa127360 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa127350 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa1280d8 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0xa127ba8 <line:395:28>)
  (DeclStmt 0xa127c88 <line:400:8, col:49>
    0xa127bc0 "const size_type __size =
      (CXXOperatorCallExpr 0xa127c60 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa127c28 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa127bf4 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa127920 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa127c0c <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1278e0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0xa1280b8 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0xa127c98 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa127bc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa128070 <line:402:3, line:407:3>
      (DeclStmt 0xa127dc0 <line:403:5, col:50>
        0xa127cc0 "const size_type __pos =
          (CXXOperatorCallExpr 0xa127d98 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0xa127d60 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa127cf4 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1278e0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0xa127d40 <col:39, col:49> '<dependent type>'
              (MemberExpr 0xa127d20 <col:39> '<bound member function type>' ->_M_ibegin 0xa0d44a0
                (CXXThisExpr 0xa127d10 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0xa127e70 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0xa127de0 <col:5> '<bound member function type>' ->_M_mutate 0xa0d9440
          (CXXThisExpr 0xa127dd0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa127e00 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa127cc0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa127e18 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa127bc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa127e50 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa127e38 <col:40> 'int' 0)))
      (CallExpr 0xa127f20 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa127ee8 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0xa127ec8 <col:5, col:12> '<dependent type>'
            (MemberExpr 0xa127ea8 <col:5> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa127e98 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0xa128060 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0xa128040 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0xa128018 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0xa127fd0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CallExpr 0xa127f98 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0xa127f58 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa127fb4 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa127cc0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0xa1280a8 <line:409:3, col:10>
      (DeclRefExpr 0xa128090 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1278e0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0xa1299f8 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0xa128920 <line:418:48>)
  (CallExpr 0xa1289b0 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0xa128940 <col:8> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa128930 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa128960 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa128978 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0xa128a78 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa1289d4 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa128a50 <col:15, col:35> '<dependent type>'
      (MemberExpr 0xa128a00 <col:15> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa1289f0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa128a20 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa128a38 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0xa128b28 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0xa128aa0 <col:8> '<bound member function type>' ->_M_check_length 0xa0d48c0
      (CXXThisExpr 0xa128a90 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa128ac0 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa128ad8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa128af0 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0xa128b98 <line:422:8, col:19>
    0xa128b60 "bool __left")
  (IfStmt 0xa1299d8 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0xa128cb8 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0xa128bf0 <col:12, col:27> '<dependent type>'
        (MemberExpr 0xa128bb8 <col:12> '<bound member function type>' ->_M_disjunct 0xa0d4b60
          (CXXThisExpr 0xa128ba8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa128bd8 <col:24> 'const _CharT *' lvalue ParmVar 0xa128640 '__s' 'const _CharT *'))
      (CallExpr 0xa128c98 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa128c60 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0xa128c40 <col:32, col:39> '<dependent type>'
            (MemberExpr 0xa128c20 <col:32> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa128c10 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa128d90 <line:424:10, col:55>
      (CallExpr 0xa128d60 <col:17, col:55> '<dependent type>'
        (MemberExpr 0xa128ce0 <col:17> '<bound member function type>' ->_M_replace_safe 0xa0e91f0
          (CXXThisExpr 0xa128cd0 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa128d00 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa128d18 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa128d30 <col:46> 'const _CharT *' lvalue ParmVar 0xa128640 '__s' 'const _CharT *')
        (DeclRefExpr 0xa128d48 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0xa1299b8 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0xa1291f8 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0xa128fd8 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0xa128fc0 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0xa128da0 <col:18> '_Bool' lvalue Var 0xa128b60 '__left' '_Bool')
            (CXXOperatorCallExpr 0xa128f98 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa128f50 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
              (CXXOperatorCallExpr 0xa128e30 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa128de8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                (DeclRefExpr 0xa128db8 <col:27> 'const _CharT *' lvalue ParmVar 0xa128640 '__s' 'const _CharT *')
                (DeclRefExpr 0xa128dd0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa128f28 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0xa128ee0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                (CallExpr 0xa128ea8 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0xa128e68 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa128ec4 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0xa1291d0 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa129188 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
          (CXXOperatorCallExpr 0xa129148 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0xa129100 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CXXOperatorCallExpr 0xa1290c0 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa129078 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (CallExpr 0xa129040 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0xa129000 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa12905c <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1290e4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa12916c <col:34> 'const _CharT *' lvalue ParmVar 0xa128640 '__s' 'const _CharT *')))
      (CompoundStmt 0xa1297b0 <line:427:3, line:434:3>
        (DeclStmt 0xa129340 <line:429:5, col:38>
          0xa129220 "size_type __off =
            (CXXOperatorCallExpr 0xa129318 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0xa1292e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (DeclRefExpr 0xa129254 <col:23> 'const _CharT *' lvalue ParmVar 0xa128640 '__s' 'const _CharT *')
              (CallExpr 0xa1292c0 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa129280 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0xa129470 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0xa129460 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa129350 <col:5> '_Bool' lvalue Var 0xa128b60 '__left' '_Bool'))
          (DeclRefExpr 0xa129368 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa129220 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0xa129448 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0xa129428 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa129380 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa129220 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0xa129400 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa1293c8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                (DeclRefExpr 0xa129398 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0xa1293b0 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0xa129508 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0xa1294a0 <col:5> '<bound member function type>' ->_M_mutate 0xa0d9440
            (CXXThisExpr 0xa129490 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa1294c0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1294d8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1294f0 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa129750 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0xa129530 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa129618 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0xa1295d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CallExpr 0xa129598 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0xa129558 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1295b4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa129710 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa1296c8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CallExpr 0xa129690 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0xa129650 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1296ac <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa129220 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa129734 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0xa1297a0 <line:433:5, col:13>
          (UnaryOperator 0xa129788 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0xa129778 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0xa1299a0 <line:436:3, line:440:3>
        (DeclStmt 0xa129868 <line:438:5, col:40>
          0xa1297e0 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0xa129848 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0xa129814 <col:30> 'const _CharT *' lvalue ParmVar 0xa128640 '__s' 'const _CharT *')
              (DeclRefExpr 0xa12982c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0xa129990 <line:439:5, col:62>
          (CallExpr 0xa129960 <col:12, col:62> '<dependent type>'
            (MemberExpr 0xa129888 <col:12> '<bound member function type>' ->_M_replace_safe 0xa0e91f0
              (CXXThisExpr 0xa129878 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0xa1298a8 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128590 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1298c0 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1285d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa129928 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1298f0 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0xa1298d8 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1297e0 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0xa129944 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa128680 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0xa12a220 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0xa12a108 <line:448:7, line:449:65>
    0xa129f20 "const size_type __size =
      (CXXOperatorCallExpr 0xa12a0e0 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa12a098 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
        (UnaryExprOrTypeTraitExpr 0xa129f60 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0xa12a080 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0xa12a048 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0xa12a020 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa129fd8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (CXXDependentScopeMemberExpr 0xa129f88 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa129f78 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0xa129fc0 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0xa12a068 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0xa12a1f8 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa12a170 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0xa12a150 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0xa12a138 <col:24> 'const _Alloc' lvalue ParmVar 0xa129e00 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0xa12a1c8 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0xa12a1a8 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0xa12a1e0 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa129f20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0xa12a9b0 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0xa12a780 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa12a748 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa12a6f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
      (CallExpr 0xa12a680 <col:11, col:18> '<dependent type>'
        (MemberExpr 0xa12a660 <col:11> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa12a650 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0xa12a6d8 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0xa12a6b8 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0xa12a69c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa0d9550 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0xa12a770 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0xa12a8e8 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0xa12a828 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12a7f0 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0xa12a7d0 <col:11, col:18> '<dependent type>'
          (MemberExpr 0xa12a7b0 <col:11> '<bound member function type>' ->_M_rep 0xa0d43f0
            (CXXThisExpr 0xa12a7a0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0xa12a8c0 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0xa12a858 <col:2> '<bound member function type>' ->_M_mutate 0xa0d9440
        (CXXThisExpr 0xa12a848 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0xa12a878 <col:12> 'int' 0)
      (IntegerLiteral 0xa12a890 <col:15> 'int' 0)
      (IntegerLiteral 0xa12a8a8 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0xa12a990 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa12a958 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0xa12a938 <col:7, col:14> '<dependent type>'
        (MemberExpr 0xa12a918 <col:7> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa12a908 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0xa12c268 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0xa12afa0 <line:472:7, col:48>
    0xa12af00 "const size_type __old_size =
      (CallExpr 0xa12af80 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12af48 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa12af38 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa12b110 <line:473:7, col:64>
    0xa12afc0 "const size_type __new_size =
      (CXXOperatorCallExpr 0xa12b0e8 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa12b0b0 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CXXOperatorCallExpr 0xa12b070 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa12b028 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa12aff4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12af00 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa12b00c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adf0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa12b094 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adb0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa12b270 <line:474:7, col:63>
    0xa12b130 "const size_type __how_much =
      (CXXOperatorCallExpr 0xa12b248 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa12b210 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CXXOperatorCallExpr 0xa12b1d0 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa12b198 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (DeclRefExpr 0xa12b164 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12af00 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa12b17c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa12b1f4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adb0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa12c188 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0xa12b418 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa12b348 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa12b300 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
        (DeclRefExpr 0xa12b280 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12afc0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa12b2e0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa12b2a8 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0xa12b298 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa12b3f8 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12b3c0 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0xa12b3a0 <col:44, col:51> '<dependent type>'
            (MemberExpr 0xa12b380 <col:44> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa12b370 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0xa12bcf0 <line:477:2, line:490:2>
      (DeclStmt 0xa12b4c8 <line:479:4, col:46>
        0xa12b440 "const allocator_type __a =
          (CallExpr 0xa12b4a8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0xa12b488 <col:31> '<bound member function type>' ->get_allocator 0xa0ea6a0
              (CXXThisExpr 0xa12b478 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa12b640 <line:480:4, col:66>
        0xa12b4f0 "std::basic_string::_Rep *__r =
          (CallExpr 0xa12b618 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa12b548 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa12b57c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12afc0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa12b5e0 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa12b5a8 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0xa12b598 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa12b5fc <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0xa12b440 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0xa12b7a0 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0xa12b650 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa12b778 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0xa12b668 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0xa12b6d0 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa12b698 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa12b680 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa12b4f0 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0xa12b740 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0xa12b700 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa12b75c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0xa12bb30 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0xa12b7bc <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12b130 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa12bb08 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0xa12b7d4 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa12b948 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa12b900 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CXXOperatorCallExpr 0xa12b8c0 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0xa12b878 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (CallExpr 0xa12b840 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa12b808 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0xa12b7ec <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa12b4f0 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0xa12b85c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa12b8e4 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adf0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa12bac8 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0xa12ba80 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CXXOperatorCallExpr 0xa12ba40 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa12b9f8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (CallExpr 0xa12b9c0 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0xa12b980 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa12b9dc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa12ba64 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adb0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa12baec <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12b130 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa12bbf0 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12bba0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa12bb80 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa12bb60 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa12bb50 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa12bbd4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa12b440 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa12bcd0 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa12bc20 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa12bcb0 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa12bc78 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0xa12bc60 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0xa12b4f0 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0xa12c168 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0xa12bde0 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0xa12bd18 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12b130 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa12bdb8 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa12bd60 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
          (DeclRefExpr 0xa12bd30 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adb0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa12bd48 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adf0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0xa12c150 <line:492:2, line:496:2>
        (CallExpr 0xa12c128 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0xa12bdf8 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4ea0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa12bf68 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa12bf20 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CXXOperatorCallExpr 0xa12bee0 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa12be98 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (CallExpr 0xa12be60 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0xa12be20 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa12be7c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa12bf04 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adf0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa12c0e8 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0xa12c0a0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
            (CXXOperatorCallExpr 0xa12c060 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0xa12c018 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (CallExpr 0xa12bfe0 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0xa12bfa0 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa12bffc <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12ad70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa12c084 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12adb0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa12c10c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12b130 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0xa12c248 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa12c1f8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0xa12c1d8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0xa12c1b8 <col:7> '<bound member function type>' ->_M_rep 0xa0d43f0
          (CXXThisExpr 0xa12c1a8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa12c22c <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12afc0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0xa0f1df0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0xa12ceb0 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0xa12ce90 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0xa12c890 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa12c7c0 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa12c768 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
        (DeclRefExpr 0xa12c6e4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12c600 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa12c748 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa12c710 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa12c700 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa12c870 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12c838 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0xa12c818 <col:40, col:47> '<dependent type>'
            (MemberExpr 0xa12c7f8 <col:40> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa12c7e8 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0xa12ce68 <line:506:9, line:514:9>
      (IfStmt 0xa12ca30 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa12c970 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa12c928 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (DeclRefExpr 0xa12c8a8 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12c600 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0xa12c908 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa12c8d0 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0xa12c8c0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa12ca18 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0xa12c994 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12c600 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0xa12c9f8 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa12c9c0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa12c9b0 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0xa12cae8 <line:510:4, col:46>
        0xa12ca60 "const allocator_type __a =
          (CallExpr 0xa12cac8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0xa12caa8 <col:31> '<bound member function type>' ->get_allocator 0xa0ea6a0
              (CXXThisExpr 0xa12ca98 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa12cd10 <line:511:4, col:65>
        0xa12cb30 "_CharT *__tmp =
          (CallExpr 0xa12cce8 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa12cbb8 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0xa12cb98 <col:20, col:27> '<dependent type>'
                (MemberExpr 0xa12cb78 <col:20> '<bound member function type>' ->_M_rep 0xa0d43f0
                  (CXXThisExpr 0xa12cb68 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0xa12cbec <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0xa12ca60 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0xa12ccc0 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0xa12cc88 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (DeclRefExpr 0xa12cc04 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12c600 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0xa12cc68 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa12cc30 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0xa12cc20 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0xa12cdc0 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12cd70 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa12cd50 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa12cd30 <col:4> '<bound member function type>' ->_M_rep 0xa0d43f0
              (CXXThisExpr 0xa12cd20 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa12cda4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa12ca60 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa12ce48 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa12cdf0 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0xa12ce30 <col:12> '_CharT *' lvalue Var 0xa12cb30 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0xa12de58 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0xa12d488 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0xa12d3c0 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12d388 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0xa12d368 <col:11, col:18> '<dependent type>'
          (MemberExpr 0xa12d348 <col:11> '<bound member function type>' ->_M_rep 0xa0d43f0
            (CXXThisExpr 0xa12d338 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0xa12d468 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12d430 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0xa12d410 <col:2, col:9> '<dependent type>'
          (MemberExpr 0xa12d3f0 <col:2> '<bound member function type>' ->_M_rep 0xa0d43f0
            (CXXThisExpr 0xa12d3e0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0xa12d638 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0xa12d550 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12d518 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0xa12d4f8 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa12d4c0 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa12d4a4 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0xa12d618 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12d5e0 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0xa12d5c0 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa12d588 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0xa12d56c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0xa12de38 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa12d788 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa12d730 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
      (CallExpr 0xa12d6a0 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12d668 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa12d658 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa12d710 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12d6d8 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0xa12d6bc <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0xa12da00 <line:527:2, line:531:2>
      (DeclStmt 0xa12d888 <line:528:4, col:29>
        0xa12d7e0 "_CharT *__tmp =
          (CallExpr 0xa12d868 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0xa12d828 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0xa12d958 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa12d8a8 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa12d938 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa12d900 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa12d8e8 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0xa12d9e0 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12d990 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0xa12d978 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa12d9c4 <col:16> '_CharT *' lvalue Var 0xa12d7e0 '__tmp' '_CharT *')))
    (CompoundStmt 0xa12de18 <line:534:2, line:541:2>
      (DeclStmt 0xa12dba0 <line:535:4, line:536:29>
        0xa12da30 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0xa12db78 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0xa12da98 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0xa12da78 <col:30> '<bound member function type>' ->_M_ibegin 0xa0d44a0
                (CXXThisExpr 0xa12da68 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa12dae8 <col:43, col:51> '<dependent type>'
              (MemberExpr 0xa12dac8 <col:43> '<bound member function type>' ->_M_iend 0xa0d4520
                (CXXThisExpr 0xa12dab8 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa12db58 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa12db20 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0xa12db04 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0xa12dd68 <line:537:4, line:538:31>
        0xa12dbc0 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0xa12dd40 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0xa12dc48 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa12dc10 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0xa12dbf4 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa12dcb8 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa12dc80 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa12dc64 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa12dd20 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa12dce8 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0xa12dcd8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0xa12ddb8 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0xa12dd88 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa12dd78 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa12dd9c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa12dbc0 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0xa12de00 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa12ddd0 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa12d250 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0xa12dde8 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa12da30 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0xa12f7b0 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0xa12e888 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa12e788 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa12e740 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
      (DeclRefExpr 0xa12e70c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa12e724 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa116810 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa12e858 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0xa12e848 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa12e82c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f598d0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa12e878 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa12e818 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0xa12e7e4 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0xa12e900 <line:578:7, col:40>
    0xa12e8b0 "const size_type __pagesize =
      (IntegerLiteral 0xa12e8e8 <col:36> 'int' 4096)")
  (DeclStmt 0xa12e9c0 <line:579:7, col:63>
    0xa12e920 "const size_type __malloc_header_size =
      (BinaryOperator 0xa12e9a8 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0xa12e998 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa12e958 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0xa12e980 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0xa12ebd0 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0xa12eb40 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa12ea48 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa12ea00 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
        (DeclRefExpr 0xa12e9d0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa12e9e8 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0xa12eb18 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa12ead0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (DeclRefExpr 0xa12ea6c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa12eab8 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0xa12ea88 <col:55> 'int' 2)
          (DeclRefExpr 0xa12eaa0 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0xa12ebb8 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0xa12eb58 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0xa12eba0 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0xa12eb70 <col:15> 'int' 2)
        (DeclRefExpr 0xa12eb88 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0xa12edd0 <line:593:7, col:74>
    0xa12ec00 "size_type __size =
      (CXXOperatorCallExpr 0xa12eda8 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0xa12ed60 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
        (BinaryOperator 0xa12ed28 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0xa12ecf0 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0xa12ecc8 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa12ec80 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
              (DeclRefExpr 0xa12ec50 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0xa12ec68 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0xa12ed10 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0xa12ed48 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0xa12eec8 <line:595:7, col:65>
    0xa12edf0 "const size_type __adj_size =
      (CXXOperatorCallExpr 0xa12eea0 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa12ee58 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
        (DeclRefExpr 0xa12ee24 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa12ec00 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa12ee3c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12e920 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa12f4a8 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0xa12f018 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa12ef50 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa12ef08 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
        (DeclRefExpr 0xa12eed8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12edf0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa12eef0 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12e8b0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0xa12eff0 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa12efa8 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
        (DeclRefExpr 0xa12ef74 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa12ef8c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa12f488 <line:597:2, line:604:2>
      (DeclStmt 0xa12f138 <line:598:4, col:66>
        0xa12f040 "const size_type __extra =
          (CXXOperatorCallExpr 0xa12f110 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa12f0d8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa12f074 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12e8b0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0xa12f0c0 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0xa12f08c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12edf0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa12f0a4 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12e8b0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0xa12f1b0 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa12f148 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa12f198 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0xa12f160 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12f040 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0xa12f180 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0xa12f2b8 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa12f248 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa12f200 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (DeclRefExpr 0xa12f1d0 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa12f1e8 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa116810 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa12f2a0 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0xa12f26c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa12f284 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa116810 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0xa12f470 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0xa12f2d4 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa12ec00 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa12f448 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa12f400 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
          (BinaryOperator 0xa12f3c8 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0xa12f390 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0xa12f368 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0xa12f320 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
                (DeclRefExpr 0xa12f2ec <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0xa12f308 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0xa12f3b0 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0xa12f3e8 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0xa12f5c8 <line:608:7, col:65>
    0xa12f4e0 "void *__place =
      (CallExpr 0xa12f5a8 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12f558 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0xa12f538 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0xa12f520 <col:40> 'const _Alloc' lvalue ParmVar 0xa12e450 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0xa12f58c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa12ec00 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa12f688 <line:609:7, col:37>
    0xa12f5f0 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0xa12f648 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0xa12f624 <col:24> 'void *' lvalue Var 0xa12f4e0 '__place' 'void *'))")
  (BinaryOperator 0xa12f700 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa12f6b0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa12f698 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa12f5f0 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa12f6e4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12e3a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0xa12f768 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa12f730 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa12f718 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa12f5f0 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0xa12f7a0 <line:619:7, col:14>
    (DeclRefExpr 0xa12f784 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa12f5f0 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0xa0f1d40 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0xa130290 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0xa12fe58 <line:628:7, col:64>
    0xa12fd50 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0xa12fe30 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa12fde8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
        (CXXDependentScopeMemberExpr 0xa12fd98 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0xa12fd88 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa12fdcc <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa12fc00 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa12ff98 <line:629:7, line:630:15>
    0xa12fe80 "std::basic_string::_Rep *__r =
      (CallExpr 0xa12ff70 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0xa12fed4 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0xa12e670 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0xa12fef4 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa12fd50 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0xa12ff20 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0xa12ff10 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa12ff54 <line:630:7> 'const _Alloc' lvalue ParmVar 0xa12fbc0 '__alloc' 'const _Alloc &'))")
  (IfStmt 0xa130138 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa12ffb8 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa12ffa8 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0xa130110 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0xa12ffec <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0xa130058 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa130020 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa130004 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0xa12fe80 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0xa1300a8 <col:29, col:40> '<dependent type>'
        (MemberExpr 0xa130088 <col:29> '<bound member function type>' ->_M_refdata 0xa0d16c0
          (CXXThisExpr 0xa130078 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0xa1300d8 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0xa1300c8 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0xa1301f0 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa130170 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa130154 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa12fe80 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0xa1301b8 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0xa1301a8 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0xa130280 <line:635:7, col:30>
    (CallExpr 0xa130260 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa130228 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa130210 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa12fe80 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0xa130c10 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0xa130830 <line:643:7, col:44>
    0xa130790 "const size_type __size =
      (CallExpr 0xa130810 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1307d8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1307c8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0xa1308d0 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0xa130850 <col:7> '<bound member function type>' ->_M_check_length 0xa0d48c0
      (CXXThisExpr 0xa130840 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa130870 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa130790 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa130888 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa130630 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1308a0 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0xa130bf0 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa130970 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa130928 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa1308f8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa130790 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa130910 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa130630 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa130a88 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1309a8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa130998 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa130a48 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa130a10 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa1309dc <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa130630 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1309f4 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa130790 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa130a6c <col:29> '_CharT' lvalue ParmVar 0xa130670 '__c' '_CharT'))
    (IfStmt 0xa130bd0 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa130b28 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa130ae0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (DeclRefExpr 0xa130aac <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa130630 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa130ac4 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa130790 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa130bb0 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa130b60 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0xa130b50 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa130b94 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa130630 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0xa131a48 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0xa1315c8 <line:659:2, col:36>
    0xa131540 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0xa1315a8 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa131574 <col:25> '_InputIterator' lvalue ParmVar 0xa131190 '__k1' '_InputIterator')
        (DeclRefExpr 0xa13158c <col:31> '_InputIterator' lvalue ParmVar 0xa1311d0 '__k2' '_InputIterator'))")
  (DeclStmt 0xa1316a8 <line:660:2, col:36>
    0xa1315e0 "const size_type __n1 =
      (CXXOperatorCallExpr 0xa131680 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa131648 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa131614 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa131150 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa13162c <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa131110 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0xa1317f0 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0xa1316c8 <col:2> '<bound member function type>' ->_M_check_length 0xa0d48c0
      (CXXThisExpr 0xa1316b8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1316e8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1315e0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0xa131750 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa131718 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0xa131700 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa131540 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0xa1317b0 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0xa131a38 <line:662:2, line:663:21>
    (CallExpr 0xa131a08 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0xa131828 <line:662:9> '<bound member function type>' ->_M_replace_safe 0xa0e91f0
        (CXXThisExpr 0xa131818 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1318e8 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa1318b0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa131848 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa131110 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa131890 <col:32, col:42> '<dependent type>'
          (MemberExpr 0xa131870 <col:32> '<bound member function type>' ->_M_ibegin 0xa0d44a0
            (CXXThisExpr 0xa131860 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa13190c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1315e0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0xa131978 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa131940 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0xa131924 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa131540 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0xa1319e8 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1319b0 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa131994 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa131540 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0xa1325d8 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0xa132338 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0xa132270 <col:7> '<bound member function type>' ->_M_check_length 0xa0d48c0
      (CXXThisExpr 0xa132260 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa132290 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1322a8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa132300 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0xa1323d8 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0xa132370 <col:7> '<bound member function type>' ->_M_mutate 0xa12ae50
      (CXXThisExpr 0xa132360 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa132390 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f00 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1323a8 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1323c0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa132580 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0xa132400 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa132558 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0xa132418 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa0d5060 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0xa132500 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa1324b8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
        (CallExpr 0xa132480 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0xa132440 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa13249c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f00 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa132524 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa131f80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa13253c <col:38> '_CharT' lvalue ParmVar 0xa131fc0 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0xa1325c8 <line:676:7, col:15>
    (UnaryOperator 0xa1325b0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1325a0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0xa1330c8 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0xa132ec8 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0xa132e60 <col:7> '<bound member function type>' ->_M_mutate 0xa12ae50
      (CXXThisExpr 0xa132e50 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa132e80 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa132a90 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa132e98 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa132ad0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa132eb0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa132b80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa133070 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0xa132ef0 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa132b80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa133048 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0xa132f08 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0xa132ff0 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa132fa8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa109580 0xa109ad0 0xa10a050 0xa10a850)
        (CallExpr 0xa132f70 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa132f30 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa132f8c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa132a90 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa133014 <col:30> 'const _CharT *' lvalue ParmVar 0xa132b40 '__s' 'const _CharT *')
      (DeclRefExpr 0xa13302c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa132b80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0xa1330b8 <line:688:7, col:15>
    (UnaryOperator 0xa1330a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa133090 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa133cd8 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0xa133660 <line:696:39>)
  (DeclStmt 0xa133800 <line:697:7, col:66>
    0xa1337d0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1338c0 <line:698:7, col:62>
    0xa133890 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1339b0 <line:699:7, col:55>
    0xa1338f0 "const __size_type __len =
      (CallExpr 0xa133990 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa133950 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0xa133974 <col:49> 'const _CharT *' lvalue ParmVar 0xa133340 '__lhs' 'const _CharT *'))")
  (DeclStmt 0xa133a08 <line:700:7, col:26>
    0xa1339d0 "__string_type __str")
  (CallExpr 0xa133b60 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa133a30 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa133a18 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1339d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0xa133b38 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa133af0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa109ad0 0xa10a050)
      (DeclRefExpr 0xa133a64 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1338f0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0xa133ad0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa133a98 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa133a7c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1334f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0xa133c00 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa133b98 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa133b80 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1339d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa133bcc <col:20> 'const _CharT *' lvalue ParmVar 0xa133340 '__lhs' 'const _CharT *')
    (DeclRefExpr 0xa133be4 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1338f0 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0xa133c90 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa133c40 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa133c24 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1339d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa133c74 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1334f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa133cc8 <line:704:7, col:14>
    (DeclRefExpr 0xa133cb0 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1339d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa134888 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0xa1343f0 <line:711:7, col:66>
    0xa1343c0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1344b0 <line:712:7, col:62>
    0xa134480 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa134508 <line:713:7, col:26>
    0xa1344d0 "__string_type __str")
  (DeclStmt 0xa1345e8 <line:714:7, col:45>
    0xa134540 "const __size_type __len =
      (CallExpr 0xa1345c8 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa134590 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa134574 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1340f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0xa1346e8 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa134610 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1345f8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1344d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0xa1346c0 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa134678 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
      (DeclRefExpr 0xa134644 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa134540 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0xa134660 <col:29> 'int' 1)))
  (CallExpr 0xa1347b0 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa134720 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa134708 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1344d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0xa134778 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0xa134760 <col:32> 'int' 1))
    (DeclRefExpr 0xa134794 <col:36> '_CharT' lvalue ParmVar 0xa133f40 '__lhs' '_CharT'))
  (CallExpr 0xa134840 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1347f0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1347d4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1344d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa134824 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1340f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa134878 <line:718:7, col:14>
    (DeclRefExpr 0xa134860 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1344d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0xa0f1e38 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0xa135400 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0xa135148 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0xa1350e0 <col:7> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa1350d0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa135100 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa135118 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0xa135210 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa13516c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1351e8 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa135198 <col:13> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa135188 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1351b8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1351d0 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0xa135228 <line:728:46>)
  (IfStmt 0xa1353b8 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0xa135234 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa135390 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0xa13524c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa0d4d30 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0xa135264 <col:10> '_CharT *' lvalue ParmVar 0xa134dc0 '__s' '_CharT *')
      (CXXOperatorCallExpr 0xa135350 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa135308 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
        (CallExpr 0xa1352d0 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0xa135290 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1352ec <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa135374 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0xa1353f0 <line:732:7, col:14>
    (DeclRefExpr 0xa1353d4 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa134e00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa136700 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0xa135c40 <line:740:46>)
  (DeclStmt 0xa135d00 <line:741:7, col:44>
    0xa135c60 "const size_type __size =
      (CallExpr 0xa135ce0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa135ca8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa135c98 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa135dc8 <line:742:7, col:39>
    0xa135d20 "const _CharT *__data =
      (CallExpr 0xa135da8 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0xa135d68 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0xa135f88 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa135e60 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa135e08 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
      (DeclRefExpr 0xa135dd8 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1359b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa135df0 <col:18> 'int' 0))
    (ReturnStmt 0xa135f78 <line:745:2, col:35>
      (ConditionalOperator 0xa135f58 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0xa135f00 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa135eb8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
          (DeclRefExpr 0xa135e84 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa135e9c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa135c60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa135f24 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa135f3c <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0xa1366b8 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa136020 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa135fd8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
      (DeclRefExpr 0xa135fa4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1359b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa135fbc <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa135c60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1366a0 <line:748:2, line:754:2>
      (ForStmt 0xa136678 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa136138 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa1360f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
          (DeclRefExpr 0xa136044 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa1360c8 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa136090 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa13605c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa135c60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa136074 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1359b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0xa136178 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa13615c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa136658 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0xa136618 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0xa136280 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1361b8 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0xa136220 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0xa1361ec <col:26> 'const _CharT *' lvalue Var 0xa135d20 '__data' 'const _CharT *')
                (DeclRefExpr 0xa136204 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0xa136268 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa136234 <col:41> 'const _CharT *' lvalue ParmVar 0xa135930 '__s' 'const _CharT *')
                (IntegerLiteral 0xa136250 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0xa1365f0 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa136598 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
              (CallExpr 0xa136558 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1362c8 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa136400 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1363b8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
                  (CXXOperatorCallExpr 0xa136378 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0xa136330 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
                    (DeclRefExpr 0xa1362fc <col:27> 'const _CharT *' lvalue Var 0xa135d20 '__data' 'const _CharT *')
                    (DeclRefExpr 0xa136314 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0xa1363a0 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0xa1364a0 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0xa136458 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
                  (DeclRefExpr 0xa136424 <col:6> 'const _CharT *' lvalue ParmVar 0xa135930 '__s' 'const _CharT *')
                  (IntegerLiteral 0xa136440 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0xa136530 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1364f8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                  (DeclRefExpr 0xa1364c4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1359b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0xa1364e0 <col:21> 'int' 1)))
              (IntegerLiteral 0xa136580 <col:27> 'int' 0)))
          (ReturnStmt 0xa136648 <line:753:8, col:15>
            (DeclRefExpr 0xa136630 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa135970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa1366f0 <line:755:7, col:14>
    (DeclRefExpr 0xa1366d4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0xa0f1e80 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0xa137588 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0xa136f40 <line:763:7, col:29>
    0xa136ef0 "size_type __ret =
      (DeclRefExpr 0xa136f24 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0xa137000 <line:764:7, col:44>
    0xa136f60 "const size_type __size =
      (CallExpr 0xa136fe0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa136fa8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa136f98 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa137540 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa137088 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa137040 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa137010 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa136c60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa137028 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa136f60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa137520 <line:766:2, line:772:2>
      (DeclStmt 0xa137188 <line:767:4, col:36>
        0xa1370e0 "const _CharT *__data =
          (CallExpr 0xa137168 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa137128 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0xa137268 <line:768:4, col:40>
        0xa1371a0 "const size_type __n =
          (CXXOperatorCallExpr 0xa137240 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0xa137208 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa1371d4 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa136f60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1371ec <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa136c60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0xa137418 <line:769:4, col:67>
        0xa137290 "const _CharT *__p =
          (CallExpr 0xa1373f0 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1372e8 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0xa137398 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa137350 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
              (DeclRefExpr 0xa13731c <col:42> 'const _CharT *' lvalue Var 0xa1370e0 '__data' 'const _CharT *')
              (DeclRefExpr 0xa137334 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa136c60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1373bc <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1371a0 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1373d4 <col:63> '_CharT' lvalue ParmVar 0xa136c00 '__c' '_CharT'))")
      (IfStmt 0xa137500 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0xa137428 <line:770:8> 'const _CharT *' lvalue Var 0xa137290 '__p' 'const _CharT *')
        (BinaryOperator 0xa1374e8 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0xa137440 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa136ef0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa1374c0 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa137488 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa137458 <col:14> 'const _CharT *' lvalue Var 0xa137290 '__p' 'const _CharT *')
            (DeclRefExpr 0xa137470 <col:20> 'const _CharT *' lvalue Var 0xa1370e0 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa137578 <line:773:7, col:14>
    (DeclRefExpr 0xa13755c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa136ef0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa138518 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0xa137dc0 <line:781:46>)
  (DeclStmt 0xa137e80 <line:782:7, col:44>
    0xa137de0 "const size_type __size =
      (CallExpr 0xa137e60 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa137e28 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa137e18 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1384d0 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa137f08 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa137ec0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
      (DeclRefExpr 0xa137e90 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137b30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa137ea8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa137de0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1384b0 <line:784:2, line:793:2>
      (BinaryOperator 0xa138090 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa137f2c <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa138068 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0xa137f60 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
          (CXXUnresolvedConstructExpr 0xa138030 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0xa138008 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa137fd0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (DeclRefExpr 0xa137fa0 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa137de0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa137fb8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137b30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0xa13804c <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa138168 <line:786:4, col:36>
        0xa1380c0 "const _CharT *__data =
          (CallExpr 0xa138148 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa138108 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0xa138498 <line:787:4, line:792:22>
        (CompoundStmt 0xa1383b0 <line:788:6, line:791:6>
          (IfStmt 0xa138390 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa138340 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0xa1382e8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
              (CallExpr 0xa1382a8 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1381a0 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa138250 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa138208 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
                  (DeclRefExpr 0xa1381d4 <col:33> 'const _CharT *' lvalue Var 0xa1380c0 '__data' 'const _CharT *')
                  (DeclRefExpr 0xa1381ec <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa138274 <col:49> 'const _CharT *' lvalue ParmVar 0xa137ab0 '__s' 'const _CharT *')
                (DeclRefExpr 0xa13828c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137b30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0xa1382d0 <col:62> 'int' 0))
            (ReturnStmt 0xa138380 <line:790:3, col:10>
              (DeclRefExpr 0xa138364 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa138470 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa138428 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (UnaryOperator 0xa1383f8 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa1383c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa137af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa138410 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa138508 <line:794:7, col:14>
    (DeclRefExpr 0xa1384ec <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0xa0f1ec8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1391d8 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0xa138d80 <line:802:7, col:38>
    0xa138ce0 "size_type __size =
      (CallExpr 0xa138d60 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa138d28 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa138d18 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa139190 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0xa138d90 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa139178 <line:804:2, line:810:2>
      (IfStmt 0xa138ea8 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa138e38 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa138df0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (UnaryOperator 0xa138dc0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa138da8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa138dd4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa138a50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa138e90 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa138e5c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa138e74 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa138a50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0xa139150 <line:807:4, line:809:15>
        (UnaryOperator 0xa138ee0 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa138ec4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa138fa0 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa138f58 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (UnaryOperator 0xa138f28 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa138ef4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa138f40 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0xa139130 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0xa1390e0 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa138ff0 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0xa1390b0 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0xa139078 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0xa139038 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa139094 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1390c4 <col:45> '_CharT' lvalue ParmVar 0xa138a10 '__c' '_CharT'))
          (ReturnStmt 0xa139120 <line:809:8, col:15>
            (DeclRefExpr 0xa139104 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa138ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa1391c8 <line:811:7, col:14>
    (DeclRefExpr 0xa1391ac <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa139de0 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0xa139a10 <line:819:46>)
  (ForStmt 0xa139d90 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa139b28 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0xa139a1c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa139780 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa139b00 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa139ab8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (DeclRefExpr 0xa139a34 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa139740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa139a98 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa139a60 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa139a50 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0xa139b58 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa139b40 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa139740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa139d78 <line:821:2, line:825:2>
      (DeclStmt 0xa139d08 <line:822:4, col:69>
        0xa139b80 "const _CharT *__p =
          (CallExpr 0xa139ce0 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa139bd8 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0xa139c0c <col:42> 'const _CharT *' lvalue ParmVar 0xa139700 '__s' 'const _CharT *')
            (DeclRefExpr 0xa139c24 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa139780 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0xa139cc8 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0xa139c90 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0xa139c50 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa139cac <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa139740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0xa139d58 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0xa139d18 <line:823:8> 'const _CharT *' lvalue Var 0xa139b80 '__p' 'const _CharT *')
        (ReturnStmt 0xa139d48 <line:824:6, col:13>
          (DeclRefExpr 0xa139d30 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa139740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0xa139dd0 <line:826:7, col:14>
    (DeclRefExpr 0xa139db4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa13ab58 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0xa13a610 <line:834:46>)
  (DeclStmt 0xa13a6d0 <line:835:7, col:38>
    0xa13a630 "size_type __size =
      (CallExpr 0xa13a6b0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13a678 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa13a668 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa13ab10 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0xa13a710 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa13a6e0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13a630 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa13a6f8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13a380 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa13aaf8 <line:837:2, line:846:2>
      (IfStmt 0xa13a828 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa13a7b8 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa13a770 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (UnaryOperator 0xa13a740 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa13a728 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13a630 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa13a754 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13a340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa13a810 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa13a7dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13a630 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa13a7f4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13a340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa13aae0 <line:840:4, line:845:24>
        (CompoundStmt 0xa13a9e8 <line:841:6, line:844:6>
          (IfStmt 0xa13a9c8 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0xa13a978 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa13a870 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa13a8a4 <col:30> 'const _CharT *' lvalue ParmVar 0xa13a300 '__s' 'const _CharT *')
              (DeclRefExpr 0xa13a8bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13a380 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0xa13a960 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0xa13a928 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0xa13a8e8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa13a944 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13a630 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0xa13a9b8 <line:843:3, col:10>
              (DeclRefExpr 0xa13a9a0 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13a630 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa13aab8 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa13aa60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
          (UnaryOperator 0xa13aa30 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa13a9fc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13a630 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa13aa48 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa13ab48 <line:847:7, col:14>
    (DeclRefExpr 0xa13ab2c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa13b6e0 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0xa13b3b0 <line:855:46>)
  (ForStmt 0xa13b690 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa13b488 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa13b440 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa13b3bc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13b0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa13b420 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13b3e8 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa13b3d8 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa13b4c8 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa13b4ac <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13b0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa13b670 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0xa13b630 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0xa13b608 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13b500 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0xa13b534 <col:25> 'const _CharT *' lvalue ParmVar 0xa13b0a0 '__s' 'const _CharT *')
          (DeclRefExpr 0xa13b54c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0xa13b5f0 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0xa13b5b8 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa13b578 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa13b5d4 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13b0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0xa13b660 <line:858:4, col:11>
        (DeclRefExpr 0xa13b644 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13b0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa13b6d0 <line:859:7, col:14>
    (DeclRefExpr 0xa13b6b4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa0f1fa0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0xa13c1a0 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0xa13c150 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa13bf60 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa13bf18 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa13be98 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13bc10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa13bef8 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13bec0 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa13beb0 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa13bfa0 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa13bf84 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13bc10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa13c130 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0xa13c0f0 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0xa13c0c8 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13bfd8 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0xa13c098 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0xa13c060 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0xa13c020 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa13c07c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13bc10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa13c0ac <col:41> '_CharT' lvalue ParmVar 0xa13bbd0 '__c' '_CharT')))
      (ReturnStmt 0xa13c120 <line:869:4, col:11>
        (DeclRefExpr 0xa13c104 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13bc10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa13c190 <line:870:7, col:14>
    (DeclRefExpr 0xa13c174 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa13ce60 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0xa13c9d0 <line:878:46>)
  (DeclStmt 0xa13ca90 <line:879:7, col:38>
    0xa13c9f0 "size_type __size =
      (CallExpr 0xa13ca70 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13ca38 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa13ca28 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa13ce18 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0xa13caa0 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13c9f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa13ce00 <line:881:2, line:890:2>
      (IfStmt 0xa13cbb8 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa13cb48 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa13cb00 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (UnaryOperator 0xa13cad0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa13cab8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13c9f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa13cae4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13c700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa13cba0 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa13cb6c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13c9f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa13cb84 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13c700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa13cde8 <line:884:4, line:889:19>
        (CompoundStmt 0xa13cd88 <line:885:6, line:888:6>
          (IfStmt 0xa13cd68 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0xa13cd28 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0xa13cd00 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa13cbf8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa13cc2c <col:31> 'const _CharT *' lvalue ParmVar 0xa13c6c0 '__s' 'const _CharT *')
                (DeclRefExpr 0xa13cc44 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13c740 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0xa13cce8 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0xa13ccb0 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0xa13cc70 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa13cccc <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13c9f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0xa13cd58 <line:887:3, col:10>
              (DeclRefExpr 0xa13cd3c <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13c9f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa13cdd0 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa13cd9c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13c9f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa13ce50 <line:891:7, col:14>
    (DeclRefExpr 0xa13ce34 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa0f1fe8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0d40e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa13da78 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0xa13d6c0 <line:899:7, col:38>
    0xa13d620 "size_type __size =
      (CallExpr 0xa13d6a0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13d668 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa13d658 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa13da30 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0xa13d6d0 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13d620 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa13da18 <line:901:2, line:910:2>
      (IfStmt 0xa13d7e8 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa13d778 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa13d730 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (UnaryOperator 0xa13d700 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa13d6e8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13d620 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa13d714 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13d390 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa13d7d0 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa13d79c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13d620 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa13d7b4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13d390 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa13da00 <line:904:4, line:909:19>
        (CompoundStmt 0xa13d9a0 <line:905:6, line:908:6>
          (IfStmt 0xa13d980 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0xa13d940 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0xa13d918 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa13d828 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0xa13d8e8 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa13d8b0 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0xa13d870 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa13d8cc <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13d620 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa13d8fc <col:48> '_CharT' lvalue ParmVar 0xa13d350 '__c' '_CharT')))
            (ReturnStmt 0xa13d970 <line:907:3, col:10>
              (DeclRefExpr 0xa13d954 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13d620 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa13d9e8 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa13d9b4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa13d620 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa13da68 <line:911:7, col:14>
    (DeclRefExpr 0xa13da4c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa117530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa13e660 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0xa13e020 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0xa13dfb0 <col:7> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa13dfa0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa13dfd0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa13dfe8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa13e0e8 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa13e044 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa13e0c0 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa13e070 <col:13> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa13e060 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa13e090 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa13e0a8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa13e1b8 <line:921:7, col:45>
    0xa13e110 "const size_type __osize =
      (CallExpr 0xa13e198 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13e160 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa13e144 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa13dea0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa13e2b0 <line:922:7, col:53>
    0xa13e1d0 "const size_type __len =
      (CallExpr 0xa13e288 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa13e220 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
        (DeclRefExpr 0xa13e258 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa13e270 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13e110 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa13e508 <line:923:7, col:77>
    0xa13e2d0 "int __r =
      (CallExpr 0xa13e4e0 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13e328 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa13e430 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa13e3e8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
          (CallExpr 0xa13e3b0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa13e370 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa13e3cc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa13e4a8 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13e470 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa13e454 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa13dea0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa13e4c4 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13e1d0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa13e608 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0xa13e550 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa13e540 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa13e530 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa13e518 <col:12> 'int' lvalue Var 0xa13e2d0 '__r' 'int'))))
    (BinaryOperator 0xa13e5f0 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0xa13e564 <col:2> 'int' lvalue Var 0xa13e2d0 '__r' 'int')
      (CallExpr 0xa13e5c8 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0xa13e57c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa0d5b50 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa13e594 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13de50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa13e5ac <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13e110 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa13e650 <line:926:7, col:14>
    (ImplicitCastExpr 0xa13e640 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa13e624 <col:14> 'int' lvalue Var 0xa13e2d0 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0xa13f458 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0xa13ecc0 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0xa13ec38 <col:7> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa13ec28 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa13ec70 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea00 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa13ec88 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0xa13ed80 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa13ed00 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa13ece4 <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa13ea90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa13ed34 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ead0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa13ed4c <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa13ee48 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa13eda4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa13ee20 <col:14, col:35> '<dependent type>'
      (MemberExpr 0xa13edd0 <col:14> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa13edc0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa13edf0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea00 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa13ee08 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0xa13ef20 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0xa13ee60 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13eb10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa13eef8 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa13ee90 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0xa13ee78 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa13ea90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa13eec4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ead0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa13eedc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13eb10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa13f020 <line:939:7, col:51>
    0xa13ef40 "const size_type __len =
      (CallExpr 0xa13eff8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa13ef90 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
        (DeclRefExpr 0xa13efc8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa13efe0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13eb10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa13f300 <line:940:7, line:941:39>
    0xa13f040 "int __r =
      (CallExpr 0xa13f2d8 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13f098 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa13f1a0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa13f158 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
          (CallExpr 0xa13f120 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa13f0e0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa13f13c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea00 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0xa13f298 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa13f250 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
          (CallExpr 0xa13f218 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa13f1e0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa13f1c4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa13ea90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa13f234 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ead0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa13f2bc <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13ef40 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa13f400 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0xa13f348 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa13f338 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa13f328 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa13f310 <col:12> 'int' lvalue Var 0xa13f040 '__r' 'int'))))
    (BinaryOperator 0xa13f3e8 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa13f35c <col:2> 'int' lvalue Var 0xa13f040 '__r' 'int')
      (CallExpr 0xa13f3c0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa13f374 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa0d5b50 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa13f38c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13ea40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa13f3a4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa13eb10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa13f448 <line:944:7, col:14>
    (ImplicitCastExpr 0xa13f438 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa13f41c <col:14> 'int' lvalue Var 0xa13f040 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0xa13feb0 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0xa13f948 <line:952:37>)
  (DeclStmt 0xa13fa00 <line:953:7, col:44>
    0xa13f960 "const size_type __size =
      (CallExpr 0xa13f9e0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13f9a8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa13f998 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa13fae8 <line:954:7, col:57>
    0xa13fa20 "const size_type __osize =
      (CallExpr 0xa13fac8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13fa78 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa13faac <col:53> 'const _CharT *' lvalue ParmVar 0xa13f830 '__s' 'const _CharT *'))")
  (DeclStmt 0xa13fbe0 <line:955:7, col:56>
    0xa13fb00 "const size_type __len =
      (CallExpr 0xa13fbb8 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa13fb50 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
        (DeclRefExpr 0xa13fb88 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13f960 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa13fba0 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13fa20 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa13fd58 <line:956:7, col:60>
    0xa13fc00 "int __r =
      (CallExpr 0xa13fd30 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13fc58 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0xa13fce0 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0xa13fca0 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa13fcfc <col:49> 'const _CharT *' lvalue ParmVar 0xa13f830 '__s' 'const _CharT *')
        (DeclRefExpr 0xa13fd14 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13fb00 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa13fe58 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0xa13fda0 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa13fd90 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa13fd80 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa13fd68 <col:12> 'int' lvalue Var 0xa13fc00 '__r' 'int'))))
    (BinaryOperator 0xa13fe40 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0xa13fdb4 <col:2> 'int' lvalue Var 0xa13fc00 '__r' 'int')
      (CallExpr 0xa13fe18 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0xa13fdcc <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa0d5b50 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa13fde4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13f960 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa13fdfc <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa13fa20 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa13fea0 <line:959:7, col:14>
    (ImplicitCastExpr 0xa13fe90 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa13fe74 <col:14> 'int' lvalue Var 0xa13fc00 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0xa140ac8 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0xa140430 <line:967:37>)
  (CallExpr 0xa1404c0 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0xa140450 <col:7> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa140440 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa140470 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa140488 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa140588 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa1404e4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140290 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa140560 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa140510 <col:14> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa140500 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa140530 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa140548 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140290 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa140678 <line:970:7, col:57>
    0xa1405b0 "const size_type __osize =
      (CallExpr 0xa140658 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa140608 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa14063c <col:53> 'const _CharT *' lvalue ParmVar 0xa140300 '__s' 'const _CharT *'))")
  (DeclStmt 0xa140770 <line:971:7, col:54>
    0xa140690 "const size_type __len =
      (CallExpr 0xa140748 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa1406e0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
        (DeclRefExpr 0xa140718 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140290 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa140730 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1405b0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa140970 <line:972:7, col:68>
    0xa140790 "int __r =
      (CallExpr 0xa140948 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1407e8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa1408f0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa1408a8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
          (CallExpr 0xa140870 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa140830 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa14088c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa140914 <col:57> 'const _CharT *' lvalue ParmVar 0xa140300 '__s' 'const _CharT *')
        (DeclRefExpr 0xa14092c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa140690 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa140a70 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0xa1409b8 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1409a8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa140998 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa140980 <col:12> 'int' lvalue Var 0xa140790 '__r' 'int'))))
    (BinaryOperator 0xa140a58 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0xa1409cc <col:2> 'int' lvalue Var 0xa140790 '__r' 'int')
      (CallExpr 0xa140a30 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0xa1409e4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa0d5b50 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1409fc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140290 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa140a14 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1405b0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa140ab8 <line:975:7, col:14>
    (ImplicitCastExpr 0xa140aa8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa140a8c <col:14> 'int' lvalue Var 0xa140790 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0xa141648 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0xa141090 <line:984:47>)
  (CallExpr 0xa141120 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0xa1410b0 <col:7> '<bound member function type>' ->_M_check 0xa0d4700
      (CXXThisExpr 0xa1410a0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1410d0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140e70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1410e8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa1411e8 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa141144 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140eb0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1411c0 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa141170 <col:14> '<bound member function type>' ->_M_limit 0xa0d4a20
        (CXXThisExpr 0xa141160 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa141190 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140e70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1411a8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140eb0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa1412f0 <line:987:7, col:51>
    0xa141210 "const size_type __len =
      (CallExpr 0xa1412c8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa141260 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
        (DeclRefExpr 0xa141298 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140eb0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1412b0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140f60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1414f0 <line:988:7, col:68>
    0xa141310 "int __r =
      (CallExpr 0xa1414c8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa141368 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa141470 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa141428 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa134210 0xa133610 0x9fa9a70 0xa108d60 0xa10a850 0xa10a050)
          (CallExpr 0xa1413f0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa1413b0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa14140c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140e70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa141494 <col:57> 'const _CharT *' lvalue ParmVar 0xa140f20 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1414ac <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa141210 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1415f0 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0xa141538 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa141528 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa141518 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa141500 <col:12> 'int' lvalue Var 0xa141310 '__r' 'int'))))
    (BinaryOperator 0xa1415d8 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa14154c <col:2> 'int' lvalue Var 0xa141310 '__r' 'int')
      (CallExpr 0xa1415b0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa141564 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa0d5b50 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa14157c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140eb0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa141594 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa140f60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa141638 <line:991:7, col:14>
    (ImplicitCastExpr 0xa141628 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa14160c <col:14> 'int' lvalue Var 0xa141310 '__r' 'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa144d40 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0xa141de0 <line:1000:7, col:61>
    0xa141db0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa141f80 <line:1001:7, col:66>
    0xa141f50 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa142070 <line:1002:7, col:67>
    0xa142040 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa142130 <line:1003:7, col:60>
    0xa142100 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa1421f0 <line:1004:7, col:61>
    0xa1421c0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1422e0 <line:1005:7, col:44>
    0xa1422b0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa1423d0 <line:1006:7, col:69>
    0xa1423a0 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0xa142450 <line:1008:7, col:34>
    0xa142400 "__size_type __extracted =
      (IntegerLiteral 0xa142438 <col:33> 'int' 0)")
  (DeclStmt 0xa142590 <line:1009:7, col:63>
    0xa142510 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa142568 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa1426a0 <line:1010:7, col:58>
    0xa142620 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa142680 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa142654 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa142670 <col:52> '_Bool' false))")
  (IfStmt 0xa144b68 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1426b0 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0xa142620 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa144b48 <line:1012:2, line:1058:2>
      (IfStmt 0xa144918 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1426c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1448d8 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0xa142728 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1426f0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1426d8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa141b40 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa1427d8 <line:1017:8, col:25>
            0xa1427a0 "_CharT __buf[128]")
          (DeclStmt 0xa142840 <line:1018:8, col:29>
            0xa1427f0 "__size_type __len =
              (IntegerLiteral 0xa142828 <col:28> 'int' 0)")
          (DeclStmt 0xa142908 <line:1019:8, col:43>
            0xa142860 "const streamsize __w =
              (CallExpr 0xa1428e8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1428b0 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa142894 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa142a78 <line:1020:8, line:1021:51>
            0xa142920 "const __size_type __n =
              (ConditionalOperator 0xa142a58 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0xa142998 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0xa142988 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa142954 <col:32> 'const streamsize':'const int' lvalue Var 0xa142860 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0xa142970 <col:38> 'int' 0))
                (CXXStaticCastExpr 0xa1429d0 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0xa1429b0 <col:67> 'const streamsize':'const int' lvalue Var 0xa142860 '__w' 'const streamsize':'const int'))
                (CallExpr 0xa142a38 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa142a00 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1429e8 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa141b40 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0xa142c18 <line:1022:8, col:73>
            0xa142ae0 "const __ctype_type &__ct =
              (CallExpr 0xa142bf8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa142b20 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa03fb60)
                (CallExpr 0xa142bd8 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa142ba0 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa142b88 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa143d28 <line:1023:8, col:47>
            0xa143c80 "const __int_type __eof =
              (CallExpr 0xa143d08 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa143ce0 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa143e40 <line:1024:8, col:46>
            0xa143d40 "__int_type __c =
              (CallExpr 0xa143e20 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa143de8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa143dc8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa143d90 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa143d74 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa144648 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0xa144130 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0xa143fa8 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa143ec8 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa143e80 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                  (DeclRefExpr 0xa143e50 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa142400 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa143e68 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa142920 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa143f90 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa143f68 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa143f10 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa143f34 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa143d40 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa143f4c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa143c80 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa144118 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0xa1440f0 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa143fd8 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa143fc0 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa142ae0 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0xa144048 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0xa1440d0 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa144090 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa1440b4 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa143d40 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0xa144628 <line:1030:3, line:1039:3>
              (IfStmt 0xa1443d0 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa144238 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1441e0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
                  (DeclRefExpr 0xa144148 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1427f0 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0xa1441c8 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0xa144190 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0xa144178 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0xa144160 <col:25> '_CharT [128]' lvalue Var 0xa1427a0 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0xa1441b0 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0xa1443b8 <line:1032:7, line:1035:7>
                  (CallExpr 0xa144348 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa144278 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa14425c <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa141b40 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0xa1442ac <col:22> '_CharT [128]' lvalue Var 0xa1427a0 '__buf' '_CharT [128]')
                    (BinaryOperator 0xa144330 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0xa1442f8 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0xa1442e0 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0xa1442c4 <col:36> '_CharT [128]' lvalue Var 0xa1427a0 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0xa144318 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0xa1443a0 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0xa14436c <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1427f0 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0xa144388 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0xa1444e8 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0xa144450 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1443ec <col:5> '_CharT [128]' lvalue Var 0xa1427a0 '__buf' '_CharT [128]')
                  (UnaryOperator 0xa144438 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa144404 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1427f0 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0xa1444c8 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa144488 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa1444ac <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa143d40 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa144518 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa144500 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa142400 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa144610 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa14452c <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa143d40 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa1445f0 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1445b8 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa144598 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa144560 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa144544 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0xa1446e0 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa144678 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa14465c <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa141b40 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0xa1446ac <col:21> '_CharT [128]' lvalue Var 0xa1427a0 '__buf' '_CharT [128]')
            (DeclRefExpr 0xa1446c4 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1427f0 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0xa144830 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0xa144788 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa144730 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa144754 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa143d40 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa14476c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa143c80 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa144810 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa1447ac <col:3> 'typename __ios_base::iostate' lvalue Var 0xa142510 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa1447e8 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0xa1448b8 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa144868 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa14484c <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa1448a0 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa144a28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa144938 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa144a10 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0xa1449e0 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa144960 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa144948 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1449b8 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa144a00 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0xa144b28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa144a48 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa144b10 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0xa144af0 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa144a70 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa144a58 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa144ac8 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa144c38 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0xa144ba0 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa144b84 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa142400 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa144c18 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa144bb4 <col:2> 'typename __ios_base::iostate' lvalue Var 0xa142510 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa144bf0 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa144cf8 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0xa144c54 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0xa142510 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa144cd8 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa144c88 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa144c6c <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa144cbc <col:16> 'typename __ios_base::iostate' lvalue Var 0xa142510 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa144d30 <line:1064:7, col:14>
    (DeclRefExpr 0xa144d14 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa141990 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0xa146c28 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0xa145550 <line:1072:7, col:61>
    0xa145520 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa1456f0 <line:1073:7, col:66>
    0xa1456c0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1457b0 <line:1074:7, col:67>
    0xa145780 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa145850 <line:1075:7, col:60>
    0xa145820 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa145910 <line:1076:7, col:61>
    0xa1458e0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa145990 <line:1078:7, col:34>
    0xa145940 "__size_type __extracted =
      (IntegerLiteral 0xa145978 <col:33> 'int' 0)")
  (DeclStmt 0xa145a58 <line:1079:7, col:47>
    0xa1459b0 "const __size_type __n =
      (CallExpr 0xa145a38 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa145a00 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa1459e4 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa145250 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa145b70 <line:1080:7, col:63>
    0xa145af0 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa145b48 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa145c60 <line:1081:7, col:57>
    0xa145be0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa145c40 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa145c14 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa145c30 <col:52> '_Bool' true))")
  (IfStmt 0xa146a50 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0xa145c70 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0xa145be0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa146a30 <line:1083:2, line:1122:2>
      (IfStmt 0xa146800 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa145c88 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1467d8 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0xa145ce8 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa145cb0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa145c98 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa145250 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa145df0 <line:1087:8, col:65>
            0xa145d30 "const __int_type __idelim =
              (CallExpr 0xa145dd0 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa145d90 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0xa145db4 <col:57> '_CharT' lvalue ParmVar 0xa145290 '__delim' '_CharT'))")
          (DeclStmt 0xa145eb0 <line:1088:8, col:47>
            0xa145e10 "const __int_type __eof =
              (CallExpr 0xa145e90 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa145e68 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa145fd0 <line:1089:8, col:46>
            0xa145ed0 "__int_type __c =
              (CallExpr 0xa145fb0 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa145f78 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa145f58 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa145f20 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa145f04 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa146420 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0xa146208 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0xa146138 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa146058 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa146010 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                  (DeclRefExpr 0xa145fe0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa145940 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa145ff8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1459b0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa146120 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa1460f8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa1460a0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa1460c4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa145ed0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa1460dc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa145e10 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa1461f0 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0xa1461c8 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa146170 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa146194 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa145ed0 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0xa1461ac <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa145d30 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0xa146400 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0xa1462b8 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa146220 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa145250 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0xa146298 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa146258 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa14627c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa145ed0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa1462f0 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa1462d8 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa145940 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa1463e8 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa146304 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa145ed0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa1463c8 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa146390 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa146370 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa146338 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa14631c <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0xa1467b8 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0xa1464b8 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa146460 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa146484 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa145ed0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa14649c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa145e10 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa146540 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa1464dc <col:3> 'typename __ios_base::iostate' lvalue Var 0xa145af0 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa146518 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0xa146798 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0xa1465e0 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa146588 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa1465ac <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa145ed0 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0xa1465c4 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa145d30 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0xa146700 <line:1103:3, line:1106:3>
                (UnaryOperator 0xa146620 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa146604 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa145940 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0xa1466e0 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1466a8 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0xa146688 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa146650 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0xa146634 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0xa146778 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa146718 <col:3> 'typename __ios_base::iostate' lvalue Var 0xa145af0 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0xa146750 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa146910 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa146820 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1468f8 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0xa1468c8 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa146848 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa146830 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1468a0 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa1468e8 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0xa146a10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa146930 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1469f8 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0xa1469d8 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa146958 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa146940 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1469b0 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa146b20 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0xa146a88 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa146a6c <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa145940 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa146b00 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa146a9c <col:2> 'typename __ios_base::iostate' lvalue Var 0xa145af0 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa146ad8 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa146be0 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0xa146b3c <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0xa145af0 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa146bc0 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa146b70 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa146b54 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa146ba4 <col:16> 'typename __ios_base::iostate' lvalue Var 0xa145af0 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa146c18 <line:1127:7, col:14>
    (DeclRefExpr 0xa146bfc <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1450a0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa149df8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa149de8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa0d4118 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa4383c0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4383b0 <col:9, col:29>
    (ImplicitCastExpr 0xa4383a0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa438380 <col:17, col:29> 'char *' lvalue ._M_p 0xa14a380
        (MemberExpr 0xa438360 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa14a3b0
          (CXXThisExpr 0xa438240 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa438228 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa438218 <col:9, col:59>
    (UnaryOperator 0xa438200 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa4381e8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4381d0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa4381b8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4381a0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa438180 <col:44, col:52> 'char *'
                (MemberExpr 0xa438160 <col:44> '<bound member function type>' ->_M_data 0xa14a430
                  (CXXThisExpr 0xa438150 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa437b78 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa437b68 <col:9, col:26>
    (ImplicitCastExpr 0xa437b58 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa437b38 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa16c340
        (ImplicitCastExpr 0xa437b28 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa437af0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa437ad0 <col:16> '<bound member function type>' ->_M_rep 0xa14a700
              (CXXThisExpr 0xa4379a8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa437990 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa437980 <col:9, col:32>
    (BinaryOperator 0xa437968 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa437938 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa437918 <col:16, col:22> '<bound member function type>' ->size 0xa151680
          (CXXThisExpr 0xa437908 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa437958 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0fab48 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa43b210 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4384e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa438490 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa438480 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa438414 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa152be0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa438460 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa438440 <col:13, col:19> '<bound member function type>' ->size 0xa151680
          (CXXThisExpr 0xa438430 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa4384b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4384a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4384d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa43b200 <line:859:2, col:22>
    (ImplicitCastExpr 0xa43b1f0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa43b1d8 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa43b190 <col:9, col:17> 'char *'
          (MemberExpr 0xa43b170 <col:9> '<bound member function type>' ->_M_data 0xa14a430
            (CXXThisExpr 0xa43b160 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa43b1c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa43b1ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa152be0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa4373c8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa437228 <line:180:4, col:62>
    0xa437050 "void *__p =
      (CXXReinterpretCastExpr 0xa437210 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa4371f8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa4371a0 <col:41> 'size_type []' lvalue Var 0xa192210 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa4373b8 <line:181:4, col:39>
    (UnaryOperator 0xa4373a0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa437388 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa437378 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa43735c <col:36> 'void *' lvalue Var 0xa437050 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw() (CompoundStmt 0xa43c8f0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa43c8e0 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa43c8c8 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0xa43c8b0 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0xa43c8a0 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0xa0f29b0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa437038 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa437018 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa436d40 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa436cf8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa436ce8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0f2cac <col:8> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa436d20 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa436cd0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa436b30 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa436cb8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa436c98 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa436c88 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa436c50 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa192390 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa436d30 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa0f2d98 <col:50> '_Bool' false))))
    (CompoundStmt 0xa437000 <line:236:6, line:245:6>
      (NullStmt 0xa0f2dd0 <line:238:67>)
      (IfStmt 0xa436fe0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa436e38 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa436e10 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa436e00 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0f2e00 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa436de8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa436dc8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa1919e0
                (ImplicitCastExpr 0xa436db8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa436d90 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa0f2e98 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa0f2e80 <col:10> 'int' 1)))
          (IntegerLiteral 0xa0f2ed8 <col:16> 'int' 0))
        (CompoundStmt 0xa436fc8 <line:241:3, line:244:3>
          (NullStmt 0xa0f2f58 <line:242:63>)
          (CXXMemberCallExpr 0xa436fa8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa436f70 <col:5> '<bound member function type>' ->_M_destroy 0xa1930a0
              (CXXThisExpr 0xa436e50 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa436f90 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa192f80 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a) : std::allocator<wchar_t>((DeclRefExpr 0xa43c904 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa1716d0 '__a' 'const class std::allocator<wchar_t> &')
), _M_p((ImplicitCastExpr 0xa43cac0 </usr/include/c++/4.6/bits/basic_string.h:269:22> 'wchar_t *' <LValueToRValue>
  (DeclRefExpr 0xa43c998 <col:22> 'wchar_t *' lvalue ParmVar 0xa171660 '__dat' 'wchar_t *'))
) (CompoundStmt 0xa0f33a0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa436290 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


            inline _Alloc_hider(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider &) throw();
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa1713b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa1713a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa0d4130 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa0d4118 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa436ad0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa436ac0 <col:9, col:29>
    (ImplicitCastExpr 0xa436ab0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa436a90 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa171940
        (MemberExpr 0xa436a70 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa171970
          (CXXThisExpr 0xa436950 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa436938 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa436928 <col:9, col:59>
    (UnaryOperator 0xa436910 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa4368f8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4368e0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa4368c8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4368b0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa436890 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa436870 <col:44> '<bound member function type>' ->_M_data 0xa1719f0
                  (CXXThisExpr 0xa436860 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa0f3618 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa0f3600 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa43c840 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0xa43c830 <col:9, col:35>
    (CallExpr 0xa43c810 <col:16, col:35> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0xa43c800 <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa43c7dc <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa192390 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))


    public:
    public:
        basic_string() : _M_dataplus((CXXMemberCallExpr 0xa43c318 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> 'wchar_t *'
  (MemberExpr 0xa43c2f4 <col:21, col:36> '<bound member function type>' ._M_refdata 0xa1927f0
    (CallExpr 0xa43c2d8 <col:21, col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0xa43c2c8 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa43c2b0 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa174f60 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))
, (MaterializeTemporaryExpr 0xa43c638 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
  (ImplicitCastExpr 0xa43c628 <col:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
    (CXXBindTemporaryExpr 0xa43c378 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>' (CXXTemporary 0xa43c370)
      (CXXTemporaryObjectExpr 0xa43c340 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>''void (void) throw()'))))
) (CompoundStmt 0xa0f9b00 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa4361e0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa4361c0 <col:9, col:51> 'void'
    (CXXTemporary 0xa436140)
    (CXXMemberCallExpr 0xa436158 <col:9, col:51> 'void'
      (MemberExpr 0xa4360bc <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa192fd0
        (CXXMemberCallExpr 0xa436090 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa436070 <col:9> '<bound member function type>' ->_M_rep 0xa171ce0
            (ImplicitCastExpr 0xa4360b0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa435f50 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa4361b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa4361a0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa436148 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa436140)
            (CXXMemberCallExpr 0xa436110 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa4360f0 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa1897e0
                (ImplicitCastExpr 0xa436130 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa4360e0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str) (CompoundStmt 0xa43cbb8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa43cba8 <col:9, col:34>
    (CXXMemberCallExpr 0xa43cb88 <col:16, col:34> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43cb68 <col:16, col:22> '<bound member function type>' ->assign 0xa17c4e0
        (CXXThisExpr 0xa43caf0 <col:16> 'class std::basic_string<wchar_t> *' this))
      (DeclRefExpr 0xa43cb50 <col:29> 'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa177700 '__str' 'const class std::basic_string<wchar_t> &'))))


        std::basic_string<wchar_t> &operator=(const wchar_t *__s) (CompoundStmt 0xa43c180 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0xa43c170 <col:9, col:32>
    (CXXMemberCallExpr 0xa43c140 <col:16, col:32> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43c120 <col:16, col:22> '<bound member function type>' ->assign 0xa17cff0
        (CXXThisExpr 0xa43c0a8 <col:16> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa43c160 <col:29> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa43c108 <col:29> 'const wchar_t *' lvalue ParmVar 0xa177910 '__s' 'const wchar_t *')))))


        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa43b4c0 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa43b4b0 <col:9, col:26>
    (ImplicitCastExpr 0xa43b4a0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa43b480 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa191860
        (ImplicitCastExpr 0xa43b470 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa43b450 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa43b430 <col:16> '<bound member function type>' ->_M_rep 0xa171ce0
              (CXXThisExpr 0xa43b310 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear() (CompoundStmt 0xa43cdb8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CXXMemberCallExpr 0xa43cd70 <col:9, col:37> 'void'
    (MemberExpr 0xa43ccf0 <col:9> '<bound member function type>' ->_M_mutate 0xa174d10
      (CXXThisExpr 0xa43cbd0 <col:9> 'class std::basic_string<wchar_t> *' this))
    (ImplicitCastExpr 0xa43cd98 <col:19> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa0faa08 <col:19> 'int' 0))
    (CXXMemberCallExpr 0xa43cd40 <col:22, col:33> 'size_type':'unsigned int'
      (MemberExpr 0xa43cd20 <col:22, col:28> '<bound member function type>' ->size 0xa178bb0
        (ImplicitCastExpr 0xa43cd60 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0xa43cd10 <col:22> 'class std::basic_string<wchar_t> *' this))))
    (ImplicitCastExpr 0xa43cda8 <col:36> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa0faa88 <col:36> 'int' 0))))


        bool empty() const (CompoundStmt 0xa43b2f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa43b2e8 <col:9, col:32>
    (BinaryOperator 0xa43b2d0 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa43b2a0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa43b280 <col:16, col:22> '<bound member function type>' ->size 0xa178bb0
          (CXXThisExpr 0xa43b270 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa43b2c0 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0fab48 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa43bb60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa43b5e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa43b590 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa43b580 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa43b514 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa17a110 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa43b560 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa43b540 <col:13, col:19> '<bound member function type>' ->size 0xa178bb0
          (CXXThisExpr 0xa43b530 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa43b5b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa43b5a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0fafb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa43b5d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0fafa0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa0faf70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa43bb50 <line:859:2, col:22>
    (ImplicitCastExpr 0xa43bb40 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa43bb28 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa43bae0 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa43bac0 <col:9> '<bound member function type>' ->_M_data 0xa1719f0
            (CXXThisExpr 0xa43bab0 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa43bb18 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa43bafc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa17a110 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s) (CompoundStmt 0xa43d200 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0xa0fed00 <line:1119:32>)
  (ReturnStmt 0xa43d1f0 <line:1120:2, col:51>
    (CXXMemberCallExpr 0xa43d1b8 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa43d194 <col:9, col:15> '<bound member function type>' ->assign 0xa17ce00
        (CXXThisExpr 0xa43cdd0 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa43d1e0 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa43ce30 <col:22> 'const wchar_t *' lvalue ParmVar 0xa17cf90 '__s' 'const wchar_t *'))
      (CallExpr 0xa43d128 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0xa43d118 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa43d0bc <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0xa002a70 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0xa43d148 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa43d0dc <col:47> 'const wchar_t *' lvalue ParmVar 0xa17cf90 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa43c090 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa43c080 <col:9, col:24>
    (ImplicitCastExpr 0xa43c070 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa43c050 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa43c030 <col:16> '<bound member function type>' ->_M_data 0xa1719f0
          (CXXThisExpr 0xa43c020 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa4375a0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa437590 <col:9, col:16>
    (CXXConstructExpr 0xa437568 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa437558 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa437548 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa437500 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa171970
            (CXXThisExpr 0xa4373e0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    namespace rel_ops {
        template <class _Tp> inline bool operator!=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa1951a0 </usr/include/c++/4.6/bits/stl_relops.h:89:7, col:31>
  (ReturnStmt 0xa195190 <col:9, col:28>
    (UnaryOperator 0xa195178 <col:16, col:28> '<dependent type>' prefix '!'
      (ParenExpr 0xa195160 <col:17, col:28> '<dependent type>'
        (CXXOperatorCallExpr 0xa195138 <col:18, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa1950e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
          (DeclRefExpr 0xa1950b0 <col:18> 'const _Tp' lvalue ParmVar 0xa194f50 '__x' 'const _Tp &')
          (DeclRefExpr 0xa1950c8 <col:25> 'const _Tp' lvalue ParmVar 0xa194fa0 '__y' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa195460 </usr/include/c++/4.6/bits/stl_relops.h:102:7, col:27>
  (ReturnStmt 0xa195450 <col:9, col:22>
    (CXXOperatorCallExpr 0xa195428 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa1953e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa1953b0 <col:16> 'const _Tp' lvalue ParmVar 0xa1952a0 '__y' 'const _Tp &')
      (DeclRefExpr 0xa1953c8 <col:22> 'const _Tp' lvalue ParmVar 0xa195250 '__x' 'const _Tp &'))))

;
        template <class _Tp> inline bool operator<=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa195750 </usr/include/c++/4.6/bits/stl_relops.h:115:7, col:30>
  (ReturnStmt 0xa195740 <col:9, col:27>
    (UnaryOperator 0xa195728 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0xa195710 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa1956e8 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa1956a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (DeclRefExpr 0xa195670 <col:18> 'const _Tp' lvalue ParmVar 0xa195560 '__y' 'const _Tp &')
          (DeclRefExpr 0xa195688 <col:24> 'const _Tp' lvalue ParmVar 0xa195510 '__x' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa195a40 </usr/include/c++/4.6/bits/stl_relops.h:128:7, col:30>
  (ReturnStmt 0xa195a30 <col:9, col:27>
    (UnaryOperator 0xa195a18 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0xa195a00 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa1959d8 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa195990 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (DeclRefExpr 0xa195960 <col:18> 'const _Tp' lvalue ParmVar 0xa195800 '__x' 'const _Tp &')
          (DeclRefExpr 0xa195978 <col:24> 'const _Tp' lvalue ParmVar 0xa195850 '__y' 'const _Tp &'))))))

;
    }
}
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0x9dd5388 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0x9dd5430 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9dd5418 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0x9dd53e8 <col:36> 'long' 1)
    (IntegerLiteral 0x9dd5400 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0x9dd54d0 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9dd54b8 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9dd5488 <col:37> 'long' 1)
    (IntegerLiteral 0x9dd54a0 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0x9dd5570 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9dd5558 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9dd5528 <col:37> 'long' 1)
    (IntegerLiteral 0x9dd5540 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0x9dd5610 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9dd55f8 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0x9dd55c8 <col:35> 'long' 1)
    (IntegerLiteral 0x9dd55e0 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0x9dd56b0 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9dd5698 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9dd5668 <col:38> 'long' 1)
    (IntegerLiteral 0x9dd5680 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0x9dd5750 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9dd5738 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9dd5708 <col:38> 'long' 1)
    (IntegerLiteral 0x9dd5720 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0x9dd5910 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0x9dd58f8 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0x9dd58b8 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0x9dd5878 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0x9dd5838 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0x9dd57f8 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0x9dd57d8 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9dd57a4 <col:35> 'const category':'const int' lvalue Var 0x9dd53b0 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0x9dd57e8 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9dd57bc <col:43> 'const category':'const int' lvalue Var 0x9dd5450 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0x9dd5828 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0x9dd5810 <col:53> 'const category':'const int' lvalue Var 0x9dd54f0 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0x9dd5868 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0x9dd5850 <col:9> 'const category':'const int' lvalue Var 0x9dd5590 'time' 'const category':'const int')))
      (ImplicitCastExpr 0x9dd58a8 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0x9dd5890 <col:17> 'const category':'const int' lvalue Var 0x9dd5630 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0x9dd58e8 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0x9dd58d0 <col:28> 'const category':'const int' lvalue Var 0x9dd56d0 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0x9dd77d0 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0x9dd77c0 <col:7, col:41>
    (UnaryOperator 0x9dd77a8 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0x9dd7790 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0x9dd7770 <col:16, col:40> '_Bool'
          (MemberExpr 0x9dd7738 <col:16, col:30> '<bound member function type>' ->operator== 0x9dd6760
            (CXXThisExpr 0x9dd7728 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0x9dd7758 <col:33> 'const class std::locale' lvalue ParmVar 0x9dd67e0 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0x9dd7228 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd71d0 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0x9dd71a0 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0x9dd71b8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0x9ea2d90 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ea2d78 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0x9ea2e30 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0x9ea2e20 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x9ea2e10 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9ea2dc4 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0x9dd7c90 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0x9ea2de0 <col:61> 'int' 1)
  (IntegerLiteral 0x9ea2df8 <col:65> 'int' 0))
) (CompoundStmt 0x9ea2e70 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0x9ea2db8 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9ea2da0 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0x9ea2fa0 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0x9ea2f78 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9ea2f68 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ea2ea4 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0xa0cb170 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9ea2f38 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9ea2f14 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9dd7a60
        (CXXThisExpr 0x9ea2ee8 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0x9ea2f50 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0x9ea31f8 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0x9ea2fb8 <line:407:60>)
  (IfStmt 0x9ea31d8 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0x9ea30d0 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0x9ea3090 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9ea3080 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ea2fe8 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9ea3038 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9ea3018 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9dd7a60
            (CXXThisExpr 0x9ea3008 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0x9ea3068 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9ea3050 <col:65> 'int' 1)))
      (IntegerLiteral 0x9ea30b8 <col:71> 'int' 1))
    (CompoundStmt 0x9ea31b8 <line:409:2, line:415:2>
      (NullStmt 0x9ea30e8 <line:410:63>)
      (IfStmt 0x9ea3158 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea30f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea3140 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0x9ea3128 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9ea3118 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9ea3108 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0x9ea3198 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea3178 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea3188 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0x9ea3bc0 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0x9ea5aa8 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0x9ea5a80 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9ea5a70 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ea59ec <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0xa0cb170 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9ea5a40 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9ea5a20 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9ea4320
        (CXXThisExpr 0x9ea5a10 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0x9ea5a58 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0x9ea5d00 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0x9ea5ac0 <line:516:60>)
  (IfStmt 0x9ea5ce0 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0x9ea5bd8 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0x9ea5b98 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9ea5b88 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ea5af0 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9ea5b40 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9ea5b20 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9ea4320
            (CXXThisExpr 0x9ea5b10 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0x9ea5b70 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9ea5b58 <col:65> 'int' 1)))
      (IntegerLiteral 0x9ea5bc0 <col:71> 'int' 1))
    (CompoundStmt 0x9ea5cc0 <line:518:2, line:524:2>
      (NullStmt 0x9ea5bf0 <line:519:63>)
      (IfStmt 0x9ea5c60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea5c00 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea5c48 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0x9ea5c30 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9ea5c20 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9ea5c10 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0x9ea5ca0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea5c80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea5c90 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0x9ea6378 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0x9ea5d68 <line:541:7, col:24>
    0x9ea5d20 "bool __ret =
      (CXXBoolLiteralExpr 0x9ea5d58 <col:20> '_Bool' true)")
  (IfStmt 0x9ea6320 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ea5df8 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9ea5de8 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0x9ea5dd0 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0x9ea5dc0 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0x9ea5d88 <col:11> 'char **' lvalue ->_M_names 0x9ea4440
              (CXXThisExpr 0x9ea5d78 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0x9ea5da8 <col:20> 'int' 1))))
    (ForStmt 0x9ea62f8 <line:544:2, line:545:66>
      (DeclStmt 0x9ea5e70 <line:544:7, col:21>
        0x9ea5e10 "size_t __i =
          (ImplicitCastExpr 0x9ea5e60 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ea5e48 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0x9ea5f50 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0x9ea5f40 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ea5e80 <col:23> '_Bool' lvalue Var 0x9ea5d20 '__ret' '_Bool'))
        (BinaryOperator 0x9ea5f28 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0x9ea5f08 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ea5e98 <col:32> 'size_t':'unsigned int' lvalue Var 0x9ea5e10 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9ea5f18 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0x9ea5ef0 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0x9ea5ee0 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0x9ea5eb0 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0x9dd71f0 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0x9ea5ec8 <col:59> 'int' 1)))))
      (UnaryOperator 0x9ea5f80 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0x9ea5f68 <col:64> 'size_t':'unsigned int' lvalue Var 0x9ea5e10 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0x9ea62e0 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0x9ea5f94 <col:4> '_Bool' lvalue Var 0x9ea5d20 '__ret' '_Bool')
        (BinaryOperator 0x9ea62c8 <col:12, col:66> '_Bool' '=='
          (CallExpr 0x9ea6248 <col:12, col:61> 'int'
            (ImplicitCastExpr 0x9ea6238 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ea60c4 <col:12> 'int (const char *, const char *)' lvalue Function 0x9ea5fb0 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0x9ea6280 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9ea6270 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9ea6148 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0x9ea6128 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0x9ea60f0 <col:29> 'char **' lvalue ->_M_names 0x9ea4440
                      (CXXThisExpr 0x9ea60e0 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0x9ea6138 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9ea6110 <col:38> 'size_t':'unsigned int' lvalue Var 0x9ea5e10 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0x9ea62a0 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9ea6290 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9ea6208 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0x9ea61f8 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0x9ea6170 <col:44> 'char **' lvalue ->_M_names 0x9ea4440
                      (CXXThisExpr 0x9ea6160 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0x9ea61e0 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0x9ea61c0 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9ea6190 <col:53> 'size_t':'unsigned int' lvalue Var 0x9ea5e10 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0x9ea61d0 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9ea61a8 <col:59> 'int' 1)))))))
          (IntegerLiteral 0x9ea62b0 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9ea6368 <line:546:7, col:14>
    (ImplicitCastExpr 0x9ea6358 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9ea633c <col:14> '_Bool' lvalue Var 0x9ea5d20 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0x9ea6470 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0x9ea6448 <col:9, col:46> '<dependent type>'
    (MemberExpr 0x9ea63a8 <col:9> '<bound member function type>' ->_M_install_facet 0x9ea5660
      (CXXThisExpr 0x9ea6398 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0x9ea6418 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0x9ea63f0 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0x9ea642c <col:39> '_Facet *' lvalue ParmVar 0x9ea5760 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0xa1d0dc0 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1d0da8 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa1d0df4 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0xa1cfda0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa1d0ee8 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa1d0ed8 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa1d0e88 <col:44> '__c_locale (void)' lvalue CXXMethod 0x9dd8430 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0xa1d0f50 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa1d0de8 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1d0dd0 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa1d0f60 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0xa1cfef0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa1d1078 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa1d1068 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0xa1d0ff8 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0x9dd80f0 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0xa1d1010 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa1cfeb0 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0xa1d10e0 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa1d11f0 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0xa1d11e0 <col:9, col:59>
    (CallExpr 0xa1d11b0 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d1118 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1d1108 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa1d114c <col:33> 'const _CharT *' lvalue ParmVar 0xa1d0030 '__lo1' 'const _CharT *')
      (DeclRefExpr 0xa1d1164 <col:40> 'const _CharT *' lvalue ParmVar 0xa1d0080 '__hi1' 'const _CharT *')
      (DeclRefExpr 0xa1d117c <col:47> 'const _CharT *' lvalue ParmVar 0xa1d00d0 '__lo2' 'const _CharT *')
      (DeclRefExpr 0xa1d1194 <col:54> 'const _CharT *' lvalue ParmVar 0xa1d0120 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa1d12b8 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0xa1d12a8 <col:9, col:45>
    (CallExpr 0xa1d1280 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d1218 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1d1208 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa1d124c <col:35> 'const _CharT *' lvalue ParmVar 0xa1d0270 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa1d1264 <col:41> 'const _CharT *' lvalue ParmVar 0xa1d02c0 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa1d1380 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0xa1d1370 <col:9, col:40>
    (CallExpr 0xa1d1348 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d12e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1d12d0 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa1d1314 <col:30> 'const _CharT *' lvalue ParmVar 0xa1d03e0 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa1d132c <col:36> 'const _CharT *' lvalue ParmVar 0xa1d0430 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0xa1d1418 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0xa1d13f8 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0xa1d1394 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0x9dd8210 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0xa1d13d8 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0xa1cfcc0
      (CXXThisExpr 0xa1d13c8 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0xa1d1668 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa1d5780 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1d5768 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0xa1d5820 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0xa1d55b0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa1d5c70 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0xa1d5c50 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0xa1d5a80 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0xa1d5940 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0xa1d58e0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa1d58d0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1d587c <col:6> 'int (const char *, const char *)' lvalue Function 0x9ea5fb0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa1d5908 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa1d5894 <col:23> 'const char *' lvalue ParmVar 0xa1d5570 '__s' 'const char *'))
          (ImplicitCastExpr 0xa1d5918 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa1d58ac <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa1d5928 <col:36> 'int' 0))
      (BinaryOperator 0xa1d5a68 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0xa1d5a08 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa1d59f8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1d5958 <col:9> 'int (const char *, const char *)' lvalue Function 0x9ea5fb0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa1d5a30 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa1d5970 <col:26> 'const char *' lvalue ParmVar 0xa1d5570 '__s' 'const char *'))
          (ImplicitCastExpr 0xa1d5a40 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa1d59d0 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa1d5a50 <col:43> 'int' 0)))
    (CompoundStmt 0xa1d5c38 <line:808:4, line:811:4>
      (CallExpr 0xa1d5b48 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d5ac8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa1d5ab8 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa1d5b10 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1d5b00 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0xa1d5c10 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d5b78 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa1d5b68 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa1d5bc0 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa1d5bb0 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0xa1d5bf4 <col:58> 'const char *' lvalue ParmVar 0xa1d5570 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0xa1d5c88 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0xa1d6528 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0xa1d6140 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0xa1d6018 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dd7000
      (CXXThisExpr 0xa1d6008 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0xa1d6100 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0xa1d60b8 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0xa1d6080 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0xa1d6070 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa1d6050 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
              (DeclRefExpr 0xa1d6038 <col:28> 'const class std::locale' lvalue ParmVar 0xa1d5e00 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0xa1d60c8 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1d6098 <col:45> 'int' 1))))
  (IfStmt 0xa1d6288 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1d6158 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa1d6270 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0xa1d6248 <col:4, col:46> '<dependent type>'
        (MemberExpr 0xa1d61a4 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0x9ea5660
          (ImplicitCastExpr 0xa1d6198 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa1d6178 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dd7000
              (CXXThisExpr 0xa1d6168 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0xa1d6218 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa1d61f0 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0xa1d622c <col:43> '_Facet *' lvalue ParmVar 0xa1d5e70 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0xa1d6360 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1d62a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa1d6348 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0xa1d6318 <line:52:4, col:33> 'void'
        (MemberExpr 0xa1d62f4 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0x9ea49a0
          (ImplicitCastExpr 0xa1d62e8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa1d62c8 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dd7000
              (CXXThisExpr 0xa1d62b8 <col:4> 'class std::locale *' this)))))
      (NullStmt 0xa1d6338 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa1d6430 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0xa1d6420 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0xa1d6408 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0xa1d63f8 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0xa1d63bc <col:17, col:26> 'char **' lvalue ->_M_names 0x9ea4440
            (ImplicitCastExpr 0xa1d63b0 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa1d6390 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dd7000
                (CXXThisExpr 0xa1d6380 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0xa1d63e0 <col:35> 'int' 0))))
  (BinaryOperator 0xa1d6510 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0xa1d64d0 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0xa1d64c0 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0xa1d6484 <col:7, col:16> 'char **' lvalue ->_M_names 0x9ea4440
          (ImplicitCastExpr 0xa1d6478 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa1d6458 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dd7000
              (CXXThisExpr 0xa1d6448 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0xa1d64a8 <col:25> 'int' 0))
    (ImplicitCastExpr 0xa1d6500 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0xa1d64e8 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0xa1d6b88 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0xa1d6858 <line:64:7, col:44>
    0xa1d6720 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0xa1d6818 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0xa1d67d0 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0xa1d6798 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0xa1d6788 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa1d6768 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0x9dd7000
                (CXXThisExpr 0xa1d6758 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0xa1d67e0 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa1d67b0 <col:42> 'int' 1)))")
  (IfStmt 0xa1d69a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1d6868 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa1d6988 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0xa1d6960 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0xa1d689c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0x9ea54d0
          (ImplicitCastExpr 0xa1d6890 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa1d6878 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa1d6720 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0xa1d68d4 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
          (DeclRefExpr 0xa1d68bc <col:28> 'const class std::locale' lvalue ParmVar 0xa1d65d0 '__other' 'const class std::locale &'))
        (UnaryOperator 0xa1d6948 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa1d6920 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0xa1d6a60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1d69c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa1d6a48 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0xa1d6a18 <line:71:4, col:31> 'void'
        (MemberExpr 0xa1d69f4 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0x9ea49a0
          (ImplicitCastExpr 0xa1d69e8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa1d69d0 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa1d6720 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0xa1d6a38 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0xa1d6b78 <line:74:7, col:26>
    (ExprWithCleanups 0xa1d6b58 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0xa1d6ae0)
      (CXXConstructExpr 0xa1d6b30 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0xa1d6b20 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0xa1d6b10 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0xa1d6af8 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa1d6ae8 <col:14, col:21> 'class std::locale' (CXXTemporary 0xa1d6ae0)
                (CXXConstructExpr 0xa1d6ab0 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0xa1d6aa0 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0xa1d6a88 <col:21> 'class std::locale::_Impl *' lvalue Var 0xa1d6720 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0xa1d78b0 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0xa1d7290 <line:83:7, col:50>
    0xa1d7260 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0xa1d73f0 <line:84:7, col:73>
    0xa1d7300 "const __collate_type &__collate =
      (CallExpr 0xa1d73d0 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa1d7340 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9ea6750)
        (UnaryOperator 0xa1d73b8 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0xa1d73a8 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0xa1d78a0 <line:85:7, line:86:50>
    (ParenExpr 0xa1d7888 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0xa1d7860 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa1d7818 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa1d77d0 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1d7418 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa1d7400 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0xa1d7300 '__collate' 'const __collate_type &'))
          (CallExpr 0xa1d74a0 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d7468 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa1d744c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d6e40 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa1d75e8 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d75a0 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
            (CallExpr 0xa1d7510 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d74d8 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa1d74bc <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d6e40 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa1d7580 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d7548 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0xa1d752c <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d6e40 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0xa1d7660 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d7628 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa1d760c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d6ff0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa1d77a8 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d7760 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
            (CallExpr 0xa1d76d0 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d7698 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0xa1d767c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d6ff0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa1d7740 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d7708 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0xa1d76ec <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d6ff0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0xa1d7800 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0xa1d9620 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0xa1d7b10 <line:94:7, col:44>
    0xa1d7a30 "const size_t __i =
      (CallExpr 0xa1d7af0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d7ab8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa1d7a90 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa1d9470 <line:95:7, col:64>
    0xa1d7b90 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa1d9460 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa1d943c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9ea4380
          (ImplicitCastExpr 0xa1d9430 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa1d9410 <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
              (DeclRefExpr 0xa1d93f8 <col:40> 'const class std::locale' lvalue ParmVar 0xa1d7940 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0xa1d9610 <line:96:7, line:98:53>
    (ParenExpr 0xa1d95f8 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0xa1d95e0 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0xa1d9520 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0xa1d9500 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa1d9480 <col:15> 'const size_t':'const unsigned int' lvalue Var 0xa1d7a30 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0xa1d9510 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0xa1d94dc <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9ea43c0
              (ImplicitCastExpr 0xa1d94d0 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0xa1d94b0 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
                  (DeclRefExpr 0xa1d9498 <col:21> 'const class std::locale' lvalue ParmVar 0xa1d7940 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0xa1d95c8 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0xa1d9588 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa1d9568 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa1d9538 <col:39> 'const class locale::facet **' lvalue Var 0xa1d7b90 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa1d9578 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa1d9550 <col:48> 'const size_t':'const unsigned int' lvalue Var 0xa1d7a30 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0xa1d9cb8 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0xa1d98d0 <line:108:7, col:44>
    0xa1d97f0 "const size_t __i =
      (CallExpr 0xa1d98b0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d9878 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa1d9850 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa1d99d0 <line:109:7, col:64>
    0xa1d9920 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa1d99c0 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa1d999c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9ea4380
          (ImplicitCastExpr 0xa1d9990 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa1d996c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
              (DeclRefExpr 0xa1d9954 <col:40> 'const class std::locale' lvalue ParmVar 0xa1d96b0 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa1d9bd0 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0xa1d9b38 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0xa1d9a80 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0xa1d9a60 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1d99e0 <col:11> 'const size_t':'const unsigned int' lvalue Var 0xa1d97f0 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa1d9a70 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0xa1d9a3c <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9ea43c0
            (ImplicitCastExpr 0xa1d9a30 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa1d9a10 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
                (DeclRefExpr 0xa1d99f8 <col:18> 'const class std::locale' lvalue ParmVar 0xa1d96b0 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0xa1d9b20 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa1d9b10 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa1d9b00 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0xa1d9ae8 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0xa1d9ac8 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0xa1d9a98 <col:52> 'const class locale::facet **' lvalue Var 0xa1d9920 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0xa1d9ad8 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa1d9ab0 <col:61> 'const size_t':'const unsigned int' lvalue Var 0xa1d97f0 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0xa1d9bb0 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0xa1d9ba0 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d9b84 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9f594b0 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa1d9ca8 <line:113:7, col:56>
    (CXXDynamicCastExpr 0xa1d9c90 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0xa1d9c68 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0xa1d9c58 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa1d9c40 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa1d9c20 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa1d9bec <col:43> 'const class locale::facet **' lvalue Var 0xa1d9920 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa1d9c30 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa1d9c04 <col:52> 'const size_t':'const unsigned int' lvalue Var 0xa1d97f0 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0xa1da040 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0xa1da030 <col:7, col:14>
    (IntegerLiteral 0xa1da018 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0xa1da448 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0xa1da438 <col:7, col:14>
    (ImplicitCastExpr 0xa1da428 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa1da410 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa1db760 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0xa1da8e8 <line:140:7, col:44>
    0xa1da860 "const string_type __one =
      (ParenListExpr 0xa1da8c8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa1da894 <col:31> 'const _CharT *' lvalue ParmVar 0xa1da630 '__lo1' 'const _CharT *')
        (DeclRefExpr 0xa1da8ac <col:38> 'const _CharT *' lvalue ParmVar 0xa1da680 '__hi1' 'const _CharT *'))")
  (DeclStmt 0xa1da988 <line:141:7, col:44>
    0xa1da900 "const string_type __two =
      (ParenListExpr 0xa1da968 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa1da934 <col:31> 'const _CharT *' lvalue ParmVar 0xa1da6d0 '__lo2' 'const _CharT *')
        (DeclRefExpr 0xa1da94c <col:38> 'const _CharT *' lvalue ParmVar 0xa1da720 '__hi2' 'const _CharT *'))")
  (DeclStmt 0xa1daa58 <line:143:7, col:40>
    0xa1da9b0 "const _CharT *__p =
      (CallExpr 0xa1daa38 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1daa00 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa1da9e4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1da860 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa1dac08 <line:144:7, col:59>
    0xa1daa80 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa1dabe0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dab98 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (CallExpr 0xa1dab08 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1daad0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa1daab4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1da860 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa1dab78 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1dab40 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa1dab24 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1da860 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa1dacd8 <line:145:7, col:40>
    0xa1dac30 "const _CharT *__q =
      (CallExpr 0xa1dacb8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1dac80 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa1dac64 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1da900 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa1dae88 <line:146:7, col:59>
    0xa1dad00 "const _CharT *__qend =
      (CXXOperatorCallExpr 0xa1dae60 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dae18 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (CallExpr 0xa1dad88 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1dad50 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa1dad34 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1da900 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa1dadf8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1dadc0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa1dada4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1da900 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0xa1db738 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0xa1db708 <line:152:2, line:168:2>
      (DeclStmt 0xa1daf70 <line:153:4, col:42>
        0xa1daeb0 "const int __res =
          (CallExpr 0xa1daf48 <col:22, col:41> '<dependent type>'
            (MemberExpr 0xa1daef8 <col:22> '<bound member function type>' ->_M_compare 0xa1d9f80
              (CXXThisExpr 0xa1daee8 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0xa1daf18 <col:33> 'const _CharT *' lvalue Var 0xa1da9b0 '__p' 'const _CharT *')
            (DeclRefExpr 0xa1daf30 <col:38> 'const _CharT *' lvalue Var 0xa1dac30 '__q' 'const _CharT *'))")
      (IfStmt 0xa1daff0 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0xa1dafa8 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa1daf98 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0xa1daf80 <col:8> 'const int' lvalue Var 0xa1daeb0 '__res' 'const int')))
        (ReturnStmt 0xa1dafe0 <line:155:6, col:13>
          (ImplicitCastExpr 0xa1dafd0 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0xa1dafb4 <col:13> 'const int' lvalue Var 0xa1daeb0 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0xa1db140 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa1db00c <col:4> 'const _CharT *' lvalue Var 0xa1da9b0 '__p' 'const _CharT *')
        (CallExpr 0xa1db120 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1db0d0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa1db104 <col:39> 'const _CharT *' lvalue Var 0xa1da9b0 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0xa1db290 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa1db160 <col:4> 'const _CharT *' lvalue Var 0xa1dac30 '__q' 'const _CharT *')
        (CallExpr 0xa1db270 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1db220 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa1db254 <col:39> 'const _CharT *' lvalue Var 0xa1dac30 '__q' 'const _CharT *')))
      (IfStmt 0xa1db658 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0xa1db410 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa1db338 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0xa1db2e0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
            (DeclRefExpr 0xa1db2b0 <col:8> 'const _CharT *' lvalue Var 0xa1da9b0 '__p' 'const _CharT *')
            (DeclRefExpr 0xa1db2c8 <col:15> 'const _CharT *' lvalue Var 0xa1daa80 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0xa1db3e8 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa1db390 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
            (DeclRefExpr 0xa1db35c <col:25> 'const _CharT *' lvalue Var 0xa1dac30 '__q' 'const _CharT *')
            (DeclRefExpr 0xa1db374 <col:32> 'const _CharT *' lvalue Var 0xa1dad00 '__qend' 'const _CharT *')))
        (ReturnStmt 0xa1db440 <line:160:6, col:13>
          (IntegerLiteral 0xa1db428 <col:13> 'int' 0))
        (IfStmt 0xa1db638 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa1db4d8 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa1db480 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
            (DeclRefExpr 0xa1db450 <col:13> 'const _CharT *' lvalue Var 0xa1da9b0 '__p' 'const _CharT *')
            (DeclRefExpr 0xa1db468 <col:20> 'const _CharT *' lvalue Var 0xa1daa80 '__pend' 'const _CharT *'))
          (ReturnStmt 0xa1db530 <line:162:6, col:14>
            (UnaryOperator 0xa1db518 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0xa1db500 <col:14> 'int' 1)))
          (IfStmt 0xa1db618 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa1db5c8 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa1db570 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
              (DeclRefExpr 0xa1db540 <col:13> 'const _CharT *' lvalue Var 0xa1dac30 '__q' 'const _CharT *')
              (DeclRefExpr 0xa1db558 <col:20> 'const _CharT *' lvalue Var 0xa1dad00 '__qend' 'const _CharT *'))
            (ReturnStmt 0xa1db608 <line:164:6, col:13>
              (IntegerLiteral 0xa1db5f0 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0xa1db6a8 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa1db674 <col:4> 'const _CharT *' lvalue Var 0xa1da9b0 '__p' 'const _CharT *'))
      (UnaryOperator 0xa1db6f0 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa1db6bc <col:4> 'const _CharT *' lvalue Var 0xa1dac30 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa1dcb60 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0xa1dbce8 <line:176:7, col:24>
    0xa1dbcb0 "string_type __ret")
  (DeclStmt 0xa1dbd88 <line:179:7, col:42>
    0xa1dbd00 "const string_type __str =
      (ParenListExpr 0xa1dbd68 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa1dbd34 <col:31> 'const _CharT *' lvalue ParmVar 0xa1dba60 '__lo' 'const _CharT *')
        (DeclRefExpr 0xa1dbd4c <col:37> 'const _CharT *' lvalue ParmVar 0xa1dbab0 '__hi' 'const _CharT *'))")
  (DeclStmt 0xa1dbe58 <line:181:7, col:40>
    0xa1dbdb0 "const _CharT *__p =
      (CallExpr 0xa1dbe38 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1dbe00 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa1dbde4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1dbd00 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa1dc008 <line:182:7, col:59>
    0xa1dbe80 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa1dbfe0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dbf98 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (CallExpr 0xa1dbf08 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1dbed0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa1dbeb4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1dbd00 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa1dbf78 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1dbf40 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa1dbf24 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa1dbd00 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa1dc130 <line:184:7, col:39>
    0xa1dc020 "size_t __len =
      (BinaryOperator 0xa1dc118 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0xa1dc0e8 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0xa1dc0c0 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa1dc088 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa1dc054 <col:23> 'const _CharT *' lvalue ParmVar 0xa1dbab0 '__hi' 'const _CharT *')
            (DeclRefExpr 0xa1dc06c <col:30> 'const _CharT *' lvalue ParmVar 0xa1dba60 '__lo' 'const _CharT *')))
        (IntegerLiteral 0xa1dc100 <col:38> 'int' 2))")
  (DeclStmt 0xa1dc208 <line:186:7, col:38>
    0xa1dc170 "_CharT *__c =
      (CXXNewExpr 0xa1dc1c8 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0xa1dc1a4 <col:32> 'size_t':'unsigned int' lvalue Var 0xa1dc020 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0xa1dca60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1dc218 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa1dca48 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0xa1dca20 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0xa1dc9f0 <line:194:6, line:214:6>
          (DeclStmt 0xa1dc308 <line:196:8, col:52>
            0xa1dc230 "size_t __res =
              (CallExpr 0xa1dc2e0 <col:23, col:51> '<dependent type>'
                (MemberExpr 0xa1dc278 <col:23> '<bound member function type>' ->_M_transform 0xa1da370
                  (CXXThisExpr 0xa1dc268 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0xa1dc298 <col:36> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *')
                (DeclRefExpr 0xa1dc2b0 <col:41> 'const _CharT *' lvalue Var 0xa1dbdb0 '__p' 'const _CharT *')
                (DeclRefExpr 0xa1dc2c8 <col:46> 'size_t':'unsigned int' lvalue Var 0xa1dc020 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0xa1dc628 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0xa1dc368 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0xa1dc348 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa1dc318 <col:12> 'size_t':'unsigned int' lvalue Var 0xa1dc230 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa1dc358 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa1dc330 <col:21> 'size_t':'unsigned int' lvalue Var 0xa1dc020 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0xa1dc608 <line:200:3, line:205:3>
              (BinaryOperator 0xa1dc400 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0xa1dc380 <col:5> 'size_t':'unsigned int' lvalue Var 0xa1dc020 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0xa1dc3e8 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa1dc3c8 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa1dc398 <col:13> 'size_t':'unsigned int' lvalue Var 0xa1dc230 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0xa1dc3d8 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa1dc3b0 <col:21> 'int' 1))))
              (BinaryOperator 0xa1dc490 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0xa1dc430 <col:5, col:15> 'void'
                  (DeclRefExpr 0xa1dc418 <col:15> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *'))
                (BinaryOperator 0xa1dc478 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0xa1dc448 <col:20> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *')
                  (IntegerLiteral 0xa1dc460 <col:26> 'int' 0)))
              (BinaryOperator 0xa1dc520 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0xa1dc4a8 <col:5> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *')
                (CXXNewExpr 0xa1dc4e0 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0xa1dc4c0 <col:22> 'size_t':'unsigned int' lvalue Var 0xa1dc020 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0xa1dc5f0 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa1dc538 <col:5> 'size_t':'unsigned int' lvalue Var 0xa1dc230 '__res' 'size_t':'unsigned int')
                (CallExpr 0xa1dc5c8 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0xa1dc560 <col:13> '<bound member function type>' ->_M_transform 0xa1da370
                    (CXXThisExpr 0xa1dc550 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0xa1dc580 <col:26> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *')
                  (DeclRefExpr 0xa1dc598 <col:31> 'const _CharT *' lvalue Var 0xa1dbdb0 '__p' 'const _CharT *')
                  (DeclRefExpr 0xa1dc5b0 <col:36> 'size_t':'unsigned int' lvalue Var 0xa1dc020 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0xa1dc6c8 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1dc660 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1dc644 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa1dbcb0 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0xa1dc694 <col:21> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *')
            (DeclRefExpr 0xa1dc6ac <col:26> 'size_t':'unsigned int' lvalue Var 0xa1dc230 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0xa1dc820 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa1dc6ec <col:8> 'const _CharT *' lvalue Var 0xa1dbdb0 '__p' 'const _CharT *')
            (CallExpr 0xa1dc800 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1dc7b0 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0xa1dc7e4 <col:43> 'const _CharT *' lvalue Var 0xa1dbdb0 '__p' 'const _CharT *')))
          (IfStmt 0xa1dc8f8 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa1dc8c8 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa1dc870 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
              (DeclRefExpr 0xa1dc840 <col:12> 'const _CharT *' lvalue Var 0xa1dbdb0 '__p' 'const _CharT *')
              (DeclRefExpr 0xa1dc858 <col:19> 'const _CharT *' lvalue Var 0xa1dbe80 '__pend' 'const _CharT *'))
            (BreakStmt 0xa1dc8f0 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa1dc948 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa1dc914 <col:8> 'const _CharT *' lvalue Var 0xa1dbdb0 '__p' 'const _CharT *'))
          (CallExpr 0xa1dc9d0 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1dc978 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1dc95c <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa1dbcb0 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0xa1dc9b8 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0xa1dcae8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1dca80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa1dcad0 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0xa1dcaa8 <line:218:4, col:14> 'void'
        (DeclRefExpr 0xa1dca90 <col:14> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *'))
      (NullStmt 0xa1dcac0 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa1dcb20 <line:222:7, col:17> 'void'
    (DeclRefExpr 0xa1dcb04 <col:17> '_CharT *' lvalue Var 0xa1dc170 '__c' '_CharT *'))
  (ReturnStmt 0xa1dcb50 <line:224:7, col:14>
    (DeclRefExpr 0xa1dcb38 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0xa1dbcb0 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa1dee60 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0xa1dcf50 <line:232:7, col:30>
    0xa1dcef0 "unsigned long __val =
      (ImplicitCastExpr 0xa1dcf40 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0xa1dcf28 <col:29> 'int' 0))")
  (ForStmt 0xa1dedc8 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1dcfd8 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa1dcf90 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa1dcf60 <col:14> 'const _CharT *' lvalue ParmVar 0xa1dcd70 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa1dcf78 <col:21> 'const _CharT *' lvalue ParmVar 0xa1dcdc0 '__hi' 'const _CharT *'))
    (UnaryOperator 0xa1dd018 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1dcffc <col:29> 'const _CharT *' lvalue ParmVar 0xa1dcd70 '__lo' 'const _CharT *'))
    (BinaryOperator 0xa1dedb0 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0xa1dd02c <line:234:2> 'unsigned long' lvalue Var 0xa1dcef0 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0xa1ded88 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ded40 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (UnaryOperator 0xa1dd060 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1dd044 <col:5> 'const _CharT *' lvalue ParmVar 0xa1dcd70 '__lo' 'const _CharT *'))
        (ParenExpr 0xa1ded28 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0xa1ded10 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0xa1dd0d0 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0xa1dd0b8 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0xa1dd0a8 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa1dd074 <col:14> 'unsigned long' lvalue Var 0xa1dcef0 '__val' 'unsigned long'))
                (IntegerLiteral 0xa1dd090 <col:23> 'int' 7)))
            (ParenExpr 0xa1decf8 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0xa1dece0 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0xa1dec98 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa1dd0e4 <col:9> 'unsigned long' lvalue Var 0xa1dcef0 '__val' 'unsigned long'))
                (ParenExpr 0xa1dec80 <col:18, line:237:17> 'int'
                  (BinaryOperator 0xa1dec68 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0xa1dec58 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa1dec1c <line:236:19, line:237:5> 'const int' lvalue Var 0xa1dea10 '__digits' 'const int'))
                    (IntegerLiteral 0xa1dec40 <col:16> 'int' 7))))))))))
  (ReturnStmt 0xa1dee50 <line:238:7, col:37>
    (CXXStaticCastExpr 0xa1dee38 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0xa1dee28 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa1dee18 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0xa1dedec <col:32> 'unsigned long' lvalue Var 0xa1dcef0 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0xa1e17e8 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e0e30 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa1e0e00 <col:23> 'long' 1)
    (IntegerLiteral 0xa1e0e18 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0xa1e17f8 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e0eb8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e0e88 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e0ea0 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0xa1e1808 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e0f38 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa1e0f08 <col:20> 'long' 1)
    (IntegerLiteral 0xa1e0f20 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0xa1e1818 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e0fb8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e0f88 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e0fa0 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0xa1e1828 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1038 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa1e1008 <col:22> 'long' 1)
    (IntegerLiteral 0xa1e1020 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0xa1e1838 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e10b8 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0xa1e1088 <col:19> 'long' 1)
    (IntegerLiteral 0xa1e10a0 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0xa1e1848 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1138 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e1108 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e1120 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0xa1e1858 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e11b8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa1e1188 <col:20> 'long' 1)
    (IntegerLiteral 0xa1e11a0 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0xa1e1868 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1238 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0xa1e1208 <col:24> 'long' 1)
    (IntegerLiteral 0xa1e1220 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0xa1e1878 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e12b8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa1e1288 <col:22> 'long' 1)
    (IntegerLiteral 0xa1e12a0 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0xa1e1888 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1338 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa1e1308 <col:23> 'long' 1)
    (IntegerLiteral 0xa1e1320 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0xa1e1898 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e13b8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa1e1388 <col:21> 'long' 1)
    (IntegerLiteral 0xa1e13a0 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0xa1e18a8 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1438 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa1e1408 <col:20> 'long' 1)
    (IntegerLiteral 0xa1e1420 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0xa1e18b8 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e14b8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa1e1488 <col:21> 'long' 1)
    (IntegerLiteral 0xa1e14a0 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0xa1e18c8 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1538 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa1e1508 <col:23> 'long' 1)
    (IntegerLiteral 0xa1e1520 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0xa1e18d8 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e15e8 <col:25, col:46> 'long' '|'
    (BinaryOperator 0xa1e15b8 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0xa1e1584 <col:25> 'long' EnumConstant 0xa1e10d0 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0xa1e159c <col:35> 'long' EnumConstant 0xa1e11d0 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0xa1e15d0 <col:46> 'long' EnumConstant 0xa1e1050 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0xa1e18e8 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1698 <col:23, col:41> 'long' '|'
    (BinaryOperator 0xa1e1668 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0xa1e1634 <col:23> 'long' EnumConstant 0xa1e0ed0 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0xa1e164c <col:32> 'long' EnumConstant 0xa1e1150 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0xa1e1680 <col:41> 'long' EnumConstant 0xa1e0fd0 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0xa1e18f8 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1718 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0xa1e16e4 <col:24> 'long' EnumConstant 0xa1e1250 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0xa1e16fc <col:40> 'long' EnumConstant 0xa1e0f50 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0xa1e1908 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e1798 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0xa1e1768 <col:29> 'long' 1)
    (IntegerLiteral 0xa1e1780 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa1e1b50 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0xa1e1b40 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa1e1b28 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa1e1b10 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0xa1e1a98 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e1a88 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e1a78 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e1a50 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e1920 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa1e1af8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e1ae8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e1ad8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e1ab0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e1960 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa1e1d80 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0xa1e1d70 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa1e1d58 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa1e1d40 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0xa1e1cc8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e1cb8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e1ca8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e1c80 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e1b70 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa1e1d28 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e1d18 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e1d08 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e1ce0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e1bb0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa1e3030 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0xa1e3020 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa1e3008 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa1e2ff0 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0xa1e2f78 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e2f68 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e2f58 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e2f30 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e1da0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa1e2fd8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e2fc8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e2fb8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e2f90 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e2e60 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0xa1e31e0 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0xa1e31d0 <col:5, col:48>
    (CXXFunctionalCastExpr 0xa1e31b8 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0xa1e31a0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0xa1e3188 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e3178 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e3168 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa1e3140 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3050 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa1e38e0 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0xa1e38d0 <col:5, col:24>
    (ImplicitCastExpr 0xa1e38c0 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa1e38a8 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa1e3378 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3230 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa1e3428 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa1e3418 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e33e0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e1c10 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa1e33c0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1e3390 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3230 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa1e33d0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1e33a8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3270 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa1e3b08 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0xa1e3af8 <col:5, col:24>
    (ImplicitCastExpr 0xa1e3ae8 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa1e3ad0 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa1e3a18 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3910 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa1e3aa8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa1e3a98 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e3a80 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa1e3a60 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1e3a30 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3910 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa1e3a70 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1e3a48 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3950 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa1e3d28 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0xa1e3d18 <col:5, col:24>
    (ImplicitCastExpr 0xa1e3d08 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa1e3cf0 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa1e3c38 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3b30 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa1e3cc8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa1e3cb8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e3ca0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e2ec0 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa1e3c80 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1e3c50 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3b30 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa1e3c90 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1e3c68 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1e3b70 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0xa1e4128 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e3dd0 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e3da0 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e3db8 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0xa1e4138 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e3e58 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e3e28 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e3e40 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0xa1e4148 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e3ed8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e3ea8 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e3ec0 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0xa1e4158 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e3f58 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0xa1e3f28 <col:17> 'long' 1)
    (IntegerLiteral 0xa1e3f40 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0xa1e4168 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e3fd8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa1e3fa8 <col:18> 'long' 1)
    (IntegerLiteral 0xa1e3fc0 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0xa1e4178 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e4058 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa1e4028 <col:20> 'long' 1)
    (IntegerLiteral 0xa1e4040 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0xa1e4188 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e40d8 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0xa1e40a8 <col:29> 'long' 1)
    (IntegerLiteral 0xa1e40c0 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa1e43d0 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0xa1e43c0 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa1e43a8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa1e4390 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0xa1e4318 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e4308 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e42f8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e42d0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e41a0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa1e4378 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e4368 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e4358 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e4330 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e41e0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa1e4600 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0xa1e45f0 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa1e45d8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa1e45c0 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0xa1e4548 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e4538 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e4528 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e4500 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e43f0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa1e45a8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e4598 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e4588 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e4560 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4430 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa1e4830 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0xa1e4820 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa1e4808 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa1e47f0 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0xa1e4778 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e4768 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e4758 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e4730 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4620 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa1e47d8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e47c8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e47b8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e4790 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4660 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0xa1e49e0 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0xa1e49d0 <col:5, col:48>
    (CXXFunctionalCastExpr 0xa1e49b8 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0xa1e49a0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0xa1e4988 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e4978 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e4968 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa1e4940 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4850 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa1e4ca0 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0xa1e4c90 <col:5, col:24>
    (ImplicitCastExpr 0xa1e4c80 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa1e4c68 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa1e4b78 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4a30 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa1e4c28 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa1e4c18 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e4be0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa1e4bc0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa1e4b90 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4a30 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa1e4bd0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa1e4ba8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4a70 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa1e4ec8 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0xa1e4eb8 <col:5, col:24>
    (ImplicitCastExpr 0xa1e4ea8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa1e4e90 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa1e4dd8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4cd0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa1e4e68 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa1e4e58 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e4e40 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4260 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa1e4e20 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa1e4df0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4cd0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa1e4e30 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa1e4e08 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4d10 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa1e50e8 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0xa1e50d8 <col:5, col:24>
    (ImplicitCastExpr 0xa1e50c8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa1e50b0 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa1e4ff8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4ef0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa1e5088 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa1e5078 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e5060 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e46c0 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa1e5040 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa1e5010 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4ef0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa1e5050 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa1e5028 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa1e4f30 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0xa1e53b8 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1e5160 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0xa1e53c8 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e51e8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa1e51b8 <col:21> 'long' 1)
    (IntegerLiteral 0xa1e51d0 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0xa1e53d8 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e5268 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa1e5238 <col:21> 'long' 1)
    (IntegerLiteral 0xa1e5250 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0xa1e53e8 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e52e8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa1e52b8 <col:21> 'long' 1)
    (IntegerLiteral 0xa1e52d0 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0xa1e53f8 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e5368 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa1e5338 <col:28> 'long' 1)
    (IntegerLiteral 0xa1e5350 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa1e5640 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0xa1e5630 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa1e5618 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa1e5600 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0xa1e5588 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e5578 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e5568 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e5540 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5410 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa1e55e8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e55d8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e55c8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e55a0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5450 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa1e5870 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0xa1e5860 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa1e5848 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa1e5830 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0xa1e57b8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e57a8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e5798 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e5770 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5660 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa1e5818 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e5808 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e57f8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e57d0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e56a0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa1e5aa0 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0xa1e5a90 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa1e5a78 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa1e5a60 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0xa1e59e8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e59d8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e59c8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e59a0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5890 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa1e5a48 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e5a38 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e5a28 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e5a00 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e58d0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0xa1e5c50 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0xa1e5c40 <col:5, col:47>
    (CXXFunctionalCastExpr 0xa1e5c28 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0xa1e5c10 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0xa1e5bf8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa1e5be8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1e5bd8 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa1e5bb0 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5ac0 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa1e5f10 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0xa1e5f00 <col:5, col:24>
    (ImplicitCastExpr 0xa1e5ef0 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa1e5ed8 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa1e5de8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5ca0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa1e5e98 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa1e5e88 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e5e50 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e5700 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa1e5e30 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1e5e00 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5ca0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa1e5e40 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1e5e18 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5ce0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa1e6138 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0xa1e6128 <col:5, col:24>
    (ImplicitCastExpr 0xa1e6118 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa1e6100 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa1e6048 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5f40 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa1e60d8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa1e60c8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e60b0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e54d0 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa1e6090 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1e6060 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5f40 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa1e60a0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1e6078 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e5f80 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa1e6358 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0xa1e6348 <col:5, col:24>
    (ImplicitCastExpr 0xa1e6338 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa1e6320 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa1e6268 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e6160 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa1e62f8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa1e62e8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1e62d0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e5930 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa1e62b0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1e6280 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e6160 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa1e62c0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1e6298 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa1e61a0 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0xa1e6548 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1e63d0 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0xa1e6558 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1e6428 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0xa1e6568 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1e6478 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0xa1e6578 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa1e64f8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa1e64c8 <col:28> 'long' 1)
    (IntegerLiteral 0xa1e64e0 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0xa1e6cd4 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e0e50 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0xa1e6d34 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e0ed0 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0xa1e6d94 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e0f50 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0xa1e6df4 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e0fd0 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0xa1e9f44 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1050 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0xa1e9fa4 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e10d0 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0xa1ea004 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1150 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0xa1ea064 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e11d0 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0xa1ea0c4 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1250 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0xa1ea124 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e12d0 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0xa1ea184 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1350 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0xa1ea1e4 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e13d0 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0xa1ea244 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1450 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0xa1ea2a4 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e14d0 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0xa1ea304 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1550 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0xa1ea364 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1600 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0xa1ea3c4 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e16b0 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0xa1ea424 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa1e1730 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0xa1ea4d4 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0xa1e5200 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0xa1ea534 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0xa1e5280 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0xa1ea594 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0xa1e5300 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0xa1ea5f4 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0xa1e5180 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0xa1ea6a4 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0xa1e3df0 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0xa1ea704 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0xa1e3e70 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0xa1ea764 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0xa1e3ef0 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0xa1ea7c4 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0xa1e3f70 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0xa1ea824 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0xa1e3ff0 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0xa1ea884 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0xa1e4070 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0xa1ea934 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa1e63f0 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0xa1ea994 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa1e6440 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0xa1ea9f4 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa1e6490 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0xa1ed600 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0xa1ed5e8 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0xa1eb550 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0xa1ed640 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0xa1ed628 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0xa1eb4b0 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0xa1ed680 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0xa1ed668 <col:46> 'int' lvalue ParmVar 0xa1eb500 '__index' 'int'))
), _M_refcount((IntegerLiteral 0xa1ed6a8 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0xa1ed6e8 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0xa1ed7d8 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0xa1ed7b0 <col:28, col:76> 'void'
    (ImplicitCastExpr 0xa1ed7a0 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1ed71c <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0xa0cb170 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa1ed770 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa1ed750 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0xa1eb450
        (CXXThisExpr 0xa1ed740 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0xa1ed788 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0xa1eda18 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0xa1ed7f0 <line:481:62>)
  (DeclStmt 0xa1ed930 <line:482:9, col:77>
    0xa1ed810 "int __res =
      (CallExpr 0xa1ed908 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa1ed8f8 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1ed85c <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa0cace0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa1ed8b0 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa1ed890 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0xa1eb450
            (CXXThisExpr 0xa1ed880 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0xa1ed8e0 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0xa1ed8c8 <col:75> 'int' 1)))")
  (IfStmt 0xa1ed9c0 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0xa1ed980 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0xa1ed970 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0xa1ed940 <col:13> 'int' lvalue Var 0xa1ed810 '__res' 'int'))
      (IntegerLiteral 0xa1ed958 <col:22> 'int' 0))
    (CompoundStmt 0xa1ed9a8 <line:484:11, line:486:11>
      (NullStmt 0xa1ed998 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0xa1eda08 <line:487:9, col:16>
    (ImplicitCastExpr 0xa1ed9f8 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1ed9dc <col:16> 'int' lvalue Var 0xa1ed810 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0xa1eda50 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0xa1eda38 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0xa1eda90 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0xa1eda78 <col:40> 'int' 0))
) (CompoundStmt 0xa1edac0 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0xa1ebcc8 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1ebc70 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0xa1edb58 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0xa1edb48 <col:7, col:14>
    (ImplicitCastExpr 0xa1edb38 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0xa1edb14 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
        (CXXThisExpr 0xa1edae8 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0xa1edcb0 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0xa1edbf8 <line:565:7, col:32>
    0xa1edb80 "fmtflags __old =
      (ImplicitCastExpr 0xa1edbe8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa1edbc8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
          (CXXThisExpr 0xa1edbb8 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa1edc60 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0xa1edc18 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
      (CXXThisExpr 0xa1edc08 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa1edc50 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1edc38 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1ec570 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1edca0 <line:567:7, col:14>
    (ImplicitCastExpr 0xa1edc90 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1edc78 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa1edb80 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0xa1ede68 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0xa1edd58 <line:581:7, col:32>
    0xa1edce0 "fmtflags __old =
      (ImplicitCastExpr 0xa1edd48 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa1edd28 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
          (CXXThisExpr 0xa1edd18 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa1ede08 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa1eddf8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1eddc0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e3310 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa1edd78 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
      (CXXThisExpr 0xa1edd68 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa1eddb0 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1edd98 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1ec660 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1ede58 <line:583:7, col:14>
    (ImplicitCastExpr 0xa1ede48 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1ede2c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa1edce0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0xa1f1528 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0xa1f12a0 <line:598:7, col:32>
    0xa1ede90 "fmtflags __old =
      (ImplicitCastExpr 0xa1f1290 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa1eded8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
          (CXXThisExpr 0xa1edec8 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa1f1390 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa1f1380 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1f1368 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e39b0 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa1f12c0 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
      (CXXThisExpr 0xa1f12b0 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa1f1348 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa1f1338 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1f1308 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa1e30d0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa1f12f8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa1f12e0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1ec760 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0xa1f14c8 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa1f14b8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1f14a0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e3310 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa1f13c8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
      (CXXThisExpr 0xa1f13b8 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0xa1f1488 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0xa1f1460 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa1f1450 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1f1438 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa1f1418 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa1f13e8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1ec720 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa1f1428 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa1f1400 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1ec760 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0xa1f1518 <line:601:7, col:14>
    (ImplicitCastExpr 0xa1f1508 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f14ec <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa1ede90 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0xa1f1638 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0xa1f1610 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa1f1600 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1f15e8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e39b0 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa1f1558 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa1eb140
      (CXXThisExpr 0xa1f1548 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa1f15c8 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa1f15b8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1f15a0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa1e30d0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa1f1590 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa1f1578 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa1ec850 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0xa1f16a0 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0xa1f1690 <col:7, col:14>
    (ImplicitCastExpr 0xa1f1680 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa1f1660 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0xa1eb0c0
        (CXXThisExpr 0xa1f1650 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0xa1f17f0 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0xa1f1738 <line:633:7, col:38>
    0xa1f16c0 "streamsize __old =
      (ImplicitCastExpr 0xa1f1728 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa1f1708 <col:26> 'streamsize':'int' lvalue ->_M_precision 0xa1eb0c0
          (CXXThisExpr 0xa1f16f8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa1f17a0 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa1f1758 <col:7> 'streamsize':'int' lvalue ->_M_precision 0xa1eb0c0
      (CXXThisExpr 0xa1f1748 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa1f1790 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa1f1778 <col:22> 'streamsize':'int' lvalue ParmVar 0xa1eca20 '__prec' 'streamsize':'int')))
  (ReturnStmt 0xa1f17e0 <line:635:7, col:14>
    (ImplicitCastExpr 0xa1f17d0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa1f17b8 <col:14> 'streamsize':'int' lvalue Var 0xa1f16c0 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0xa1f1860 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0xa1f1850 <col:7, col:14>
    (ImplicitCastExpr 0xa1f1840 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa1f1820 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0xa1eb100
        (CXXThisExpr 0xa1f1810 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0xa1f19b0 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0xa1f18f8 <line:656:7, col:34>
    0xa1f1880 "streamsize __old =
      (ImplicitCastExpr 0xa1f18e8 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa1f18c8 <col:26> 'streamsize':'int' lvalue ->_M_width 0xa1eb100
          (CXXThisExpr 0xa1f18b8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa1f1960 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa1f1918 <col:7> 'streamsize':'int' lvalue ->_M_width 0xa1eb100
      (CXXThisExpr 0xa1f1908 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa1f1950 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa1f1938 <col:18> 'streamsize':'int' lvalue ParmVar 0xa1ecb90 '__wide' 'streamsize':'int')))
  (ReturnStmt 0xa1f19a0 <line:658:7, col:14>
    (ImplicitCastExpr 0xa1f1990 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa1f1978 <col:14> 'streamsize':'int' lvalue Var 0xa1f1880 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0xa1ed5d8 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0xa1f1a38 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0xa1f1a28 <col:7, col:14>
    (CXXConstructExpr 0xa1f1a00 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0xa1f19e0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa1ebff0
        (CXXThisExpr 0xa1f19d0 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0xa1f1a90 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0xa1f1a80 <col:7, col:14>
    (MemberExpr 0xa1f1a60 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa1ebff0
      (CXXThisExpr 0xa1f1a50 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0xa1f1d18 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0xa1f1cc0 <line:744:7, line:745:47>
    0xa1f1ac0 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa1f1ca0 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa1f1b78 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0xa1f1b60 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa1f1b40 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa1f1af4 <col:25> 'int' lvalue ParmVar 0xa1ecff0 '__ix' 'int'))
            (ImplicitCastExpr 0xa1f1b50 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa1f1b20 <col:32> 'int' lvalue ->_M_word_size 0xa1ebe00
                (CXXThisExpr 0xa1f1b10 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa1f1bf8 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa1f1bd8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa1f1ba0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa1ebe60
              (CXXThisExpr 0xa1f1b90 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa1f1be8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa1f1bc0 <col:14> 'int' lvalue ParmVar 0xa1ecff0 '__ix' 'int')))
        (CXXMemberCallExpr 0xa1f1c68 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa1f1c20 <col:22> '<bound member function type>' ->_M_grow_words 0xa1ebf80
            (CXXThisExpr 0xa1f1c10 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa1f1c90 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa1f1c40 <col:36> 'int' lvalue ParmVar 0xa1ecff0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa1f1c58 <col:42> '_Bool' true)))")
  (ReturnStmt 0xa1f1d08 <line:746:7, col:21>
    (MemberExpr 0xa1f1ce8 <col:14, col:21> 'long' lvalue ._M_iword 0xa1ebb10
      (DeclRefExpr 0xa1f1cd0 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa1f1ac0 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0xa1f1f98 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0xa1f1f40 <line:765:7, line:766:48>
    0xa1f1d40 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa1f1f20 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa1f1df8 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0xa1f1de0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa1f1dc0 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa1f1d74 <col:25> 'int' lvalue ParmVar 0xa1ed0f0 '__ix' 'int'))
            (ImplicitCastExpr 0xa1f1dd0 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa1f1da0 <col:32> 'int' lvalue ->_M_word_size 0xa1ebe00
                (CXXThisExpr 0xa1f1d90 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa1f1e78 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa1f1e58 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa1f1e20 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa1ebe60
              (CXXThisExpr 0xa1f1e10 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa1f1e68 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa1f1e40 <col:14> 'int' lvalue ParmVar 0xa1ed0f0 '__ix' 'int')))
        (CXXMemberCallExpr 0xa1f1ee8 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa1f1ea0 <col:22> '<bound member function type>' ->_M_grow_words 0xa1ebf80
            (CXXThisExpr 0xa1f1e90 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa1f1f10 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa1f1ec0 <col:36> 'int' lvalue ParmVar 0xa1ed0f0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa1f1ed8 <col:42> '_Bool' false)))")
  (ReturnStmt 0xa1f1f88 <line:767:7, col:21>
    (MemberExpr 0xa1f1f68 <col:14, col:21> 'void *' lvalue ._M_pword 0xa1ebad0
      (DeclRefExpr 0xa1f1f50 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa1f1d40 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0xa1f21b8 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0xa1f2160 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f213c <col:5, col:12> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f20a4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f1fc0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2180 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f211c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6ca0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f21a8 <line:799:5, col:12>
    (DeclRefExpr 0xa1f218c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f1fc0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0xa1f2378 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0xa1f2320 <line:806:5, col:38> 'void'
    (MemberExpr 0xa1f22bc <col:5, col:12> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f22a4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f21e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2340 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f22fc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6ca0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2368 <line:807:5, col:12>
    (DeclRefExpr 0xa1f234c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f21e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0xa1f2578 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0xa1f2520 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f24fc <col:5, col:12> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f2464 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f23a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2540 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f24dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea0f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2568 <line:815:5, col:12>
    (DeclRefExpr 0xa1f254c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f23a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0xa1f2738 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0xa1f26e0 <line:822:5, col:37> 'void'
    (MemberExpr 0xa1f267c <col:5, col:12> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f2664 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f25a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2700 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f26bc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea0f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2728 <line:823:5, col:12>
    (DeclRefExpr 0xa1f270c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f25a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0xa1f2938 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0xa1f28e0 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f28bc <col:5, col:12> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f2824 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f2760 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2900 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f289c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea150 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2928 <line:831:5, col:12>
    (DeclRefExpr 0xa1f290c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f2760 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0xa1f2af8 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0xa1f2aa0 <line:838:5, col:38> 'void'
    (MemberExpr 0xa1f2a3c <col:5, col:12> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f2a24 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f2960 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2ac0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f2a7c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea150 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2ae8 <line:839:5, col:12>
    (DeclRefExpr 0xa1f2acc <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f2960 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0xa1f2cf8 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0xa1f2ca0 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f2c7c <col:5, col:12> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f2be4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f2b20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2cc0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f2c5c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea1b0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2ce8 <line:847:5, col:12>
    (DeclRefExpr 0xa1f2ccc <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f2b20 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0xa1f2eb8 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0xa1f2e60 <line:854:5, col:36> 'void'
    (MemberExpr 0xa1f2dfc <col:5, col:12> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f2de4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f2d20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f2e80 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f2e3c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea1b0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f2ea8 <line:855:5, col:12>
    (DeclRefExpr 0xa1f2e8c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f2d20 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0xa1f30b8 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0xa1f3060 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f303c <col:5, col:12> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f2fa4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f2ee0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3080 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f301c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea210 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f30a8 <line:863:5, col:12>
    (DeclRefExpr 0xa1f308c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f2ee0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0xa1f3278 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0xa1f3220 <line:870:5, col:35> 'void'
    (MemberExpr 0xa1f31bc <col:5, col:12> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f31a4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f30e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3240 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f31fc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea210 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f3268 <line:871:5, col:12>
    (DeclRefExpr 0xa1f324c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f30e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0xa1f3478 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0xa1f3420 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f33fc <col:5, col:12> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f3364 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f32a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3440 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f33dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea2d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f3468 <line:879:5, col:12>
    (DeclRefExpr 0xa1f344c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f32a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0xa1f3638 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0xa1f35e0 <line:886:5, col:38> 'void'
    (MemberExpr 0xa1f357c <col:5, col:12> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f3564 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f34a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3600 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f35bc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea2d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f3628 <line:887:5, col:12>
    (DeclRefExpr 0xa1f360c <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f34a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0xa1f3838 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0xa1f37e0 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f37bc <col:6, col:13> '<bound member function type>' .setf 0xa1ec6b0
      (DeclRefExpr 0xa1f3724 <col:6> 'class std::ios_base' lvalue ParmVar 0xa1f3660 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3800 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f379c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea270 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f3828 <line:895:6, col:13>
    (DeclRefExpr 0xa1f380c <col:13> 'class std::ios_base' lvalue ParmVar 0xa1f3660 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0xa1f39f8 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0xa1f39a0 <line:902:6, col:37> 'void'
    (MemberExpr 0xa1f393c <col:6, col:13> '<bound member function type>' .unsetf 0xa1ec8f0
      (DeclRefExpr 0xa1f3924 <col:6> 'class std::ios_base' lvalue ParmVar 0xa1f3860 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f39c0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f397c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea270 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f39e8 <line:903:6, col:13>
    (DeclRefExpr 0xa1f39cc <col:13> 'class std::ios_base' lvalue ParmVar 0xa1f3860 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0xa1f3c50 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0xa1f3be0 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f3bbc <col:6, col:13> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f3ae4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa1f3a20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3c08 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f3b5c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9f10 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f3c18 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f3b9c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea330 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f3c40 <line:912:6, col:13>
    (DeclRefExpr 0xa1f3c24 <col:13> 'class std::ios_base' lvalue ParmVar 0xa1f3a20 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0xa1f3eb0 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0xa1f3e40 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f3e1c <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f3d44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f3c80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f3e68 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f3dbc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9f70 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f3e78 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f3dfc <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea330 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f3ea0 <line:920:5, col:12>
    (DeclRefExpr 0xa1f3e84 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f3c80 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0xa1f4110 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0xa1f40a0 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f407c <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f3fa4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f3ee0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f40c8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f401c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea030 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f40d8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f405c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea330 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f4100 <line:928:5, col:12>
    (DeclRefExpr 0xa1f40e4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f3ee0 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0xa1f4370 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0xa1f4300 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f42dc <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f4204 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f4140 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f4328 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f427c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6d00 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f4338 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f42bc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f4360 <line:937:5, col:12>
    (DeclRefExpr 0xa1f4344 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f4140 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0xa1f45d0 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0xa1f4560 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f453c <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f4464 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f43a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f4588 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f44dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f4598 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f451c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f45c0 <line:945:5, col:12>
    (DeclRefExpr 0xa1f45a4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f43a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0xa1f4830 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0xa1f47c0 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f479c <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f46c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f4600 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f47e8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f473c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f47f8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f477c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f4820 <line:953:5, col:12>
    (DeclRefExpr 0xa1f4804 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f4600 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0xa1f4a90 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0xa1f4a20 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f49fc <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f4924 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f4860 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f4a48 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f499c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6d60 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f4a58 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f49dc <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea3f0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f4a80 <line:962:5, col:12>
    (DeclRefExpr 0xa1f4a64 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f4860 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0xa1f4cf0 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0xa1f4c80 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1f4c5c <col:5, col:12> '<bound member function type>' .setf 0xa1ec7e0
      (DeclRefExpr 0xa1f4b84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa1f4ac0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa1f4ca8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f4bfc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea090 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa1f4cb8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa1f4c3c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea3f0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa1f4ce0 <line:970:5, col:12>
    (DeclRefExpr 0xa1f4cc4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa1f4ac0 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0xa202348 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0xa202570 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0xa202420 <line:208:2, col:30>
    0xa202360 "std::locale __tmp =
      (ParenListExpr 0xa202400 <col:14, col:29> 'class std::locale'
        (CallExpr 0xa2023e0 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2023a8 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0xa202398 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0xa202490 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa202440 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa202430 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa202474 <col:14> 'const class std::locale' lvalue ParmVar 0xa1fe5a0 '__loc' 'const class std::locale &'))
  (BinaryOperator 0xa2024f8 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0xa2024c0 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0xa1fe480
      (CXXThisExpr 0xa2024b0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2024e0 <col:18> 'const class std::locale' lvalue ParmVar 0xa1fe5a0 '__loc' 'const class std::locale &'))
  (ReturnStmt 0xa202560 <line:211:2, col:9>
    (CXXConstructExpr 0xa202538 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa202528 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa202510 <col:9> 'class std::locale' lvalue Var 0xa202360 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0xa2025e8 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0xa2025d8 <col:9, col:16>
    (MemberExpr 0xa2025b8 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0xa1fe480
      (CXXThisExpr 0xa2025a8 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa2026b0 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0xa2026a0 <col:9, col:37>
    (CallExpr 0xa202678 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa202610 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa202600 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa202644 <col:29> 'char_type *' lvalue ParmVar 0xa1fe6e0 '__s' 'char_type *')
      (DeclRefExpr 0xa20265c <col:34> 'streamsize':'int' lvalue ParmVar 0xa1fe720 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa201f80 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa201f70 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa201f58 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa201f38 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa201ed4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa201f48 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa201f14 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa202790 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0xa202780 <col:9, col:50>
    (CallExpr 0xa202758 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2026d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2026c8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa20270c <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa1fe860 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa202724 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa1fe8f0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0xa20273c <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa1fe980 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa202070 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa202060 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa202048 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa202028 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa201fc4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa202038 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa202004 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa202858 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0xa202848 <col:9, col:42>
    (CallExpr 0xa202820 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2027b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2027a8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2027ec <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa1feac0 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0xa202804 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa1ffb50 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0xa2028e8 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0xa2028d8 <col:19, col:37>
    (CallExpr 0xa2028b8 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa202880 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0xa202870 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0xa202b70 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0xa202a78 <line:265:2, col:55>
    0xa202910 "const streamsize __ret =
      (CXXOperatorCallExpr 0xa202a50 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa202a18 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CallExpr 0xa202990 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa202958 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0xa202948 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa2029f8 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2029c0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa2029b0 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0xa202b60 <line:266:2, col:41>
    (ConditionalOperator 0xa202b40 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0xa202b30 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa202b20 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa202a88 <col:9> 'const streamsize':'const int' lvalue Var 0xa202910 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0xa202aa0 <col:17> 'const streamsize':'const int' lvalue Var 0xa202910 '__ret' 'const streamsize':'const int')
      (CallExpr 0xa202b00 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa202ac8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa202ab8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0xa202e98 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0xa202c40 <line:279:2, col:37>
    0xa202b90 "int_type __ret =
      (CallExpr 0xa202c20 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa202be8 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0xa202e50 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0xa202d90 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0xa202c50 <line:280:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0xa202d68 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0xa202d40 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa202c88 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0xa202d08 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa202cd0 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0xa202cc0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa202d24 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa202b90 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0xa202d80 <col:22> '_Bool' true))
    (BinaryOperator 0xa202e38 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa202db4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa202b90 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa202e18 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa202de0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa202dd0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0xa202e88 <line:283:2, col:9>
    (DeclRefExpr 0xa202e6c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa202b90 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0xa203338 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0xa202ef8 <line:297:2, col:16>
    0xa202ec0 "int_type __ret")
  (IfStmt 0xa2032f0 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0xa203070 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa202f08 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa203038 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa202ff0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa202f68 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa202f30 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa202f20 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa202fd0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa202f98 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa202f88 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa203060 <col:53> '_Bool' true))
    (CompoundStmt 0xa203240 <line:299:4, line:302:4>
      (BinaryOperator 0xa2031a8 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa203094 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa202ec0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa203188 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2030d0 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa203170 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa203150 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa203118 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa203108 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa203220 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2031d0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa2031c0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa203208 <col:18> 'int' 1)))
    (BinaryOperator 0xa2032d8 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa203258 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa202ec0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa2032b8 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa203280 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa203270 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa203328 <line:305:2, col:9>
    (DeclRefExpr 0xa20330c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa202ec0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0xa203740 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0xa203398 <line:319:2, col:16>
    0xa203360 "int_type __ret")
  (IfStmt 0xa2036f8 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0xa203510 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa2033a8 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa2034d8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa203490 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa203408 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2033d0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa2033c0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa203470 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa203438 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa203428 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa203500 <col:53> '_Bool' true))
    (BinaryOperator 0xa203648 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0xa203534 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa203360 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa203628 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa203570 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0xa203610 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0xa2035f0 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2035b8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa2035a8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0xa2036e0 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa203660 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa203360 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa2036c0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa203688 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa203678 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa203730 <line:324:2, col:9>
    (DeclRefExpr 0xa203714 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa203360 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa203810 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0xa203800 <col:9, col:37>
    (CallExpr 0xa2037d8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa203770 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa203760 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2037a4 <col:29> 'char_type *' lvalue ParmVar 0xa1fff30 '__s' 'char_type *')
      (DeclRefExpr 0xa2037bc <col:34> 'streamsize':'int' lvalue ParmVar 0xa1fff70 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0xa20a960 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0xa203868 <line:353:2, col:16>
    0xa203830 "int_type __ret")
  (DeclStmt 0xa2039f8 <line:354:2, col:53>
    0xa203880 "const bool __testpos =
      (CXXOperatorCallExpr 0xa2039d0 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa203988 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa203900 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2038c8 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0xa2038b8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa203968 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa203930 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0xa203920 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0xa20a918 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0xa20a5f0 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0xa203a08 <line:355:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa20a5c8 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0xa203a48 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa203a38 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa203a20 <col:24> 'const _Bool' lvalue Var 0xa203880 '__testpos' 'const _Bool')))
        (UnaryOperator 0xa20a5b0 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa20a588 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa203a80 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0xa203ab4 <col:26> 'char_type':'_CharT' lvalue ParmVar 0xa200080 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa20a570 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0xa203b18 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa203ae0 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa203ad0 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0xa20a558 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0xa20a540 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0xa20a5e0 <col:50> '_Bool' false))
    (BinaryOperator 0xa20a728 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0xa20a614 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa203830 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa20a708 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20a640 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa20a630 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa20a6e8 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20a698 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0xa20a6cc <col:53> 'char_type':'_CharT' lvalue ParmVar 0xa200080 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0xa20a900 <line:359:4, line:362:4>
      (CallExpr 0xa20a7b8 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20a750 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa20a740 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa20a7a0 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa20a788 <col:19> 'int' 1)))
      (BinaryOperator 0xa20a8e8 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa20a7d8 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa203830 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa20a8c8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20a810 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa20a8b0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa20a890 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20a858 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa20a848 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0xa20a950 <line:363:2, col:9>
    (DeclRefExpr 0xa20a934 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa203830 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0xa20ae20 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0xa20a9c8 <line:378:2, col:16>
    0xa20a990 "int_type __ret")
  (IfStmt 0xa20add8 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0xa20ab40 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa20a9d8 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa20ab08 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa20aac0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa20aa38 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20aa00 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa20a9f0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa20aaa0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20aa68 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa20aa58 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa20ab30 <col:53> '_Bool' true))
    (CompoundStmt 0xa20ad28 <line:380:4, line:383:4>
      (CallExpr 0xa20abe0 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20ab78 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa20ab68 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa20abc8 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa20abb0 <col:19> 'int' 1)))
      (BinaryOperator 0xa20ad10 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa20ac00 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20a990 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa20acf0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20ac38 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa20acd8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa20acb8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20ac80 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa20ac70 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0xa20adc0 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa20ad40 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20a990 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa20ada0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20ad68 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa20ad58 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa20ae10 <line:386:2, col:9>
    (DeclRefExpr 0xa20adf4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20a990 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0xa20b3a8 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0xa20ae88 <line:405:2, col:16>
    0xa20ae50 "int_type __ret")
  (IfStmt 0xa20b360 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0xa20b000 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa20ae98 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa20afc8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa20af80 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa20aef8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20aec0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa20aeb0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa20af60 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20af28 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa20af18 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa20aff0 <col:53> '_Bool' true))
    (CompoundStmt 0xa20b218 <line:407:4, line:411:4>
      (BinaryOperator 0xa20b0c0 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0xa20b090 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0xa20b070 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20b038 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa20b028 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa20b0a4 <col:22> 'char_type':'_CharT' lvalue ParmVar 0xa200210 '__c' 'char_type':'_CharT'))
      (CallExpr 0xa20b138 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20b0e8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa20b0d8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa20b120 <col:18> 'int' 1))
      (BinaryOperator 0xa20b200 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0xa20b158 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20ae50 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa20b1e0 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20b190 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0xa20b1c4 <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa200210 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0xa20b348 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0xa20b234 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20ae50 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa20b328 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20b260 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa20b250 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa20b308 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20b2b8 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0xa20b2ec <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa200210 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0xa20b398 <line:414:2, col:9>
    (DeclRefExpr 0xa20b37c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20ae50 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa20b478 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0xa20b468 <col:9, col:37>
    (CallExpr 0xa20b440 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa20b3d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa20b3c8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa20b40c <col:29> 'const char_type *' lvalue ParmVar 0xa200300 '__s' 'const char_type *')
      (DeclRefExpr 0xa20b424 <col:34> 'streamsize':'int' lvalue ParmVar 0xa200340 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0xa20b490 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0xa20b4e8 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0xa20b538 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0xa20b588 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0xa20b5d8 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0xa20b628 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0xa20b6b8 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0xa20b6b0)
  (CXXTemporaryObjectExpr 0xa20b680 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0xa20b788 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0xa20b7d8 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0xa20b7c8 <col:23, col:30>
    (MemberExpr 0xa20b7a8 <col:30> 'char_type *const' lvalue ->_M_in_beg 0xa1fe300
      (CXXThisExpr 0xa20b798 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0xa20b830 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0xa20b820 <col:23, col:30>
    (MemberExpr 0xa20b800 <col:30> 'char_type *const' lvalue ->_M_in_cur 0xa1fe340
      (CXXThisExpr 0xa20b7f0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0xa20b888 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0xa20b878 <col:23, col:30>
    (MemberExpr 0xa20b858 <col:30> 'char_type *const' lvalue ->_M_in_end 0xa1fe380
      (CXXThisExpr 0xa20b848 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0xa20b908 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0xa20b8e8 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa20b8b0 <col:24> 'char_type *' lvalue ->_M_in_cur 0xa1fe340
      (CXXThisExpr 0xa20b8a0 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20b8d0 <col:37> 'int' lvalue ParmVar 0xa2006d0 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0xa20ba40 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0xa20b968 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa20b930 <col:2> 'char_type *' lvalue ->_M_in_beg 0xa1fe300
      (CXXThisExpr 0xa20b920 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20b950 <col:14> 'char_type *' lvalue ParmVar 0xa2007a0 '__gbeg' 'char_type *'))
  (BinaryOperator 0xa20b9c8 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa20b990 <col:2> 'char_type *' lvalue ->_M_in_cur 0xa1fe340
      (CXXThisExpr 0xa20b980 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20b9b0 <col:14> 'char_type *' lvalue ParmVar 0xa2007f0 '__gnext' 'char_type *'))
  (BinaryOperator 0xa20ba28 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa20b9f0 <col:2> 'char_type *' lvalue ->_M_in_end 0xa1fe380
      (CXXThisExpr 0xa20b9e0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20ba10 <col:14> 'char_type *' lvalue ParmVar 0xa200840 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0xa20baa0 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0xa20ba90 <col:23, col:30>
    (MemberExpr 0xa20ba70 <col:30> 'char_type *const' lvalue ->_M_out_beg 0xa1fe3c0
      (CXXThisExpr 0xa20ba60 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0xa20baf8 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0xa20bae8 <col:22, col:29>
    (MemberExpr 0xa20bac8 <col:29> 'char_type *const' lvalue ->_M_out_cur 0xa1fe400
      (CXXThisExpr 0xa20bab8 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0xa20bb50 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0xa20bb40 <col:23, col:30>
    (MemberExpr 0xa20bb20 <col:30> 'char_type *const' lvalue ->_M_out_end 0xa1fe440
      (CXXThisExpr 0xa20bb10 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0xa20bbd0 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0xa20bbb0 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa20bb78 <col:24> 'char_type *' lvalue ->_M_out_cur 0xa1fe400
      (CXXThisExpr 0xa20bb68 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20bb98 <col:38> 'int' lvalue ParmVar 0xa200ad0 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0xa20bcf0 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0xa20bc78 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0xa20bbf8 <col:2> 'char_type *' lvalue ->_M_out_beg 0xa1fe3c0
      (CXXThisExpr 0xa20bbe8 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0xa20bc60 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0xa20bc28 <col:15> 'char_type *' lvalue ->_M_out_cur 0xa1fe400
        (CXXThisExpr 0xa20bc18 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa20bc48 <col:28> 'char_type *' lvalue ParmVar 0xa200ba0 '__pbeg' 'char_type *')))
  (BinaryOperator 0xa20bcd8 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0xa20bca0 <col:2> 'char_type *' lvalue ->_M_out_end 0xa1fe440
      (CXXThisExpr 0xa20bc90 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20bcc0 <col:15> 'char_type *' lvalue ParmVar 0xa200bf0 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0xa20bd08 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0xa20bd38 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0xa20bd28 <col:9, col:16>
    (CXXThisExpr 0xa20bd18 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0xa202160 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa202150 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa202138 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa202118 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa2020b4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa202128 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa2020f4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa20bde0 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0xa20bdd0 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa20bdb0 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa20bd90 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa20bd78 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa20bd60 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0xa202250 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa202240 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa202228 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa202208 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa2021a4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa202218 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa2021e4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa20be88 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0xa20be78 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa20be58 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa20be38 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa20be20 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa20be08 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0xa20bec8 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0xa20beb8 <col:16, col:23>
    (IntegerLiteral 0xa20bea0 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0xa20bf08 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0xa20bef8 <col:21, col:28>
    (IntegerLiteral 0xa20bee0 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0xa20bfa8 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0xa20bf98 <col:9, col:33>
    (CallExpr 0xa20bf78 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa20bf40 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0xa20c430 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0xa20c080 <line:681:2, col:37>
    0xa20bfd0 "int_type __ret =
      (CallExpr 0xa20c060 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20c028 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0xa20c1d8 <line:682:2, line:683:14>
    0xa20c0a0 "const bool __testeof =
      (CallExpr 0xa20c1b0 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20c0f8 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0xa20c178 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20c140 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0xa20c130 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa20c194 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20bfd0 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa20c3e8 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0xa20c210 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa20c200 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa20c1e8 <col:7> 'const _Bool' lvalue Var 0xa20c0a0 '__testeof' 'const _Bool')))
    (CompoundStmt 0xa20c3d0 <line:685:4, line:688:4>
      (BinaryOperator 0xa20c338 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa20c224 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20bfd0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa20c318 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20c260 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa20c300 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa20c2e0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20c2a8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa20c298 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa20c3b0 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20c360 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa20c350 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa20c398 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0xa20c420 <line:689:2, col:9>
    (DeclRefExpr 0xa20c404 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa20bfd0 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0xa2022c0 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa202298 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0xa20c4d8 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0xa20c4c8 <col:9, col:33>
    (CallExpr 0xa20c4a8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa20c470 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0xa202328 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa202300 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0xa20c578 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0xa20c568 <col:9, col:33>
    (CallExpr 0xa20c548 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa20c510 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0xa20c7d8 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0xa20c7b8 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa20c6a8 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa20c660 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (CallExpr 0xa20c5d8 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20c5a0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa20c590 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0xa20c640 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20c608 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa20c5f8 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0xa20c730 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa20c6e0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa20c6d0 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa20c718 <col:16> 'int' 1))
    (CallExpr 0xa20c798 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa20c760 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa20c750 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0xa20c858 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0xa20c838 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa20c800 <col:38> 'char_type *' lvalue ->_M_in_cur 0xa1fe340
      (CXXThisExpr 0xa20c7f0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20c820 <col:51> 'streamsize':'int' lvalue ParmVar 0xa201a10 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0xa20c8d8 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0xa20c8b8 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa20c880 <col:38> 'char_type *' lvalue ->_M_out_cur 0xa1fe400
      (CXXThisExpr 0xa20c870 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa20c8a0 <col:52> 'streamsize':'int' lvalue ParmVar 0xa201b00 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0xa20c908 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0xa20c8ec <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0xa20c990 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0xa20c978 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0xa20ca20 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0xa20ca08 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0xa20cab0 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0xa20ca98 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0xa20cb40 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0xa20cb28 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0xa20cbd0 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0xa20cbb8 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0xa20cc60 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0xa20cc48 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa201c50 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0xa20ccf8 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0xa20cd40 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0xa20cd30 <col:44, col:52>
    (UnaryOperator 0xa20cd18 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa20cd08 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa210a48 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0xa20e220 <line:48:7, col:27>
    0xa20e1d0 "streamsize __ret =
      (IntegerLiteral 0xa20e208 <col:26> 'int' 0)")
  (WhileStmt 0xa2109f8 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0xa20e280 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa20e260 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa20e230 <col:14> 'streamsize':'int' lvalue Var 0xa20e1d0 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa20e270 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa20e248 <col:22> 'streamsize':'int' lvalue ParmVar 0xa20e0d0 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa2109d8 <line:50:2, line:73:2>
      (DeclStmt 0xa20e408 <line:51:4, col:61>
        0xa20e2a0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa20e3e0 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa20e3a8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (CallExpr 0xa20e320 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20e2e8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa20e2d8 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa20e388 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20e350 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa20e340 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa210548 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20e440 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20e430 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa20e418 <col:8> 'const streamsize':'const int' lvalue Var 0xa20e2a0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa210520 <line:53:6, line:60:6>
          (DeclStmt 0xa20e500 <line:54:8, col:50>
            0xa20e460 "const streamsize __remaining =
              (BinaryOperator 0xa20e4e8 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa20e4c8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa20e494 <col:39> 'streamsize':'int' lvalue ParmVar 0xa20e0d0 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa20e4d8 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa20e4ac <col:45> 'streamsize':'int' lvalue Var 0xa20e1d0 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa2102c0 <line:55:8, col:65>
            0xa20ff40 "const streamsize __len =
              (ImplicitCastExpr 0xa2102b0 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa210288 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa210278 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa210218 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa210170 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9fc50d0 'min')))
                  (DeclRefExpr 0xa20ffd0 <col:42> 'const streamsize':'const int' lvalue Var 0xa20e2a0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa20ffe8 <col:53> 'const streamsize':'const int' lvalue Var 0xa20e460 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa2103c8 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2102f8 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0xa21032c <col:26> 'char_type *' lvalue ParmVar 0xa20e090 '__s' 'char_type *')
            (CallExpr 0xa210390 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa210358 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa210348 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa2103ac <col:45> 'const streamsize':'const int' lvalue Var 0xa20ff40 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa210430 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa2103f0 <col:8> 'streamsize':'int' lvalue Var 0xa20e1d0 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa210420 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa210408 <col:17> 'const streamsize':'const int' lvalue Var 0xa20ff40 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa210480 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa210450 <col:8> 'char_type *' lvalue ParmVar 0xa20e090 '__s' 'char_type *')
            (DeclRefExpr 0xa210468 <col:15> 'const streamsize':'const int' lvalue Var 0xa20ff40 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa210500 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2104b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2104a0 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2104e4 <col:27> 'const streamsize':'const int' lvalue Var 0xa20ff40 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa2109b8 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa2105b8 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa210598 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa210564 <col:8> 'streamsize':'int' lvalue Var 0xa20e1d0 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa2105a8 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa21057c <col:16> 'streamsize':'int' lvalue ParmVar 0xa20e0d0 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa2109a0 <line:63:6, line:72:6>
          (DeclStmt 0xa210680 <line:64:8, col:42>
            0xa2105e0 "const int_type __c =
              (CallExpr 0xa210660 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa210628 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0xa210618 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0xa210980 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0xa2107a0 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa210778 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2106b0 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2106e4 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa2105e0 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0xa210758 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa210720 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa210960 <line:66:3, line:69:3>
              (CallExpr 0xa210908 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2107e0 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0xa210860 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa210848 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa210814 <col:26> 'char_type *' lvalue ParmVar 0xa20e090 '__s' 'char_type *')))
                (CallExpr 0xa2108e8 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa210898 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2108cc <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa2105e0 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0xa210948 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa21092c <col:7> 'streamsize':'int' lvalue Var 0xa20e1d0 '__ret' 'streamsize':'int')))
            (BreakStmt 0xa210978 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa210a38 <line:74:7, col:14>
    (ImplicitCastExpr 0xa210a28 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa210a0c <col:14> 'streamsize':'int' lvalue Var 0xa20e1d0 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa2119d8 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0xa210ea0 <line:82:7, col:27>
    0xa210e50 "streamsize __ret =
      (IntegerLiteral 0xa210e88 <col:26> 'int' 0)")
  (WhileStmt 0xa211988 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0xa210f00 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa210ee0 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa210eb0 <col:14> 'streamsize':'int' lvalue Var 0xa210e50 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa210ef0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa210ec8 <col:22> 'streamsize':'int' lvalue ParmVar 0xa210d50 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa211968 <line:84:2, line:107:2>
      (DeclStmt 0xa211088 <line:85:4, col:61>
        0xa210f20 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa211060 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa211028 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (CallExpr 0xa210fa0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa210f68 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa210f58 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa211008 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa210fd0 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa210fc0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa211580 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2110c0 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2110b0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa211098 <col:8> 'const streamsize':'const int' lvalue Var 0xa210f20 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa211558 <line:87:6, line:94:6>
          (DeclStmt 0xa211180 <line:88:8, col:50>
            0xa2110e0 "const streamsize __remaining =
              (BinaryOperator 0xa211168 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa211148 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa211114 <col:39> 'streamsize':'int' lvalue ParmVar 0xa210d50 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa211158 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa21112c <col:45> 'streamsize':'int' lvalue Var 0xa210e50 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa2112f8 <line:89:8, col:65>
            0xa2111a0 "const streamsize __len =
              (ImplicitCastExpr 0xa2112e8 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa2112c0 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa2112b0 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa211288 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa210170 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9fc50d0 'min')))
                  (DeclRefExpr 0xa211228 <col:42> 'const streamsize':'const int' lvalue Var 0xa210f20 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa211240 <col:53> 'const streamsize':'const int' lvalue Var 0xa2110e0 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa211400 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa211330 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0xa2113b0 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa211378 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa211368 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa2113cc <col:40> 'const char_type *' lvalue ParmVar 0xa210d10 '__s' 'const char_type *')
            (DeclRefExpr 0xa2113e4 <col:45> 'const streamsize':'const int' lvalue Var 0xa2111a0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa211468 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa211428 <col:8> 'streamsize':'int' lvalue Var 0xa210e50 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa211458 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa211440 <col:17> 'const streamsize':'const int' lvalue Var 0xa2111a0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa2114b8 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa211488 <col:8> 'const char_type *' lvalue ParmVar 0xa210d10 '__s' 'const char_type *')
            (DeclRefExpr 0xa2114a0 <col:15> 'const streamsize':'const int' lvalue Var 0xa2111a0 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa211538 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2114e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2114d8 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa21151c <col:27> 'const streamsize':'const int' lvalue Var 0xa2111a0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa211948 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0xa2115f0 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa2115d0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa21159c <col:8> 'streamsize':'int' lvalue Var 0xa210e50 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa2115e0 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2115b4 <col:16> 'streamsize':'int' lvalue ParmVar 0xa210d50 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa211930 <line:97:6, line:106:6>
          (DeclStmt 0xa211758 <line:98:8, col:69>
            0xa211610 "int_type __c =
              (CallExpr 0xa211738 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa211658 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0xa211648 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0xa211718 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2116b0 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0xa211700 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0xa2116e4 <col:64> 'const char_type *' lvalue ParmVar 0xa210d10 '__s' 'const char_type *'))))")
          (IfStmt 0xa211910 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0xa211878 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa211850 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa211788 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2117bc <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0xa211610 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa211830 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2117f8 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa2118f0 <line:100:3, line:103:3>
              (UnaryOperator 0xa2118a8 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa21188c <col:7> 'streamsize':'int' lvalue Var 0xa210e50 '__ret' 'streamsize':'int'))
              (UnaryOperator 0xa2118d8 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa2118bc <col:7> 'const char_type *' lvalue ParmVar 0xa210d10 '__s' 'const char_type *')))
            (BreakStmt 0xa211908 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa2119c8 <line:108:7, col:14>
    (ImplicitCastExpr 0xa2119b8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa21199c <col:14> 'streamsize':'int' lvalue Var 0xa210e50 '__ret' 'streamsize':'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0xa212578 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0xa211f20 <line:120:7, col:27>
    0xa211ed0 "streamsize __ret =
      (IntegerLiteral 0xa211f08 <col:26> 'int' 0)")
  (BinaryOperator 0xa211f58 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0xa211f30 <col:7> '_Bool' lvalue ParmVar 0xa211da0 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0xa211f48 <col:17> '_Bool' true))
  (DeclStmt 0xa212088 <line:122:7, col:55>
    0xa211fe0 "typename _Traits::int_type __c =
      (CallExpr 0xa212068 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa212030 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa212014 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa211be0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0xa212528 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0xa212188 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0xa212160 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa2120b8 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0xa2120dc <col:36> 'typename _Traits::int_type' lvalue Var 0xa211fe0 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa212140 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa212118 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0xa212508 <line:124:2, line:133:2>
      (BinaryOperator 0xa2122a8 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa21219c <col:4> 'typename _Traits::int_type' lvalue Var 0xa211fe0 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa212288 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2121d0 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0xa2121b4 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa211d50 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0xa212268 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa212228 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0xa21224c <col:47> 'typename _Traits::int_type' lvalue Var 0xa211fe0 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0xa212418 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0xa212390 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa2122e8 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa21230c <col:29> 'typename _Traits::int_type' lvalue Var 0xa211fe0 '__c' 'typename _Traits::int_type')
          (CallExpr 0xa212370 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa212348 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0xa212400 <line:127:6, line:130:6>
          (BinaryOperator 0xa2123e0 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0xa2123b4 <col:8> '_Bool' lvalue ParmVar 0xa211da0 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0xa2123d0 <col:18> '_Bool' false))
          (BreakStmt 0xa2123f8 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0xa212450 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0xa212434 <col:6> 'streamsize':'int' lvalue Var 0xa211ed0 '__ret' 'streamsize':'int'))
      (BinaryOperator 0xa2124f0 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0xa212464 <col:4> 'typename _Traits::int_type' lvalue Var 0xa211fe0 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa2124d0 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa212498 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0xa21247c <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa211be0 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0xa212568 <line:134:7, col:14>
    (ImplicitCastExpr 0xa212558 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa21253c <col:14> 'streamsize':'int' lvalue Var 0xa211ed0 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0xa212b30 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0xa212a68 <line:142:7, col:19>
    0xa212a30 "bool __ineof")
  (ReturnStmt 0xa212b20 <line:143:7, col:60>
    (CallExpr 0xa212af8 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0xa212a78 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa211e90)
      (DeclRefExpr 0xa212aac <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa212780 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa212ac4 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2128f0 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa212adc <col:53> '_Bool' lvalue Var 0xa212a30 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0xa226930 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226914 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa0344f0 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0xa2269a0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226984 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034740 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0xa226a10 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2269f4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034990 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0xa226a80 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226a64 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034be0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0xa226af0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226ad4 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034e30 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0xa226b60 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226b44 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa035080 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0xa226bd0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226bb4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa0352d0 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0xa226cd0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa226cb8 <col:32, col:54> 'int' '|'
    (BinaryOperator 0xa226c78 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0xa226c58 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0xa226c24 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034990 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0xa226c68 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0xa226c3c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034be0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0xa226ca8 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0xa226c90 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa035c10 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0xa226d40 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226d24 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa0359c0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0xa226db0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa226d94 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa035c10 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0xa226e70 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa226e58 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0xa226e38 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0xa226e04 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034990 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0xa226e48 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0xa226e1c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa034be0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0xa2340e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0xa2341d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa234198 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0xa234230 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0xa234290 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa234258 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa234240 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa2339d0 '__s' 'istream_type &')))
), _M_c((CallExpr 0xa234340 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa234308 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0xa2343a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa2343b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0xa233af0 '__s' 'streambuf_type *')
), _M_c((CallExpr 0xa234460 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa234428 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0xa2344c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0xa2345c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0xa2345b0 <line:121:2, col:43>
    (CallExpr 0xa234590 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa234508 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa234570 <col:35, col:42> '<dependent type>'
        (MemberExpr 0xa234550 <col:35> '<bound member function type>' ->_M_get 0xa234000
          (CXXThisExpr 0xa234540 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa2347d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0xa2345d8 <line:130:25>)
  (IfStmt 0xa234778 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0xa2345f8 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
      (CXXThisExpr 0xa2345e8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa234760 <line:132:4, line:135:4>
      (CallExpr 0xa234680 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa234648 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0xa234628 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
            (CXXThisExpr 0xa234618 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0xa234748 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa2346b0 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa233880
          (CXXThisExpr 0xa2346a0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa234728 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2346f0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa2347c0 <line:136:2, col:10>
    (UnaryOperator 0xa2347a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa234798 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0xa234ac0 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0xa2347f0 <line:145:25>)
  (DeclStmt 0xa234870 <line:147:2, col:35>
    0xa234810 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0xa234858 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa234848 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0xa234a78 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0xa234890 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
      (CXXThisExpr 0xa234880 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa234a60 <line:149:4, line:152:4>
      (BinaryOperator 0xa234988 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2348c8 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa2348b0 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa234810 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0xa234968 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa234930 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0xa234910 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
              (CXXThisExpr 0xa234900 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0xa234a48 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa2349b0 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa233880
          (CXXThisExpr 0xa2349a0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa234a28 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2349f0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa234ab0 <line:153:2, col:9>
    (DeclRefExpr 0xa234a94 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa234810 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0xa234c30 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0xa234c20 <col:9, col:45>
    (CXXOperatorCallExpr 0xa234bf8 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa234ba0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40)
      (CallExpr 0xa234b10 <col:16, col:26> '<dependent type>'
        (MemberExpr 0xa234af0 <col:16> '<bound member function type>' ->_M_at_eof 0xa234080
          (CXXThisExpr 0xa234ae0 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0xa234b80 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa234b48 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa234b2c <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa233e80 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0xa2351d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0xa234d00 <line:168:2, col:43>
    0xa234c50 "const int_type __eof =
      (CallExpr 0xa234ce0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa234ca8 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0xa234d70 <line:169:2, col:24>
    0xa234d20 "int_type __ret =
      (DeclRefExpr 0xa234d54 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa234c50 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0xa235188 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0xa234d90 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
      (CXXThisExpr 0xa234d80 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa235170 <line:171:4, line:179:4>
      (IfStmt 0xa235150 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0xa234e78 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa234e50 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa234dd0 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0xa234e18 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa233880
              (CXXThisExpr 0xa234e08 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa234e38 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa234c50 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0xa234ed8 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0xa234e8c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa234d20 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0xa234eb8 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa233880
            (CXXThisExpr 0xa234ea8 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0xa235130 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0xa235058 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0xa235030 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa234f10 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0xa235000 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0xa234fe8 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0xa234f44 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa234d20 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0xa234fc8 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa234f90 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0xa234f70 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
                        (CXXThisExpr 0xa234f60 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0xa235014 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa234c50 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0xa2350b8 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0xa235080 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa233880
              (CXXThisExpr 0xa235070 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2350a0 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0xa234d20 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0xa235118 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa2350e0 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0xa233830
              (CXXThisExpr 0xa2350d0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa235100 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0xa2351c0 <line:180:2, col:9>
    (DeclRefExpr 0xa2351a4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa234d20 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0xa2353b8 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0xa2352b0 <line:186:2, col:43>
    0xa235200 "const int_type __eof =
      (CallExpr 0xa235290 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa235258 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0xa2353a8 <line:187:2, col:49>
    (CallExpr 0xa235380 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2352e0 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa235348 <col:34, col:41> '<dependent type>'
        (MemberExpr 0xa235328 <col:34> '<bound member function type>' ->_M_get 0xa234000
          (CXXThisExpr 0xa235318 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa235364 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa235200 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa235908 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0xa2358f8 <col:7, col:27>
    (CallExpr 0xa2358d8 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa235888 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa235870 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa2355d0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0xa2358bc <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa235740 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa235e30 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0xa235e20 <col:7, col:28>
    (UnaryOperator 0xa235e08 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0xa235de8 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa235d98 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa235d80 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa235b00 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0xa235dcc <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa235c70 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0xa2382b8 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa238280 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa238268 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa237b00 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0xa238368 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0xa238348 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0xa237a10
    (CXXThisExpr 0xa238338 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa2383c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa2383d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0xa237c30 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0xa238458 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0xa238438 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0xa237a10
    (CXXThisExpr 0xa238428 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa2384b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0xa238780 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0xa238728 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0xa2386b8 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0xa238500 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa2384f0 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0xa2384d0 <col:7> '_Bool' lvalue ->_M_failed 0xa237a50
            (CXXThisExpr 0xa2384c0 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0xa238690 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa238540 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0xa2385f8 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2385a8 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0xa238588 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0xa237a10
              (CXXThisExpr 0xa238578 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa2385dc <col:42> '_CharT' lvalue ParmVar 0xa237d30 '__c' '_CharT'))
        (CallExpr 0xa238670 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa238638 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0xa238710 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa2386e0 <col:4> '_Bool' lvalue ->_M_failed 0xa237a50
        (CXXThisExpr 0xa2386d0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa238700 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa238770 <line:244:2, col:10>
    (UnaryOperator 0xa238758 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa238748 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0xa2387d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0xa2387c0 <col:9, col:17>
    (UnaryOperator 0xa2387a8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa238798 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0xa238820 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0xa238810 <col:9, col:17>
    (UnaryOperator 0xa2387f8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2387e8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa238870 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0xa238860 <col:9, col:17>
    (UnaryOperator 0xa238848 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa238838 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0xa2388e8 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0xa2388d8 <col:9, col:16>
    (MemberExpr 0xa2388b8 <col:16> 'const _Bool' lvalue ->_M_failed 0xa237a50
      (CXXThisExpr 0xa2388a8 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0xa238c78 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0xa238c20 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0xa238bb0 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0xa2389a8 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0xa238998 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2388fc <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2389d0 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0xa238958 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa238948 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0xa238928 <col:24> '_Bool' lvalue ->_M_failed 0xa237a50
                (CXXThisExpr 0xa238918 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0xa2389e0 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa238970 <col:35> '_Bool' true)))
      (CallExpr 0xa238b88 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0xa2389ec <line:271:9> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0xa238b50 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa238af8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa235d50 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0)
          (CallExpr 0xa238ab8 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa238a50 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa238a18 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa238a08 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa238a84 <col:47> 'const _CharT *' lvalue ParmVar 0xa238120 '__ws' 'const _CharT *')
            (DeclRefExpr 0xa238a9c <col:53> 'streamsize':'int' lvalue ParmVar 0xa238160 '__len' 'streamsize':'int'))
          (DeclRefExpr 0xa238adc <col:63> 'streamsize':'int' lvalue ParmVar 0xa238160 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0xa238b78 <line:272:5> '_Bool' false)))
    (BinaryOperator 0xa238c08 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa238bd8 <col:4> '_Bool' lvalue ->_M_failed 0xa237a50
        (CXXThisExpr 0xa238bc8 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa238bf8 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa238c68 <line:274:2, col:10>
    (UnaryOperator 0xa238c50 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa238c40 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa239a80 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0xa239a38 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0xa2397c0 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0xa239740 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0xa2396a0 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa239684 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa239200 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0xa239728 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0xa2396f0 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0xa2396d4 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa239390 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0xa2397a8 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa239770 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0xa239758 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa239520 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa239a18 <line:287:2, line:292:2>
      (DeclStmt 0xa239818 <line:288:4, col:16>
        0xa2397e0 "bool __ineof")
      (CallExpr 0xa239918 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa239828 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0xa211e90)
        (CXXDependentScopeMemberExpr 0xa239878 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa23985c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa239200 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0xa2398c8 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0xa2398ac <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa239520 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0xa2398fc <col:61> '_Bool' lvalue Var 0xa2397e0 '__ineof' '_Bool'))
      (IfStmt 0xa2399f8 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0xa239968 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa239958 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa239940 <col:9> '_Bool' lvalue Var 0xa2397e0 '__ineof' '_Bool')))
        (BinaryOperator 0xa2399e0 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa239998 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa23997c <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa239520 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0xa2399d0 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa239a70 <line:293:7, col:14>
    (DeclRefExpr 0xa239a54 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa239520 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa23a440 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0xa23a2e8 <line:302:7, col:48>
    0xa23a220 "const streamsize __num =
      (CXXOperatorCallExpr 0xa23a2c0 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa23a288 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa23a254 <col:32> '_CharT *' lvalue ParmVar 0xa239f20 '__last' '_CharT *')
        (DeclRefExpr 0xa23a26c <col:41> '_CharT *' lvalue ParmVar 0xa239ed0 '__first' '_CharT *'))")
  (IfStmt 0xa23a3f8 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0xa23a338 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa23a328 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa23a2f8 <col:11> 'const streamsize':'const int' lvalue Var 0xa23a220 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa23a310 <col:19> 'int' 0))
    (CallExpr 0xa23a3d0 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa23a368 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa23a350 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa23a0b0 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa23a39c <col:18> '_CharT *' lvalue ParmVar 0xa239ed0 '__first' '_CharT *')
      (DeclRefExpr 0xa23a3b4 <col:27> 'const streamsize':'const int' lvalue Var 0xa23a220 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa23a430 <line:305:7, col:14>
    (DeclRefExpr 0xa23a414 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa23a0b0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa23ae00 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0xa23aca8 <line:314:7, col:48>
    0xa23abe0 "const streamsize __num =
      (CXXOperatorCallExpr 0xa23ac80 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa23ac48 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa23ac14 <col:32> 'const _CharT *' lvalue ParmVar 0xa23a8e0 '__last' 'const _CharT *')
        (DeclRefExpr 0xa23ac2c <col:41> 'const _CharT *' lvalue ParmVar 0xa23a890 '__first' 'const _CharT *'))")
  (IfStmt 0xa23adb8 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0xa23acf8 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa23ace8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa23acb8 <col:11> 'const streamsize':'const int' lvalue Var 0xa23abe0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa23acd0 <col:19> 'int' 0))
    (CallExpr 0xa23ad90 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa23ad28 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa23ad10 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa23aa70 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa23ad5c <col:18> 'const _CharT *' lvalue ParmVar 0xa23a890 '__first' 'const _CharT *')
      (DeclRefExpr 0xa23ad74 <col:27> 'const streamsize':'const int' lvalue Var 0xa23abe0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa23adf0 <line:317:7, col:14>
    (DeclRefExpr 0xa23add4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa23aa70 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0xa23c498 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0xa23b730 <line:326:7, col:78>
    0xa23b700 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa23b820 <line:327:7, col:71>
    0xa23b7f0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa23b8e0 <line:328:7, col:74>
    0xa23b8b0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa23b9d0 <line:329:7, col:68>
    0xa23b9a0 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa23c450 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0xa23ba98 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa23b9f8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa23b9e0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23b290 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa23ba80 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa23ba48 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa23ba2c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23b420 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa23c430 <line:332:2, line:351:2>
      (DeclStmt 0xa23bb98 <line:333:4, col:42>
        0xa23bb10 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa23bb60 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa23bb44 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23b290 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa23bc78 <line:334:4, col:32>
        0xa23bbd0 "int_type __c =
          (CallExpr 0xa23bc58 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa23bc20 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa23bc04 <col:19> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa23c418 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0xa23bd78 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0xa23bd50 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa23bca8 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0xa23bccc <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23bbd0 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa23bd30 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa23bd08 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0xa23c400 <line:336:6, line:350:6>
          (DeclStmt 0xa23bf18 <line:337:8, col:59>
            0xa23bda0 "const streamsize __n =
              (CXXOperatorCallExpr 0xa23bef0 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa23beb8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                (CallExpr 0xa23be28 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23bdf0 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23bdd4 <col:31> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *')))
                (CallExpr 0xa23be98 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23be60 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23be44 <col:47> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa23c3e0 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0xa23bf68 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa23bf58 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa23bf28 <col:12> 'const streamsize':'const int' lvalue Var 0xa23bda0 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0xa23bf40 <col:18> 'int' 1))
            (CompoundStmt 0xa23c210 <line:339:3, line:344:3>
              (CallExpr 0xa23c070 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa23bfa8 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa23bfcc <col:23> '_CharT *' lvalue ParmVar 0xa23b470 '__result' '_CharT *')
                (CallExpr 0xa23c038 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23c000 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23bfe4 <col:33> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0xa23c054 <col:47> 'const streamsize':'const int' lvalue Var 0xa23bda0 '__n' 'const streamsize':'const int'))
              (CallExpr 0xa23c100 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23c0b0 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa23c098 <col:5> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa23c0e4 <col:24> 'const streamsize':'const int' lvalue Var 0xa23bda0 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0xa23c150 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa23c120 <col:5> '_CharT *' lvalue ParmVar 0xa23b470 '__result' '_CharT *')
                (DeclRefExpr 0xa23c138 <col:17> 'const streamsize':'const int' lvalue Var 0xa23bda0 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0xa23c1f8 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0xa23c170 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23bbd0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa23c1d8 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23c1a0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23c188 <col:11> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0xa23c3c8 <line:346:3, line:349:3>
              (BinaryOperator 0xa23c310 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0xa23c278 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa23c260 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa23c230 <col:6> '_CharT *' lvalue ParmVar 0xa23b470 '__result' '_CharT *')))
                (CallExpr 0xa23c2f0 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa23c2b0 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa23c2d4 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23bbd0 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0xa23c3b0 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa23c328 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23bbd0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa23c390 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23c358 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23c340 <col:11> 'streambuf_type *' lvalue Var 0xa23bb10 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0xa23c488 <line:352:7, col:14>
    (DeclRefExpr 0xa23c46c <col:14> '_CharT *' lvalue ParmVar 0xa23b470 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0xa23e008 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0xa23ce70 <line:361:7, col:78>
    0xa23ce40 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa23cf60 <line:362:7, col:71>
    0xa23cf30 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa23d020 <line:363:7, col:74>
    0xa23cff0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa23d110 <line:364:7, col:68>
    0xa23d0e0 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa23dfc0 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0xa23d1d8 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa23d138 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa23d120 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23c9b0 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa23d1c0 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa23d188 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa23d16c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23cb40 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa23df98 <line:367:2, line:392:2>
      (DeclStmt 0xa23d2c8 <line:368:4, col:59>
        0xa23d210 "const int_type __ival =
          (CallExpr 0xa23d2a8 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa23d268 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0xa23d28c <col:53> 'const _CharT' lvalue ParmVar 0xa23cbb0 '__val' 'const _CharT &'))")
      (DeclStmt 0xa23d3c8 <line:369:4, col:42>
        0xa23d340 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa23d390 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa23d374 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23c9b0 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa23d488 <line:370:4, col:32>
        0xa23d3e0 "int_type __c =
          (CallExpr 0xa23d468 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa23d430 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa23d414 <col:19> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa23dd58 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0xa23d658 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0xa23d588 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0xa23d560 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa23d4b8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa23d4dc <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23d3e0 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa23d540 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa23d518 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0xa23d640 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0xa23d618 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa23d5c0 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa23d5e4 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23d3e0 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0xa23d5fc <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa23d210 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0xa23dd40 <line:373:6, line:386:6>
          (DeclStmt 0xa23d7f8 <line:374:8, col:53>
            0xa23d680 "streamsize __n =
              (CXXOperatorCallExpr 0xa23d7d0 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa23d798 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                (CallExpr 0xa23d708 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23d6d0 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23d6b4 <col:25> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *')))
                (CallExpr 0xa23d778 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23d740 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23d724 <col:41> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa23dd20 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0xa23d848 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa23d838 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa23d808 <col:12> 'streamsize':'int' lvalue Var 0xa23d680 '__n' 'streamsize':'int'))
              (IntegerLiteral 0xa23d820 <col:18> 'int' 1))
            (CompoundStmt 0xa23dc60 <line:376:3, line:383:3>
              (DeclStmt 0xa23d9d8 <line:377:5, line:378:19>
                0xa23d890 "const _CharT *__p =
                  (CallExpr 0xa23d9b0 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa23d8e8 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0xa23d960 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa23d928 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0xa23d90c <col:43> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0xa23d97c <line:378:8> 'streamsize':'int' lvalue Var 0xa23d680 '__n' 'streamsize':'int')
                    (DeclRefExpr 0xa23d994 <col:13> 'const _CharT' lvalue ParmVar 0xa23cbb0 '__val' 'const _CharT &'))")
              (IfStmt 0xa23db18 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0xa23d9e8 <line:379:9> 'const _CharT *' lvalue Var 0xa23d890 '__p' 'const _CharT *')
                (BinaryOperator 0xa23db00 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0xa23da00 <col:7> 'streamsize':'int' lvalue Var 0xa23d680 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0xa23dad8 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0xa23daa0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                    (DeclRefExpr 0xa23da18 <col:13> 'const _CharT *' lvalue Var 0xa23d890 '__p' 'const _CharT *')
                    (CallExpr 0xa23da80 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa23da48 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0xa23da30 <col:19> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0xa23dba0 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23db50 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa23db34 <col:5> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa23db84 <col:24> 'streamsize':'int' lvalue Var 0xa23d680 '__n' 'streamsize':'int'))
              (BinaryOperator 0xa23dc48 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa23dbc0 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23d3e0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa23dc28 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23dbf0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa23dbd8 <col:11> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0xa23dd08 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa23dc80 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23d3e0 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa23dce8 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23dcb0 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa23dc98 <col:9> 'streambuf_type *' lvalue Var 0xa23d340 '__sb' 'streambuf_type *')))))))
      (IfStmt 0xa23df78 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0xa23de60 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0xa23de38 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa23dd90 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa23ddb4 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23d3e0 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa23de18 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa23ddf0 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0xa23dee0 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa23de90 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa23de74 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23c9b0 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0xa23dec4 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0xa23d3e0 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0xa23df60 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa23df10 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa23def8 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23c9b0 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0xa23df48 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa23dff8 <line:393:7, col:14>
    (DeclRefExpr 0xa23dfdc <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa23c9b0 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0xa2417f8 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0xa2417a8 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa241740 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa241724 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa241500 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0xa241774 <col:18> 'const _CharT *' lvalue ParmVar 0xa241570 '__ws' 'const _CharT *')
    (DeclRefExpr 0xa24178c <col:24> 'int' lvalue ParmVar 0xa2415c0 '__len' 'int'))
  (ReturnStmt 0xa2417e8 <line:116:7, col:14>
    (DeclRefExpr 0xa2417cc <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa241500 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0xa241d20 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0xa241cd0 <line:125:7, line:126:17>
    (DeclStmt 0xa241b50 <line:125:12, col:23>
      0xa241b00 "int __j =
        (IntegerLiteral 0xa241b38 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0xa241bb0 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0xa241b90 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0xa241b60 <col:25> 'int' lvalue Var 0xa241b00 '__j' 'int'))
      (ImplicitCastExpr 0xa241ba0 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0xa241b78 <col:31> 'int' lvalue ParmVar 0xa241990 '__len' 'int')))
    (BinaryOperator 0xa241c28 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0xa241be0 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0xa241bc8 <col:38> 'int' lvalue Var 0xa241b00 '__j' 'int'))
      (UnaryOperator 0xa241c10 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa241bf4 <col:47> '_OutIter' lvalue ParmVar 0xa2418d0 '__s' '_OutIter')))
    (BinaryOperator 0xa241cb8 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0xa241c58 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa241c40 <col:3> '_OutIter' lvalue ParmVar 0xa2418d0 '__s' '_OutIter'))
      (ArraySubscriptExpr 0xa241ca0 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0xa241c6c <col:9> 'const _CharT *' lvalue ParmVar 0xa241940 '__ws' 'const _CharT *')
        (DeclRefExpr 0xa241c84 <col:14> 'int' lvalue Var 0xa241b00 '__j' 'int'))))
  (ReturnStmt 0xa241d10 <line:127:7, col:14>
    (DeclRefExpr 0xa241cf4 <col:14> '_OutIter' lvalue ParmVar 0xa2418d0 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0xa245df8 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0xa245de8 <col:9, col:36>
    (CallExpr 0xa245dc0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa245d58 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa245d48 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa245d8c <col:28> 'mask':'unsigned short' lvalue ParmVar 0xa2420b0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa245da4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa242110 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0xa245ed8 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0xa245ec8 <col:9, col:45>
    (CallExpr 0xa245ea0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa245e20 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa245e10 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa245e54 <col:28> 'const char_type *' lvalue ParmVar 0xa242250 '__lo' 'const char_type *')
      (DeclRefExpr 0xa245e6c <col:34> 'const char_type *' lvalue ParmVar 0xa2422a0 '__hi' 'const char_type *')
      (DeclRefExpr 0xa245e84 <col:40> 'mask *' lvalue ParmVar 0xa242310 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa245fb8 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0xa245fa8 <col:9, col:48>
    (CallExpr 0xa245f80 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa245f00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa245ef0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa245f34 <col:33> 'mask':'unsigned short' lvalue ParmVar 0xa242450 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa245f4c <col:38> 'const char_type *' lvalue ParmVar 0xa2424a0 '__lo' 'const char_type *')
      (DeclRefExpr 0xa245f64 <col:44> 'const char_type *' lvalue ParmVar 0xa2424f0 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa246098 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0xa246088 <col:9, col:49>
    (CallExpr 0xa246060 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa245fe0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa245fd0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa246014 <col:34> 'mask':'unsigned short' lvalue ParmVar 0xa242630 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa24602c <col:39> 'const char_type *' lvalue ParmVar 0xa242680 '__lo' 'const char_type *')
      (DeclRefExpr 0xa246044 <col:45> 'const char_type *' lvalue ParmVar 0xa2426d0 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0xa246140 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0xa246130 <col:9, col:36>
    (CallExpr 0xa246110 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2460c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2460b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2460f4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa2427b0 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa246208 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0xa2461f8 <col:9, col:43>
    (CallExpr 0xa2461d0 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa246168 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa246158 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa24619c <col:33> 'char_type *' lvalue ParmVar 0xa2428f0 '__lo' 'char_type *')
      (DeclRefExpr 0xa2461b4 <col:39> 'const char_type *' lvalue ParmVar 0xa242940 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa2462b0 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0xa2462a0 <col:9, col:36>
    (CallExpr 0xa246280 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa246230 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa246220 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa246264 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa242a50 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa246378 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0xa246368 <col:9, col:43>
    (CallExpr 0xa246340 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2462d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2462c8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa24630c <col:33> 'char_type *' lvalue ParmVar 0xa242b20 '__lo' 'char_type *')
      (DeclRefExpr 0xa246324 <col:39> 'const char_type *' lvalue ParmVar 0xa242b70 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0xa246420 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0xa246410 <col:9, col:34>
    (CallExpr 0xa2463f0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2463a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa246390 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2463d4 <col:31> 'char' lvalue ParmVar 0xa242c40 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa246500 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0xa2464f0 <col:9, col:47>
    (CallExpr 0xa2464c8 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa246448 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa246438 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa24647c <col:31> 'const char *' lvalue ParmVar 0xa242d60 '__lo' 'const char *')
      (DeclRefExpr 0xa246494 <col:37> 'const char *' lvalue ParmVar 0xa242db0 '__hi' 'const char *')
      (DeclRefExpr 0xa2464ac <col:43> 'char_type *' lvalue ParmVar 0xa242e00 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa2465c8 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0xa2465b8 <col:9, col:45>
    (CallExpr 0xa246590 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa246528 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa246518 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa24655c <col:32> 'char_type':'_CharT' lvalue ParmVar 0xa242f40 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa246574 <col:37> 'char' lvalue ParmVar 0xa242f80 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa2466c8 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0xa2466b8 <col:9, col:58>
    (CallExpr 0xa246688 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2465f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2465e0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa246624 <col:32> 'const char_type *' lvalue ParmVar 0xa2430a0 '__lo' 'const char_type *')
      (DeclRefExpr 0xa24663c <col:38> 'const char_type *' lvalue ParmVar 0xa2430f0 '__hi' 'const char_type *')
      (DeclRefExpr 0xa246654 <col:44> 'char' lvalue ParmVar 0xa243130 '__dfault' 'char')
      (DeclRefExpr 0xa24666c <col:54> 'char *' lvalue ParmVar 0xa243180 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0xa245d20 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa245d08 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2466dc </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0xa243300 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa246780 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0xa246790 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa254a68 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa254a50 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa254a90 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa254a78 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa248b70 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa248b58 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa248ac8 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa248b48 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa248b30 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa248b20 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa248af8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa248ae0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa24b0a8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa24b090 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa24b0b8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa24b0e0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa24b0c8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa24b108 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa24b0f0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa24b118 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa24b140 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa24b128 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa24b230 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa24b220 <col:9, col:36>
    (CXXMemberCallExpr 0xa24b1f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa24b1d0 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa24a460
        (CXXThisExpr 0xa24b168 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b210 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa24b1b8 <col:33> 'char_type':'char' lvalue ParmVar 0xa249620 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa24b340 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa24b330 <col:9, col:43>
    (CXXMemberCallExpr 0xa24b2e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa24b2c8 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa24a590
        (CXXThisExpr 0xa24b248 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b310 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b298 <col:33> 'char_type *' lvalue ParmVar 0xa249760 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa24b320 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b2b0 <col:39> 'const char_type *' lvalue ParmVar 0xa2497d0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa24b420 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa24b410 <col:9, col:36>
    (CXXMemberCallExpr 0xa24b3e0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa24b3c0 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa24a650
        (CXXThisExpr 0xa24b358 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b400 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa24b3a8 <col:33> 'char_type':'char' lvalue ParmVar 0xa2498e0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa24b530 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa24b520 <col:9, col:43>
    (CXXMemberCallExpr 0xa24b4d8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa24b4b8 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa24a780
        (CXXThisExpr 0xa24b438 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b500 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b488 <col:33> 'char_type *' lvalue ParmVar 0xa2499b0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa24b510 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b4a0 <col:39> 'const char_type *' lvalue ParmVar 0xa249a00 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa24b7c8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa24b690 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24b5a8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa24b598 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa24b574 <col:6> 'char' lvalue ->_M_widen_ok 0xa248790
          (CXXThisExpr 0xa24b548 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa24b680 <line:868:4, col:51>
      (ImplicitCastExpr 0xa24b670 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24b658 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa24b648 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24b5c8 <col:11> 'char [256]' lvalue ->_M_widen 0xa248880
              (CXXThisExpr 0xa24b5b8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24b630 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24b620 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24b610 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa24b5e8 <col:47> 'char' lvalue ParmVar 0xa249ad0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa24b6e0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa24b6c0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa24adf0
      (CXXThisExpr 0xa24b6b0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa24b7b8 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa24b788 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa24b768 <col:9, col:15> '<bound member function type>' ->do_widen 0xa24a840
        (CXXThisExpr 0xa24b700 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b7a8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24b750 <col:24> 'char' lvalue ParmVar 0xa249ad0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa24bc08 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa24b9f0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa24b850 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa24b840 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24b830 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa24b7f8 <col:6> 'char' lvalue ->_M_widen_ok 0xa248790
            (CXXThisExpr 0xa24b7e8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa24b818 <col:21> 'int' 1))
    (CompoundStmt 0xa24b9d8 <line:895:4, line:898:4>
      (CallExpr 0xa24b928 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa24b918 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24b868 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa24b960 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa24b950 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa24b880 <col:23> 'char_type *' lvalue ParmVar 0xa249d20 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa24b980 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa24b970 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa24b898 <col:29> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa24b990 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa24b900 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa24b8e0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa24b8b0 <col:35> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa24b8f0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa24b8c8 <col:42> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *')))))
      (ReturnStmt 0xa24b9c8 <line:897:6, col:13>
        (ImplicitCastExpr 0xa24b9b8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24b99c <col:13> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa24bac8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa24ba60 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa24ba50 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa24ba40 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa24ba20 <col:7> 'char' lvalue ->_M_widen_ok 0xa248790
            (CXXThisExpr 0xa24ba10 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa24baa8 <line:900:4, col:18> 'void'
      (MemberExpr 0xa24ba88 <col:4> '<bound member function type>' ->_M_widen_init 0xa24adf0
        (CXXThisExpr 0xa24ba78 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa24bbf8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa24bba0 <col:9, col:40> 'const char *'
      (MemberExpr 0xa24bb80 <col:9, col:15> '<bound member function type>' ->do_widen 0xa24a9c0
        (CXXThisExpr 0xa24bae8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24bbc8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24bb38 <col:24> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa24bbd8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24bb50 <col:30> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa24bbe8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24bb68 <col:36> 'char_type *' lvalue ParmVar 0xa249d20 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa24c150 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa24bdd8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24bcf0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa24bce0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24bcc8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa24bcb8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24bc38 <col:6> 'char [256]' lvalue ->_M_narrow 0xa248970
              (CXXThisExpr 0xa24bc28 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24bca0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24bc90 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24bc80 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa24bc58 <col:43> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa24bdc8 <line:926:4, col:52>
      (ImplicitCastExpr 0xa24bdb8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24bda0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa24bd90 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24bd10 <col:11> 'char [256]' lvalue ->_M_narrow 0xa248970
              (CXXThisExpr 0xa24bd00 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24bd78 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24bd68 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24bd58 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa24bd30 <col:48> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa24bf30 <line:927:2, col:43>
    0xa24be00 "const char __t =
      (CXXMemberCallExpr 0xa24bee8 <col:19, col:42> 'char'
        (MemberExpr 0xa24bec8 <col:19> '<bound member function type>' ->do_narrow 0xa24aae0
          (CXXThisExpr 0xa24beb8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa24bf10 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa24be88 <col:29> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa24bf20 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bea0 <col:34> 'char' lvalue ParmVar 0xa249ea0 '__dfault' 'char')))")
  (IfStmt 0xa24c0f8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa24bfb0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa24bf80 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24bf70 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bf40 <col:6> 'const char' lvalue Var 0xa24be00 '__t' 'const char')))
      (ImplicitCastExpr 0xa24bfa0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24bf90 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bf58 <col:13> 'char' lvalue ParmVar 0xa249ea0 '__dfault' 'char'))))
    (BinaryOperator 0xa24c0e0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa24c0a0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa24c090 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa24c010 <col:4> 'char [256]' lvalue ->_M_narrow 0xa248970
            (CXXThisExpr 0xa24c000 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa24c078 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa24c068 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa24c058 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa24c030 <col:41> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa24c0d0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24c0b4 <col:49> 'const char' lvalue Var 0xa24be00 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa24c140 <line:930:2, col:9>
    (ImplicitCastExpr 0xa24c130 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa24c114 <col:9> 'const char' lvalue Var 0xa24be00 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa24c650 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa24c408 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24c270 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa24c228 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa24c218 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24c170 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa24c250 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa24c1f0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa24c1e0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa24c1d0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa24c198 <col:23> 'char' lvalue ->_M_narrow_ok 0xa2489b0
                  (CXXThisExpr 0xa24c188 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa24c1b8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa24c260 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa24c208 <col:42> '_Bool' true))))
    (CompoundStmt 0xa24c3f0 <line:960:4, line:963:4>
      (CallExpr 0xa24c340 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa24c330 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24c27c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa24c378 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa24c368 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa24c294 <col:23> 'char *' lvalue ParmVar 0xa24a0a0 '__to' 'char *')))
        (ImplicitCastExpr 0xa24c398 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa24c388 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa24c2ac <col:29> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa24c3a8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa24c318 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa24c2f8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa24c2c4 <col:35> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa24c308 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa24c2dc <col:42> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa24c3e0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa24c3d0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c3b4 <col:13> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa24c4e0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa24c478 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa24c468 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa24c458 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa24c438 <col:7> 'char' lvalue ->_M_narrow_ok 0xa2489b0
            (CXXThisExpr 0xa24c428 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa24c4c0 <line:965:4, col:19> 'void'
      (MemberExpr 0xa24c4a0 <col:4> '<bound member function type>' ->_M_narrow_init 0xa24ad70
        (CXXThisExpr 0xa24c490 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa24c640 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa24c5d0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa24c5b0 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa24aca0
        (CXXThisExpr 0xa24c500 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24c600 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c550 <col:25> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa24c610 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c568 <col:31> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa24c620 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24c580 <col:37> 'char' lvalue ParmVar 0xa24a050 '__dfault' 'char'))
      (ImplicitCastExpr 0xa24c630 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa24c598 <col:47> 'char *' lvalue ParmVar 0xa24a0a0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa24c6c0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa24c6b0 <col:9, col:16>
    (ImplicitCastExpr 0xa24c6a0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa24c680 <col:16> 'const mask *const' lvalue ->_M_table 0xa248750
        (CXXThisExpr 0xa24c670 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa24c710 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa24c700 <col:9, col:16>
    (ImplicitCastExpr 0xa24c6f0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa24c6d4 <col:16> 'char' lvalue ParmVar 0xa24a7f0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa24c898 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa24c7e8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa24c7d8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa24c724 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa24c820 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa24c810 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c73c <col:19> 'char_type *' lvalue ParmVar 0xa24a960 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa24c840 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa24c830 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24c754 <col:27> 'const char *' lvalue ParmVar 0xa24a8c0 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa24c850 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa24c7c0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa24c7a0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24c76c <col:33> 'const char *' lvalue ParmVar 0xa24a910 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa24c7b0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24c784 <col:40> 'const char *' lvalue ParmVar 0xa24a8c0 '__lo' 'const char *')))))
  (ReturnStmt 0xa24c888 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa24c878 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa24c85c <col:9> 'const char *' lvalue ParmVar 0xa24a910 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa24c8e8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa24c8d8 <col:9, col:16>
    (ImplicitCastExpr 0xa24c8c8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa24c8b0 <col:16> 'char_type':'char' lvalue ParmVar 0xa24aa40 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa24ca70 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa24c9c0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa24c9b0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa24c8fc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa24c9f8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa24c9e8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa24c914 <col:19> 'char *' lvalue ParmVar 0xa24ac40 '__dest' 'char *')))
    (ImplicitCastExpr 0xa24ca18 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa24ca08 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c92c <col:27> 'const char_type *' lvalue ParmVar 0xa24ab60 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa24ca28 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa24c998 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa24c978 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c944 <col:33> 'const char_type *' lvalue ParmVar 0xa24abb0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa24c988 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c95c <col:40> 'const char_type *' lvalue ParmVar 0xa24ab60 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa24ca60 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa24ca50 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa24ca34 <col:9> 'const char_type *' lvalue ParmVar 0xa24abb0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0xa247f78 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa247f60 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0xa248010 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0xa246c40 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa248070 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0xa2482b8 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa248b70 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa248b58 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa248ac8 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa248b48 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa248b30 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa248b20 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa248af8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa248ae0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa24b0a8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa24b090 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa24b0b8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa24b0e0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa24b0c8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa24b108 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa24b0f0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa24b118 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa24b140 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa24b128 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa24b230 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa24b220 <col:9, col:36>
    (CXXMemberCallExpr 0xa24b1f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa24b1d0 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa24a460
        (CXXThisExpr 0xa24b168 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b210 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa24b1b8 <col:33> 'char_type':'char' lvalue ParmVar 0xa249620 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa24b340 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa24b330 <col:9, col:43>
    (CXXMemberCallExpr 0xa24b2e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa24b2c8 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa24a590
        (CXXThisExpr 0xa24b248 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b310 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b298 <col:33> 'char_type *' lvalue ParmVar 0xa249760 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa24b320 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b2b0 <col:39> 'const char_type *' lvalue ParmVar 0xa2497d0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa24b420 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa24b410 <col:9, col:36>
    (CXXMemberCallExpr 0xa24b3e0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa24b3c0 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa24a650
        (CXXThisExpr 0xa24b358 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b400 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa24b3a8 <col:33> 'char_type':'char' lvalue ParmVar 0xa2498e0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa24b530 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa24b520 <col:9, col:43>
    (CXXMemberCallExpr 0xa24b4d8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa24b4b8 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa24a780
        (CXXThisExpr 0xa24b438 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b500 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b488 <col:33> 'char_type *' lvalue ParmVar 0xa2499b0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa24b510 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24b4a0 <col:39> 'const char_type *' lvalue ParmVar 0xa249a00 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa24b7c8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa24b690 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24b5a8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa24b598 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa24b574 <col:6> 'char' lvalue ->_M_widen_ok 0xa248790
          (CXXThisExpr 0xa24b548 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa24b680 <line:868:4, col:51>
      (ImplicitCastExpr 0xa24b670 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24b658 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa24b648 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24b5c8 <col:11> 'char [256]' lvalue ->_M_widen 0xa248880
              (CXXThisExpr 0xa24b5b8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24b630 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24b620 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24b610 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa24b5e8 <col:47> 'char' lvalue ParmVar 0xa249ad0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa24b6e0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa24b6c0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa24adf0
      (CXXThisExpr 0xa24b6b0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa24b7b8 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa24b788 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa24b768 <col:9, col:15> '<bound member function type>' ->do_widen 0xa24a840
        (CXXThisExpr 0xa24b700 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24b7a8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24b750 <col:24> 'char' lvalue ParmVar 0xa249ad0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa24bc08 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa24b9f0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa24b850 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa24b840 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24b830 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa24b7f8 <col:6> 'char' lvalue ->_M_widen_ok 0xa248790
            (CXXThisExpr 0xa24b7e8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa24b818 <col:21> 'int' 1))
    (CompoundStmt 0xa24b9d8 <line:895:4, line:898:4>
      (CallExpr 0xa24b928 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa24b918 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24b868 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa24b960 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa24b950 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa24b880 <col:23> 'char_type *' lvalue ParmVar 0xa249d20 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa24b980 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa24b970 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa24b898 <col:29> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa24b990 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa24b900 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa24b8e0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa24b8b0 <col:35> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa24b8f0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa24b8c8 <col:42> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *')))))
      (ReturnStmt 0xa24b9c8 <line:897:6, col:13>
        (ImplicitCastExpr 0xa24b9b8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24b99c <col:13> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa24bac8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa24ba60 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa24ba50 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa24ba40 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa24ba20 <col:7> 'char' lvalue ->_M_widen_ok 0xa248790
            (CXXThisExpr 0xa24ba10 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa24baa8 <line:900:4, col:18> 'void'
      (MemberExpr 0xa24ba88 <col:4> '<bound member function type>' ->_M_widen_init 0xa24adf0
        (CXXThisExpr 0xa24ba78 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa24bbf8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa24bba0 <col:9, col:40> 'const char *'
      (MemberExpr 0xa24bb80 <col:9, col:15> '<bound member function type>' ->do_widen 0xa24a9c0
        (CXXThisExpr 0xa24bae8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24bbc8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24bb38 <col:24> 'const char *' lvalue ParmVar 0xa249c80 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa24bbd8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24bb50 <col:30> 'const char *' lvalue ParmVar 0xa249cd0 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa24bbe8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24bb68 <col:36> 'char_type *' lvalue ParmVar 0xa249d20 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa24c150 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa24bdd8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24bcf0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa24bce0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24bcc8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa24bcb8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24bc38 <col:6> 'char [256]' lvalue ->_M_narrow 0xa248970
              (CXXThisExpr 0xa24bc28 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24bca0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24bc90 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24bc80 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa24bc58 <col:43> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa24bdc8 <line:926:4, col:52>
      (ImplicitCastExpr 0xa24bdb8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa24bda0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa24bd90 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa24bd10 <col:11> 'char [256]' lvalue ->_M_narrow 0xa248970
              (CXXThisExpr 0xa24bd00 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa24bd78 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa24bd68 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa24bd58 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa24bd30 <col:48> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa24bf30 <line:927:2, col:43>
    0xa24be00 "const char __t =
      (CXXMemberCallExpr 0xa24bee8 <col:19, col:42> 'char'
        (MemberExpr 0xa24bec8 <col:19> '<bound member function type>' ->do_narrow 0xa24aae0
          (CXXThisExpr 0xa24beb8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa24bf10 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa24be88 <col:29> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa24bf20 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bea0 <col:34> 'char' lvalue ParmVar 0xa249ea0 '__dfault' 'char')))")
  (IfStmt 0xa24c0f8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa24bfb0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa24bf80 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24bf70 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bf40 <col:6> 'const char' lvalue Var 0xa24be00 '__t' 'const char')))
      (ImplicitCastExpr 0xa24bfa0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa24bf90 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa24bf58 <col:13> 'char' lvalue ParmVar 0xa249ea0 '__dfault' 'char'))))
    (BinaryOperator 0xa24c0e0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa24c0a0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa24c090 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa24c010 <col:4> 'char [256]' lvalue ->_M_narrow 0xa248970
            (CXXThisExpr 0xa24c000 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa24c078 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa24c068 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa24c058 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa24c030 <col:41> 'char_type':'char' lvalue ParmVar 0xa249e60 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa24c0d0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24c0b4 <col:49> 'const char' lvalue Var 0xa24be00 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa24c140 <line:930:2, col:9>
    (ImplicitCastExpr 0xa24c130 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa24c114 <col:9> 'const char' lvalue Var 0xa24be00 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa24c650 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa24c408 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa24c270 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa24c228 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa24c218 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24c170 <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa24c250 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa24c1f0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa24c1e0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa24c1d0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa24c198 <col:23> 'char' lvalue ->_M_narrow_ok 0xa2489b0
                  (CXXThisExpr 0xa24c188 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa24c1b8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa24c260 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa24c208 <col:42> '_Bool' true))))
    (CompoundStmt 0xa24c3f0 <line:960:4, line:963:4>
      (CallExpr 0xa24c340 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa24c330 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa24c27c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa24c378 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa24c368 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa24c294 <col:23> 'char *' lvalue ParmVar 0xa24a0a0 '__to' 'char *')))
        (ImplicitCastExpr 0xa24c398 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa24c388 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa24c2ac <col:29> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa24c3a8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa24c318 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa24c2f8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa24c2c4 <col:35> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa24c308 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa24c2dc <col:42> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa24c3e0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa24c3d0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c3b4 <col:13> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa24c4e0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa24c478 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa24c468 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa24c458 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa24c438 <col:7> 'char' lvalue ->_M_narrow_ok 0xa2489b0
            (CXXThisExpr 0xa24c428 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa24c4c0 <line:965:4, col:19> 'void'
      (MemberExpr 0xa24c4a0 <col:4> '<bound member function type>' ->_M_narrow_init 0xa24ad70
        (CXXThisExpr 0xa24c490 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa24c640 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa24c5d0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa24c5b0 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa24aca0
        (CXXThisExpr 0xa24c500 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa24c600 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c550 <col:25> 'const char_type *' lvalue ParmVar 0xa249fc0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa24c610 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c568 <col:31> 'const char_type *' lvalue ParmVar 0xa24a010 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa24c620 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa24c580 <col:37> 'char' lvalue ParmVar 0xa24a050 '__dfault' 'char'))
      (ImplicitCastExpr 0xa24c630 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa24c598 <col:47> 'char *' lvalue ParmVar 0xa24a0a0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa24c6c0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa24c6b0 <col:9, col:16>
    (ImplicitCastExpr 0xa24c6a0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa24c680 <col:16> 'const mask *const' lvalue ->_M_table 0xa248750
        (CXXThisExpr 0xa24c670 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa24c710 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa24c700 <col:9, col:16>
    (ImplicitCastExpr 0xa24c6f0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa24c6d4 <col:16> 'char' lvalue ParmVar 0xa24a7f0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa24c898 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa24c7e8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa24c7d8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa24c724 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa24c820 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa24c810 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c73c <col:19> 'char_type *' lvalue ParmVar 0xa24a960 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa24c840 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa24c830 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa24c754 <col:27> 'const char *' lvalue ParmVar 0xa24a8c0 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa24c850 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa24c7c0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa24c7a0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24c76c <col:33> 'const char *' lvalue ParmVar 0xa24a910 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa24c7b0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa24c784 <col:40> 'const char *' lvalue ParmVar 0xa24a8c0 '__lo' 'const char *')))))
  (ReturnStmt 0xa24c888 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa24c878 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa24c85c <col:9> 'const char *' lvalue ParmVar 0xa24a910 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa24c8e8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa24c8d8 <col:9, col:16>
    (ImplicitCastExpr 0xa24c8c8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa24c8b0 <col:16> 'char_type':'char' lvalue ParmVar 0xa24aa40 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa24ca70 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa24c9c0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa24c9b0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa24c8fc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9fff9b0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa24c9f8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa24c9e8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa24c914 <col:19> 'char *' lvalue ParmVar 0xa24ac40 '__dest' 'char *')))
    (ImplicitCastExpr 0xa24ca18 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa24ca08 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa24c92c <col:27> 'const char_type *' lvalue ParmVar 0xa24ab60 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa24ca28 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa24c998 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa24c978 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c944 <col:33> 'const char_type *' lvalue ParmVar 0xa24abb0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa24c988 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa24c95c <col:40> 'const char_type *' lvalue ParmVar 0xa24ab60 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa24ca60 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa24ca50 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa24ca34 <col:9> 'const char_type *' lvalue ParmVar 0xa24abb0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa254a68 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa254a50 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa254a90 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa254a78 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT = char> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2550a0 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa255088 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0xa2550b0 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2556d8 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2556c0 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa255cf8 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa255ce0 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0xa2560b8 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0xa2560a8 <col:5, col:56>
    (ImplicitCastExpr 0xa256098 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0xa256080 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0xa256050 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa256040 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0xa256010 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0xa256000 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0xa255f80 <col:12> 'const mask *const' lvalue ->_M_table 0xa248750
                  (CXXThisExpr 0xa255f70 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0xa255fe8 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0xa255fd8 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0xa255fc8 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0xa255fa0 <col:48> 'char' lvalue ParmVar 0xa255e80 '__c' 'char')))))))
        (ImplicitCastExpr 0xa256070 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa256060 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa256024 <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa255e40 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0xa256508 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0xa2564b8 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0xa256348 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0xa256328 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2562f4 <col:12> 'const char *' lvalue ParmVar 0xa256150 '__low' 'const char *'))
      (ImplicitCastExpr 0xa256338 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa25630c <col:20> 'const char *' lvalue ParmVar 0xa2561a0 '__high' 'const char *')))
    (BinaryOperator 0xa2564a0 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0xa256390 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0xa256378 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0xa256360 <col:8> 'mask *' lvalue ParmVar 0xa2561f0 '__vec' 'mask *')))
      (ImplicitCastExpr 0xa256490 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0xa256478 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0xa256468 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0xa2563b8 <col:18> 'const mask *const' lvalue ->_M_table 0xa248750
              (CXXThisExpr 0xa2563a8 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa256450 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa256440 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa256430 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0xa256408 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0xa2563f0 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0xa2563d8 <col:55> 'const char *' lvalue ParmVar 0xa256150 '__low' 'const char *'))))))))))
  (ReturnStmt 0xa2564f8 <line:52:5, col:12>
    (ImplicitCastExpr 0xa2564e8 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2564cc <col:12> 'const char *' lvalue ParmVar 0xa2561a0 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa2569c8 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0xa256978 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0xa256930 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0xa256788 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa256768 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa256734 <col:12> 'const char *' lvalue ParmVar 0xa2565e0 '__low' 'const char *'))
        (ImplicitCastExpr 0xa256778 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa25674c <col:20> 'const char *' lvalue ParmVar 0xa256630 '__high' 'const char *')))
      (UnaryOperator 0xa256918 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa256908 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa2568f0 <col:9, col:60> 'int'
            (BinaryOperator 0xa2568d8 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0xa2568a8 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa256898 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0xa256868 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0xa256858 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0xa2567b0 <col:10> 'const mask *const' lvalue ->_M_table 0xa248750
                        (CXXThisExpr 0xa2567a0 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0xa256840 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0xa256830 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0xa256820 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0xa2567f8 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0xa2567e8 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0xa2567d0 <col:47> 'const char *' lvalue ParmVar 0xa2565e0 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0xa2568c8 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa2568b8 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0xa25687c <col:57> 'mask':'unsigned short' lvalue ParmVar 0xa256590 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0xa256960 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa256948 <col:9> 'const char *' lvalue ParmVar 0xa2565e0 '__low' 'const char *')))
  (ReturnStmt 0xa2569b8 <line:62:5, col:12>
    (ImplicitCastExpr 0xa2569a8 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa25698c <col:12> 'const char *' lvalue ParmVar 0xa2565e0 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa256e90 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0xa256e40 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0xa256df8 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0xa256c48 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa256c28 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa256bf4 <col:12> 'const char *' lvalue ParmVar 0xa256aa0 '__low' 'const char *'))
        (ImplicitCastExpr 0xa256c38 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa256c0c <col:20> 'const char *' lvalue ParmVar 0xa256af0 '__high' 'const char *')))
      (BinaryOperator 0xa256de0 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0xa256db0 <col:8, col:59> 'int'
          (BinaryOperator 0xa256d98 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0xa256d68 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa256d58 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0xa256d28 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0xa256d18 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0xa256c70 <col:9> 'const mask *const' lvalue ->_M_table 0xa248750
                      (CXXThisExpr 0xa256c60 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0xa256d00 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0xa256cf0 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0xa256ce0 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0xa256cb8 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0xa256ca8 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0xa256c90 <col:46> 'const char *' lvalue ParmVar 0xa256aa0 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0xa256d88 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa256d78 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0xa256d3c <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa256a50 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0xa256dc8 <col:64> 'int' 0)))
    (UnaryOperator 0xa256e28 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa256e10 <col:9> 'const char *' lvalue ParmVar 0xa256aa0 '__low' 'const char *')))
  (ReturnStmt 0xa256e80 <line:72:5, col:12>
    (ImplicitCastExpr 0xa256e70 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa256e54 <col:12> 'const char *' lvalue ParmVar 0xa256aa0 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0xa2574f8 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa257288 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0xa257254 <col:26> 'int' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa257270 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0xa257508 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2572d4 <col:23> 'int' EnumConstant 0xa2572a0 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0xa257518 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa257358 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0xa257324 <col:27> 'int' EnumConstant 0xa2572f0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa257340 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0xa257528 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2573d8 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0xa2573a4 <col:17> 'int' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa2573c0 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0xa257538 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa257458 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0xa257424 <col:17> 'int' EnumConstant 0xa2572f0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa257440 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0xa257548 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2574a4 <col:12> 'int' EnumConstant 0xa257370 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0xa2578e8 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2577c8 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa257794 <col:15> 'int' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa2577b0 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0xa2578f8 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa257848 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa257814 <col:15> 'int' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa257830 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0xa257908 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa257898 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0xa259258 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa259240 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa259264 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0xa258d70 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0xa2592f8 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0xa259358 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0xa2593b8 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0xa259408 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0xa259458 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0xa2594b8 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0xa259508 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0xa259570 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0xa2595d0 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0xa259628 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0xa2596a8 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0xa259a70 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0xa259a50 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0xa259938 <line:1618:11> '_Bool' lvalue ->_M_allocated 0xa258d30
      (CXXThisExpr 0xa259928 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0xa259a30 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0xa259988 <line:1620:4, col:14> 'void'
        (MemberExpr 0xa259968 <col:14> 'const char *' lvalue ->_M_grouping 0xa258920
          (CXXThisExpr 0xa259958 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa2599d0 <line:1621:4, col:14> 'void'
        (MemberExpr 0xa2599b0 <col:14> 'const _CharT *' lvalue ->_M_truename 0xa258a00
          (CXXThisExpr 0xa2599a0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa259a18 <line:1622:4, col:14> 'void'
        (MemberExpr 0xa2599f8 <col:14> 'const _CharT *' lvalue ->_M_falsename 0xa258a80
          (CXXThisExpr 0xa2599e8 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0xa25ac30 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa25ac18 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa25acb4 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0xa25a190 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa25ad48 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0xa25ae08 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0xa25ade8 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa25adc8 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa25abb0
      (CXXThisExpr 0xa25adb8 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0xa25ac58 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa25ac40 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa25ae1c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0xa25a2c0 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0xa25aeb8 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0xa25a280 '__cache' '__cache_type *')
) (CompoundStmt 0xa25af60 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0xa25af40 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa25af20 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa25abb0
      (CXXThisExpr 0xa25af10 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa25ac80 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa25ac68 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa25af74 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0xa25a420 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa25b008 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0xa25b0c8 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0xa25b0a8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0xa25b070 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa25abb0
      (CXXThisExpr 0xa25b060 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0xa25b090 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa25a3e0 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0xa25b170 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0xa25b160 <col:9, col:39>
    (CallExpr 0xa25b140 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25b108 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25b0f8 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0xa25b200 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0xa25b1f0 <col:9, col:39>
    (CallExpr 0xa25b1d0 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25b198 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25b188 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0xa25b290 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0xa25b280 <col:9, col:34>
    (CallExpr 0xa25b260 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25b228 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25b218 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0xa25b320 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0xa25b310 <col:9, col:34>
    (CallExpr 0xa25b2f0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25b2b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25b2a8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0xa25b3b0 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0xa25b3a0 <col:9, col:35>
    (CallExpr 0xa25b380 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25b348 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25b338 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0xa25b440 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0xa25b430 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa25b3f8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa25b3d8 <col:16> '__cache_type *const' lvalue ->_M_data 0xa25a0b0
        (CXXThisExpr 0xa25b3c8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0xa25b4d0 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0xa25b4c0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa25b488 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa25b468 <col:16> '__cache_type *const' lvalue ->_M_data 0xa25a0b0
        (CXXThisExpr 0xa25b458 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0xa25b560 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0xa25b550 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa25b518 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa25b4f8 <col:16> '__cache_type *const' lvalue ->_M_data 0xa25a0b0
        (CXXThisExpr 0xa25b4e8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0xa25b5f0 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0xa25b5e0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa25b5a8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa25b588 <col:16> '__cache_type *const' lvalue ->_M_data 0xa25a0b0
        (CXXThisExpr 0xa25b578 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0xa25b680 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0xa25b670 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa25b638 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa25b618 <col:16> '__cache_type *const' lvalue ->_M_data 0xa25a0b0
        (CXXThisExpr 0xa25b608 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0xa25aca8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa25ac90 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0xa25b8d8 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2609e0 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2609c8 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0xa260a80 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0xa260810 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa260f08 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0xa260ee8 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0xa260c98 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0xa260ba0 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0xa260b40 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa260b30 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa260adc <col:6> 'int (const char *, const char *)' lvalue Function 0x9ea5fb0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa260b68 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa260af4 <col:23> 'const char *' lvalue ParmVar 0xa2607d0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa260b78 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa260b0c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa260b88 <col:36> 'int' 0))
      (BinaryOperator 0xa260c80 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0xa260c20 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa260c10 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa260bb8 <col:9> 'int (const char *, const char *)' lvalue Function 0x9ea5fb0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa260c48 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa260bd0 <col:26> 'const char *' lvalue ParmVar 0xa2607d0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa260c58 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa260be8 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa260c68 <col:43> 'int' 0)))
    (CompoundStmt 0xa260ec8 <line:1886:4, line:1891:4>
      (DeclStmt 0xa260cf8 <line:1887:6, col:22>
        0xa260cc0 "__c_locale __tmp")
      (CallExpr 0xa260da0 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa260d38 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa260d28 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa260d6c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0xa260cc0 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0xa260d84 <col:38> 'const char *' lvalue ParmVar 0xa2607d0 '__s' 'const char *'))
      (CallExpr 0xa260e28 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa260dd8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa260dc8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa260e0c <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0xa260cc0 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0xa260ea8 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa260e58 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa260e48 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa260e8c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0xa260cc0 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0xa260f20 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0xa268580 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa268568 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa26858c </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0xa2612b0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa268630 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa268758 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0xa268748 <col:9, col:58>
    (CallExpr 0xa268718 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268668 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268658 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa26869c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2613b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2686b4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2613f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2686cc <col:42> 'class std::ios_base' lvalue ParmVar 0xa261440 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2686e4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2614b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2686fc <col:55> '_Bool' lvalue ParmVar 0xa261500 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa268870 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0xa268860 <col:9, col:58>
    (CallExpr 0xa268830 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268780 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268770 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2687b4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa261650 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2687cc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa261690 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2687e4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2616e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2687fc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa261750 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268814 <col:55> 'long' lvalue ParmVar 0xa2617a0 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa268988 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0xa268978 <col:9, col:58>
    (CallExpr 0xa268948 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268898 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268888 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2688cc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2618f0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2688e4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa261930 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2688fc <col:42> 'class std::ios_base' lvalue ParmVar 0xa261bb0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268914 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa261c20 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26892c <col:55> 'unsigned short' lvalue ParmVar 0xa261c70 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa268aa0 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0xa268a90 <col:9, col:58>
    (CallExpr 0xa268a60 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2689b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2689a0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2689e4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa261dc0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2689fc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa261e00 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268a14 <col:42> 'class std::ios_base' lvalue ParmVar 0xa261e50 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268a2c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa261ec0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268a44 <col:55> 'unsigned int' lvalue ParmVar 0xa261f10 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa268bb8 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0xa268ba8 <col:9, col:58>
    (CallExpr 0xa268b78 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268ac8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268ab8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa268afc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa262060 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268b14 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2620a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268b2c <col:42> 'class std::ios_base' lvalue ParmVar 0xa2620f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268b44 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa262160 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268b5c <col:55> 'unsigned long' lvalue ParmVar 0xa2621b0 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa268cd0 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0xa268cc0 <col:9, col:58>
    (CallExpr 0xa268c90 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268be0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268bd0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa268c14 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa262300 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268c2c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa262340 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268c44 <col:42> 'class std::ios_base' lvalue ParmVar 0xa262390 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268c5c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa262400 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268c74 <col:55> 'long long' lvalue ParmVar 0xa262450 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa268de8 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0xa268dd8 <col:9, col:58>
    (CallExpr 0xa268da8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268cf8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268ce8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa268d2c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2625a0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268d44 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2625e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268d5c <col:42> 'class std::ios_base' lvalue ParmVar 0xa262630 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268d74 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2626a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268d8c <col:55> 'unsigned long long' lvalue ParmVar 0xa2626f0 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa268f00 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0xa268ef0 <col:9, col:58>
    (CallExpr 0xa268ec0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268e10 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268e00 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa268e44 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa262840 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268e5c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa262880 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268e74 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2628d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268e8c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa262940 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268ea4 <col:55> 'float' lvalue ParmVar 0xa262990 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa269018 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0xa269008 <col:9, col:58>
    (CallExpr 0xa268fd8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268f28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa268f18 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa268f5c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa262ae0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268f74 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa262b20 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa268f8c <col:42> 'class std::ios_base' lvalue ParmVar 0xa262b70 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa268fa4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa262be0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa268fbc <col:55> 'double' lvalue ParmVar 0xa262c30 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa269130 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0xa269120 <col:9, col:58>
    (CallExpr 0xa2690f0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa269040 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa269030 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa269074 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa262d80 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26908c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa262dc0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2690a4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa262e10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2690bc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa262e80 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2690d4 <col:55> 'long double' lvalue ParmVar 0xa262ed0 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa269248 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0xa269238 <col:9, col:58>
    (CallExpr 0xa269208 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa269158 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa269148 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa26918c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa263020 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2691a4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa263060 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2691bc <col:42> 'class std::ios_base' lvalue ParmVar 0xa2630b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2691d4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa263120 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2691ec <col:55> 'void *' lvalue ParmVar 0xa263170 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0xa269260 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0xa26a088 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0xa2692e8 <line:2120:4, col:18>
    0xa269280 "int __ret =
      (UnaryOperator 0xa2692d0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa2692b8 <col:17> 'int' 1))")
  (IfStmt 0xa26a040 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0xa269348 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0xa269328 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa2692f8 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0xa263cf0 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa269338 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa269310 <col:17> 'int' 10)))
    (CompoundStmt 0xa2696c0 <line:2122:6, line:2125:6>
      (IfStmt 0xa2696a0 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0xa2695a0 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa269400 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa2693b8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
            (DeclRefExpr 0xa269360 <col:12> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa269398 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa269380 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa269578 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0xa269530 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
            (DeclRefExpr 0xa269424 <col:35> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa269510 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0xa2694e8 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa2694a0 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                (CXXUnresolvedConstructExpr 0xa269468 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0xa269450 <col:57> 'char'48))
                (DeclRefExpr 0xa269484 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0xa263cf0 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0xa269688 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa2695b8 <col:3> 'int' lvalue Var 0xa269280 '__ret' 'int')
          (CXXOperatorCallExpr 0xa269660 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa269628 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa2695d0 <col:11> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa269608 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa2695f0 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0xa26a028 <line:2127:6, line:2134:6>
      (IfStmt 0xa26a008 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0xa269868 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa269778 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa269730 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
            (DeclRefExpr 0xa2696d4 <col:12> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa269710 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa2696f8 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa269840 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0xa2697f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
            (DeclRefExpr 0xa26979c <col:35> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2697d8 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0xa2697c0 <col:50> 'char'57))))
        (BinaryOperator 0xa269950 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa269880 <col:3> 'int' lvalue Var 0xa269280 '__ret' 'int')
          (CXXOperatorCallExpr 0xa269928 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa2698f0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa269898 <col:11> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2698d0 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa2698b8 <col:25> 'char'48))))
        (IfStmt 0xa269fe8 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0xa269af8 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa269a08 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa2699c0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
              (DeclRefExpr 0xa269968 <col:17> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa2699a0 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0xa269988 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0xa269ad0 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0xa269a88 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
              (DeclRefExpr 0xa269a2c <col:40> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa269a68 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0xa269a50 <col:55> 'char'102))))
          (BinaryOperator 0xa269c80 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa269b10 <col:3> 'int' lvalue Var 0xa269280 '__ret' 'int')
            (CXXOperatorCallExpr 0xa269c58 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa269c10 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
              (IntegerLiteral 0xa269b28 <col:11> 'int' 10)
              (ParenExpr 0xa269bf8 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0xa269bd0 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0xa269b98 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                  (DeclRefExpr 0xa269b40 <col:17> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0xa269b78 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0xa269b60 <col:31> 'char'97))))))
          (IfStmt 0xa269fc8 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0xa269e28 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa269d38 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa269cf0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
                (DeclRefExpr 0xa269c98 <col:17> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa269cd0 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0xa269cb8 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0xa269e00 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa269db8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
                (DeclRefExpr 0xa269d5c <col:40> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa269d98 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0xa269d80 <col:55> 'char'70))))
            (BinaryOperator 0xa269fb0 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa269e40 <col:3> 'int' lvalue Var 0xa269280 '__ret' 'int')
              (CXXOperatorCallExpr 0xa269f88 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa269f40 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                (IntegerLiteral 0xa269e58 <col:11> 'int' 10)
                (ParenExpr 0xa269f28 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0xa269f00 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa269ec8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                    (DeclRefExpr 0xa269e70 <col:17> '_CharT2' lvalue ParmVar 0xa263d30 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0xa269ea8 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0xa269e90 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0xa26a078 <line:2135:4, col:11>
    (DeclRefExpr 0xa26a05c <col:11> 'int' lvalue Var 0xa269280 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0xa26a518 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0xa26a128 <line:2143:4, col:18>
    0xa26a0c0 "int __ret =
      (UnaryOperator 0xa26a110 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa26a0f8 <col:17> 'int' 1))")
  (DeclStmt 0xa26a308 <line:2144:4, col:73>
    0xa26a180 "const char_type *__q =
      (CallExpr 0xa26a2e0 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa26a260 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0xa26a294 <col:54> 'const _CharT2 *' lvalue ParmVar 0xa2641b0 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0xa26a2ac <col:62> 'size_t':'unsigned int' lvalue ParmVar 0xa2641f0 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0xa26a2c4 <col:69> '_CharT2' lvalue ParmVar 0xa264230 '__c' '_CharT2'))")
  (IfStmt 0xa26a4d0 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0xa26a318 <line:2145:8> 'const char_type *' lvalue Var 0xa26a180 '__q' 'const char_type *')
    (CompoundStmt 0xa26a4b8 <line:2146:6, line:2150:6>
      (BinaryOperator 0xa26a3d8 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa26a330 <col:8> 'int' lvalue Var 0xa26a0c0 '__ret' 'int')
        (CXXOperatorCallExpr 0xa26a3b0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa26a378 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (DeclRefExpr 0xa26a348 <col:16> 'const char_type *' lvalue Var 0xa26a180 '__q' 'const char_type *')
          (DeclRefExpr 0xa26a360 <col:22> 'const _CharT2 *' lvalue ParmVar 0xa2641b0 '__zero' 'const _CharT2 *')))
      (IfStmt 0xa26a498 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0xa26a430 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0xa26a420 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0xa26a3f0 <col:12> 'int' lvalue Var 0xa26a0c0 '__ret' 'int'))
          (IntegerLiteral 0xa26a408 <col:20> 'int' 15))
        (CompoundAssignOperator 0xa26a478 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0xa26a448 <col:3> 'int' lvalue Var 0xa26a0c0 '__ret' 'int')
          (IntegerLiteral 0xa26a460 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa26a508 <line:2151:4, col:11>
    (DeclRefExpr 0xa26a4ec <col:11> 'int' lvalue Var 0xa26a0c0 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa26a640 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0xa26a630 <col:9, col:61>
    (CallExpr 0xa26a600 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa26a548 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26a584 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2645d0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a59c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa264610 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a5b4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa264660 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26a5cc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2646d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26a5e4 <col:58> 'long' lvalue ParmVar 0xa264720 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa26a760 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0xa26a750 <col:9, col:61>
    (CallExpr 0xa26a720 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa26a668 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26a6a4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa264800 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a6bc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa264840 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a6d4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa264890 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26a6ec <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa264900 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26a704 <col:58> 'unsigned short' lvalue ParmVar 0xa264950 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa26a880 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0xa26a870 <col:9, col:61>
    (CallExpr 0xa26a840 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa26a788 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26a7c4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa264a30 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a7dc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa264a70 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a7f4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa264ac0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26a80c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa264b30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26a824 <col:58> 'unsigned int' lvalue ParmVar 0xa264b80 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa26a9a0 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0xa26a990 <col:9, col:61>
    (CallExpr 0xa26a960 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa26a8a8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26a8e4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa264c60 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a8fc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa264ca0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26a914 <col:45> 'class std::ios_base' lvalue ParmVar 0xa264cf0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26a92c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa264d60 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26a944 <col:58> 'unsigned long' lvalue ParmVar 0xa264db0 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa26aac0 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0xa26aab0 <col:9, col:61>
    (CallExpr 0xa26aa80 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa26a9c8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26aa04 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa264e90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26aa1c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa264ed0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26aa34 <col:45> 'class std::ios_base' lvalue ParmVar 0xa264f20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26aa4c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa264f90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26aa64 <col:58> 'long long' lvalue ParmVar 0xa264fe0 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa26abe0 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0xa26abd0 <col:9, col:61>
    (CallExpr 0xa26aba0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa26aae8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26ab24 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2650c0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26ab3c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa265100 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa26ab54 <col:45> 'class std::ios_base' lvalue ParmVar 0xa265150 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26ab6c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2651c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa26ab84 <col:58> 'unsigned long long' lvalue ParmVar 0xa265210 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0xa26af28 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0xa26ebd8 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa26ebc0 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa26ebe4 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0xa26b2d0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa26ec80 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0xa26ed90 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0xa26ed80 <col:9, col:50>
    (CallExpr 0xa26ed50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26ecb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26eca8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26ecec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26b3d0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26ed04 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26b420 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26ed1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26b480 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26ed34 <col:47> '_Bool' lvalue ParmVar 0xa26b4c0 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0xa26ee90 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0xa26ee80 <col:9, col:50>
    (CallExpr 0xa26ee50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26edb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26eda8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26edec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26b600 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26ee04 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26b650 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26ee1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26b690 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26ee34 <col:47> 'long' lvalue ParmVar 0xa26b6e0 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0xa26ef90 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0xa26ef80 <col:9, col:50>
    (CallExpr 0xa26ef50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26eeb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26eea8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26eeec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26b820 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26ef04 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26b870 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26ef1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26b8b0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26ef34 <col:47> 'unsigned long' lvalue ParmVar 0xa26b900 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0xa26f090 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0xa26f080 <col:9, col:50>
    (CallExpr 0xa26f050 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26efb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26efa8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26efec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26ba40 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f004 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26ba90 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26f01c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26bad0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f034 <col:47> 'long long' lvalue ParmVar 0xa26bb20 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa26f190 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0xa26f180 <col:9, col:50>
    (CallExpr 0xa26f150 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26f0b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26f0a8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26f0ec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26bc60 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f104 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26bcb0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26f11c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26bcf0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f134 <col:47> 'unsigned long long' lvalue ParmVar 0xa26bd40 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0xa26f290 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0xa26f280 <col:9, col:50>
    (CallExpr 0xa26f250 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26f1b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26f1a8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26f1ec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26be80 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f204 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26bed0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26f21c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26bf10 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f234 <col:47> 'double' lvalue ParmVar 0xa26bf60 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0xa26f390 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0xa26f380 <col:9, col:50>
    (CallExpr 0xa26f350 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26f2b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26f2a8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26f2ec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26c0a0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f304 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26c0f0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26f31c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26c130 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f334 <col:47> 'long double' lvalue ParmVar 0xa26c180 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0xa26f490 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0xa26f480 <col:9, col:50>
    (CallExpr 0xa26f450 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26f3b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa26f3a8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa26f3ec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa26c2c0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f404 <col:34> 'class std::ios_base' lvalue ParmVar 0xa26c310 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa26f41c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa26c350 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f434 <col:47> 'const void *' lvalue ParmVar 0xa26c3a0 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0xa26f4a8 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0xa26f5a8 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0xa26f598 <col:9, col:52>
    (CallExpr 0xa26f568 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa26f4c8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26f504 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa26df90 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f51c <col:35> 'class std::ios_base' lvalue ParmVar 0xa26dfe0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26f534 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa26e020 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f54c <col:49> 'long' lvalue ParmVar 0xa26e070 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0xa26f6b0 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0xa26f6a0 <col:9, col:52>
    (CallExpr 0xa26f670 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa26f5d0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26f60c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa26e150 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f624 <col:35> 'class std::ios_base' lvalue ParmVar 0xa26e1a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26f63c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa26e1e0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f654 <col:49> 'unsigned long' lvalue ParmVar 0xa26e230 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0xa26f7b8 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0xa26f7a8 <col:9, col:52>
    (CallExpr 0xa26f778 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa26f6d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26f714 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa26e310 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f72c <col:35> 'class std::ios_base' lvalue ParmVar 0xa26e360 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26f744 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa26e3a0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f75c <col:49> 'long long' lvalue ParmVar 0xa26e3f0 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa26f8c0 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0xa26f8b0 <col:9, col:52>
    (CallExpr 0xa26f880 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa26f7e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa26f81c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa26e4d0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa26f834 <col:35> 'class std::ios_base' lvalue ParmVar 0xa26e520 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa26f84c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa26e560 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa26f864 <col:49> 'unsigned long long' lvalue ParmVar 0xa26e5b0 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0xa26fc08 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa270030 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0xa270020 <col:7, col:72>
    (CallExpr 0xa26fff8 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa26ff60 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa26ff40 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa26fec0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa26ff28 <col:40> 'const class std::locale' lvalue ParmVar 0xa26fce0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa26ffc0 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226b10 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa26ffe0 <col:69> '_CharT' lvalue ParmVar 0xa26fc90 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa270448 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0xa270438 <col:7, col:72>
    (CallExpr 0xa270410 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa270380 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa270360 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa2702e0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa270348 <col:40> 'const class std::locale' lvalue ParmVar 0xa270100 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa2703d4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226b80 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa2703f4 <col:69> '_CharT' lvalue ParmVar 0xa2700b0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa270858 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0xa270848 <col:7, col:72>
    (CallExpr 0xa270820 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa270790 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa270770 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa2706f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa270758 <col:40> 'const class std::locale' lvalue ParmVar 0xa270510 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa2707e4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226cf0 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa270804 <col:69> '_CharT' lvalue ParmVar 0xa2704c0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa270c68 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0xa270c58 <col:7, col:72>
    (CallExpr 0xa270c30 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa270ba0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa270b80 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa270b00 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa270b68 <col:40> 'const class std::locale' lvalue ParmVar 0xa270920 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa270bf4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2268e0 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa270c14 <col:69> '_CharT' lvalue ParmVar 0xa2708d0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa2710a8 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0xa271098 <col:7, col:72>
    (CallExpr 0xa271070 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa270fe0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa270fc0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa270f40 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa270fa8 <col:40> 'const class std::locale' lvalue ParmVar 0xa270d30 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa271034 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226950 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa271054 <col:69> '_CharT' lvalue ParmVar 0xa270ce0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa2714b8 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0xa2714a8 <col:7, col:72>
    (CallExpr 0xa271480 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2713f0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa2713d0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa271350 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa2713b8 <col:40> 'const class std::locale' lvalue ParmVar 0xa271170 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa271444 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2269c0 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa271464 <col:69> '_CharT' lvalue ParmVar 0xa271120 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa2718c8 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0xa2718b8 <col:7, col:72>
    (CallExpr 0xa271890 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa271800 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa2717e0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa271760 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa2717c8 <col:40> 'const class std::locale' lvalue ParmVar 0xa271580 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa271854 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226a30 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa271874 <col:69> '_CharT' lvalue ParmVar 0xa271530 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa271cd8 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0xa271cc8 <col:7, col:72>
    (CallExpr 0xa271ca0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa271c10 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa271bf0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa271b70 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa271bd8 <col:40> 'const class std::locale' lvalue ParmVar 0xa271990 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa271c64 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226d60 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa271c84 <col:69> '_CharT' lvalue ParmVar 0xa271940 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa2720e8 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0xa2720d8 <col:7, col:73>
    (CallExpr 0xa2720b0 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa272020 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa272000 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa271f80 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa271fe8 <col:40> 'const class std::locale' lvalue ParmVar 0xa271da0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa272074 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226aa0 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa272094 <col:70> '_CharT' lvalue ParmVar 0xa271d50 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa2724f8 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0xa2724e8 <col:7, col:72>
    (CallExpr 0xa2724c0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa272430 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa272410 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa272390 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa2723f8 <col:40> 'const class std::locale' lvalue ParmVar 0xa2721b0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa272484 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226dd0 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa2724a4 <col:69> '_CharT' lvalue ParmVar 0xa272160 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa272908 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0xa2728f8 <col:7, col:72>
    (CallExpr 0xa2728d0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa272840 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa272820 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa2727a0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa272808 <col:40> 'const class std::locale' lvalue ParmVar 0xa2725c0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa272894 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa226bf0 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa2728b4 <col:69> '_CharT' lvalue ParmVar 0xa272570 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa272cd0 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0xa272cc0 <col:7, col:58>
    (CallExpr 0xa272ca0 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa272c50 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa272c30 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa272bb0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa272c18 <col:40> 'const class std::locale' lvalue ParmVar 0xa2729d0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa272c84 <col:55> '_CharT' lvalue ParmVar 0xa272980 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa2730a0 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0xa273090 <col:7, col:58>
    (CallExpr 0xa273070 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa273020 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa273000 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa272f80 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa272fe8 <col:40> 'const class std::locale' lvalue ParmVar 0xa272da0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa273054 <col:55> '_CharT' lvalue ParmVar 0xa272d50 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0xa274348 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0xa273b88 <line:56:2, col:49>
    0xa273a00 "const size_t __i =
      (CallExpr 0xa273b68 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa273b30 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa273af8 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0xa273c80 <line:57:2, col:59>
    0xa273bd0 "const locale::facet **__caches =
      (ImplicitCastExpr 0xa273c70 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa273c4c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0x9ea4400
          (ImplicitCastExpr 0xa273c40 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa273c1c <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
              (DeclRefExpr 0xa273c04 <col:35> 'const class std::locale' lvalue ParmVar 0xa273870 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa2741c0 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0xa273d18 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa273d08 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa273cf8 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa273ce0 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa273cc0 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa273c90 <col:7> 'const class locale::facet **' lvalue Var 0xa273bd0 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa273cd0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa273ca8 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa273a00 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0xa2741a0 <line:59:4, line:72:4>
      (DeclStmt 0xa273e50 <line:60:6, col:41>
        0xa273e00 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0xa273e38 <col:40> 'int' 0)")
      (IfStmt 0xa274038 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa273e60 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa274020 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0xa273f80 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0xa273e70 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa273e00 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0xa273f48 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0xa274000 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa273fb0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa273f98 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa273e00 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0xa273fe4 <col:19> 'const class std::locale' lvalue ParmVar 0xa273870 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0xa2740c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa274058 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2740a8 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0xa274080 <line:68:3, col:10> 'void'
            (DeclRefExpr 0xa274068 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0xa273e00 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0xa274098 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0xa274178 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0xa274124 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0x9ea5960
          (ImplicitCastExpr 0xa274118 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa2740f4 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dd7000
              (DeclRefExpr 0xa2740dc <col:6> 'const class std::locale' lvalue ParmVar 0xa273870 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0xa274144 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0xa273e00 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0xa27415c <col:45> 'const size_t':'const unsigned int' lvalue Var 0xa273a00 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0xa274338 <line:73:2, col:67>
    (CXXStaticCastExpr 0xa274320 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0xa2742c0 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0xa2742a0 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0xa274270 <col:54> 'const class locale::facet **' lvalue Var 0xa273bd0 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0xa2742b0 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa274288 <col:63> 'const size_t':'const unsigned int' lvalue Var 0xa273a00 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0xa277080 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0xa274648 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa274618 <col:7> '_Bool' lvalue ->_M_allocated 0xa258d30
      (CXXThisExpr 0xa274608 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0xa274638 <col:22> '_Bool' true))
  (DeclStmt 0xa2748d0 <line:83:7, col:73>
    0xa274750 "const numpunct<_CharT> &__np =
      (CallExpr 0xa2748b0 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa274830 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
        (DeclRefExpr 0xa274898 <col:67> 'const class std::locale' lvalue ParmVar 0xa274520 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa274950 <line:85:7, col:27>
    0xa2748f0 "char *__grouping =
      (ImplicitCastExpr 0xa274940 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0xa274928 <col:26> 'int' 0))")
  (DeclStmt 0xa2749e0 <line:86:7, col:29>
    0xa274990 "_CharT *__truename =
      (IntegerLiteral 0xa2749c8 <col:28> 'int' 0)")
  (DeclStmt 0xa274a50 <line:87:7, col:30>
    0xa274a00 "_CharT *__falsename =
      (IntegerLiteral 0xa274a38 <col:29> 'int' 0)")
  (IfStmt 0xa276f60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa274a60 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa276f08 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0xa274b68 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa274a80 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa258960
          (CXXThisExpr 0xa274a70 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa274b48 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa274b10 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa274af0 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa274ab8 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa274aa0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa274c10 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0xa274b80 <col:4> 'char *' lvalue Var 0xa2748f0 '__grouping' 'char *')
        (CXXNewExpr 0xa274bd0 <col:17, col:21> 'char *'
          (MemberExpr 0xa274ba8 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa258960
            (CXXThisExpr 0xa274b98 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa274d18 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa274c98 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa274c78 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa274c40 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa274c28 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa274ccc <col:25> 'char *' lvalue Var 0xa2748f0 '__grouping' 'char *')
        (MemberExpr 0xa274cf8 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa258960
          (CXXThisExpr 0xa274ce8 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa274d88 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa274d50 <col:4> 'const char *' lvalue ->_M_grouping 0xa258920
          (CXXThisExpr 0xa274d40 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa274d70 <col:18> 'char *' lvalue Var 0xa2748f0 '__grouping' 'char *'))
      (BinaryOperator 0xa276150 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0xa274db0 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0xa2589a0
          (CXXThisExpr 0xa274da0 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0xa276138 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0xa276120 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0xa274ec8 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0xa274de0 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa258960
                (CXXThisExpr 0xa274dd0 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0xa274eb0 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0xa274ea0 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0xa274e70 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0xa274e48 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0xa274e10 <col:37> 'const char *' lvalue ->_M_grouping 0xa258920
                        (CXXThisExpr 0xa274e00 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0xa274e30 <col:49> 'int' 0))))
                (IntegerLiteral 0xa274e88 <col:55> 'int' 0)))
            (ParenExpr 0xa276108 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0xa2760e0 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa276088 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
                (ArraySubscriptExpr 0xa274f28 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0xa274ef0 <col:13> 'const char *' lvalue ->_M_grouping 0xa258920
                    (CXXThisExpr 0xa274ee0 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0xa274f10 <col:25> 'int' 0))
                (DeclRefExpr 0xa276068 <line:97:9, col:44> 'const char':'const char' lvalue Var 0xa275a20 '__max' 'const char':'const char'))))))
      (BinaryOperator 0xa276260 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa276178 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa258a40
          (CXXThisExpr 0xa276168 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa276240 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa276208 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa2761e8 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2761b0 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa276198 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa276308 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa276278 <col:4> '_CharT *' lvalue Var 0xa274990 '__truename' '_CharT *')
        (CXXNewExpr 0xa2762c8 <col:17, col:21> '_CharT *'
          (MemberExpr 0xa2762a0 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa258a40
            (CXXThisExpr 0xa276290 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa276410 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa276390 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa276370 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa276338 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa276320 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa2763c4 <col:25> '_CharT *' lvalue Var 0xa274990 '__truename' '_CharT *')
        (MemberExpr 0xa2763f0 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa258a40
          (CXXThisExpr 0xa2763e0 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa276480 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa276448 <col:4> 'const _CharT *' lvalue ->_M_truename 0xa258a00
          (CXXThisExpr 0xa276438 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa276468 <col:18> '_CharT *' lvalue Var 0xa274990 '__truename' '_CharT *'))
      (BinaryOperator 0xa276590 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0xa2764a8 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa258ac0
          (CXXThisExpr 0xa276498 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa276570 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa276538 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0xa276518 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2764e0 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0xa2764c8 <col:24> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa276638 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa2765a8 <col:4> '_CharT *' lvalue Var 0xa274a00 '__falsename' '_CharT *')
        (CXXNewExpr 0xa2765f8 <col:18, col:22> '_CharT *'
          (MemberExpr 0xa2765d0 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa258ac0
            (CXXThisExpr 0xa2765c0 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa276740 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2766c0 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0xa2766a0 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa276668 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa276650 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa2766f4 <col:26> '_CharT *' lvalue Var 0xa274a00 '__falsename' '_CharT *')
        (MemberExpr 0xa276720 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa258ac0
          (CXXThisExpr 0xa276710 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa2767b0 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa276778 <col:4> 'const _CharT *' lvalue ->_M_falsename 0xa258a80
          (CXXThisExpr 0xa276768 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa276798 <col:19> '_CharT *' lvalue Var 0xa274a00 '__falsename' '_CharT *'))
      (BinaryOperator 0xa276868 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa2767d8 <col:4> '_CharT' lvalue ->_M_decimal_point 0xa258b00
          (CXXThisExpr 0xa2767c8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa276848 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa276810 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa2767f8 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0xa276920 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa276890 <col:4> '_CharT' lvalue ->_M_thousands_sep 0xa258b40
          (CXXThisExpr 0xa276880 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa276900 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2768c8 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa2768b0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa274750 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0xa276b80 <line:112:4, col:64>
        0xa276a00 "const ctype<_CharT> &__ct =
          (CallExpr 0xa276b60 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa276ae0 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
            (DeclRefExpr 0xa276b48 <col:58> 'const class std::locale' lvalue ParmVar 0xa274520 '__loc' 'const class std::locale &'))")
      (CallExpr 0xa276d40 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa276ba8 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa276b90 <col:4> 'const ctype<_CharT>' lvalue Var 0xa276a00 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa276bfc <col:15, col:27> 'const char *' lvalue Var 0xa257570 '_S_atoms_out' 'const char *')
        (BinaryOperator 0xa276cf8 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0xa276cd8 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa276c3c <col:8, col:20> 'const char *' lvalue Var 0xa257570 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0xa276ce8 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa276c7c <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2574c0 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0xa276d20 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0xa258c20
          (CXXThisExpr 0xa276d10 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0xa276ee0 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa276d80 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa276d68 <col:4> 'const ctype<_CharT>' lvalue Var 0xa276a00 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa276dd4 <col:15, col:27> 'const char *' lvalue Var 0xa2575c0 '_S_atoms_in' 'const char *')
        (BinaryOperator 0xa276e98 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0xa276e78 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa276e14 <col:8, col:20> 'const char *' lvalue Var 0xa2575c0 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0xa276e88 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa276e54 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2578b0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0xa276ec0 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0xa258cf0
          (CXXThisExpr 0xa276eb0 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0xa277060 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa276f80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa277040 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0xa276fb8 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0xa276fa8 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0xa276f90 <col:14> 'char *' lvalue Var 0xa2748f0 '__grouping' 'char *')))
      (CXXDeleteExpr 0xa276fe8 <line:123:4, col:14> 'void'
        (DeclRefExpr 0xa276fd0 <col:14> '_CharT *' lvalue Var 0xa274990 '__truename' '_CharT *'))
      (CXXDeleteExpr 0xa277018 <line:124:4, col:14> 'void'
        (DeclRefExpr 0xa277000 <col:14> '_CharT *' lvalue Var 0xa274a00 '__falsename' '_CharT *'))
      (NullStmt 0xa277030 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0xa280b20 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0xa2778e0 <line:149:7, col:50>
    0xa2778b0 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa2779d0 <line:150:7, col:69>
    0xa2779a0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa277ad8 <line:151:7, col:37>
    0xa277aa0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa277ba0 <line:152:7, col:45>
    0xa277b00 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa277b70 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0xa277b4c <col:29, col:34> '<bound member function type>' ._M_getloc 0xa1ecf00
          (ImplicitCastExpr 0xa277b90 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa277b34 <col:29> 'class std::ios_base' lvalue ParmVar 0xa2775f0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa277c68 <line:153:7, col:45>
    0xa277be0 "const __cache_type *__lc =
      (CallExpr 0xa277c48 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0xa277c14 <col:34> '__use_cache<__cache_type>' lvalue Var 0xa277aa0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa277c2c <col:39> 'const class std::locale' lvalue Var 0xa277b00 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa277d38 <line:154:7, col:46>
    0xa277cb0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa277d00 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa277ce4 <col:29> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa277da8 <line:155:7, col:34>
    0xa277d50 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa277d90 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0xa277eb0 <line:158:7, col:38>
    0xa277dc0 "bool __testeof =
      (CXXOperatorCallExpr 0xa277e88 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa277e28 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
        (DeclRefExpr 0xa277df4 <col:24> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')
        (DeclRefExpr 0xa277e0c <col:33> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))")
  (IfStmt 0xa278810 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0xa277ee8 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa277ed8 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa277ec0 <col:12> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')))
    (CompoundStmt 0xa2787f0 <line:162:2, line:175:2>
      (BinaryOperator 0xa277f48 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0xa277efc <col:4> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa277f30 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa277f14 <col:11> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
      (DeclStmt 0xa2780b8 <line:164:4, col:58>
        0xa277f70 "const bool __plus =
          (CXXOperatorCallExpr 0xa278090 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa278030 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (DeclRefExpr 0xa277fa4 <col:24> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa278018 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0xa277fbc <col:31> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa277ff4 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2576a0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0xa2787d0 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0xa2784e0 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0xa2783a8 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0xa278208 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0xa2781f0 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0xa2780c8 <col:9> 'const _Bool' lvalue Var 0xa277f70 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0xa2781c8 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0xa278168 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (DeclRefExpr 0xa2780e0 <col:19> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa278150 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2780f8 <col:26> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa27812c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257660 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa278390 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0xa278378 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0xa278360 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa278238 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0xa27821c <col:13> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa278338 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2782d8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                    (DeclRefExpr 0xa27826c <col:38> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa2782a0 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0xa278284 <col:45> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa2784c8 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0xa2784b0 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0xa278488 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0xa278428 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa2783c0 <col:13> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa2783f0 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2783d8 <col:20> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa2787b8 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0xa278608 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0xa2785f8 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2785a8 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0xa2784f8 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
            (ConditionalOperator 0xa278568 <col:18, col:33> 'char'
              (ImplicitCastExpr 0xa278558 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa278510 <col:18> 'const _Bool' lvalue Var 0xa277f70 '__plus' 'const _Bool'))
              (CharacterLiteral 0xa278528 <col:27> 'char'43)
              (CharacterLiteral 0xa278540 <col:33> 'char'45)))
          (IfStmt 0xa278798 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa2786d0 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0xa278678 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
              (UnaryOperator 0xa278648 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa27862c <col:14> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter'))
              (DeclRefExpr 0xa27865c <col:23> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))
            (BinaryOperator 0xa278740 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0xa2786f4 <col:3> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa278728 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa27870c <col:10> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
            (BinaryOperator 0xa278780 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0xa278758 <col:3> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa278770 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa278888 <line:178:7, col:36>
    0xa278840 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0xa278878 <col:31> '_Bool' false)")
  (DeclStmt 0xa278900 <line:179:7, col:24>
    0xa2788b0 "int __sep_pos =
      (IntegerLiteral 0xa2788e8 <col:23> 'int' 0)")
  (WhileStmt 0xa27d628 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0xa278938 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa278928 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa278910 <col:15> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')))
    (CompoundStmt 0xa27d610 <line:181:2, line:201:2>
      (IfStmt 0xa27d5f0 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0xa278bb0 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0xa278aa8 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0xa278a90 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa278968 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0xa27894c <col:9> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa278a68 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa278a08 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa27899c <col:34> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa2789d0 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2789b4 <col:41> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa278b88 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa278b28 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (DeclRefExpr 0xa278abc <col:11> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa278af0 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0xa278ad4 <col:18> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa278bc8 <line:184:6>)
        (IfStmt 0xa27d5d0 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa278cb8 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa278c58 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (DeclRefExpr 0xa278bd0 <col:13> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa278c40 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0xa278be8 <col:20> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa278c1c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0xa27d5a8 <line:186:6, line:198:6>
            (IfStmt 0xa278df8 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0xa278d08 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa278cf8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa278cdc <col:13> '_Bool' lvalue Var 0xa278840 '__found_mantissa' '_Bool')))
              (CompoundStmt 0xa278de0 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0xa278d78 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa278d68 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa278d50 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa278d1c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa278d38 <col:15> 'char'48))
                (BinaryOperator 0xa278dc8 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa278d9c <col:5> '_Bool' lvalue Var 0xa278840 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0xa278db8 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0xa278e30 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa278e14 <col:10> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int'))
            (IfStmt 0xa27d588 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0xa27d4c0 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0xa27d468 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
                (UnaryOperator 0xa27d438 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa278e44 <col:14> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter'))
                (DeclRefExpr 0xa27d44c <col:23> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))
              (BinaryOperator 0xa27d530 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0xa27d4e4 <col:3> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                (UnaryOperator 0xa27d518 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0xa27d4fc <col:10> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
              (BinaryOperator 0xa27d570 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0xa27d548 <col:3> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa27d560 <col:15> '_Bool' true))))
          (BreakStmt 0xa27d5c8 <line:200:6>)))))
  (DeclStmt 0xa27d698 <line:204:7, col:31>
    0xa27d650 "bool __found_dec =
      (CXXBoolLiteralExpr 0xa27d688 <col:26> '_Bool' false)")
  (DeclStmt 0xa27d6f8 <line:205:7, col:31>
    0xa27d6b0 "bool __found_sci =
      (CXXBoolLiteralExpr 0xa27d6e8 <col:26> '_Bool' false)")
  (DeclStmt 0xa27d768 <line:206:7, col:30>
    0xa27d710 "string __found_grouping =
      (CXXConstructExpr 0xa27d748 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa27d848 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa27d790 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0xa27d778 <col:11> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa27d818 <line:208:2, col:29> 'void'
      (MemberExpr 0xa27d7dc <col:2, col:19> '<bound member function type>' .reserve 0xa1521c0
        (DeclRefExpr 0xa27d7c4 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa27d838 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa27d800 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa27d980 <line:209:7, col:65>
    0xa27d880 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa27d958 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa27d910 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (DeclRefExpr 0xa27d8b4 <col:37> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa27d8ec <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa2806d8 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0xa27d9e0 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa27d9a8 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa27d990 <col:12> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa27eab0 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0xa27da20 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa27da10 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa27d9f4 <col:10> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')))
      (CompoundStmt 0xa27ea90 <line:214:4, line:258:4>
        (DeclStmt 0xa27db48 <line:215:6, col:54>
          0xa27da50 "const int __digit =
            (CallExpr 0xa27db20 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0xa27da98 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa27dad8 <col:34> 'const char_type *' lvalue Var 0xa27d880 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0xa27daf0 <col:46> 'int' 10)
              (DeclRefExpr 0xa27db08 <col:50> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT'))")
        (IfStmt 0xa27e8e8 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0xa27dbb0 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0xa27dba0 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0xa27db58 <col:10> 'const int' lvalue Var 0xa27da50 '__digit' 'const int'))
            (UnaryOperator 0xa27db88 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0xa27db70 <col:22> 'int' 1)))
          (CompoundStmt 0xa27dce8 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0xa27dc80 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0xa27dc70 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa27dc58 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0xa27dbc8 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
              (ImplicitCastExpr 0xa27dc48 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0xa27dc30 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0xa27dc10 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0xa27dbe0 <col:13> 'char'48))
                  (ImplicitCastExpr 0xa27dc20 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa27dbf4 <col:19> 'const int' lvalue Var 0xa27da50 '__digit' 'const int')))))
            (BinaryOperator 0xa27dcd0 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0xa27dca4 <col:3> '_Bool' lvalue Var 0xa278840 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0xa27dcc0 <col:22> '_Bool' true)))
          (IfStmt 0xa27e8c8 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0xa27de88 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0xa27de30 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa27ddc8 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa27dd68 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (DeclRefExpr 0xa27dd00 <col:15> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0xa27dd30 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0xa27dd18 <col:22> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *')))
                (UnaryOperator 0xa27de18 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa27de08 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa27ddec <col:12> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool'))))
              (UnaryOperator 0xa27de70 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa27de60 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa27de48 <col:28> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool'))))
            (CompoundStmt 0xa27df60 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0xa27def8 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0xa27dee8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa27ded0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0xa27dea0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                (CharacterLiteral 0xa27deb8 <col:13> 'char'46))
              (BinaryOperator 0xa27df48 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa27df1c <col:3> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0xa27df38 <col:17> '_Bool' true)))
            (IfStmt 0xa27e8a8 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0xa27e238 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0xa27e208 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0xa27e1b0 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0xa27e198 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0xa27e060 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa27e000 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                        (DeclRefExpr 0xa27df78 <col:16> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa27dfe8 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0xa27df90 <col:23> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa27dfc4 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2577e0 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0xa27e170 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0xa27e110 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                        (DeclRefExpr 0xa27e084 <col:12> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa27e0f8 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0xa27e09c <col:19> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa27e0d4 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257860 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0xa27e1f0 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa27e1e0 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa27e1c4 <col:12> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool'))))
                (DeclRefExpr 0xa27e220 <col:27> '_Bool' lvalue Var 0xa278840 '__found_mantissa' '_Bool'))
              (CompoundStmt 0xa27e880 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0xa27e2a8 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa27e298 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa27e280 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa27e250 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa27e268 <col:13> 'char'101))
                (BinaryOperator 0xa27e2f8 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0xa27e2cc <col:3> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0xa27e2e8 <col:17> '_Bool' true))
                (IfStmt 0xa27e860 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa27e3b0 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0xa27e358 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
                    (UnaryOperator 0xa27e328 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0xa27e310 <col:9> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter'))
                    (DeclRefExpr 0xa27e33c <col:18> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))
                  (CompoundStmt 0xa27e7e0 <line:237:5, line:244:5>
                    (BinaryOperator 0xa27e420 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0xa27e3d4 <col:7> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0xa27e408 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0xa27e3ec <col:14> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
                    (DeclStmt 0xa27e588 <line:239:7, col:61>
                      0xa27e440 "const bool __plus =
                        (CXXOperatorCallExpr 0xa27e560 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0xa27e500 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                          (DeclRefExpr 0xa27e474 <col:27> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa27e4e8 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0xa27e48c <col:34> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa27e4c4 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2576a0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0xa27e7c0 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0xa27e6c0 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0xa27e598 <col:11> 'const _Bool' lvalue Var 0xa27e440 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0xa27e698 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0xa27e638 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                          (DeclRefExpr 0xa27e5b0 <col:21> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa27e620 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0xa27e5c8 <col:28> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa27e5fc <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257660 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0xa27e790 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa27e780 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa27e768 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa27e6d8 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                        (ConditionalOperator 0xa27e748 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0xa27e738 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa27e6f0 <col:19> 'const _Bool' lvalue Var 0xa27e440 '__plus' 'const _Bool'))
                          (CharacterLiteral 0xa27e708 <col:28> 'char'43)
                          (CharacterLiteral 0xa27e720 <col:34> 'char'45)))
                      (ContinueStmt 0xa27e7b8 <line:243:9>)))
                  (CompoundStmt 0xa27e848 <line:246:5, line:249:5>
                    (BinaryOperator 0xa27e828 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0xa27e7fc <col:7> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0xa27e818 <col:19> '_Bool' true))
                    (BreakStmt 0xa27e840 <line:248:7>))))
              (BreakStmt 0xa27e8a0 <line:252:8>))))
        (IfStmt 0xa27ea70 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa27e9a8 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa27e950 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
            (UnaryOperator 0xa27e920 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa27e904 <col:12> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter'))
            (DeclRefExpr 0xa27e934 <col:21> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))
          (BinaryOperator 0xa27ea18 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa27e9cc <col:8> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa27ea00 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa27e9e4 <col:15> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
          (BinaryOperator 0xa27ea58 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa27ea30 <col:8> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa27ea48 <col:20> '_Bool' true)))))
    (WhileStmt 0xa2806c0 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0xa27eaf0 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa27eae0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa27eac4 <col:10> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')))
      (CompoundStmt 0xa2806a8 <line:261:4, line:348:4>
        (IfStmt 0xa280500 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0xa27ec48 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa27eb20 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa27eb04 <col:10> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa27ec20 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa27ebc0 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa27eb54 <col:35> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa27eb88 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa27eb6c <col:42> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa27ef28 <line:265:8, line:285:8>
            (IfStmt 0xa27ef08 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0xa27ece0 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0xa27ec88 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa27ec78 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa27ec60 <col:8> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool')))
                (UnaryOperator 0xa27ecc8 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa27ecb8 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa27ec9c <col:24> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool'))))
              (CompoundStmt 0xa27eee8 <line:267:5, line:282:5>
                (IfStmt 0xa27eec8 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0xa27ed20 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0xa27ed10 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa27ecf8 <col:11> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')))
                  (CompoundStmt 0xa27ee38 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0xa27edc8 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa27edb8 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa27eda0 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa27ed2c <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa27ed88 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa27ed78 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa27ed68 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa27ed44 <col:42> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')))))
                    (BinaryOperator 0xa27ee20 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0xa27edec <col:4> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')
                      (IntegerLiteral 0xa27ee08 <col:16> 'int' 0)))
                  (CompoundStmt 0xa27eeb0 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0xa27ee88 <line:279:4, col:17> 'void'
                      (MemberExpr 0xa27ee68 <col:4, col:11> '<bound member function type>' .clear 0xa152230
                        (DeclRefExpr 0xa27ee50 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')))
                    (BreakStmt 0xa27eea8 <line:280:4>))))
              (BreakStmt 0xa27ef00 <line:284:5>)))
          (IfStmt 0xa2804e0 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa27f008 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0xa27efa8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa27ef3c <col:15> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa27ef70 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa27ef54 <col:22> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *')))
            (CompoundStmt 0xa27f340 <line:287:8, line:300:8>
              (IfStmt 0xa27f320 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0xa27f0b0 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0xa27f058 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa27f048 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa27f02c <col:8> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool')))
                  (UnaryOperator 0xa27f098 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa27f088 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa27f06c <col:24> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool'))))
                (CompoundStmt 0xa27f2f8 <line:289:5, line:297:5>
                  (IfStmt 0xa27f218 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa27f148 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0xa27f100 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0xa27f0e0 <col:11, col:28> '<bound member function type>' .size 0xa151680
                          (ImplicitCastExpr 0xa27f138 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0xa27f0c8 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0xa27f1f0 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa27f1e0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa27f1c8 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa27f154 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa27f1b0 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa27f1a0 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa27f190 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa27f16c <col:47> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0xa27f290 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0xa27f280 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa27f268 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0xa27f234 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                    (CharacterLiteral 0xa27f250 <col:17> 'char'46))
                  (BinaryOperator 0xa27f2e0 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0xa27f2b4 <col:7> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0xa27f2d0 <col:21> '_Bool' true)))
                (BreakStmt 0xa27f318 <line:299:5>)))
            (CompoundStmt 0xa2804c8 <line:302:8, line:342:8>
              (DeclStmt 0xa27f490 <line:303:3, line:304:45>
                0xa27f370 "const char_type *__q =
                  (CallExpr 0xa27f468 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa27f3e8 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa27f41c <col:25> 'const char_type *' lvalue Var 0xa27d880 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0xa27f438 <col:37> 'int' 10)
                    (DeclRefExpr 0xa27f450 <col:41> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa2804a8 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0xa27f4a0 <line:305:7> 'const char_type *' lvalue Var 0xa27f370 '__q' 'const char_type *')
                (CompoundStmt 0xa27f690 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0xa27f600 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa27f4b8 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0xa27f5d8 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0xa27f590 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                      (CharacterLiteral 0xa27f4d0 <col:17> 'char'48)
                      (ParenExpr 0xa27f578 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0xa27f550 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0xa27f518 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                          (DeclRefExpr 0xa27f4e4 <col:24> 'const char_type *' lvalue Var 0xa27f370 '__q' 'const char_type *')
                          (DeclRefExpr 0xa27f4fc <col:30> 'const char_type *' lvalue Var 0xa27d880 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0xa27f648 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa27f620 <col:7> '_Bool' lvalue Var 0xa278840 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0xa27f638 <col:26> '_Bool' true))
                  (UnaryOperator 0xa27f678 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa27f660 <col:9> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')))
                (IfStmt 0xa280488 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0xa27f970 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0xa27f940 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0xa27f8e8 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0xa27f8d0 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0xa27f798 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0xa27f738 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                            (DeclRefExpr 0xa27f6ac <col:13> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa27f720 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0xa27f6c4 <col:20> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa27f6fc <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2577e0 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0xa27f8a8 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0xa27f848 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                            (DeclRefExpr 0xa27f7bc <col:9> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa27f830 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0xa27f7d4 <col:16> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa27f80c <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257860 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0xa27f928 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa27f918 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0xa27f8fc <col:9> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0xa27f958 <col:24> '_Bool' lvalue Var 0xa278840 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0xa280460 <line:314:5, line:339:5>
                    (IfStmt 0xa27fb18 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0xa27fa40 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0xa27fa30 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0xa27f9c0 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0xa27f9a0 <col:11, col:28> '<bound member function type>' .size 0xa151680
                              (ImplicitCastExpr 0xa27f9e0 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0xa27f988 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0xa27fa18 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0xa27fa08 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa27f9ec <col:39> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0xa27faf0 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa27fae0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa27fac8 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa27fa58 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0xa27fab0 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0xa27faa0 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0xa27fa90 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa27fa70 <col:47> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0xa27fb90 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa27fb80 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa27fb68 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa27fb34 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                      (CharacterLiteral 0xa27fb50 <col:17> 'char'101))
                    (BinaryOperator 0xa27fbe0 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0xa27fbb4 <col:7> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0xa27fbd0 <col:21> '_Bool' true))
                    (IfStmt 0xa280440 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0xa27fc98 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0xa27fc40 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
                        (UnaryOperator 0xa27fc10 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0xa27fbf8 <col:13> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter'))
                        (DeclRefExpr 0xa27fc24 <col:22> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))
                      (CompoundStmt 0xa2803c0 <line:323:9, line:333:9>
                        (BinaryOperator 0xa27fd08 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0xa27fcbc <col:4> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0xa27fcf0 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0xa27fcd4 <col:11> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
                        (DeclStmt 0xa27fe78 <line:325:4, col:58>
                          0xa27fd30 "const bool __plus =
                            (CXXOperatorCallExpr 0xa27fe50 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0xa27fdf0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                              (DeclRefExpr 0xa27fd64 <col:24> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0xa27fdd8 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0xa27fd7c <col:31> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                                (DeclRefExpr 0xa27fdb4 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2576a0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0xa2803a0 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0xa2802a0 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0xa280168 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0xa27ffc8 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0xa27ffb0 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0xa27fe88 <col:9> 'const _Bool' lvalue Var 0xa27fd30 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0xa27ff88 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0xa27ff28 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                                    (DeclRefExpr 0xa27fea0 <col:19> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0xa27ff10 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa27feb8 <col:26> 'const _CharT *' lvalue Var 0xa277cb0 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0xa27feec <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257660 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0xa280150 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0xa280138 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0xa280120 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0xa27fff8 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa27ffdc <col:13> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0xa2800f8 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0xa280098 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                                      (DeclRefExpr 0xa28002c <col:9> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0xa280060 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0xa280044 <col:16> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0xa280288 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0xa280270 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0xa280248 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0xa2801e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                                  (DeclRefExpr 0xa280180 <col:13> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0xa2801b0 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0xa280198 <col:20> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0xa280370 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0xa280360 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0xa280348 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0xa2802b8 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa2776b0 '__xtrc' 'string &')
                            (ConditionalOperator 0xa280328 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0xa280318 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0xa2802d0 <col:19> 'const _Bool' lvalue Var 0xa27fd30 '__plus' 'const _Bool'))
                              (CharacterLiteral 0xa2802e8 <col:28> 'char'43)
                              (CharacterLiteral 0xa280300 <col:34> 'char'45)))
                          (ContinueStmt 0xa280398 <line:332:6>)))
                      (CompoundStmt 0xa280428 <line:335:9, line:338:9>
                        (BinaryOperator 0xa280408 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0xa2803dc <col:4> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0xa2803f8 <col:16> '_Bool' true))
                        (BreakStmt 0xa280420 <line:337:4>))))
                  (BreakStmt 0xa280480 <line:341:5>))))))
        (IfStmt 0xa280688 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa2805c0 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa280568 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
            (UnaryOperator 0xa280538 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa28051c <col:12> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter'))
            (DeclRefExpr 0xa28054c <col:21> '_InIter' lvalue ParmVar 0xa2775a0 '__end' '_InIter'))
          (BinaryOperator 0xa280630 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa2805e4 <col:8> 'char_type':'_CharT' lvalue Var 0xa277d50 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa280618 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa2805fc <col:15> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))
          (BinaryOperator 0xa280670 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa280648 <col:8> '_Bool' lvalue Var 0xa277dc0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa280660 <col:20> '_Bool' true))))))
  (IfStmt 0xa280ad8 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa280760 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa280730 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0xa28070c <col:11, col:28> '<bound member function type>' .size 0xa151680
          (ImplicitCastExpr 0xa280750 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa2806f4 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa280ac0 <line:353:9, line:362:9>
      (IfStmt 0xa2808c8 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0xa2807f0 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0xa280798 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa280788 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa28076c <col:9> '_Bool' lvalue Var 0xa27d650 '__found_dec' '_Bool')))
          (UnaryOperator 0xa2807d8 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa2807c8 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa2807ac <col:25> '_Bool' lvalue Var 0xa27d6b0 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0xa2808a0 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0xa280890 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa280878 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0xa280808 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0xa280860 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0xa280850 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0xa280840 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0xa280820 <col:44> 'int' lvalue Var 0xa2788b0 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0xa280aa0 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0xa280a08 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0xa2809e0 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0xa280908 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa277210 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa280940 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa280928 <col:39> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa280990 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0xa280974 <col:11> 'const __cache_type *' lvalue Var 0xa277be0 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa2809c4 <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0xa27d710 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa280a88 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa280a1c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa277660 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa280a78 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa280a54 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa280b10 <line:364:7, col:14>
    (DeclRefExpr 0xa280af4 <col:14> '_InIter' lvalue ParmVar 0xa277560 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0xa286378 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0xa281290 <line:374:9, col:57>
    0xa281260 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa281318 <line:375:2, col:33>
    0xa2812b0 "Using__gnu_cxx::;")
  (DeclStmt 0xa2814a0 <line:376:2, col:66>
    0xa281470 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa281590 <line:377:2, col:67>
    0xa281560 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa281698 <line:378:2, col:32>
    0xa281660 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa281760 <line:379:2, col:40>
    0xa2816c0 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa281730 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa28170c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa1ecf00
          (ImplicitCastExpr 0xa281750 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa2816f4 <col:24> 'class std::ios_base' lvalue ParmVar 0xa280f10 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa281828 <line:380:2, col:40>
    0xa2817a0 "const __cache_type *__lc =
      (CallExpr 0xa281808 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa2817d4 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa281660 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa2817ec <col:34> 'const class std::locale' lvalue Var 0xa2816c0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa2818f8 <line:381:2, col:41>
    0xa281870 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa2818c0 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa2818a4 <col:24> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa281968 <line:382:2, col:29>
    0xa281910 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa281950 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0xa281b50 <line:385:2, line:386:62>
    0xa2819d0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa281b28 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa281b18 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa281b00 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa281a80 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa281a5c <col:41, col:46> '<bound member function type>' .flags 0xa1ec500
            (ImplicitCastExpr 0xa281aa0 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa281a04 <col:41> 'class std::ios_base' lvalue ParmVar 0xa280f10 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa281af0 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa281acc <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa281cc0 <line:387:2, col:49>
    0xa281b70 "const bool __oct =
      (BinaryOperator 0xa281c40 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0xa281c20 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa281c00 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa281ba4 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2819d0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa281c30 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa281c10 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa281bdc <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0xa281ec0 <line:388:2, col:67>
    0xa281ce0 "int __base =
      (ConditionalOperator 0xa281e70 <col:15, col:66> 'int'
        (ImplicitCastExpr 0xa281e60 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa281d14 <col:15> 'const _Bool' lvalue Var 0xa281b70 '__oct' 'const _Bool'))
        (IntegerLiteral 0xa281d30 <col:23> 'int' 8)
        (ParenExpr 0xa281e48 <col:27, col:66> 'int'
          (ConditionalOperator 0xa281e28 <col:28, col:64> 'int'
            (BinaryOperator 0xa281de0 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0xa281dc0 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa281da0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa281d48 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2819d0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0xa281dd0 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa281db0 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa281d7c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0xa281df8 <col:59> 'int' 16)
            (IntegerLiteral 0xa281e10 <col:64> 'int' 10))))")
  (DeclStmt 0xa281fd0 <line:391:2, col:33>
    0xa281ee0 "bool __testeof =
      (CXXOperatorCallExpr 0xa281fa8 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa281f48 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
        (DeclRefExpr 0xa281f14 <col:19> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')
        (DeclRefExpr 0xa281f2c <col:28> '_InIter' lvalue ParmVar 0xa280ec0 '__end' '_InIter'))")
  (DeclStmt 0xa282038 <line:394:2, col:25>
    0xa281ff0 "bool __negative =
      (CXXBoolLiteralExpr 0xa282028 <col:20> '_Bool' false)")
  (IfStmt 0xa282838 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0xa282070 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa282060 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa282048 <col:7> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')))
    (CompoundStmt 0xa282818 <line:396:4, line:408:4>
      (BinaryOperator 0xa2820d0 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa282084 <col:6> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa2820b8 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa28209c <col:13> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')))
      (BinaryOperator 0xa282210 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa2820e8 <col:6> '_Bool' lvalue Var 0xa281ff0 '__negative' '_Bool')
        (CXXOperatorCallExpr 0xa2821e8 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa282188 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
          (DeclRefExpr 0xa282100 <col:19> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0xa282170 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0xa282118 <col:26> 'const _CharT *' lvalue Var 0xa281870 '__lit' 'const _CharT *')
            (DeclRefExpr 0xa28214c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257660 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0xa2827f8 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0xa282640 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0xa282508 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0xa282368 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0xa282350 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0xa282228 <col:11> '_Bool' lvalue Var 0xa281ff0 '__negative' '_Bool')
                (CXXOperatorCallExpr 0xa282328 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2822c8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (DeclRefExpr 0xa282240 <col:25> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa2822b0 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0xa282258 <col:32> 'const _CharT *' lvalue Var 0xa281870 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa28228c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2576a0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa2824f0 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0xa2824d8 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0xa2824c0 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa282398 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa28237c <col:8> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa282498 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa282438 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                    (DeclRefExpr 0xa2823cc <col:33> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa282400 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa2823e4 <col:40> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa282628 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0xa282610 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0xa2825e8 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0xa282588 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa282520 <col:8> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa282550 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa282538 <col:15> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa2827e0 <line:402:8, line:407:8>
          (IfStmt 0xa2827c0 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa2826f8 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa2826a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
              (UnaryOperator 0xa282670 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa282658 <col:9> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter'))
              (DeclRefExpr 0xa282684 <col:18> '_InIter' lvalue ParmVar 0xa280ec0 '__end' '_InIter'))
            (BinaryOperator 0xa282768 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0xa28271c <col:5> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa282750 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa282734 <col:12> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')))
            (BinaryOperator 0xa2827a8 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0xa282780 <col:5> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa282798 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa2828a8 <line:412:2, col:27>
    0xa282860 "bool __found_zero =
      (CXXBoolLiteralExpr 0xa282898 <col:22> '_Bool' false)")
  (DeclStmt 0xa282920 <line:413:2, col:19>
    0xa2828d0 "int __sep_pos =
      (IntegerLiteral 0xa282908 <col:18> 'int' 0)")
  (WhileStmt 0xa283710 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0xa282958 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa282948 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa282930 <col:10> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')))
    (CompoundStmt 0xa2836f8 <line:415:4, line:454:4>
      (IfStmt 0xa2834d0 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0xa282bd0 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0xa282ac8 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0xa282ab0 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa282988 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa28296c <col:11> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa282a88 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0xa282a28 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa2829bc <col:36> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa2829f0 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2829d4 <col:43> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa282ba8 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0xa282b48 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (DeclRefExpr 0xa282adc <col:6> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa282b10 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa282af4 <col:13> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa282be8 <line:418:8>)
        (IfStmt 0xa2834b0 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0xa282dc8 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa282cd8 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa282c78 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa282bf0 <col:15> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0xa282c60 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa282c08 <col:22> 'const _CharT *' lvalue Var 0xa281870 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa282c3c <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0xa282db0 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0xa282d98 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0xa282d28 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa282d18 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa282cfc <col:13> '_Bool' lvalue Var 0xa282860 '__found_zero' '_Bool')))
                (BinaryOperator 0xa282d80 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0xa282d70 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa282d3c <col:29> 'int' lvalue Var 0xa281ce0 '__base' 'int'))
                  (IntegerLiteral 0xa282d58 <col:39> 'int' 10)))))
          (CompoundStmt 0xa282fe0 <line:421:8, line:428:8>
            (BinaryOperator 0xa282e08 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0xa282de0 <col:3> '_Bool' lvalue Var 0xa282860 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0xa282df8 <col:18> '_Bool' true))
            (UnaryOperator 0xa282e38 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa282e20 <col:5> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int'))
            (IfStmt 0xa282f00 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0xa282ea0 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0xa282e90 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa282e80 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0xa282e4c <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2819d0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0xa282e68 <col:22> 'int' 0))
              (BinaryOperator 0xa282ee8 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0xa282eb8 <col:5> 'int' lvalue Var 0xa281ce0 '__base' 'int')
                (IntegerLiteral 0xa282ed0 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0xa282fc0 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0xa282f60 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0xa282f50 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa282f1c <col:7> 'int' lvalue Var 0xa281ce0 '__base' 'int'))
                (IntegerLiteral 0xa282f38 <col:17> 'int' 8))
              (BinaryOperator 0xa282fa8 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0xa282f78 <col:5> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')
                (IntegerLiteral 0xa282f90 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0xa283490 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0xa283268 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0xa283000 <line:429:15> '_Bool' lvalue Var 0xa282860 '__found_zero' '_Bool')
              (ParenExpr 0xa283250 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0xa283238 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0xa283100 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2830a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                    (DeclRefExpr 0xa283018 <col:12> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa283088 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa283030 <col:19> 'const _CharT *' lvalue Var 0xa281870 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa283064 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2576e0 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0xa283210 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2831b0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                    (DeclRefExpr 0xa283124 <col:8> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa283198 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0xa28313c <col:15> 'const _CharT *' lvalue Var 0xa281870 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa283174 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257720 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0xa283470 <line:432:8, line:442:8>
              (IfStmt 0xa283330 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0xa2832d0 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0xa2832c0 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa2832b0 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa283280 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2819d0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0xa283298 <col:22> 'int' 0))
                (BinaryOperator 0xa283318 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0xa2832e8 <col:5> 'int' lvalue Var 0xa281ce0 '__base' 'int')
                  (IntegerLiteral 0xa283300 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0xa283450 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0xa283390 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0xa283380 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa28334c <col:7> 'int' lvalue Var 0xa281ce0 '__base' 'int'))
                  (IntegerLiteral 0xa283368 <col:17> 'int' 16))
                (CompoundStmt 0xa283430 <line:436:5, line:439:5>
                  (BinaryOperator 0xa2833d0 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0xa2833a8 <col:7> '_Bool' lvalue Var 0xa282860 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0xa2833c0 <col:22> '_Bool' false))
                  (BinaryOperator 0xa283418 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0xa2833e8 <col:7> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')
                    (IntegerLiteral 0xa283400 <col:19> 'int' 0)))
                (BreakStmt 0xa283448 <line:441:5>)))
            (BreakStmt 0xa283488 <line:444:8>))))
      (IfStmt 0xa2836d8 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa283590 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa283538 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (UnaryOperator 0xa283508 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa2834ec <col:12> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter'))
          (DeclRefExpr 0xa28351c <col:21> '_InIter' lvalue ParmVar 0xa280ec0 '__end' '_InIter'))
        (CompoundStmt 0xa283680 <line:447:8, line:451:8>
          (BinaryOperator 0xa283600 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa2835b4 <col:3> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa2835e8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa2835cc <col:10> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')))
          (IfStmt 0xa283660 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0xa283640 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa283630 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa283618 <col:8> '_Bool' lvalue Var 0xa282860 '__found_zero' '_Bool')))
            (BreakStmt 0xa283658 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0xa2836c0 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa283698 <col:8> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0xa2836b0 <col:20> '_Bool' true)))))
  (DeclStmt 0xa2838e8 <line:458:2, line:459:42>
    0xa283730 "const size_t __len =
      (ImplicitCastExpr 0xa2838d8 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0xa2838c0 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0xa2838a0 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0xa2837a8 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0xa283798 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0xa283764 <col:24> 'int' lvalue Var 0xa281ce0 '__base' 'int'))
              (IntegerLiteral 0xa283780 <col:34> 'int' 16))
            (BinaryOperator 0xa283860 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0xa283840 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0xa2837dc <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2578b0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0xa283850 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa28381c <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0xa283890 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0xa283878 <col:35> 'int' lvalue Var 0xa281ce0 '__base' 'int')))))")
  (DeclStmt 0xa283958 <line:462:2, col:25>
    0xa283900 "string __found_grouping =
      (CXXConstructExpr 0xa283938 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa283a38 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa283980 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa283968 <col:6> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa283a08 <line:464:4, col:31> 'void'
      (MemberExpr 0xa2839cc <col:4, col:21> '<bound member function type>' .reserve 0xa1521c0
        (DeclRefExpr 0xa2839b4 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa283900 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa283a28 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa2839f0 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa283aa8 <line:465:2, col:25>
    0xa283a60 "bool __testfail =
      (CXXBoolLiteralExpr 0xa283a98 <col:20> '_Bool' false)")
  (DeclStmt 0xa283b08 <line:466:2, col:29>
    0xa283ac0 "bool __testoverflow =
      (CXXBoolLiteralExpr 0xa283af8 <col:24> '_Bool' false)")
  (DeclStmt 0xa283f48 <line:467:2, line:470:49>
    0xa283b40 "const __unsigned_type __max =
      (ConditionalOperator 0xa283f28 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0xa283cd0 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0xa283cb8 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0xa283b74 <col:5> '_Bool' lvalue Var 0xa281ff0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa283c80 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0xa283e10 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa283dd8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CXXDependentScopeMemberExpr 0xa283da0 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0xa283ef0 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0xa283fe0 <line:471:2, col:47>
    0xa283f60 "const __unsigned_type __smax =
      (BinaryOperator 0xa283fc8 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0xa283f94 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa283b40 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa283fac <col:41> 'int' lvalue Var 0xa281ce0 '__base' 'int'))")
  (DeclStmt 0xa284050 <line:472:2, col:30>
    0xa284000 "__unsigned_type __result =
      (IntegerLiteral 0xa284038 <col:29> 'int' 0)")
  (DeclStmt 0xa2840c0 <line:473:2, col:17>
    0xa284070 "int __digit =
      (IntegerLiteral 0xa2840a8 <col:16> 'int' 0)")
  (DeclStmt 0xa2841e0 <line:474:2, col:60>
    0xa2840e0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa2841b8 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa284170 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (DeclRefExpr 0xa284114 <col:32> 'const _CharT *' lvalue Var 0xa281870 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa28414c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa257760 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa2856d0 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0xa284240 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa284208 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0xa2841f0 <col:7> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa284950 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0xa284280 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa284270 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa284254 <col:12> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')))
      (CompoundStmt 0xa284930 <line:479:6, line:498:6>
        (BinaryOperator 0xa284370 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0xa284294 <col:8> 'int' lvalue Var 0xa284070 '__digit' 'int')
          (CallExpr 0xa284348 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0xa2842c0 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa284300 <col:26> 'const char_type *' lvalue Var 0xa2840e0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0xa284318 <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa283730 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0xa284330 <col:45> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')))
        (IfStmt 0xa284400 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0xa2843e0 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0xa2843d0 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0xa284388 <col:12> 'int' lvalue Var 0xa284070 '__digit' 'int'))
            (UnaryOperator 0xa2843b8 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0xa2843a0 <col:24> 'int' 1)))
          (BreakStmt 0xa2843f8 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0xa284788 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa284498 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa284450 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
            (DeclRefExpr 0xa28441c <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0xa284434 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa283f60 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0xa2844e8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa2844bc <col:3> '_Bool' lvalue Var 0xa283ac0 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0xa2844d8 <col:20> '_Bool' true))
          (CompoundStmt 0xa284768 <line:487:3, line:492:3>
            (CompoundAssignOperator 0xa284530 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa284500 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa284518 <col:17> 'int' lvalue Var 0xa281ce0 '__base' 'int'))
            (CXXOperatorCallExpr 0xa2846c0 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0xa284680 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e3310 0xa1e4b10 0xa1e5d80)
              (DeclRefExpr 0xa284550 <col:5> '_Bool' lvalue Var 0xa283ac0 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0xa284658 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa284610 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
                (DeclRefExpr 0xa284568 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0xa2845e8 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2845b0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                  (DeclRefExpr 0xa284580 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa283b40 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa284598 <col:42> 'int' lvalue Var 0xa284070 '__digit' 'int'))))
            (CompoundAssignOperator 0xa284718 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa2846e4 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa2846fc <col:17> 'int' lvalue Var 0xa284070 '__digit' 'int'))
            (UnaryOperator 0xa284750 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa284738 <col:7> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int'))))
        (IfStmt 0xa284910 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa284848 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa2847f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
            (UnaryOperator 0xa2847c0 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa2847a4 <col:14> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter'))
            (DeclRefExpr 0xa2847d4 <col:23> '_InIter' lvalue ParmVar 0xa280ec0 '__end' '_InIter'))
          (BinaryOperator 0xa2848b8 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa28486c <col:3> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa2848a0 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa284884 <col:10> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')))
          (BinaryOperator 0xa2848f8 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa2848d0 <col:3> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa2848e8 <col:15> '_Bool' true)))))
    (WhileStmt 0xa2856b8 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0xa284990 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa284980 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa284964 <col:12> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')))
      (CompoundStmt 0xa2856a0 <line:501:6, line:546:6>
        (IfStmt 0xa2854f8 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0xa284ae8 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa2849c0 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0xa2849a4 <col:12> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa284ac0 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa284a60 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa2849f4 <col:37> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa284a28 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa284a0c <col:44> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa284cd8 <line:505:3, line:518:3>
            (IfStmt 0xa284cb8 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0xa284b28 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa284b18 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa284b00 <col:9> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')))
              (CompoundStmt 0xa284c40 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0xa284bd0 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa284bc0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa284ba8 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa284b34 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa283900 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0xa284b90 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0xa284b80 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0xa284b70 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa284b4c <col:47> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')))))
                (BinaryOperator 0xa284c28 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0xa284bf4 <col:9> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')
                  (IntegerLiteral 0xa284c10 <col:21> 'int' 0)))
              (CompoundStmt 0xa284ca0 <line:514:7, line:517:7>
                (BinaryOperator 0xa284c80 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0xa284c58 <col:9> '_Bool' lvalue Var 0xa283a60 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0xa284c70 <col:22> '_Bool' true))
                (BreakStmt 0xa284c98 <line:516:9>))))
          (IfStmt 0xa2854d8 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa284db8 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0xa284d58 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa284cec <col:17> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa284d20 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0xa284d04 <col:24> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *')))
            (BreakStmt 0xa284de0 <line:520:3>)
            (CompoundStmt 0xa2854b0 <line:522:3, line:540:3>
              (DeclStmt 0xa284f20 <line:523:5, line:524:50>
                0xa284e00 "const char_type *__q =
                  (CallExpr 0xa284ef8 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa284e78 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa284eac <col:27> 'const char_type *' lvalue Var 0xa2840e0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0xa284ec4 <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa283730 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0xa284edc <col:46> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa284f68 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0xa284f48 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa284f30 <col:10> 'const char_type *' lvalue Var 0xa284e00 '__q' 'const char_type *'))
                (BreakStmt 0xa284f60 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0xa285030 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0xa284f84 <col:5> 'int' lvalue Var 0xa284070 '__digit' 'int')
                (CXXOperatorCallExpr 0xa285008 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa284fd0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                  (DeclRefExpr 0xa284f9c <col:15> 'const char_type *' lvalue Var 0xa284e00 '__q' 'const char_type *')
                  (DeclRefExpr 0xa284fb4 <col:21> 'const char_type *' lvalue Var 0xa2840e0 '__lit_zero' 'const char_type *')))
              (IfStmt 0xa2850f0 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0xa285088 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0xa285078 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa285048 <col:9> 'int' lvalue Var 0xa284070 '__digit' 'int'))
                  (IntegerLiteral 0xa285060 <col:19> 'int' 15))
                (CompoundAssignOperator 0xa2850d0 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0xa2850a0 <col:7> 'int' lvalue Var 0xa284070 '__digit' 'int')
                  (IntegerLiteral 0xa2850b8 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0xa285490 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa285188 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0xa285140 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
                  (DeclRefExpr 0xa28510c <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa285124 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa283f60 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0xa2851d8 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa2851ac <col:7> '_Bool' lvalue Var 0xa283ac0 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0xa2851c8 <col:24> '_Bool' true))
                (CompoundStmt 0xa285470 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0xa285220 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa2851f0 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa285208 <col:21> 'int' lvalue Var 0xa281ce0 '__base' 'int'))
                  (CXXOperatorCallExpr 0xa2853b0 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa285370 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e3310 0xa1e4b10 0xa1e5d80)
                    (DeclRefExpr 0xa285240 <col:9> '_Bool' lvalue Var 0xa283ac0 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0xa285348 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0xa285300 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
                      (DeclRefExpr 0xa285258 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0xa2852d8 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa2852a0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                        (DeclRefExpr 0xa285270 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa283b40 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0xa285288 <col:46> 'int' lvalue Var 0xa284070 '__digit' 'int'))))
                  (CompoundAssignOperator 0xa285408 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa2853d4 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa2853ec <col:21> 'int' lvalue Var 0xa284070 '__digit' 'int'))
                  (UnaryOperator 0xa285458 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa285440 <col:11> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')))))))
        (IfStmt 0xa285680 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa2855b8 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa285560 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
            (UnaryOperator 0xa285530 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa285514 <col:14> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter'))
            (DeclRefExpr 0xa285544 <col:23> '_InIter' lvalue ParmVar 0xa280ec0 '__end' '_InIter'))
          (BinaryOperator 0xa285628 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa2855dc <col:3> 'char_type':'_CharT' lvalue Var 0xa281910 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa285610 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa2855f4 <col:10> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')))
          (BinaryOperator 0xa285668 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa285640 <col:3> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa285658 <col:15> '_Bool' true))))))
  (IfStmt 0xa285a10 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa285758 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa285728 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0xa285704 <col:6, col:23> '<bound member function type>' .size 0xa151680
          (ImplicitCastExpr 0xa285748 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa2856ec <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa283900 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa2859f8 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0xa285800 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0xa2857f0 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2857d8 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa153600 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0xa285764 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa283900 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0xa2857c0 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa2857b0 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa2857a0 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0xa28577c <col:44> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int')))))
      (IfStmt 0xa2859d8 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0xa285940 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0xa285918 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0xa28583c <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa277210 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa285878 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0xa28585c <col:34> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa2858c8 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0xa2858ac <col:6> 'const __cache_type *' lvalue Var 0xa2817a0 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa2858fc <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0xa283900 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa2859c0 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa285954 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa280f80 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa2859b0 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa28598c <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa286218 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0xa285bc0 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0xa285b80 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0xa285b68 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0xa285ac0 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0xa285a68 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa285a58 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa285a48 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa285a2c <col:8> 'int' lvalue Var 0xa2828d0 '__sep_pos' 'int'))))
            (UnaryOperator 0xa285aa8 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa285a98 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa285a7c <col:22> '_Bool' lvalue Var 0xa282860 '__found_zero' '_Bool'))))
          (UnaryOperator 0xa285b50 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa285b40 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0xa285b10 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0xa285af0 <col:39, col:56> '<bound member function type>' .size 0xa151680
                  (ImplicitCastExpr 0xa285b30 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0xa285ad8 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0xa283900 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0xa285bb0 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa285b94 <col:9> '_Bool' lvalue Var 0xa283a60 '__testfail' '_Bool')))
    (CompoundStmt 0xa285ca0 <line:565:4, line:568:4>
      (BinaryOperator 0xa285c08 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0xa285bd8 <col:6> '_ValueT' lvalue ParmVar 0xa280ff0 '__v' '_ValueT &')
        (IntegerLiteral 0xa285bf0 <col:12> 'int' 0))
      (BinaryOperator 0xa285c88 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa285c20 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa280f80 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0xa285c78 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa285c54 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0xa2861f8 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0xa285cd0 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa285cb8 <col:11> '_Bool' lvalue Var 0xa283ac0 '__testoverflow' '_Bool'))
      (CompoundStmt 0xa2860e0 <line:570:4, line:577:4>
        (IfStmt 0xa286040 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0xa285de8 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0xa285cdc <line:571:10> '_Bool' lvalue Var 0xa281ff0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa285db0 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0xa285f08 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa285e00 <col:8> '_ValueT' lvalue ParmVar 0xa280ff0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa285ed0 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0xa286028 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa285f20 <col:8> '_ValueT' lvalue ParmVar 0xa280ff0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa285ff0 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0xa2860c8 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa28605c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa280f80 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa2860b8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa286094 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0xa2861e0 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0xa2860f8 <col:4> '_ValueT' lvalue ParmVar 0xa280ff0 '__v' '_ValueT &')
        (ConditionalOperator 0xa2861c0 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0xa2861b0 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa286110 <col:10> '_Bool' lvalue Var 0xa281ff0 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0xa286178 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa286140 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa286128 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0xa286198 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa284000 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0xa286330 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0xa286250 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa286234 <col:6> '_Bool' lvalue Var 0xa281ee0 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0xa286308 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa2862f8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2862c8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa28625c <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa280f80 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa2862b8 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa286294 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa286368 <line:583:2, col:9>
    (DeclRefExpr 0xa28634c <col:9> '_InIter' lvalue ParmVar 0xa280e80 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa288d68 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0xa288d20 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0xa286ac8 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa286ab8 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0xa286aa0 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa286a78 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa286a68 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa286a50 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0xa2869d0 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0xa2869ac <col:13, col:18> '<bound member function type>' .flags 0xa1ec500
                (ImplicitCastExpr 0xa2869f0 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0xa286954 <col:13> 'class std::ios_base' lvalue ParmVar 0xa286740 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0xa286a40 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa286a1c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6ca0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0xa2870a0 <line:595:9, line:612:9>
      (DeclStmt 0xa286b68 <line:599:4, col:17>
        0xa286af0 "long __l =
          (ImplicitCastExpr 0xa286b58 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0xa286b40 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0xa286b28 <col:16> 'int' 1)))")
      (BinaryOperator 0xa286c88 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0xa286b78 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter')
        (CallExpr 0xa286c58 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0xa286ba0 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa286bdc <col:34> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0xa286bf4 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0xa2866f0 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0xa286c0c <col:48> 'class std::ios_base' lvalue ParmVar 0xa286740 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa286c24 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0xa286c3c <col:61> 'long' lvalue Var 0xa286af0 '__l' 'long')))
      (IfStmt 0xa287080 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0xa286d70 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0xa286cf0 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0xa286cd0 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0xa286ca0 <col:8> 'long' lvalue Var 0xa286af0 '__l' 'long'))
            (ImplicitCastExpr 0xa286ce0 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0xa286cb8 <col:15> 'int' 0)))
          (BinaryOperator 0xa286d58 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0xa286d38 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0xa286d08 <col:20> 'long' lvalue Var 0xa286af0 '__l' 'long'))
            (ImplicitCastExpr 0xa286d48 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0xa286d20 <col:27> 'int' 1))))
        (BinaryOperator 0xa286df8 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa286d88 <col:6> '_Bool' lvalue ParmVar 0xa286800 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0xa286de0 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0xa286dd0 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa286dc0 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0xa286da8 <col:17> 'long' lvalue Var 0xa286af0 '__l' 'long')))))
        (CompoundStmt 0xa287060 <line:604:6, line:611:6>
          (BinaryOperator 0xa286e38 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa286e10 <col:8> '_Bool' lvalue ParmVar 0xa286800 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa286e28 <col:14> '_Bool' true))
          (BinaryOperator 0xa286eb8 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0xa286e50 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0xa286ea8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa286e84 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0xa287040 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa286f60 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa286f00 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa286ed0 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa286ee8 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa2866f0 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0xa287018 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa287008 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa286ff0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa286f84 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa286fe0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa286fbc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0xa288ce0 <line:614:9, line:680:2>
      (DeclStmt 0xa2871a0 <line:616:4, col:50>
        0xa287170 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa2872a8 <line:617:4, col:34>
        0xa287270 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa287370 <line:618:4, col:42>
        0xa2872d0 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa287340 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa28731c <col:26, col:31> '<bound member function type>' ._M_getloc 0xa1ecf00
              (ImplicitCastExpr 0xa287360 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa287304 <col:26> 'class std::ios_base' lvalue ParmVar 0xa286740 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa287438 <line:619:4, col:42>
        0xa2873b0 "const __cache_type *__lc =
          (CallExpr 0xa287418 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa2873e4 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa287270 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa2873fc <col:36> 'const class std::locale' lvalue Var 0xa2872d0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa287498 <line:621:4, col:23>
        0xa287450 "bool __testf =
          (CXXBoolLiteralExpr 0xa287488 <col:19> '_Bool' true)")
      (DeclStmt 0xa2874f8 <line:622:4, col:23>
        0xa2874b0 "bool __testt =
          (CXXBoolLiteralExpr 0xa2874e8 <col:19> '_Bool' true)")
      (DeclStmt 0xa287638 <line:623:4, col:47>
        0xa287510 "bool __donef =
          (CXXOperatorCallExpr 0xa287610 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa2875b0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (CXXDependentScopeMemberExpr 0xa287560 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa287544 <col:19> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa287598 <col:46> 'int' 0))")
      (DeclStmt 0xa287778 <line:624:4, col:46>
        0xa287650 "bool __donet =
          (CXXOperatorCallExpr 0xa287750 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa2876f0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (CXXDependentScopeMemberExpr 0xa2876a0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa287684 <col:19> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa2876d8 <col:45> 'int' 0))")
      (DeclStmt 0xa2877d8 <line:625:4, col:26>
        0xa287790 "bool __testeof =
          (CXXBoolLiteralExpr 0xa2877c8 <col:21> '_Bool' false)")
      (DeclStmt 0xa287850 <line:626:4, col:18>
        0xa2877f0 "size_t __n =
          (ImplicitCastExpr 0xa287840 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa287828 <col:17> 'int' 0))")
      (WhileStmt 0xa288388 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0xa2878e0 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0xa287888 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa287878 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa287860 <col:12> '_Bool' lvalue Var 0xa287510 '__donef' '_Bool')))
          (UnaryOperator 0xa2878c8 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa2878b8 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa28789c <col:24> '_Bool' lvalue Var 0xa287650 '__donet' '_Bool'))))
        (CompoundStmt 0xa288348 <line:628:6, line:657:6>
          (IfStmt 0xa287a10 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa287988 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa287928 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa2878f8 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa287910 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa2866f0 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0xa2879f8 <line:630:3, line:633:3>
              (BinaryOperator 0xa2879d8 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa2879ac <col:5> '_Bool' lvalue Var 0xa287790 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa2879c8 <col:17> '_Bool' true))
              (BreakStmt 0xa2879f0 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0xa287aa8 <line:635:8, col:36>
            0xa287a40 "const char_type __c =
              (UnaryOperator 0xa287a90 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa287a74 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0xa287c48 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0xa287ae0 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa287ad0 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa287ab8 <col:13> '_Bool' lvalue Var 0xa287510 '__donef' '_Bool')))
            (BinaryOperator 0xa287c30 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0xa287af4 <col:3> '_Bool' lvalue Var 0xa287450 '__testf' '_Bool')
              (CXXOperatorCallExpr 0xa287c08 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa287ba8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa287b0c <col:13> 'const char_type':'const _CharT' lvalue Var 0xa287a40 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa287b90 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa287b40 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa287b24 <col:20> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa287b74 <col:39> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa287cf0 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0xa287cd0 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa287c90 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa287c80 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa287c64 <col:13> '_Bool' lvalue Var 0xa287450 '__testf' '_Bool')))
              (ImplicitCastExpr 0xa287cc0 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa287ca4 <col:24> '_Bool' lvalue Var 0xa287650 '__donet' '_Bool')))
            (BreakStmt 0xa287ce8 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0xa287ea0 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0xa287d38 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa287d28 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa287d0c <col:13> '_Bool' lvalue Var 0xa287650 '__donet' '_Bool')))
            (BinaryOperator 0xa287e88 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0xa287d4c <col:3> '_Bool' lvalue Var 0xa2874b0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa287e60 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0xa287e00 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa287d64 <col:13> 'const char_type':'const _CharT' lvalue Var 0xa287a40 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa287de8 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa287d98 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa287d7c <col:20> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa287dcc <col:38> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa287f48 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0xa287f28 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa287ee8 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa287ed8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa287ebc <col:13> '_Bool' lvalue Var 0xa2874b0 '__testt' '_Bool')))
              (ImplicitCastExpr 0xa287f18 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa287efc <col:24> '_Bool' lvalue Var 0xa287510 '__donef' '_Bool')))
            (BreakStmt 0xa287f40 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0xa288008 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0xa287fe8 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0xa287f90 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa287f80 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa287f64 <col:13> '_Bool' lvalue Var 0xa2874b0 '__testt' '_Bool')))
              (UnaryOperator 0xa287fd0 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa287fc0 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa287fa4 <col:25> '_Bool' lvalue Var 0xa287450 '__testf' '_Bool'))))
            (BreakStmt 0xa288000 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa288040 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0xa288024 <col:10> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0xa288070 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa288054 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0xa2881d0 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa288084 <col:8> '_Bool' lvalue Var 0xa287510 '__donef' '_Bool')
            (BinaryOperator 0xa2881b8 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa2880c8 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa2880b8 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa28809c <col:19> '_Bool' lvalue Var 0xa287450 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0xa288190 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa288148 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
                (DeclRefExpr 0xa2880dc <col:30> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa288110 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2880f4 <col:37> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0xa288330 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa2881e8 <col:8> '_Bool' lvalue Var 0xa287650 '__donet' '_Bool')
            (BinaryOperator 0xa288318 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa288228 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa288218 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa288200 <col:19> '_Bool' lvalue Var 0xa2874b0 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0xa2882f0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa2882a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
                (DeclRefExpr 0xa28823c <col:30> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa288270 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa288254 <col:37> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *')))))))
      (IfStmt 0xa288cc0 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0xa2884d8 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0xa2884a8 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0xa28839c <col:8> '_Bool' lvalue Var 0xa287450 '__testf' '_Bool')
            (CXXOperatorCallExpr 0xa288480 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0xa288420 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa2883b4 <col:19> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0xa2883e8 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0xa2883cc <col:26> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0xa2884c0 <col:53> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0xa2887f8 <line:659:6, line:665:6>
          (BinaryOperator 0xa288518 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa2884f0 <col:8> '_Bool' lvalue ParmVar 0xa286800 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa288508 <col:14> '_Bool' false))
          (IfStmt 0xa2887d8 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0xa288638 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0xa288530 <col:12> '_Bool' lvalue Var 0xa2874b0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa288610 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0xa2885b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa288548 <col:23> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa288578 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa288560 <col:30> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0xa2886b8 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa288650 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa2886a8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa288684 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa2887c0 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa2886d0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa2887b0 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa288790 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa288780 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa2886e8 <col:11> '_Bool' lvalue Var 0xa287790 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa28871c <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa28875c <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0xa288ca0 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0xa288948 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0xa288918 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0xa288810 <col:13> '_Bool' lvalue Var 0xa2874b0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa2888f0 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0xa288890 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (DeclRefExpr 0xa288828 <col:24> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa288858 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa288840 <col:31> 'const __cache_type *' lvalue Var 0xa2873b0 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0xa288930 <col:57> 'size_t':'unsigned int' lvalue Var 0xa2877f0 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0xa288aa8 <line:667:6, line:670:6>
            (BinaryOperator 0xa288988 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa288960 <col:8> '_Bool' lvalue ParmVar 0xa286800 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa288978 <col:14> '_Bool' true))
            (BinaryOperator 0xa288a90 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa2889a0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa288a80 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa288a60 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa288a50 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa2889b8 <col:16> '_Bool' lvalue Var 0xa287790 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa2889ec <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa288a2c <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0xa288c80 <line:672:6, line:679:6>
            (BinaryOperator 0xa288ae8 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa288ac0 <col:8> '_Bool' lvalue ParmVar 0xa286800 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa288ad8 <col:14> '_Bool' false))
            (BinaryOperator 0xa288b68 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa288b00 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa288b58 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa288b34 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa288c60 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0xa288b98 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa288b80 <col:12> '_Bool' lvalue Var 0xa287790 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0xa288c38 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa288c28 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa288c10 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa288ba4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2867b0 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0xa288c00 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa288bdc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0xa288d58 <line:681:7, col:14>
    (DeclRefExpr 0xa288d3c <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa2866b0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa2898a0 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0xa289328 <line:690:7, col:20>
    0xa2892d0 "string __xtrc =
      (CXXConstructExpr 0xa289308 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa289388 <line:691:7, col:24> 'void'
    (MemberExpr 0xa289350 <col:7, col:14> '<bound member function type>' .reserve 0xa1521c0
      (DeclRefExpr 0xa289338 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa2892d0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa2893a8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa289370 <col:22> 'int' 32)))
  (BinaryOperator 0xa2894a8 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa2893b4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa289020 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa289478 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa2893e0 <col:15> '<bound member function type>' ->_M_extract_float 0xa277760
        (CXXThisExpr 0xa2893d0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa289400 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa289020 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa289418 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa289060 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa289430 <col:46> 'class std::ios_base' lvalue ParmVar 0xa2890b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa289448 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa289120 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa289460 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa2892d0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa2896a8 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0xa289698 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa289630 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa23e620 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa23e3f0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa289558 <col:27, col:40> 'const char *'
      (MemberExpr 0xa289534 <col:27, col:34> '<bound member function type>' .c_str 0xa164010
        (ImplicitCastExpr 0xa289578 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa28951c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa2892d0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa289584 <col:43> 'float' lvalue ParmVar 0xa289170 '__v' 'float &')
    (DeclRefExpr 0xa28959c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa289120 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa2896d8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa2895e0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa2895d0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2895b4 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9dd8430 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa289858 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa289778 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa289718 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
      (DeclRefExpr 0xa2896e4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa289020 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2896fc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa289060 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa289830 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa289820 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa289808 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa28979c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa289120 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa2897f8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2897d4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa289890 <line:696:7, col:14>
    (DeclRefExpr 0xa289874 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa289020 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa28a3f0 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0xa289e78 <line:705:7, col:20>
    0xa289e20 "string __xtrc =
      (CXXConstructExpr 0xa289e58 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa289ed8 <line:706:7, col:24> 'void'
    (MemberExpr 0xa289ea0 <col:7, col:14> '<bound member function type>' .reserve 0xa1521c0
      (DeclRefExpr 0xa289e88 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa289e20 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa289ef8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa289ec0 <col:22> 'int' 32)))
  (BinaryOperator 0xa289ff8 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa289f04 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa289b70 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa289fc8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa289f30 <col:15> '<bound member function type>' ->_M_extract_float 0xa277760
        (CXXThisExpr 0xa289f20 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa289f50 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa289b70 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa289f68 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa289bb0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa289f80 <col:46> 'class std::ios_base' lvalue ParmVar 0xa289c00 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa289f98 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa289c70 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa289fb0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa289e20 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa28a1f8 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0xa28a1e8 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa28a180 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa23eba0 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa23e3f0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa28a0a8 <col:27, col:40> 'const char *'
      (MemberExpr 0xa28a084 <col:27, col:34> '<bound member function type>' .c_str 0xa164010
        (ImplicitCastExpr 0xa28a0c8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa28a06c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa289e20 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa28a0d4 <col:43> 'double' lvalue ParmVar 0xa289cc0 '__v' 'double &')
    (DeclRefExpr 0xa28a0ec <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa289c70 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa28a228 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa28a130 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa28a120 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28a104 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9dd8430 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa28a3a8 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa28a2c8 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa28a268 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
      (DeclRefExpr 0xa28a234 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa289b70 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa28a24c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa289bb0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa28a380 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa28a370 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28a358 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa28a2ec <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa289c70 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa28a348 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa28a324 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa28a3e0 <line:711:7, col:14>
    (DeclRefExpr 0xa28a3c4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa289b70 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa28af40 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0xa28a9c8 <line:737:7, col:20>
    0xa28a970 "string __xtrc =
      (CXXConstructExpr 0xa28a9a8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa28aa28 <line:738:7, col:24> 'void'
    (MemberExpr 0xa28a9f0 <col:7, col:14> '<bound member function type>' .reserve 0xa1521c0
      (DeclRefExpr 0xa28a9d8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa28a970 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa28aa48 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa28aa10 <col:22> 'int' 32)))
  (BinaryOperator 0xa28ab48 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa28aa54 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa28a6c0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa28ab18 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa28aa80 <col:15> '<bound member function type>' ->_M_extract_float 0xa277760
        (CXXThisExpr 0xa28aa70 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa28aaa0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa28a6c0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa28aab8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa28a700 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa28aad0 <col:46> 'class std::ios_base' lvalue ParmVar 0xa28a750 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa28aae8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa28a7c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa28ab00 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa28a970 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa28ad48 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0xa28ad38 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa28acd0 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa240530 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa23e3f0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa28abf8 <col:27, col:40> 'const char *'
      (MemberExpr 0xa28abd4 <col:27, col:34> '<bound member function type>' .c_str 0xa164010
        (ImplicitCastExpr 0xa28ac18 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa28abbc <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa28a970 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa28ac24 <col:43> 'long double' lvalue ParmVar 0xa28a810 '__v' 'long double &')
    (DeclRefExpr 0xa28ac3c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa28a7c0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa28ad78 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa28ac80 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa28ac70 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28ac54 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9dd8430 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa28aef8 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa28ae18 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa28adb8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
      (DeclRefExpr 0xa28ad84 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa28a6c0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa28ad9c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa28a700 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa28aed0 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa28aec0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28aea8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa28ae3c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa28a7c0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa28ae98 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa28ae74 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa28af30 <line:743:7, col:14>
    (DeclRefExpr 0xa28af14 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa28a6c0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa28bf88 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0xa28b520 <line:753:7, col:49>
    0xa28b4f0 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0xa28b630 <line:754:7, col:42>
    0xa28b550 "const fmtflags __fmt =
      (CXXMemberCallExpr 0xa28b600 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa28b5dc <col:30, col:35> '<bound member function type>' .flags 0xa1ec500
          (ImplicitCastExpr 0xa28b620 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa28b584 <col:30> 'class std::ios_base' lvalue ParmVar 0xa28b2a0 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0xa28b880 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28b85c <col:7, col:12> '<bound member function type>' .flags 0xa1ec5f0
      (DeclRefExpr 0xa28b640 <col:7> 'class std::ios_base' lvalue ParmVar 0xa28b2a0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa28b838 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa28b828 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28b810 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e1c10 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa28b7a8 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa28b780 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa28b770 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa28b758 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa28b748 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa28b698 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa28b550 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0xa28b728 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa28b718 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa28b700 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa1e30d0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa28b6f0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa28b6cc <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0xa28b800 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa28b7dc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0xa28bc80 <line:757:7, line:759:57>
    0xa28bc50 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0xa28bce8 <line:761:7, col:24>
    0xa28bcb0 "_UIntPtrType __ul")
  (BinaryOperator 0xa28be08 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0xa28bcf8 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa28b210 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa28bdd8 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa28bd20 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa28bd5c <col:30> 'iter_type':'_InIter' lvalue ParmVar 0xa28b210 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa28bd74 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0xa28b250 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa28bd8c <col:44> 'class std::ios_base' lvalue ParmVar 0xa28b2a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa28bda4 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa28b310 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa28bdbc <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0xa28bcb0 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0xa28beb0 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28be90 <col:7, col:12> '<bound member function type>' .flags 0xa1ec5f0
      (DeclRefExpr 0xa28be20 <col:7> 'class std::ios_base' lvalue ParmVar 0xa28b2a0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa28bed0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28be78 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa28b550 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0xa28bf48 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0xa28bedc <col:7> 'void *' lvalue ParmVar 0xa28b360 '__v' 'void *&')
    (CXXReinterpretCastExpr 0xa28bf30 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0xa28bf20 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa28bef4 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0xa28bcb0 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0xa28bf78 <line:768:7, col:14>
    (DeclRefExpr 0xa28bf60 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa28b210 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0xa28c8e8 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0xa28c830 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa28c768 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0xa28c79c <col:51> 'class std::ios_base' lvalue ParmVar 0xa28c2f0 '__io' 'class std::ios_base &')
    (DeclRefExpr 0xa28c7b4 <col:57> '_CharT' lvalue ParmVar 0xa28c260 '__fill' '_CharT')
    (DeclRefExpr 0xa28c7cc <col:65> '_CharT *' lvalue ParmVar 0xa28c360 '__new' '_CharT *')
    (DeclRefExpr 0xa28c7e4 <line:782:9> 'const _CharT *' lvalue ParmVar 0xa28c3d0 '__cs' 'const _CharT *')
    (DeclRefExpr 0xa28c7fc <col:15> 'streamsize':'int' lvalue ParmVar 0xa28c2a0 '__w' 'streamsize':'int')
    (DeclRefExpr 0xa28c814 <col:20> 'int' lvalue ParmVar 0xa28c420 '__len' 'int &'))
  (BinaryOperator 0xa28c8d0 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0xa28c864 <col:7> 'int' lvalue ParmVar 0xa28c420 '__len' 'int &')
    (CXXStaticCastExpr 0xa28c8b8 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0xa28c8a8 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa28c87c <col:32> 'streamsize':'int' lvalue ParmVar 0xa28c2a0 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0xa28f808 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0xa28cd10 <line:793:7, col:31>
    0xa28ccc0 "_CharT *__buf =
      (DeclRefExpr 0xa28ccf4 <col:23> '_CharT *' lvalue ParmVar 0xa28c9e0 '__bufend' '_CharT *')")
  (IfStmt 0xa28f748 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa28cdc8 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa28cd70 <col:11, col:39> 'long'
        (ImplicitCastExpr 0xa28cd60 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28cd20 <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa28cda8 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa28cd98 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa28cd38 <col:28> '_Bool' lvalue ParmVar 0xa28cb40 '__dec' '_Bool')))
        (ImplicitCastExpr 0xa28cdb8 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa28cd50 <col:35> '_Bool' true))))
    (CompoundStmt 0xa28d0a8 <line:795:2, line:803:2>
      (DoStmt 0xa28d090 <line:797:4, line:802:19>
        (CompoundStmt 0xa28cfc8 <line:798:6, line:801:6>
          (BinaryOperator 0xa28cf60 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0xa28ce08 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa28cdf0 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa28cdd4 <col:11> '_CharT *' lvalue Var 0xa28ccc0 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0xa28cf48 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0xa28ce1c <col:19> 'const _CharT *' lvalue ParmVar 0xa28ca90 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0xa28cf20 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0xa28ced8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                (ParenExpr 0xa28ce80 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0xa28ce68 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0xa28ce34 <col:26> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
                    (IntegerLiteral 0xa28ce50 <col:32> 'int' 10)))
                (DeclRefExpr 0xa28ceb4 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0xa28cfa8 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa28cf78 <col:8> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
            (IntegerLiteral 0xa28cf90 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0xa28d068 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa28d010 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (DeclRefExpr 0xa28cfe0 <col:11> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
          (IntegerLiteral 0xa28cff8 <col:18> 'int' 0))))
    (IfStmt 0xa28f728 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0xa28d210 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0xa28d1f0 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0xa28d188 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0xa28d160 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa28d150 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa28d138 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa28d118 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa28d0bc <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa28cb00 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa28d128 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa28d0f4 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0xa28d200 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa28d1e0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa28d1bc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0xa28f198 <line:805:2, line:813:2>
        (DoStmt 0xa28f180 <line:807:4, line:812:19>
          (CompoundStmt 0xa28f0b8 <line:808:6, line:811:6>
            (BinaryOperator 0xa28d400 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0xa28d258 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa28d240 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa28d228 <col:11> '_CharT *' lvalue Var 0xa28ccc0 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa28d3e8 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0xa28d26c <col:19> 'const _CharT *' lvalue ParmVar 0xa28ca90 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa28d3c0 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0xa28d378 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                  (ParenExpr 0xa28d320 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa28d2f8 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa28d2b8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
                      (DeclRefExpr 0xa28d284 <col:26> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
                      (IntegerLiteral 0xa28d2a0 <col:32> 'int' 7)))
                  (DeclRefExpr 0xa28d354 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0xa28f098 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa28d418 <col:8> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
              (IntegerLiteral 0xa28f080 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0xa28f158 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa28f100 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
            (DeclRefExpr 0xa28f0d0 <col:11> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
            (IntegerLiteral 0xa28f0e8 <col:18> 'int' 0))))
      (CompoundStmt 0xa28f708 <line:815:2, line:826:2>
        (DeclStmt 0xa28f2d0 <line:817:4, col:58>
          0xa28f1c0 "const bool __uppercase =
            (ImplicitCastExpr 0xa28f2c0 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0xa28f298 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0xa28f288 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa28f270 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0xa28f250 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa28f1f4 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa28cb00 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0xa28f260 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa28f22c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea2d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0xa28f400 <line:818:4, line:819:66>
          0xa28f2f0 "const int __case_offset =
            (ImplicitCastExpr 0xa28f3f0 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0xa28f3d0 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0xa28f3c0 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa28f324 <col:30> 'const _Bool' lvalue Var 0xa28f1c0 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0xa28f35c <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2572f0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0xa28f39c <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0xa28f6f0 <line:820:4, line:825:19>
          (CompoundStmt 0xa28f628 <line:821:6, line:824:6>
            (BinaryOperator 0xa28f5c0 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0xa28f440 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa28f428 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa28f410 <col:11> '_CharT *' lvalue Var 0xa28ccc0 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa28f5a8 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa28f454 <col:19> 'const _CharT *' lvalue ParmVar 0xa28ca90 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa28f580 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0xa28f538 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                  (ParenExpr 0xa28f508 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa28f4e0 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa28f4a0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
                      (DeclRefExpr 0xa28f46c <col:26> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
                      (IntegerLiteral 0xa28f488 <col:32> 'int' 15)))
                  (DeclRefExpr 0xa28f51c <col:39> 'const int' lvalue Var 0xa28f2f0 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0xa28f608 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa28f5d8 <col:8> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
              (IntegerLiteral 0xa28f5f0 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0xa28f6c8 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa28f670 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
            (DeclRefExpr 0xa28f640 <col:11> '_ValueT' lvalue ParmVar 0xa28ca20 '__v' '_ValueT')
            (IntegerLiteral 0xa28f658 <col:18> 'int' 0))))))
  (ReturnStmt 0xa28f7f8 <line:827:7, col:25>
    (CXXOperatorCallExpr 0xa28f7d0 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa28f798 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0xa28f764 <col:14> '_CharT *' lvalue ParmVar 0xa28c9e0 '__bufend' '_CharT *')
      (DeclRefExpr 0xa28f77c <col:25> '_CharT *' lvalue Var 0xa28ccc0 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa2900c8 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0xa28fff8 <line:838:7, line:839:42>
    0xa28fe20 "_CharT *__p =
      (CallExpr 0xa28ffc0 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa28fe70 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2411e0)
        (DeclRefExpr 0xa28fea4 <col:41> '_CharT *' lvalue ParmVar 0xa28fc10 '__new' '_CharT *')
        (DeclRefExpr 0xa28febc <col:48> '_CharT' lvalue ParmVar 0xa28fb50 '__sep' '_CharT')
        (DeclRefExpr 0xa28fed4 <col:55> 'const char *' lvalue ParmVar 0xa28fad0 '__grouping' 'const char *')
        (DeclRefExpr 0xa28feec <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0xa28fb10 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa28ff04 <col:23> '_CharT *' lvalue ParmVar 0xa28fc60 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa28ff98 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa28ff50 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa28ff1c <col:29> '_CharT *' lvalue ParmVar 0xa28fc60 '__cs' '_CharT *')
          (DeclRefExpr 0xa28ff34 <col:36> 'int' lvalue ParmVar 0xa28fcb0 '__len' 'int &')))")
  (BinaryOperator 0xa2900b0 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0xa290008 <col:7> 'int' lvalue ParmVar 0xa28fcb0 '__len' 'int &')
    (CXXOperatorCallExpr 0xa290088 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa290050 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (DeclRefExpr 0xa290020 <col:15> '_CharT *' lvalue Var 0xa28fe20 '__p' '_CharT *')
      (DeclRefExpr 0xa290038 <col:21> '_CharT *' lvalue ParmVar 0xa28fc10 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0xa293138 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0xa2906c8 <line:850:2, col:33>
    0xa290660 "Using__gnu_cxx::;")
  (DeclStmt 0xa2907f0 <line:851:2, col:66>
    0xa2907c0 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa2908e0 <line:852:2, col:60>
    0xa2908b0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa2909e8 <line:853:2, col:32>
    0xa2909b0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa290ab0 <line:854:2, col:40>
    0xa290a10 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa290a80 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa290a5c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa1ecf00
          (ImplicitCastExpr 0xa290aa0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa290a44 <col:24> 'class std::ios_base' lvalue ParmVar 0xa290430 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa290b78 <line:855:2, col:40>
    0xa290af0 "const __cache_type *__lc =
      (CallExpr 0xa290b58 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa290b24 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa2909b0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa290b3c <col:34> 'const class std::locale' lvalue Var 0xa290a10 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa290c48 <line:856:2, col:42>
    0xa290bc0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa290c10 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa290bf4 <col:24> 'const __cache_type *' lvalue Var 0xa290af0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa290d70 <line:857:2, col:49>
    0xa290c90 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa290d40 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa290d1c <col:37, col:42> '<bound member function type>' .flags 0xa1ec500
          (ImplicitCastExpr 0xa290d60 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa290cc4 <col:37> 'class std::ios_base' lvalue ParmVar 0xa290430 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa290e38 <line:860:2, col:40>
    0xa290d90 "const int __ilen =
      (ImplicitCastExpr 0xa290e28 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0xa290e10 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0xa290e00 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa290dc8 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0xa290de8 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0xa291078 <line:861:2, line:862:23>
    0xa290e80 "_CharT *__cs =
      (CXXStaticCastExpr 0xa291060 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa291030 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0xa291020 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa290f94 <col:38> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa291008 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa290fb8 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa290ff8 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa290fe8 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa290fd0 <col:15> 'const int' lvalue Var 0xa290d90 '__ilen' 'const int'))))))")
  (DeclStmt 0xa2911c0 <line:866:2, col:70>
    0xa2910c0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa291198 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa291188 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa291170 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa291150 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa2910f4 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa290c90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa291160 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa29112c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa2913e0 <line:867:2, line:868:40>
    0xa2911e0 "const bool __dec =
      (ParenExpr 0xa291390 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0xa291378 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0xa2912b0 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0xa291290 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa291270 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa291214 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2910c0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa2912a0 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa291280 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa29124c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa291360 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0xa291340 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa291320 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa2912c8 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2910c0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa291350 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa291330 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa2912fc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0xa291668 <line:869:2, line:871:34>
    0xa291410 "const __unsigned_type __u =
      (ParenExpr 0xa291650 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0xa291630 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0xa291540 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0xa291528 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0xa2914c0 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0xa291478 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
                (DeclRefExpr 0xa291444 <col:32> '_ValueT' lvalue ParmVar 0xa2904b0 '__v' '_ValueT')
                (IntegerLiteral 0xa291460 <col:38> 'int' 0))
              (UnaryOperator 0xa291510 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa291500 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa2914e4 <col:44> 'const _Bool' lvalue Var 0xa2911e0 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0xa291578 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0xa291560 <col:28> '_ValueT' lvalue ParmVar 0xa2904b0 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0xa291610 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa2915d8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (CXXUnresolvedConstructExpr 0xa2915b8 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0xa2915a0 <col:29> '_ValueT' lvalue ParmVar 0xa2904b0 '__v' '_ValueT')))))")
  (DeclStmt 0xa291830 <line:872:3, col:71>
    0xa291690 "int __len =
      (CallExpr 0xa291800 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0xa2916c8 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0xa28cc70)
        (CXXOperatorCallExpr 0xa291778 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa291730 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa2916fc <col:29> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
          (DeclRefExpr 0xa291714 <col:36> 'const int' lvalue Var 0xa290d90 '__ilen' 'const int'))
        (DeclRefExpr 0xa29179c <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa291410 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa2917b4 <col:49> 'const _CharT *' lvalue Var 0xa290bc0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa2917cc <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa290c90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0xa2917e4 <col:65> 'const _Bool' lvalue Var 0xa2911e0 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0xa2918c0 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa291840 <col:2> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
    (BinaryOperator 0xa2918a8 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0xa291888 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0xa291858 <col:10> 'const int' lvalue Var 0xa290d90 '__ilen' 'const int'))
      (ImplicitCastExpr 0xa291898 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0xa291870 <col:19> 'int' lvalue Var 0xa291690 '__len' 'int'))))
  (IfStmt 0xa291e20 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa2918f8 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa2918e0 <col:6> 'const __cache_type *' lvalue Var 0xa290af0 '__lc' 'const __cache_type *'))
    (CompoundStmt 0xa291e00 <line:877:4, line:886:4>
      (DeclStmt 0xa291ae0 <line:880:6, line:882:16>
        0xa291940 "_CharT *__cs2 =
          (CXXStaticCastExpr 0xa291ac8 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa291a98 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0xa291a88 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa291974 <col:43> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa291a70 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0xa291a30 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa291998 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa291a20 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0xa291a08 <col:13, col:23> 'int'
                      (BinaryOperator 0xa2919f0 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0xa2919e0 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa2919b0 <col:14> 'int' lvalue Var 0xa291690 '__len' 'int'))
                        (IntegerLiteral 0xa2919c8 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0xa291a60 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa291a48 <col:13> 'int' 2)))))")
      (CallExpr 0xa291cf8 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0xa291b00 <line:883:6> '<bound member function type>' ->_M_group_int 0xa28fd60
          (CXXThisExpr 0xa291af0 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa291b38 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa291b20 <col:19> 'const __cache_type *' lvalue Var 0xa290af0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa291b88 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0xa291b6c <col:38> 'const __cache_type *' lvalue Var 0xa290af0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa291bd8 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa291bbc <col:5> 'const __cache_type *' lvalue Var 0xa290af0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa291c0c <col:29> 'class std::ios_base' lvalue ParmVar 0xa290430 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0xa291ca0 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa291c58 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa291c24 <col:35> '_CharT *' lvalue Var 0xa291940 '__cs2' '_CharT *')
          (IntegerLiteral 0xa291c40 <col:43> 'int' 2))
        (DeclRefExpr 0xa291cc4 <col:46> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
        (DeclRefExpr 0xa291cdc <col:52> 'int' lvalue Var 0xa291690 '__len' 'int'))
      (BinaryOperator 0xa291de8 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa291d30 <col:6> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa291dc0 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa291d78 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa291d48 <col:13> '_CharT *' lvalue Var 0xa291940 '__cs2' '_CharT *')
          (IntegerLiteral 0xa291d60 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0xa292b58 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa291ee8 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa291e90 <col:6, col:34> 'long'
        (ImplicitCastExpr 0xa291e80 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa291e3c <col:6> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa291ec8 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa291eb8 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa291e54 <col:23> 'const _Bool' lvalue Var 0xa2911e0 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0xa291ed8 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa291e70 <col:30> '_Bool' true))))
    (CompoundStmt 0xa292458 <line:890:4, line:900:4>
      (IfStmt 0xa292438 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa291fa8 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa291f60 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
          (DeclRefExpr 0xa291f2c <col:10> '_ValueT' lvalue ParmVar 0xa2904b0 '__v' '_ValueT')
          (IntegerLiteral 0xa291f48 <col:17> 'int' 0))
        (CompoundStmt 0xa292308 <line:893:8, line:897:8>
          (IfStmt 0xa2922e8 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0xa2921b8 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0xa2920b0 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0xa2920a0 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa292078 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa292068 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa292050 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa292030 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa291fd8 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa290c90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa292040 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa29200c <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea1b0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0xa292180 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0xa2922d0 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0xa292288 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0xa292200 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa2921e8 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0xa2921d0 <col:8> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0xa292270 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0xa292214 <col:15> 'const _CharT *' lvalue Var 0xa290bc0 '__lit' 'const _CharT *')
                  (DeclRefExpr 0xa29224c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257160 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0xa2922b8 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0xa2922a0 <col:46> 'int' lvalue Var 0xa291690 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0xa292420 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0xa2923d8 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0xa292350 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa292338 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa29231c <col:11> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0xa2923c0 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa292364 <col:18> 'const _CharT *' lvalue Var 0xa290bc0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa29239c <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257120 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0xa292408 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0xa2923f0 <col:50> 'int' lvalue Var 0xa291690 '__len' 'int')))))
    (IfStmt 0xa292b38 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0xa292580 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0xa292550 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa292540 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0xa292518 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa292508 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2924f0 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa2924d0 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa292478 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa290c90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa2924e0 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa2924ac <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea0f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0xa292568 <col:49> '_ValueT' lvalue ParmVar 0xa2904b0 '__v' '_ValueT'))
      (CompoundStmt 0xa292b20 <line:902:4, line:914:4>
        (IfStmt 0xa292b00 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0xa292630 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0xa292610 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa2925f0 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa292598 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2910c0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa292620 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa292600 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa2925cc <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa292748 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0xa292700 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0xa292678 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa292660 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa292648 <col:11> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa2926e8 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa29268c <col:18> 'const _CharT *' lvalue Var 0xa290bc0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa2926c4 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0xa292730 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa292718 <col:51> 'int' lvalue Var 0xa291690 '__len' 'int')))
          (CompoundStmt 0xa292ae0 <line:906:8, line:913:8>
            (DeclStmt 0xa292880 <line:908:3, col:57>
              0xa292770 "const bool __uppercase =
                (ImplicitCastExpr 0xa292870 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa292848 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa292838 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa292820 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa292800 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa2927a4 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa290c90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa292810 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa2927dc <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea2d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0xa2929a8 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0xa2928c0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa2928a8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa292890 <col:6> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa292990 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa2928d4 <col:13> 'const _CharT *' lvalue Var 0xa290bc0 '__lit' 'const _CharT *')
                (BinaryOperator 0xa292978 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0xa292948 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0xa29290c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2571a0 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0xa292968 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa292958 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa29292c <col:39> 'const _Bool' lvalue Var 0xa292770 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0xa292a78 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0xa2929f0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa2929d8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa2929c0 <col:6> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa292a60 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0xa292a04 <col:13> 'const _CharT *' lvalue Var 0xa290bc0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa292a3c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa257220 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0xa292ac0 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0xa292a90 <col:3> 'int' lvalue Var 0xa291690 '__len' 'int')
              (IntegerLiteral 0xa292aa8 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0xa292c60 <line:917:2, col:37>
    0xa292b80 "const streamsize __w =
      (CXXMemberCallExpr 0xa292c30 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa292c0c <col:25, col:30> '<bound member function type>' .width 0xa1ecb20
          (ImplicitCastExpr 0xa292c50 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa292bb4 <col:25> 'class std::ios_base' lvalue ParmVar 0xa290430 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa292f98 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0xa292ce0 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa292cd0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa292c70 <col:6> 'const streamsize':'const int' lvalue Var 0xa292b80 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa292cb8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa292ca8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa292c88 <col:36> 'int' lvalue Var 0xa291690 '__len' 'int'))))
    (CompoundStmt 0xa292f78 <line:919:4, line:924:4>
      (DeclStmt 0xa292e28 <line:920:6, line:921:18>
        0xa292d10 "_CharT *__cs3 =
          (CXXStaticCastExpr 0xa292e10 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa292de0 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0xa292dd0 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa292d44 <col:43> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa292db8 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa292d68 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa292da8 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa292d98 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa292d80 <col:13> 'const streamsize':'const int' lvalue Var 0xa292b80 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa292ef8 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0xa292e48 <col:6> '<bound member function type>' ->_M_pad 0xa28c4c0
          (CXXThisExpr 0xa292e38 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa292e68 <col:13> '_CharT' lvalue ParmVar 0xa290470 '__fill' '_CharT')
        (DeclRefExpr 0xa292e80 <col:21> 'const streamsize':'const int' lvalue Var 0xa292b80 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa292e98 <col:26> 'class std::ios_base' lvalue ParmVar 0xa290430 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa292eb0 <col:32> '_CharT *' lvalue Var 0xa292d10 '__cs3' '_CharT *')
        (DeclRefExpr 0xa292ec8 <col:39> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
        (DeclRefExpr 0xa292ee0 <col:45> 'int' lvalue Var 0xa291690 '__len' 'int'))
      (BinaryOperator 0xa292f60 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa292f2c <col:6> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
        (DeclRefExpr 0xa292f44 <col:13> '_CharT *' lvalue Var 0xa292d10 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa293048 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa293028 <col:2, col:7> '<bound member function type>' .width 0xa1ecbe0
      (DeclRefExpr 0xa292fb4 <col:2> 'class std::ios_base' lvalue ParmVar 0xa290430 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa293010 <col:13> 'int' 0))
  (ReturnStmt 0xa293128 <line:929:2, col:38>
    (CallExpr 0xa293100 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa293080 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
      (DeclRefExpr 0xa2930b8 <col:22> '_OutIter' lvalue ParmVar 0xa2903e0 '__s' '_OutIter')
      (DeclRefExpr 0xa2930d0 <col:27> '_CharT *' lvalue Var 0xa290e80 '__cs' '_CharT *')
      (DeclRefExpr 0xa2930e8 <col:33> 'int' lvalue Var 0xa291690 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa293ec8 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0xa2938c8 <line:942:7, col:52>
    0xa2937b0 "const int __declen =
      (ConditionalOperator 0xa2938a8 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0xa2937e4 <col:28> 'const _CharT *' lvalue ParmVar 0xa293530 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0xa293868 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa293830 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (DeclRefExpr 0xa2937fc <col:34> 'const _CharT *' lvalue ParmVar 0xa293530 '__p' 'const _CharT *')
          (DeclRefExpr 0xa293814 <col:40> '_CharT *' lvalue ParmVar 0xa2935f0 '__cs' '_CharT *'))
        (DeclRefExpr 0xa29388c <col:47> 'int' lvalue ParmVar 0xa293640 '__len' 'int &'))")
  (DeclStmt 0xa293ac8 <line:943:7, line:945:29>
    0xa2938f0 "_CharT *__p2 =
      (CallExpr 0xa293a90 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa293940 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2411e0)
        (DeclRefExpr 0xa293974 <col:42> '_CharT *' lvalue ParmVar 0xa2935a0 '__new' '_CharT *')
        (DeclRefExpr 0xa29398c <col:49> '_CharT' lvalue ParmVar 0xa2934c0 '__sep' '_CharT')
        (DeclRefExpr 0xa2939a4 <col:56> 'const char *' lvalue ParmVar 0xa293440 '__grouping' 'const char *')
        (DeclRefExpr 0xa2939bc <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0xa293480 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa2939d4 <line:945:7> '_CharT *' lvalue ParmVar 0xa2935f0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa293a68 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa293a20 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa2939ec <col:13> '_CharT *' lvalue ParmVar 0xa2935f0 '__cs' '_CharT *')
          (DeclRefExpr 0xa293a04 <col:20> 'const int' lvalue Var 0xa2937b0 '__declen' 'const int')))")
  (DeclStmt 0xa293bb8 <line:948:7, col:34>
    0xa293af0 "int __newlen =
      (CXXOperatorCallExpr 0xa293b90 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa293b58 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa293b24 <col:22> '_CharT *' lvalue Var 0xa2938f0 '__p2' '_CharT *')
        (DeclRefExpr 0xa293b3c <col:29> '_CharT *' lvalue ParmVar 0xa2935a0 '__new' '_CharT *'))")
  (IfStmt 0xa293e50 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0xa293bc8 <line:949:11> 'const _CharT *' lvalue ParmVar 0xa293530 '__p' 'const _CharT *')
    (CompoundStmt 0xa293e38 <line:950:2, line:953:2>
      (CallExpr 0xa293d70 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa293ca0 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa293cd4 <col:30> '_CharT *' lvalue Var 0xa2938f0 '__p2' '_CharT *')
        (DeclRefExpr 0xa293cec <col:36> 'const _CharT *' lvalue ParmVar 0xa293530 '__p' 'const _CharT *')
        (BinaryOperator 0xa293d58 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0xa293d38 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0xa293d04 <col:41> 'int' lvalue ParmVar 0xa293640 '__len' 'int &'))
          (ImplicitCastExpr 0xa293d48 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0xa293d1c <col:49> 'const int' lvalue Var 0xa2937b0 '__declen' 'const int'))))
      (CompoundAssignOperator 0xa293e18 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa293d98 <col:4> 'int' lvalue Var 0xa293af0 '__newlen' 'int')
        (BinaryOperator 0xa293e00 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0xa293de0 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0xa293db0 <col:16> 'int' lvalue ParmVar 0xa293640 '__len' 'int &'))
          (ImplicitCastExpr 0xa293df0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0xa293dc8 <col:24> 'const int' lvalue Var 0xa2937b0 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0xa293eb0 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0xa293e6c <col:7> 'int' lvalue ParmVar 0xa293640 '__len' 'int &')
    (ImplicitCastExpr 0xa293ea0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa293e84 <col:15> 'int' lvalue Var 0xa293af0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0xa2979c0 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0xa2945a0 <line:974:2, col:62>
    0xa294570 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa2946a8 <line:975:2, col:32>
    0xa294670 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa294770 <line:976:2, col:40>
    0xa2946d0 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa294740 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa29471c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa1ecf00
          (ImplicitCastExpr 0xa294760 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa294704 <col:24> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa294838 <line:977:2, col:40>
    0xa2947b0 "const __cache_type *__lc =
      (CallExpr 0xa294818 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa2947e4 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa294670 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa2947fc <col:34> 'const class std::locale' lvalue Var 0xa2946d0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa294a40 <line:980:2, col:71>
    0xa294850 "const streamsize __prec =
      (ConditionalOperator 0xa294a20 <col:28, col:70> 'int'
        (BinaryOperator 0xa294948 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0xa294900 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0xa2948dc <col:28, col:33> '<bound member function type>' .precision 0xa1ec9b0
              (ImplicitCastExpr 0xa294920 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa294884 <col:28> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0xa294930 <col:47> 'int' 0))
        (IntegerLiteral 0xa294960 <col:51> 'int' 6)
        (CXXMemberCallExpr 0xa2949f0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0xa2949d0 <col:55, col:60> '<bound member function type>' .precision 0xa1ec9b0
            (ImplicitCastExpr 0xa294a10 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa294978 <col:55> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0xa294b88 <line:982:2, line:983:52>
    0xa294a60 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0xa294b50 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0xa294be8 <line:986:2, col:11>
    0xa294bb0 "int __len")
  (DeclStmt 0xa294c88 <line:988:2, col:17>
    0xa294c50 "char __fbuf[16]")
  (CallExpr 0xa294d78 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0xa294d68 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa294cc0 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0xa257a80 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0xa294da0 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0xa294ce0 <col:30> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa294db0 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa294cf8 <col:36> 'char [16]' lvalue Var 0xa294c50 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0xa294dc0 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0xa294d10 <col:44> 'char' lvalue ParmVar 0xa2942c0 '__mod' 'char')))
  (DeclStmt 0xa294e70 <line:994:2, col:34>
    0xa294de0 "int __cs_size =
      (BinaryOperator 0xa294e58 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0xa294e48 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0xa294e14 <col:18> 'const int' lvalue Var 0xa294a60 '__max_digits' 'const int'))
        (IntegerLiteral 0xa294e30 <col:33> 'int' 3))")
  (DeclStmt 0xa294f70 <line:995:2, col:62>
    0xa294e90 "char *__cs =
      (CXXStaticCastExpr 0xa294f58 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0xa294f08 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0xa294ef8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa294ec4 <col:34> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0xa294f38 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa294f28 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0xa294edc <col:51> 'int' lvalue Var 0xa294de0 '__cs_size' 'int')))))")
  (BinaryOperator 0xa2950c8 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0xa294f80 <line:996:2> 'int' lvalue Var 0xa294bb0 '__len' 'int')
    (CallExpr 0xa295090 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0xa294fb0 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0xa024f40 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0xa294ff8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa294fe8 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa294fd0 <col:32> '__c_locale (void)' lvalue CXXMethod 0x9dd8430 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0xa295014 <col:51> 'char *' lvalue Var 0xa294e90 '__cs' 'char *')
      (DeclRefExpr 0xa29502c <col:57> 'int' lvalue Var 0xa294de0 '__cs_size' 'int')
      (DeclRefExpr 0xa295044 <line:997:11> 'char [16]' lvalue Var 0xa294c50 '__fbuf' 'char [16]')
      (DeclRefExpr 0xa29505c <col:19> 'const streamsize':'const int' lvalue Var 0xa294850 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0xa295074 <col:27> '_ValueT' lvalue ParmVar 0xa294300 '__v' '_ValueT')))
  (IfStmt 0xa295428 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0xa295130 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0xa295110 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0xa2950e0 <col:6> 'int' lvalue Var 0xa294bb0 '__len' 'int'))
      (ImplicitCastExpr 0xa295120 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0xa2950f8 <col:15> 'int' lvalue Var 0xa294de0 '__cs_size' 'int')))
    (CompoundStmt 0xa295408 <line:1001:4, line:1006:4>
      (BinaryOperator 0xa2951b8 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0xa295148 <col:6> 'int' lvalue Var 0xa294de0 '__cs_size' 'int')
        (BinaryOperator 0xa2951a0 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0xa295190 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0xa295160 <col:18> 'int' lvalue Var 0xa294bb0 '__len' 'int'))
          (IntegerLiteral 0xa295178 <col:26> 'int' 1)))
      (BinaryOperator 0xa295290 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0xa2951d0 <col:6> 'char *' lvalue Var 0xa294e90 '__cs' 'char *')
        (CXXStaticCastExpr 0xa295278 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0xa295228 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0xa295218 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2951e8 <col:32> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0xa295258 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa295248 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0xa295200 <col:49> 'int' lvalue Var 0xa294de0 '__cs_size' 'int'))))))
      (BinaryOperator 0xa2953f0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0xa2952a8 <line:1004:6> 'int' lvalue Var 0xa294bb0 '__len' 'int')
        (CallExpr 0xa2953b8 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0xa2952d8 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0xa024f40 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0xa295320 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0xa295310 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2952f8 <col:36> '__c_locale (void)' lvalue CXXMethod 0x9dd8430 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0xa29533c <col:55> 'char *' lvalue Var 0xa294e90 '__cs' 'char *')
          (DeclRefExpr 0xa295354 <col:61> 'int' lvalue Var 0xa294de0 '__cs_size' 'int')
          (DeclRefExpr 0xa29536c <line:1005:8> 'char [16]' lvalue Var 0xa294c50 '__fbuf' 'char [16]')
          (DeclRefExpr 0xa295384 <col:16> 'const streamsize':'const int' lvalue Var 0xa294850 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0xa29539c <col:24> '_ValueT' lvalue ParmVar 0xa294300 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0xa295690 <line:1028:2, col:65>
    0xa295510 "const ctype<_CharT> &__ctype =
      (CallExpr 0xa295670 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa2955f0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
        (DeclRefExpr 0xa295658 <col:59> 'const class std::locale' lvalue Var 0xa2946d0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa2957e8 <line:1030:2, line:1031:22>
    0xa2956d0 "_CharT *__ws =
      (CXXStaticCastExpr 0xa2957d0 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa2957a0 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0xa295790 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa295704 <col:38> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa295778 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa295728 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa295768 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa295758 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa295740 <col:15> 'int' lvalue Var 0xa294bb0 '__len' 'int'))))))")
  (CallExpr 0xa2958e0 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa295810 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0xa2957f8 <col:2> 'const ctype<_CharT>' lvalue Var 0xa295510 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0xa295844 <col:16> 'char *' lvalue Var 0xa294e90 '__cs' 'char *')
    (BinaryOperator 0xa2958b0 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0xa295890 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa29585c <col:22> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
      (ImplicitCastExpr 0xa2958a0 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0xa295874 <col:29> 'int' lvalue Var 0xa294bb0 '__len' 'int')))
    (DeclRefExpr 0xa2958c8 <col:36> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *'))
  (DeclStmt 0xa295970 <line:1035:2, col:18>
    0xa295920 "_CharT *__wp =
      (IntegerLiteral 0xa295958 <col:17> 'int' 0)")
  (DeclStmt 0xa295b70 <line:1036:2, col:61>
    0xa295990 "const char *__p =
      (CallExpr 0xa295af8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0xa295ae8 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa295a40 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x9ffd6a0 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0xa295b30 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0xa295b20 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa295a60 <col:44> 'char *' lvalue Var 0xa294e90 '__cs' 'char *')))
        (ImplicitCastExpr 0xa295b50 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa295b40 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa295a78 <col:50> 'int' lvalue Var 0xa294bb0 '__len' 'int')))
        (MaterializeTemporaryExpr 0xa295b60 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0xa295a90 <col:57> 'char'46)))")
  (IfStmt 0xa295da0 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa295ba8 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa295b98 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa295b80 <col:6> 'const char *' lvalue Var 0xa295990 '__p' 'const char *')))
    (CompoundStmt 0xa295d88 <line:1038:4, line:1041:4>
      (BinaryOperator 0xa295cd8 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0xa295bb4 <col:6> '_CharT *' lvalue Var 0xa295920 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa295cb0 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0xa295c68 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa295bcc <col:13> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
          (ParenExpr 0xa295c50 <col:20, col:31> 'int'
            (BinaryOperator 0xa295c38 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0xa295c18 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa295be4 <col:21> 'const char *' lvalue Var 0xa295990 '__p' 'const char *'))
              (ImplicitCastExpr 0xa295c28 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0xa295bfc <col:27> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))))))
      (BinaryOperator 0xa295d70 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0xa295d08 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa295cf0 <col:7> '_CharT *' lvalue Var 0xa295920 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0xa295d38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa295d1c <col:14> 'const __cache_type *' lvalue Var 0xa2947b0 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa296aa0 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0xa296208 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa295dd8 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0xa295dbc <col:6> 'const __cache_type *' lvalue Var 0xa2947b0 '__lc' 'const __cache_type *'))
      (ParenExpr 0xa2961f0 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0xa2961d8 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0xa295e80 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0xa295e0c <col:10> '_CharT *' lvalue Var 0xa295920 '__wp' '_CharT *')
            (BinaryOperator 0xa295e68 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0xa295e58 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0xa295e24 <col:18> 'int' lvalue Var 0xa294bb0 '__len' 'int'))
              (IntegerLiteral 0xa295e40 <col:26> 'int' 3)))
          (ParenExpr 0xa2961c0 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0xa2961a8 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0xa2960d8 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0xa296008 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0xa295f38 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0xa295f18 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa295f08 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa295ed8 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0xa295ec8 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa295e98 <col:32> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
                          (IntegerLiteral 0xa295eb0 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0xa295f28 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0xa295ef0 <col:43> 'char'57)))
                  (BinaryOperator 0xa295ff0 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0xa295fd0 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa295fc0 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa295f90 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0xa295f80 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa295f50 <col:50> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
                          (IntegerLiteral 0xa295f68 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0xa295fe0 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0xa295fa8 <col:61> 'char'57))))
                (BinaryOperator 0xa2960c0 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0xa2960a0 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa296090 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0xa296060 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0xa296050 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0xa296020 <col:14> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
                        (IntegerLiteral 0xa296038 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0xa2960b0 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0xa296078 <col:25> 'char'48))))
              (BinaryOperator 0xa296190 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0xa296170 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa296160 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0xa296130 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0xa296120 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0xa2960f0 <col:32> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
                      (IntegerLiteral 0xa296108 <col:37> 'int' 2))))
                (ImplicitCastExpr 0xa296180 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0xa296148 <col:43> 'char'48))))))))
    (CompoundStmt 0xa296a78 <line:1049:4, line:1069:4>
      (DeclStmt 0xa296388 <line:1052:6, line:1053:24>
        0xa296230 "_CharT *__ws2 =
          (CXXStaticCastExpr 0xa296370 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa296340 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0xa296330 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa296264 <col:43> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa296318 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0xa2962d8 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa296288 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa2962c8 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa2962b8 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa2962a0 <col:13> 'int' lvalue Var 0xa294bb0 '__len' 'int'))))
                (ImplicitCastExpr 0xa296308 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa2962f0 <col:21> 'int' 2)))))")
      (DeclStmt 0xa2963f0 <line:1055:6, col:26>
        0xa2963a0 "streamsize __off =
          (IntegerLiteral 0xa2963d8 <col:25> 'int' 0)")
      (IfStmt 0xa2966e8 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0xa296570 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0xa2964a0 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0xa296480 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa296470 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa296440 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0xa296430 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa296400 <col:10> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
                  (IntegerLiteral 0xa296418 <col:15> 'int' 0))))
            (ImplicitCastExpr 0xa296490 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0xa296458 <col:21> 'char'45)))
          (BinaryOperator 0xa296558 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa296538 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa296528 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa2964f8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0xa2964e8 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa2964b8 <col:28> 'char *' lvalue Var 0xa294e90 '__cs' 'char *'))
                  (IntegerLiteral 0xa2964d0 <col:33> 'int' 0))))
            (ImplicitCastExpr 0xa296548 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0xa296510 <col:39> 'char'43))))
        (CompoundStmt 0xa2966c8 <line:1057:8, line:1061:8>
          (BinaryOperator 0xa2965b8 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0xa296588 <col:3> 'streamsize':'int' lvalue Var 0xa2963a0 '__off' 'streamsize':'int')
            (IntegerLiteral 0xa2965a0 <col:11> 'int' 1))
          (BinaryOperator 0xa296660 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0xa296600 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa2965d0 <col:3> '_CharT *' lvalue Var 0xa296230 '__ws2' '_CharT *')
              (IntegerLiteral 0xa2965e8 <col:9> 'int' 0))
            (ArraySubscriptExpr 0xa296648 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0xa296614 <col:14> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
              (IntegerLiteral 0xa296630 <col:19> 'int' 0)))
          (CompoundAssignOperator 0xa2966a8 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa296678 <col:3> 'int' lvalue Var 0xa294bb0 '__len' 'int')
            (IntegerLiteral 0xa296690 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0xa296998 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0xa296718 <line:1063:6> '<bound member function type>' ->_M_group_float 0xa2936f0
          (CXXThisExpr 0xa296708 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa296750 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0xa296738 <col:21> 'const __cache_type *' lvalue Var 0xa2947b0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa2967a0 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa296784 <col:40> 'const __cache_type *' lvalue Var 0xa2947b0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa2967f0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0xa2967d4 <col:7> 'const __cache_type *' lvalue Var 0xa2947b0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa296824 <col:31> '_CharT *' lvalue Var 0xa295920 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa2968b8 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa296870 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa29683c <col:37> '_CharT *' lvalue Var 0xa296230 '__ws2' '_CharT *')
          (DeclRefExpr 0xa296854 <col:45> 'streamsize':'int' lvalue Var 0xa2963a0 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0xa296958 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0xa296910 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa2968dc <col:7> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
          (DeclRefExpr 0xa2968f4 <col:14> 'streamsize':'int' lvalue Var 0xa2963a0 '__off' 'streamsize':'int'))
        (DeclRefExpr 0xa29697c <col:21> 'int' lvalue Var 0xa294bb0 '__len' 'int'))
      (CompoundAssignOperator 0xa296a10 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa2969d0 <col:6> 'int' lvalue Var 0xa294bb0 '__len' 'int')
        (ImplicitCastExpr 0xa296a00 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa2969e8 <col:15> 'streamsize':'int' lvalue Var 0xa2963a0 '__off' 'streamsize':'int')))
      (BinaryOperator 0xa296a60 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa296a30 <col:6> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
        (DeclRefExpr 0xa296a48 <col:13> '_CharT *' lvalue Var 0xa296230 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0xa296bb0 <line:1072:2, col:37>
    0xa296ad0 "const streamsize __w =
      (CXXMemberCallExpr 0xa296b80 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa296b5c <col:25, col:30> '<bound member function type>' .width 0xa1ecb20
          (ImplicitCastExpr 0xa296ba0 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa296b04 <col:25> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa296ee8 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0xa296c30 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa296c20 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa296bc0 <col:6> 'const streamsize':'const int' lvalue Var 0xa296ad0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa296c08 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa296bf8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa296bd8 <col:36> 'int' lvalue Var 0xa294bb0 '__len' 'int'))))
    (CompoundStmt 0xa296ec8 <line:1074:4, line:1079:4>
      (DeclStmt 0xa296d78 <line:1075:6, line:1076:18>
        0xa296c60 "_CharT *__ws3 =
          (CXXStaticCastExpr 0xa296d60 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa296d30 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0xa296d20 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa296c94 <col:43> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa296d08 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa296cb8 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa296cf8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa296ce8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa296cd0 <col:13> 'const streamsize':'const int' lvalue Var 0xa296ad0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa296e48 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0xa296d98 <col:6> '<bound member function type>' ->_M_pad 0xa28c4c0
          (CXXThisExpr 0xa296d88 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa296db8 <col:13> '_CharT' lvalue ParmVar 0xa294280 '__fill' '_CharT')
        (DeclRefExpr 0xa296dd0 <col:21> 'const streamsize':'const int' lvalue Var 0xa296ad0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa296de8 <col:26> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa296e00 <col:32> '_CharT *' lvalue Var 0xa296c60 '__ws3' '_CharT *')
        (DeclRefExpr 0xa296e18 <col:39> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
        (DeclRefExpr 0xa296e30 <col:45> 'int' lvalue Var 0xa294bb0 '__len' 'int'))
      (BinaryOperator 0xa296eb0 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa296e7c <col:6> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
        (DeclRefExpr 0xa296e94 <col:13> '_CharT *' lvalue Var 0xa296c60 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa296f98 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa296f78 <col:2, col:7> '<bound member function type>' .width 0xa1ecbe0
      (DeclRefExpr 0xa296f04 <col:2> 'class std::ios_base' lvalue ParmVar 0xa294240 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa296f60 <col:13> 'int' 0))
  (ReturnStmt 0xa2979b0 <line:1084:2, col:38>
    (CallExpr 0xa297050 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa296fd0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
      (DeclRefExpr 0xa297008 <col:22> '_OutIter' lvalue ParmVar 0xa2941f0 '__s' '_OutIter')
      (DeclRefExpr 0xa297020 <col:27> '_CharT *' lvalue Var 0xa2956d0 '__ws' '_CharT *')
      (DeclRefExpr 0xa297038 <col:33> 'int' lvalue Var 0xa294bb0 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0xa2996e0 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0xa297ff0 <line:1092:7, col:54>
    0xa297f10 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa297fc0 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa297f9c <col:42, col:47> '<bound member function type>' .flags 0xa1ec500
          (ImplicitCastExpr 0xa297fe0 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa297f44 <col:42> 'class std::ios_base' lvalue ParmVar 0xa297d20 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa299698 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0xa298108 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0xa2980f8 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0xa2980c8 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa2980a0 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa298090 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa298078 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa298058 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa298000 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa297f10 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa298068 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa298034 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6ca0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0xa2980e0 <col:46> 'int' 0))
    (CompoundStmt 0xa2982c0 <line:1094:9, line:1097:9>
      (DeclStmt 0xa2981a0 <line:1095:11, col:31>
        0xa298130 "const long __l =
          (ImplicitCastExpr 0xa298190 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0xa298180 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa298164 <col:28> '_Bool' lvalue ParmVar 0xa297da0 '__v' '_Bool')))")
      (BinaryOperator 0xa2982a8 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa2981b0 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa298278 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa2981d8 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa298214 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa29822c <col:36> 'class std::ios_base' lvalue ParmVar 0xa297d20 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa298244 <col:42> 'char_type':'_CharT' lvalue ParmVar 0xa297d60 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0xa29825c <col:50> 'const long' lvalue Var 0xa298130 '__l' 'const long'))))
    (CompoundStmt 0xa299660 <line:1099:9, line:1135:2>
      (DeclStmt 0xa2983b0 <line:1100:4, col:62>
        0xa298380 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa2984b8 <line:1101:4, col:34>
        0xa298480 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa298580 <line:1102:4, col:42>
        0xa2984e0 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa298550 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa29852c <col:26, col:31> '<bound member function type>' ._M_getloc 0xa1ecf00
              (ImplicitCastExpr 0xa298570 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa298514 <col:26> 'class std::ios_base' lvalue ParmVar 0xa297d20 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa298648 <line:1103:4, col:42>
        0xa2985c0 "const __cache_type *__lc =
          (CallExpr 0xa298628 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa2985f4 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa298480 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa29860c <col:36> 'const class std::locale' lvalue Var 0xa2984e0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa2987b0 <line:1105:4, line:1106:51>
        0xa298690 "const _CharT *__name =
          (ConditionalOperator 0xa298790 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0xa298780 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa2986c4 <col:27> '_Bool' lvalue ParmVar 0xa297da0 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa2986f8 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa2986dc <col:33> 'const __cache_type *' lvalue Var 0xa2985c0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa298748 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa29872c <col:33> 'const __cache_type *' lvalue Var 0xa2985c0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa2988f0 <line:1107:4, line:1108:45>
        0xa2987d0 "int __len =
          (ConditionalOperator 0xa2988d0 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0xa2988c0 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa298804 <col:16> '_Bool' lvalue ParmVar 0xa297da0 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa298838 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa29881c <col:22> 'const __cache_type *' lvalue Var 0xa2985c0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa298888 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa29886c <col:22> 'const __cache_type *' lvalue Var 0xa2985c0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa2989f0 <line:1110:4, col:39>
        0xa298910 "const streamsize __w =
          (CXXMemberCallExpr 0xa2989c0 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0xa29899c <col:27, col:32> '<bound member function type>' .width 0xa1ecb20
              (ImplicitCastExpr 0xa2989e0 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa298944 <col:27> 'class std::ios_base' lvalue ParmVar 0xa297d20 '__io' 'class std::ios_base &'))))")
      (IfStmt 0xa2994a0 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0xa298a70 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0xa298a60 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa298a00 <col:8> 'const streamsize':'const int' lvalue Var 0xa298910 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0xa298a48 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0xa298a38 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0xa298a18 <col:38> 'int' lvalue Var 0xa2987d0 '__len' 'int'))))
        (CompoundStmt 0xa299478 <line:1112:6, line:1132:6>
          (DeclStmt 0xa298b30 <line:1113:8, col:45>
            0xa298a90 "const streamsize __plen =
              (BinaryOperator 0xa298b18 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0xa298af8 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa298ac4 <col:34> 'const streamsize':'const int' lvalue Var 0xa298910 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0xa298b08 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa298adc <col:40> 'int' lvalue Var 0xa2987d0 '__len' 'int')))")
          (DeclStmt 0xa298c88 <line:1114:8, line:1116:18>
            0xa298b70 "_CharT *__ps =
              (CXXStaticCastExpr 0xa298c70 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0xa298c40 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0xa298c30 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa298ba4 <col:26> 'void *(unsigned int)' lvalue Function 0xa290ec0 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0xa298c18 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0xa298bc8 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0xa298c08 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0xa298bf8 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa298be0 <col:10> 'const streamsize':'const int' lvalue Var 0xa298a90 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0xa298dd0 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa298d50 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0xa298d84 <col:36> '_CharT *' lvalue Var 0xa298b70 '__ps' '_CharT *')
            (DeclRefExpr 0xa298d9c <col:42> 'const streamsize':'const int' lvalue Var 0xa298a90 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0xa298db4 <col:50> 'char_type':'_CharT' lvalue ParmVar 0xa297d60 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0xa298e88 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0xa298e68 <col:8, col:13> '<bound member function type>' .width 0xa1ecbe0
              (DeclRefExpr 0xa298df8 <col:8> 'class std::ios_base' lvalue ParmVar 0xa297d20 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0xa298e50 <col:19> 'int' 0))
          (IfStmt 0xa299430 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0xa298ff8 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0xa298fd8 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0xa298f70 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0xa298f48 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa298f38 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa298f20 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa298f00 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa298ea8 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa297f10 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa298f10 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa298edc <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea330 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0xa298fe8 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa298fc8 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa298fa4 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9f70 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0xa299220 <line:1122:3, line:1125:3>
              (BinaryOperator 0xa299118 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa29903c <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa2990f0 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa299070 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
                  (DeclRefExpr 0xa2990a8 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa2990c0 <col:29> 'const _CharT *' lvalue Var 0xa298690 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa2990d8 <col:37> 'int' lvalue Var 0xa2987d0 '__len' 'int')))
              (BinaryOperator 0xa299208 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa299130 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa2991e0 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa299160 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
                  (DeclRefExpr 0xa299198 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa2991b0 <col:29> '_CharT *' lvalue Var 0xa298b70 '__ps' '_CharT *')
                  (DeclRefExpr 0xa2991c8 <col:35> 'const streamsize':'const int' lvalue Var 0xa298a90 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0xa299418 <line:1127:3, line:1130:3>
              (BinaryOperator 0xa299310 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa299238 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa2992e8 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa299268 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
                  (DeclRefExpr 0xa2992a0 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa2992b8 <col:29> '_CharT *' lvalue Var 0xa298b70 '__ps' '_CharT *')
                  (DeclRefExpr 0xa2992d0 <col:35> 'const streamsize':'const int' lvalue Var 0xa298a90 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0xa299400 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa299328 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa2993d8 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa299358 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
                  (DeclRefExpr 0xa299390 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa2993a8 <col:29> 'const _CharT *' lvalue Var 0xa298690 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa2993c0 <col:37> 'int' lvalue Var 0xa2987d0 '__len' 'int')))))
          (ReturnStmt 0xa299468 <line:1131:8, col:15>
            (DeclRefExpr 0xa29944c <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0xa299550 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0xa299530 <col:4, col:9> '<bound member function type>' .width 0xa1ecbe0
          (DeclRefExpr 0xa2994bc <col:4> 'class std::ios_base' lvalue ParmVar 0xa297d20 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0xa299518 <col:15> 'int' 0))
      (BinaryOperator 0xa299648 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa299570 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa299620 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa2995a0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2416f0 0xa241ab0)
          (DeclRefExpr 0xa2995d8 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa2995f0 <col:28> 'const _CharT *' lvalue Var 0xa298690 '__name' 'const _CharT *')
          (DeclRefExpr 0xa299608 <col:36> 'int' lvalue Var 0xa2987d0 '__len' 'int')))))
  (ReturnStmt 0xa2996d0 <line:1136:7, col:14>
    (DeclRefExpr 0xa2996b4 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa297cd0 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0xa299cc8 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0xa299cb8 <col:7, col:60>
    (CallExpr 0xa299c88 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0xa299bd0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa299c0c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa2999a0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa299c24 <col:35> 'class std::ios_base' lvalue ParmVar 0xa2999f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa299c3c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa299a30 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0xa299c60 <col:49, col:54> 'char')
      (DeclRefExpr 0xa299c70 <col:57> 'double' lvalue ParmVar 0xa299a80 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0xa29a2a8 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0xa29a298 <col:7, col:57>
    (CallExpr 0xa29a268 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0xa29a1b0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa29a1ec <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa299f80 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa29a204 <col:35> 'class std::ios_base' lvalue ParmVar 0xa299fd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa29a21c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa29a010 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0xa29a238 <col:49> 'char'76)
      (DeclRefExpr 0xa29a24c <col:54> 'long double' lvalue ParmVar 0xa29a060 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0xa29b138 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0xa29a890 <line:1166:7, col:54>
    0xa29a7b0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa29a860 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa29a83c <col:42, col:47> '<bound member function type>' .flags 0xa1ec500
          (ImplicitCastExpr 0xa29a880 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa29a7e4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa29a5b0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa29aa60 <line:1167:7, line:1168:29>
    0xa29a8d0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa29aa40 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa29aa30 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa29aa18 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa1e30d0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0xa29aa00 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa29a9d8 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa29a9c8 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa29a9b0 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e1c10 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa29a990 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa29a930 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa29a9a0 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa29a96c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea2d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0xa29ad00 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa29acdc <col:7, col:12> '<bound member function type>' .flags 0xa1ec5f0
      (DeclRefExpr 0xa29aa70 <col:7> 'class std::ios_base' lvalue ParmVar 0xa29a5b0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa29acb8 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa29aca8 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa29ac90 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e1c10 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa29ab68 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa29ab40 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa29ab30 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa29ab18 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa29aaf8 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa29aac8 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa29a7b0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa29ab08 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa29aae0 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa29a8d0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0xa29ac78 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa29ac50 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa29ac40 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa29ac28 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e1c10 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa29ac08 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa29aba8 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa29ac18 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa29abe4 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea0f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0xa29aef0 <line:1171:7, line:1173:57>
    0xa29aec0 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0xa29b038 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0xa29af00 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0xa29a560 '__s' 'iter_type':'_OutIter')
    (CallExpr 0xa29b008 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0xa29af28 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa29af64 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0xa29a560 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa29af7c <col:32> 'class std::ios_base' lvalue ParmVar 0xa29a5b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa29af94 <col:38> 'char_type':'_CharT' lvalue ParmVar 0xa29a5f0 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0xa29aff0 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0xa29afe0 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0xa29afc0 <col:37> 'const void *' lvalue ParmVar 0xa29a640 '__v' 'const void *')))))
  (CXXMemberCallExpr 0xa29b0e0 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa29b0c0 <col:7, col:12> '<bound member function type>' .flags 0xa1ec5f0
      (DeclRefExpr 0xa29b050 <col:7> 'class std::ios_base' lvalue ParmVar 0xa29a5b0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa29b100 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa29b0a8 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa29a7b0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa29b128 <line:1178:7, col:14>
    (DeclRefExpr 0xa29b10c <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa29a560 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0xa29cfc0 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0xa29b7d0 <line:1196:7, col:69>
    0xa29b700 "const size_t __plen =
      (CXXStaticCastExpr 0xa29b7b8 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0xa29b7a8 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0xa29b788 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0xa29b768 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa29b734 <col:49> 'streamsize':'int' lvalue ParmVar 0xa29b570 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0xa29b778 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa29b74c <col:60> 'streamsize':'int' lvalue ParmVar 0xa29b5b0 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0xa29b990 <line:1197:7, col:79>
    0xa29b810 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0xa29b968 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa29b958 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa29b940 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa1e19e0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa29b8c0 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa29b89c <col:43, col:48> '<bound member function type>' .flags 0xa1ec500
            (ImplicitCastExpr 0xa29b8e0 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa29b844 <col:43> 'class std::ios_base' lvalue ParmVar 0xa29b410 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa29b930 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa29b90c <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea330 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0xa29bcc8 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0xa29ba38 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa29ba18 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa29b9f8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa29b9a0 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa29b810 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa29ba28 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa29ba08 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa29b9d4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9f70 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa29bca8 <line:1201:2, line:1205:2>
      (CallExpr 0xa29bb28 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa29bab8 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0xa29badc <col:18> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
        (DeclRefExpr 0xa29baf4 <col:26> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
        (DeclRefExpr 0xa29bb0c <col:34> 'streamsize':'int' lvalue ParmVar 0xa29b5b0 '__oldlen' 'streamsize':'int'))
      (CallExpr 0xa29bc70 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa29bb78 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa29bc18 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa29bbd0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (DeclRefExpr 0xa29bb9c <col:20> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
          (DeclRefExpr 0xa29bbb4 <col:29> 'streamsize':'int' lvalue ParmVar 0xa29b5b0 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0xa29bc3c <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa29b700 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0xa29bc54 <col:47> '_CharT' lvalue ParmVar 0xa29b450 '__fill' '_CharT'))
      (ReturnStmt 0xa29bc98 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0xa29bd50 <line:1207:7, col:23>
    0xa29bcf0 "size_t __mod =
      (ImplicitCastExpr 0xa29bd40 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa29bd28 <col:22> 'int' 0))")
  (IfStmt 0xa29ccb0 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0xa29bdf8 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa29bdd8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa29bdb8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa29bd60 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa29b810 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa29bde8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa29bdc8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa29bd94 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9f10 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa29cc90 <line:1209:2, line:1234:2>
      (DeclStmt 0xa29bef0 <line:1213:11, col:49>
        0xa29be50 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa29bec0 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0xa29be9c <col:33, col:38> '<bound member function type>' ._M_getloc 0xa1ecf00
              (ImplicitCastExpr 0xa29bee0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa29be84 <col:33> 'class std::ios_base' lvalue ParmVar 0xa29b410 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa29c150 <line:1214:4, col:67>
        0xa29bfd0 "const ctype<_CharT> &__ctype =
          (CallExpr 0xa29c130 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0xa29c0b0 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
            (DeclRefExpr 0xa29c118 <col:61> 'const class std::locale' lvalue Var 0xa29be50 '__loc' 'const class std::locale &'))")
      (IfStmt 0xa29cc70 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0xa29c410 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa29c290 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa29c230 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (CallExpr 0xa29c1c8 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa29c178 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa29c160 <col:8> 'const ctype<_CharT>' lvalue Var 0xa29bfd0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa29c1b0 <col:22> 'char'45))
            (ArraySubscriptExpr 0xa29c218 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa29c1e8 <col:30> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa29c200 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0xa29c3e8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa29c388 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (CallExpr 0xa29c320 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa29c2d0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0xa29c2b4 <col:11> 'const ctype<_CharT>' lvalue Var 0xa29bfd0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa29c308 <col:25> 'char'43))
            (ArraySubscriptExpr 0xa29c370 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0xa29c340 <col:33> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa29c358 <col:40> 'int' 0))))
        (CompoundStmt 0xa29c558 <line:1218:6, line:1222:6>
          (BinaryOperator 0xa29c4b8 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0xa29c458 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa29c428 <col:8> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
              (IntegerLiteral 0xa29c440 <col:15> 'int' 0))
            (ArraySubscriptExpr 0xa29c4a0 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa29c46c <col:20> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa29c488 <col:27> 'int' 0)))
          (BinaryOperator 0xa29c510 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa29c4d0 <col:8> 'size_t':'unsigned int' lvalue Var 0xa29bcf0 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa29c500 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa29c4e8 <col:16> 'int' 1)))
          (UnaryOperator 0xa29c540 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa29c528 <col:10> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')))
        (IfStmt 0xa29cc50 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0xa29ca20 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0xa29c728 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa29c6a8 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa29c648 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                (CallExpr 0xa29c5e0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa29c590 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0xa29c574 <col:13> 'const ctype<_CharT>' lvalue Var 0xa29bfd0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0xa29c5c8 <col:27> 'char'48))
                (ArraySubscriptExpr 0xa29c630 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa29c600 <col:35> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
                  (IntegerLiteral 0xa29c618 <col:42> 'int' 0)))
              (BinaryOperator 0xa29c710 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0xa29c700 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa29c6cc <col:9> 'streamsize':'int' lvalue ParmVar 0xa29b5b0 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0xa29c6e8 <col:20> 'int' 1)))
            (ParenExpr 0xa29ca08 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0xa29c9f0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0xa29c870 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0xa29c810 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (CallExpr 0xa29c7a8 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa29c758 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa29c740 <col:10> 'const ctype<_CharT>' lvalue Var 0xa29bfd0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa29c790 <col:24> 'char'120))
                  (ArraySubscriptExpr 0xa29c7f8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa29c7c8 <col:32> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa29c7e0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0xa29c9c8 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0xa29c968 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (CallExpr 0xa29c900 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa29c8b0 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0xa29c894 <col:13> 'const ctype<_CharT>' lvalue Var 0xa29bfd0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa29c8e8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0xa29c950 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0xa29c920 <col:35> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa29c938 <col:42> 'int' 1))))))
          (CompoundStmt 0xa29cc30 <line:1227:6, line:1232:6>
            (BinaryOperator 0xa29cac8 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa29ca68 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa29ca38 <col:8> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
                (IntegerLiteral 0xa29ca50 <col:15> 'int' 0))
              (ArraySubscriptExpr 0xa29cab0 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa29ca7c <col:20> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa29ca98 <col:27> 'int' 0)))
            (BinaryOperator 0xa29cb70 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa29cb10 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa29cae0 <col:8> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
                (IntegerLiteral 0xa29caf8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0xa29cb58 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa29cb24 <col:20> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa29cb40 <col:27> 'int' 1)))
            (BinaryOperator 0xa29cbc8 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0xa29cb88 <col:8> 'size_t':'unsigned int' lvalue Var 0xa29bcf0 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0xa29cbb8 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa29cba0 <col:16> 'int' 2)))
            (CompoundAssignOperator 0xa29cc10 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa29cbe0 <col:8> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
              (IntegerLiteral 0xa29cbf8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0xa29cd68 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa29ccf8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0xa29cd1c <col:23> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
    (DeclRefExpr 0xa29cd34 <col:31> 'const size_t':'const unsigned int' lvalue Var 0xa29b700 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0xa29cd4c <col:39> '_CharT' lvalue ParmVar 0xa29b450 '__fill' '_CharT'))
  (CallExpr 0xa29cf98 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa29cdb8 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0xa29ce58 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa29ce10 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
      (DeclRefExpr 0xa29cddc <col:21> '_CharT *' lvalue ParmVar 0xa29b4c0 '__news' '_CharT *')
      (DeclRefExpr 0xa29cdf4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0xa29b700 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0xa29cef8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa29ceb0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
      (DeclRefExpr 0xa29ce7c <col:38> 'const _CharT *' lvalue ParmVar 0xa29b530 '__olds' 'const _CharT *')
      (DeclRefExpr 0xa29ce94 <col:47> 'size_t':'unsigned int' lvalue Var 0xa29bcf0 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0xa29cf80 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0xa29cf70 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa29cf50 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa29cf1c <col:54> 'streamsize':'int' lvalue ParmVar 0xa29b5b0 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0xa29cf60 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa29cf34 <col:65> 'size_t':'unsigned int' lvalue Var 0xa29bcf0 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0xa29e2e0 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0xa29d3e0 <line:1245:7, col:23>
    0xa29d380 "size_t __idx =
      (ImplicitCastExpr 0xa29d3d0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa29d3b8 <col:22> 'int' 0))")
  (DeclStmt 0xa29d460 <line:1246:7, col:23>
    0xa29d400 "size_t __ctr =
      (ImplicitCastExpr 0xa29d450 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa29d438 <col:22> 'int' 0))")
  (WhileStmt 0xa29da40 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0xa29d848 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0xa29d6c8 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa29d5b0 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa29d568 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (CXXOperatorCallExpr 0xa29d4d8 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa29d4a0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (DeclRefExpr 0xa29d470 <col:14> 'const _CharT *' lvalue ParmVar 0xa29d210 '__last' 'const _CharT *')
            (DeclRefExpr 0xa29d488 <col:23> 'const _CharT *' lvalue ParmVar 0xa29d1c0 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0xa29d550 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0xa29d530 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa29d4fc <col:33> 'const char *' lvalue ParmVar 0xa29d110 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0xa29d540 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa29d514 <col:40> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0xa29d6b0 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0xa29d6a0 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0xa29d670 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0xa29d660 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0xa29d650 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0xa29d628 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0xa29d608 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0xa29d5d4 <col:35> 'const char *' lvalue ParmVar 0xa29d110 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0xa29d618 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa29d5ec <col:42> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0xa29d688 <col:52> 'int' 0)))
      (BinaryOperator 0xa29d830 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0xa29d800 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa29d7f0 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0xa29d730 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0xa29d710 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa29d6e0 <col:10> 'const char *' lvalue ParmVar 0xa29d110 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0xa29d720 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa29d6f8 <col:17> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0xa29d820 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa29d810 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0xa29d7d0 <col:27, col:62> 'const char':'const char' lvalue Var 0xa275a20 '__max' 'const char':'const char')))))
    (CompoundStmt 0xa29da28 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0xa29d8e0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa29d860 <col:4> 'const _CharT *' lvalue ParmVar 0xa29d210 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0xa29d8c8 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0xa29d8a8 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa29d878 <col:14> 'const char *' lvalue ParmVar 0xa29d110 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0xa29d8b8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa29d890 <col:21> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0xa29da08 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0xa29d990 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0xa29d980 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa29d900 <col:4> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0xa29d968 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0xa29d948 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa29d918 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0xa29d150 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa29d958 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa29d930 <col:22> 'int' 1))))
        (UnaryOperator 0xa29d9c0 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa29d9a8 <col:28> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0xa29d9f0 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa29d9d4 <col:38> 'size_t':'unsigned int' lvalue Var 0xa29d400 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0xa29dbe0 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa29dae0 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa29da88 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (DeclRefExpr 0xa29da54 <col:14> 'const _CharT *' lvalue ParmVar 0xa29d1c0 '__first' 'const _CharT *')
      (DeclRefExpr 0xa29da6c <col:25> 'const _CharT *' lvalue ParmVar 0xa29d210 '__last' 'const _CharT *'))
    (BinaryOperator 0xa29dbc8 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa29db50 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0xa29db38 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa29db04 <col:3> '_CharT *' lvalue ParmVar 0xa29d080 '__s' '_CharT *')))
      (UnaryOperator 0xa29dbb0 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0xa29db98 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa29db64 <col:12> 'const _CharT *' lvalue ParmVar 0xa29d1c0 '__first' 'const _CharT *')))))
  (WhileStmt 0xa29df40 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa29dc28 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa29dc10 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa29dbf4 <col:14> 'size_t':'unsigned int' lvalue Var 0xa29d400 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0xa29df28 <line:1260:2, line:1264:2>
      (BinaryOperator 0xa29dcb0 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa29dc80 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa29dc68 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa29dc34 <col:5> '_CharT *' lvalue ParmVar 0xa29d080 '__s' '_CharT *')))
        (DeclRefExpr 0xa29dc94 <col:13> '_CharT' lvalue ParmVar 0xa29d0c0 '__sep' '_CharT'))
      (ForStmt 0xa29df00 <line:1262:4, line:1263:23>
        (DeclStmt 0xa29dd80 <line:1262:9, col:33>
          0xa29dcd0 "char __i =
            (ImplicitCastExpr 0xa29dd70 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa29dd58 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa29dd38 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa29dd04 <col:20> 'const char *' lvalue ParmVar 0xa29d110 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa29dd48 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa29dd1c <col:27> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa29dde0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa29ddd0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa29ddc0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa29dd90 <col:35> 'char' lvalue Var 0xa29dcd0 '__i' 'char')))
          (IntegerLiteral 0xa29dda8 <col:41> 'int' 0))
        (UnaryOperator 0xa29de10 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa29ddf8 <col:46> 'char' lvalue Var 0xa29dcd0 '__i' 'char'))
        (BinaryOperator 0xa29dee8 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa29de70 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa29de58 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa29de24 <col:7> '_CharT *' lvalue ParmVar 0xa29d080 '__s' '_CharT *')))
          (UnaryOperator 0xa29ded0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa29deb8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa29de84 <col:16> 'const _CharT *' lvalue ParmVar 0xa29d1c0 '__first' 'const _CharT *')))))))
  (WhileStmt 0xa29e2a0 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa29df88 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa29df70 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa29df54 <col:14> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0xa29e288 <line:1267:2, line:1271:2>
      (BinaryOperator 0xa29e010 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa29dfe0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa29dfc8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa29df94 <col:5> '_CharT *' lvalue ParmVar 0xa29d080 '__s' '_CharT *')))
        (DeclRefExpr 0xa29dff4 <col:13> '_CharT' lvalue ParmVar 0xa29d0c0 '__sep' '_CharT'))
      (ForStmt 0xa29e260 <line:1269:4, line:1270:23>
        (DeclStmt 0xa29e0e0 <line:1269:9, col:33>
          0xa29e030 "char __i =
            (ImplicitCastExpr 0xa29e0d0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa29e0b8 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa29e098 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa29e064 <col:20> 'const char *' lvalue ParmVar 0xa29d110 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa29e0a8 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa29e07c <col:27> 'size_t':'unsigned int' lvalue Var 0xa29d380 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa29e140 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa29e130 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa29e120 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa29e0f0 <col:35> 'char' lvalue Var 0xa29e030 '__i' 'char')))
          (IntegerLiteral 0xa29e108 <col:41> 'int' 0))
        (UnaryOperator 0xa29e170 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa29e158 <col:46> 'char' lvalue Var 0xa29e030 '__i' 'char'))
        (BinaryOperator 0xa29e248 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa29e1d0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa29e1b8 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa29e184 <col:7> '_CharT *' lvalue ParmVar 0xa29d080 '__s' '_CharT *')))
          (UnaryOperator 0xa29e230 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa29e218 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa29e1e4 <col:16> 'const _CharT *' lvalue ParmVar 0xa29d1c0 '__first' 'const _CharT *')))))))
  (ReturnStmt 0xa29e2d0 <line:1273:7, col:14>
    (DeclRefExpr 0xa29e2b4 <col:14> '_CharT *' lvalue ParmVar 0xa29d080 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0xa2c2990 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0xa2c2930 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0xa2c2898 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa2c287c <col:12> 'const _Facet *' lvalue ParmVar 0xa2c2730 '__f' 'const _Facet *'))
    (CallExpr 0xa2c2910 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0xa2c2900 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2c28e4 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x9f594b0 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa2c2980 <line:51:7, col:15>
    (UnaryOperator 0xa2c2968 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa2c294c <col:15> 'const _Facet *' lvalue ParmVar 0xa2c2730 '__f' 'const _Facet *'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0xa2c5a10 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0xa2c5a00 <col:9, col:62>
    (ConditionalOperator 0xa2c59e0 <col:16, col:62> '<dependent type>'
      (CallExpr 0xa2c5950 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c5918 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c5908 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa2c5970 <col:31> 'int' 0)
      (CXXConstCastExpr 0xa2c59c8 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0xa2c5988 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0xa2c5aa0 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0xa2c5a90 <col:9, col:27>
    (CallExpr 0xa2c5a70 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2c5a38 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2c5a28 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0xa2c5af8 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0xa2c5ae8 <col:9, col:16>
    (MemberExpr 0xa2c5ac8 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa1eb1c0
      (CXXThisExpr 0xa2c5ab8 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0xa2c58e0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa2c58c4 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0xa2c5c60 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0xa2c5c40 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2c5b20 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2c5b10 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa2c5c18 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c5bd8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e1c10 0xa1e4490 0xa1e5700)
      (CallExpr 0xa2c5ba0 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c5b68 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c5b58 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa2c5bbc <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2c3d20 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0xa2c5e38 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0xa2c5cf8 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0xa2c5cc0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e5d80)
    (MemberExpr 0xa2c5c88 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa1eb1c0
      (CXXThisExpr 0xa2c5c78 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2c5ca8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2c3de0 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0xa2c5e18 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c5de0 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c5da0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (CallExpr 0xa2c5d68 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c5d30 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c5d20 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa2c5d84 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2c3de0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0xa2c5e08 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0xa2c5f68 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0xa2c5f58 <col:9, col:35>
    (CXXOperatorCallExpr 0xa2c5f30 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c5ed0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
      (CallExpr 0xa2c5e98 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c5e60 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c5e50 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa2c5eb8 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0xa2c6128 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0xa2c6118 <col:9, col:46>
    (CXXOperatorCallExpr 0xa2c60f0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c6098 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (ParenExpr 0xa2c6068 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa2c6040 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c6000 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CallExpr 0xa2c5fc8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c5f90 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c5f80 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa2c5fe4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa2c6080 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0xa2c6388 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0xa2c6378 <col:9, col:58>
    (CXXOperatorCallExpr 0xa2c6350 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c62f8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (ParenExpr 0xa2c62c8 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0xa2c62a0 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c6260 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CallExpr 0xa2c6188 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c6150 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c6140 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0xa2c6248 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0xa2c6220 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0xa2c6210 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2c61f8 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e5700 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0xa2c61d8 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2c61a4 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0xa2c61e8 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2c61bc <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0xa2c62e0 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0xa2c6548 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0xa2c6538 <col:9, col:46>
    (CXXOperatorCallExpr 0xa2c6510 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c64b8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (ParenExpr 0xa2c6488 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa2c6460 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c6420 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CallExpr 0xa2c63e8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c63b0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c63a0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa2c6404 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa2c64a0 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0xa2c65a0 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0xa2c6590 <col:9, col:16>
    (MemberExpr 0xa2c6570 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0xa1eb180
      (CXXThisExpr 0xa2c6560 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0xa2c66b0 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0xa2c6600 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0xa2c65c8 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa1eb180
      (CXXThisExpr 0xa2c65b8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2c65e8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2c4120 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0xa2c6690 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2c6628 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2c6618 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa2c6670 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa1eb1c0
      (CXXThisExpr 0xa2c6660 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0xa2c6728 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0xa2c67a8 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa2c67f8 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0xa2c6848 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0xa2c6898 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0xa2c68e8 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0xa2c69d8 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0xa2c69b8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2c6968 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2c6958 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2c699c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2c4310 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0xa2c69f0 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0xa2c6a40 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0xa2c6a30 <col:9, col:16>
    (MemberExpr 0xa2c6a10 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0xa2c3610
      (CXXThisExpr 0xa2c6a00 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0xa2c6c90 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0xa2c6bf8 <line:300:9, col:55>
    0xa2c6b90 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0xa2c6bd8 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa2c3610
        (CXXThisExpr 0xa2c6bc8 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa2c6c50 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0xa2c6c18 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa2c3610
      (CXXThisExpr 0xa2c6c08 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2c6c38 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0xa2c48a0 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0xa2c6c80 <line:302:9, col:16>
    (DeclRefExpr 0xa2c6c68 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0xa2c6b90 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0xa2c6cf0 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0xa2c6ce0 <col:9, col:16>
    (MemberExpr 0xa2c6cc0 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0xa2c3800
      (CXXThisExpr 0xa2c6cb0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0xa2c6ef8 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0xa2c6e98 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0xa2c6d48 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2c6d38 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0xa2c6d18 <col:7> '_Bool' lvalue ->_M_fill_init 0xa2c36a0
          (CXXThisExpr 0xa2c6d08 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0xa2c6e80 <line:364:4, line:367:4>
      (BinaryOperator 0xa2c6e10 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0xa2c6d70 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0xa2c3660
          (CXXThisExpr 0xa2c6d60 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2c6df0 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2c6da0 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c6d90 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0xa2c6dd8 <col:28> 'char'32)))
      (BinaryOperator 0xa2c6e68 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0xa2c6e38 <col:6> '_Bool' lvalue ->_M_fill_init 0xa2c36a0
          (CXXThisExpr 0xa2c6e28 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2c6e58 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0xa2c6ee8 <line:368:2, col:9>
    (MemberExpr 0xa2c6ec8 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0xa2c3660
      (CXXThisExpr 0xa2c6eb8 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0xa2c7058 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0xa2c6fc0 <line:383:2, col:32>
    0xa2c6f20 "char_type __old =
      (CallExpr 0xa2c6fa0 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c6f68 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c6f58 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0xa2c7018 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa2c6fe0 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0xa2c3660
      (CXXThisExpr 0xa2c6fd0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2c7000 <col:12> 'char_type':'_CharT' lvalue ParmVar 0xa2c5130 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0xa2c7048 <line:385:2, col:9>
    (DeclRefExpr 0xa2c7030 <col:9> 'char_type':'_CharT' lvalue Var 0xa2c6f20 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa2c71a0 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0xa2c7190 <col:9, col:60>
    (CallExpr 0xa2c7168 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2c7100 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa2c70e0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c7078 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
          (MemberExpr 0xa2c70c0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa2c3890
            (CXXThisExpr 0xa2c70b0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa2c7134 <col:47> 'char_type':'_CharT' lvalue ParmVar 0xa2c52f0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa2c714c <col:52> 'char' lvalue ParmVar 0xa2c5330 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0xa2c72c0 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0xa2c72b0 <col:9, col:49>
    (CallExpr 0xa2c7290 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2c7240 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa2c7220 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c71b8 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
          (MemberExpr 0xa2c7200 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa2c3890
            (CXXThisExpr 0xa2c71f0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa2c7274 <col:46> 'char' lvalue ParmVar 0xa2c5420 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0xa2c7338 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0xa2c7390 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0xa2c73e8 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa2c7438 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0xa2c7488 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0xa2c74d8 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0xa2c7528 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0xa2c7598 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0xa2c58e0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa2c58c4 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0xa2c7de0 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0xa2c7b98 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0xa2c7a30 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2c79f8 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0xa2c79e8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0xa2c7a98 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0xa2c7a60 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa1eb1c0
        (CXXThisExpr 0xa2c7a50 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2c7a80 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2c7900 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0xa2c7b80 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0xa2c7ac0 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa1eb1c0
        (CXXThisExpr 0xa2c7ab0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa2c7b58 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa2c7b48 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2c7b30 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e5700 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa2c7b10 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa2c7ae0 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2c7900 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0xa2c7b20 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa2c7af8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0xa2c7dc0 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c7cc8 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c7c88 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (CallExpr 0xa2c7c00 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c7bc8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c7bb8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa2c7c68 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c7c30 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c7c20 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0xa2c7d90 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0xa2c7d80 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2c7d64 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f59db0 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa2c7db0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa2c7d50 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa2c7d24 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa2c8788 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0xa2c8688 <line:55:7, col:61>
    0xa2c8620 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0xa2c8668 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa2c3800
        (CXXThisExpr 0xa2c8658 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa2c86e0 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa2c86a8 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa2c3800
      (CXXThisExpr 0xa2c8698 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2c86c8 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2c82a0 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0xa2c8740 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2c8708 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa2c86f8 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa2c8778 <line:58:7, col:14>
    (DeclRefExpr 0xa2c875c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0xa2c8620 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0xa2cfeb0 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0xa2cfe58 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c8e58 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c8e00 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (CXXThisExpr 0xa2c8d78 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0xa2c8de0 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa2c8da0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (DeclRefExpr 0xa2c8d88 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0xa2cfdf8 <line:68:2, line:107:2>
      (DeclStmt 0xa2c9260 <line:73:4, line:74:69>
        0xa2c8e90 "std::ios_base::_Words *__words =
          (ConditionalOperator 0xa2c9240 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0xa2c8fa0 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0xa2c8f78 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c8f30 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
                (CXXDependentScopeMemberExpr 0xa2c8ee0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2c8ec4 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0xa2c8f14 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0xa1ebc90 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0xa2c8fc8 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa1ebdc0
              (CXXThisExpr 0xa2c8fb8 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0xa2c9200 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0xa2c9000 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0xa2c8fe8 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0xa2c9308 <line:77:4, col:45>
        0xa2c9280 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0xa2c92d0 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0xa2c92b4 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0xa2c93b8 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2c9340 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa2c9330 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0xa2c9318 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa2c9280 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0xa2c9398 <line:79:6, col:29> 'void'
          (MemberExpr 0xa2c9374 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0xa1eb6b0
            (ImplicitCastExpr 0xa2c9368 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0xa2c934c <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa2c9280 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0xa2c9420 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0xa2c93e8 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa1eb880
          (CXXThisExpr 0xa2c93d8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2c9408 <col:22> 'enum std::ios_base::event' EnumConstant 0xa1eac40 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0xa2c95e0 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa2c94f8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c94a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (MemberExpr 0xa2c9450 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa1ebe60
            (CXXThisExpr 0xa2c9440 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0xa2c9480 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa1ebdc0
            (CXXThisExpr 0xa2c9470 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0xa2c95c8 <line:82:6, line:85:6>
          (CXXDeleteExpr 0xa2c9550 <line:83:8, col:18> 'void'
            (MemberExpr 0xa2c9530 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa1ebe60
              (CXXThisExpr 0xa2c9520 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0xa2c95b0 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa2c9578 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa1ebe60
              (CXXThisExpr 0xa2c9568 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa2c9598 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0xa2c9630 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0xa2c9610 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0xa1eb940
          (CXXThisExpr 0xa2c9600 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0xa2c9698 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa2c9660 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0xa1eb7a0
          (CXXThisExpr 0xa2c9650 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2c9680 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa2c9280 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0xa2c9928 <line:90:4, line:91:38>
        (DeclStmt 0xa2c9710 <line:90:9, col:20>
          0xa2c96c0 "int __i =
            (IntegerLiteral 0xa2c96f8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa2c97d0 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c9788 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (DeclRefExpr 0xa2c9720 <col:22> 'int' lvalue Var 0xa2c96c0 '__i' 'int')
          (CXXDependentScopeMemberExpr 0xa2c9750 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa2c9738 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0xa2c9810 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0xa2c97f4 <col:50> 'int' lvalue Var 0xa2c96c0 '__i' 'int'))
        (BinaryOperator 0xa2c9910 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0xa2c9878 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0xa2c9858 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0xa2c9824 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0xa2c8e90 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0xa2c9868 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0xa2c983c <col:14> 'int' lvalue Var 0xa2c96c0 '__i' 'int')))
          (ArraySubscriptExpr 0xa2c98f8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2c98a8 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0xa2c988c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0xa2c98dc <col:35> 'int' lvalue Var 0xa2c96c0 '__i' 'int'))))
      (BinaryOperator 0xa2c9998 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0xa2c9960 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa1ebe60
          (CXXThisExpr 0xa2c9950 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2c9980 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0xa2c8e90 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0xa2c9a30 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0xa2c99c0 <col:4> 'int' lvalue ->_M_word_size 0xa1ebe00
          (CXXThisExpr 0xa2c99b0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0xa2c99f8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa2c99e0 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0xa2c9b00 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c9a58 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c9a48 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2c9ae0 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2c9aa8 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa2c9a8c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa2c9bd8 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c9b30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c9b20 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2c9bb8 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2c9b80 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa2c9b64 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa2c9cb0 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c9c08 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c9bf8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2c9c90 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2c9c58 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa2c9c3c <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa2cfa88 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c9ce0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c9cd0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2c9d68 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2c9d30 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0xa2c9d14 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa2cfb60 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2cfab8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2cfaa8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2cfb40 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2cfb08 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0xa2cfaec <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0xa2cfc20 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0xa2cfb90 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0xa1ebff0
          (CXXThisExpr 0xa2cfb80 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2cfc00 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2cfbc8 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa2cfbb0 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa2cfc98 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0xa2cfc48 <col:4> '<bound member function type>' ->_M_cache_locale 0xa2c5860
          (CXXThisExpr 0xa2cfc38 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0xa2cfc78 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0xa1ebff0
          (CXXThisExpr 0xa2cfc68 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa2cfd00 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0xa2cfcc8 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa1eb880
          (CXXThisExpr 0xa2cfcb8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2cfce8 <col:22> 'enum std::ios_base::event' EnumConstant 0xa1eacc0 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0xa2cfdd8 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2cfd30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2cfd20 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa2cfdb8 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2cfd80 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0xa2cfd64 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa2c8b30 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0xa2cfea0 <line:108:7, col:15>
    (UnaryOperator 0xa2cfe88 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2cfe78 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0xa2d0690 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0xa2d0320 <line:116:7, col:35>
    0xa2d0260 "std::locale __old =
      (ParenListExpr 0xa2d0300 <col:19, col:34> 'class std::locale'
        (CallExpr 0xa2d02e0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2d02a8 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa2d0298 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0xa2d03b0 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0xa2d0368 <col:7, col:17> '<bound member function type>' ->imbue 0xa1ecdd0
      (CXXThisExpr 0xa2d0358 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2d0394 <col:23> 'const class std::locale' lvalue ParmVar 0xa2d0170 '__loc' 'const class std::locale &'))
  (CallExpr 0xa2d0418 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0xa2d03e0 <col:7> '<bound member function type>' ->_M_cache_locale 0xa2c5860
      (CXXThisExpr 0xa2d03d0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2d0400 <col:23> 'const class std::locale' lvalue ParmVar 0xa2d0170 '__loc' 'const class std::locale &'))
  (IfStmt 0xa2d0610 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2d0510 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa2d04b8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (CallExpr 0xa2d0480 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2d0448 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa2d0438 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa2d04a0 <col:28> 'int' 0))
    (CallExpr 0xa2d05f0 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d05a0 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0xa2d0580 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2d0548 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0xa2d0538 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa2d05d4 <col:26> 'const class std::locale' lvalue ParmVar 0xa2d0170 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0xa2d0680 <line:121:7, col:14>
    (CXXConstructExpr 0xa2d0658 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa2d0648 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa2d062c <col:14> 'class std::locale' lvalue Var 0xa2d0260 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa2d0f30 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0xa2d0c00 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0xa2d0bd0 <col:7, col:17> '<bound member function type>' ->_M_init 0xa1ec040
      (CXXThisExpr 0xa2d0bc0 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0xa2d0c80 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0xa2d0c30 <col:7> '<bound member function type>' ->_M_cache_locale 0xa2c5860
      (CXXThisExpr 0xa2d0c20 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa2d0c60 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0xa1ebff0
      (CXXThisExpr 0xa2d0c50 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0xa2d0cf0 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0xa2d0cb0 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0xa2c3660
      (CXXThisExpr 0xa2d0ca0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0xa2d0cd8 <col:17, col:24> '_CharT'))
  (BinaryOperator 0xa2d0d48 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa2d0d18 <col:7> '_Bool' lvalue ->_M_fill_init 0xa2c36a0
      (CXXThisExpr 0xa2d0d08 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0xa2d0d38 <col:22> '_Bool' false))
  (BinaryOperator 0xa2d0da8 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0xa2d0d70 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa2c3610
      (CXXThisExpr 0xa2d0d60 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa2d0d90 <col:16> 'int' 0))
  (BinaryOperator 0xa2d0e08 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa2d0dd0 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa1eb180
      (CXXThisExpr 0xa2d0dc0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2d0df0 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0xa2d0e68 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa2d0e30 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa2c3800
      (CXXThisExpr 0xa2d0e20 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2d0e50 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2d0a80 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0xa2d0f18 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0xa2d0e90 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa1eb1c0
      (CXXThisExpr 0xa2d0e80 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0xa2d0ef8 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0xa2d0eb0 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2d0a80 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa2d0ec8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0xa2d0ee0 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0xa2d1b40 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0xa2d1590 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0xa2d13b8 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0xa2d12e4 <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa2d1388 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa2d1308 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0xa1d79f0)
        (DeclRefExpr 0xa2d1370 <col:52> 'const class std::locale' lvalue ParmVar 0xa2d1200 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa2d13a8 <col:60> '_Bool' true))
    (BinaryOperator 0xa2d1518 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0xa2d13f0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa2c3890
        (CXXThisExpr 0xa2d13e0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa2d14f8 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa2d14b8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CallExpr 0xa2d1498 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa2d1418 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa2d1480 <col:38> 'const class std::locale' lvalue ParmVar 0xa2d1200 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa2d1578 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0xa2d1540 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa2c3890
        (CXXThisExpr 0xa2d1530 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa2d1560 <col:13> 'int' 0)))
  (IfStmt 0xa2d1858 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0xa2d1680 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa2d15ac <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa2d1650 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa2d15d0 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa1d79f0)
        (DeclRefExpr 0xa2d1638 <col:54> 'const class std::locale' lvalue ParmVar 0xa2d1200 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa2d1670 <col:62> '_Bool' true))
    (BinaryOperator 0xa2d17e0 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa2d16b8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa2c3920
        (CXXThisExpr 0xa2d16a8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa2d17c0 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa2d1780 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CallExpr 0xa2d1760 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa2d16e0 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa2d1748 <col:42> 'const class std::locale' lvalue ParmVar 0xa2d1200 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa2d1840 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa2d1808 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa2c3920
        (CXXThisExpr 0xa2d17f8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa2d1828 <col:15> 'int' 0)))
  (IfStmt 0xa2d1b20 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0xa2d1948 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa2d1874 <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa2d1918 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa2d1898 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa1d79f0)
        (DeclRefExpr 0xa2d1900 <col:54> 'const class std::locale' lvalue ParmVar 0xa2d1200 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa2d1938 <col:62> '_Bool' true))
    (BinaryOperator 0xa2d1aa8 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa2d1980 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa2c39b0
        (CXXThisExpr 0xa2d1970 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa2d1a88 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa2d1a48 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CallExpr 0xa2d1a28 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa2d19a8 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
          (DeclRefExpr 0xa2d1a10 <col:42> 'const class std::locale' lvalue ParmVar 0xa2d1200 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa2d1b08 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa2d1ad0 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa2c39b0
        (CXXThisExpr 0xa2d1ac0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa2d1af0 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0xa2dafa8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0xa2daf88 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2daf38 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2daf28 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa2daf6c <col:20> '__streambuf_type *' lvalue ParmVar 0xa2d8ba0 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa2dafc0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0xa2db040 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0xa2db030 <line:114:2, col:19>
    (CallExpr 0xa2db010 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0xa2dafd0 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0xa2d8f60 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0xa2daff8 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa2dafe8 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa2db0f0 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0xa2db098 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa2db054 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa2d91d0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa2db080 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2db070 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa2db0e0 <line:124:2, col:10>
    (UnaryOperator 0xa2db0c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2db0b8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa2db1a0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0xa2db148 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa2db108 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa2d93b0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa2db130 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2db120 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa2db190 <line:134:2, col:10>
    (UnaryOperator 0xa2db178 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2db168 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0xa2db250 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0xa2db240 <col:9, col:29>
    (CallExpr 0xa2db220 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db1c8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db204 <col:26> 'long' lvalue ParmVar 0xa2d94d0 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0xa2db300 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0xa2db2f0 <col:9, col:29>
    (CallExpr 0xa2db2d0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db278 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db2b4 <col:26> 'unsigned long' lvalue ParmVar 0xa2d95f0 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0xa2db3b0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0xa2db3a0 <col:9, col:29>
    (CallExpr 0xa2db380 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db328 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db364 <col:26> '_Bool' lvalue ParmVar 0xa2d9700 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0xa2db4a8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0xa2db498 <line:185:2, col:50>
    (CallExpr 0xa2db478 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db3d8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa2db460 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa2db450 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa2db440 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa2db414 <col:46> 'unsigned short' lvalue ParmVar 0xa2d9940 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0xa2db5a0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0xa2db590 <line:196:2, col:50>
    (CallExpr 0xa2db570 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db4d0 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa2db558 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa2db548 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa2db538 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa2db50c <col:46> 'unsigned int' lvalue ParmVar 0xa2d9b80 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0xa2db650 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0xa2db640 <col:9, col:29>
    (CallExpr 0xa2db620 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db5c8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db604 <col:26> 'long long' lvalue ParmVar 0xa2d9ca0 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0xa2db700 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0xa2db6f0 <col:9, col:29>
    (CallExpr 0xa2db6d0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db678 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db6b4 <col:26> 'unsigned long long' lvalue ParmVar 0xa2d9dc0 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0xa2db7b0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0xa2db7a0 <col:9, col:29>
    (CallExpr 0xa2db780 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db728 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db764 <col:26> 'double' lvalue ParmVar 0xa2d9ee0 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0xa2db8a8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0xa2db898 <line:218:2, col:43>
    (CallExpr 0xa2db878 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db7d8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa2db860 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0xa2db850 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0xa2db840 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0xa2db814 <col:39> 'float' lvalue ParmVar 0xa2da000 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0xa2db958 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0xa2db948 <col:9, col:29>
    (CallExpr 0xa2db928 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db8d0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db90c <col:26> 'long double' lvalue ParmVar 0xa2da120 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0xa2dba08 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0xa2db9f8 <col:9, col:29>
    (CallExpr 0xa2db9d8 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2db980 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2db9bc <col:26> 'const void *' lvalue ParmVar 0xa2da240 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0xa2dbca0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0xa2dbb60 <line:290:2, col:57>
    0xa2dba30 "const streamsize __put =
      (CallExpr 0xa2dbb38 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2dbad0 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0xa2dbab0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2dba78 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0xa2dba68 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa2dbb04 <col:48> 'const char_type *' lvalue ParmVar 0xa2da5d0 '__s' 'const char_type *')
        (DeclRefExpr 0xa2dbb1c <col:53> 'streamsize':'int' lvalue ParmVar 0xa2da610 '__n' 'streamsize':'int'))")
  (IfStmt 0xa2dbc80 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0xa2dbbc0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0xa2dbba0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2dbb70 <col:6> 'const streamsize':'const int' lvalue Var 0xa2dba30 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa2dbbb0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2dbb88 <col:15> 'streamsize':'int' lvalue ParmVar 0xa2da610 '__n' 'streamsize':'int')))
    (CallExpr 0xa2dbc60 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2dbbe8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa2dbbd8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2dbc3c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa2dbd38 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0xa2dbd18 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2dbcc8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2dbcb8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa2dbd00 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0xa2dcb50 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0xa2dcb30 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0xa2dc7e0 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0xa2dc6e8 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0xa2dc6c0 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa2dc680 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CallExpr 0xa2dc620 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2dc5e8 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0xa2dc5c8 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa2dc1a0
                (CXXThisExpr 0xa2dc5b8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0xa2dc65c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea270 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0xa2dc7c8 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0xa2dc7a8 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0xa2dc798 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2dc73c <col:50> '_Bool (void) throw()' lvalue Function 0xa00b7c0 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0xa2dcb18 <line:410:4, line:414:4>
      (IfStmt 0xa2dcaf8 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0xa2dca18 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0xa2dc860 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2dc828 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0xa2dc808 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa2dc1a0
                (CXXThisExpr 0xa2dc7f8 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0xa2dc9f0 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa2dc990 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (CallExpr 0xa2dc940 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2dc908 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0xa2dc8e8 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2dc8b0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0xa2dc890 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa2dc1a0
                      (CXXThisExpr 0xa2dc880 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0xa2dc978 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0xa2dc960 <col:56> 'int' 1))))
        (CallExpr 0xa2dcad8 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2dca60 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0xa2dca40 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa2dc1a0
              (CXXThisExpr 0xa2dca30 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0xa2dcab4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0xa2dcbc8 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0xa2dcbb8 <col:9, col:16>
    (MemberExpr 0xa2dcb98 <col:16> 'const _Bool' lvalue ->_M_ok 0xa2dc040
      (CXXThisExpr 0xa2dcb88 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0xa2dd178 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0xa2dd168 <col:7, col:45>
    (CallExpr 0xa2dd140 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa2dd060 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa057750)
      (DeclRefExpr 0xa2dd094 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2dcea0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0xa2dd108 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa2dd0c8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (DeclRefExpr 0xa2dd0ac <col:39> '_CharT' lvalue ParmVar 0xa2dcee0 '__c' '_CharT'))
      (IntegerLiteral 0xa2dd128 <col:44> 'int' 1))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0xa2dd740 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0xa2dd730 <col:7, col:40>
    (ParenExpr 0xa2dd718 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0xa2dd6f0 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa2dd6b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2dd5e0 0xa2dd030 0xa113c80)
        (DeclRefExpr 0xa2dd610 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2dd450 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0xa2dd690 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2dd640 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0xa2dd628 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2dd450 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa2dd674 <col:36> 'char' lvalue ParmVar 0xa2dd490 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0xa2ddcd0 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0xa2ddcc0 <col:7, col:45>
    (CallExpr 0xa2ddc98 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa2ddc00 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa057750)
      (DeclRefExpr 0xa2ddc34 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2dda40 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0xa2ddc68 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0xa2ddc4c <col:39> 'char' lvalue ParmVar 0xa2dda80 '__c' 'char'))
      (IntegerLiteral 0xa2ddc80 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0xa2de238 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0xa2de228 <col:7, col:46>
    (ParenExpr 0xa2de210 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa2de1e8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa2de1a0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2de100 0xa2ddbd0 0xa2dd5e0 0xa2dd030 0xa113c80)
        (DeclRefExpr 0xa2de130 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2ddf60 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa2de188 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa2de178 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa2de168 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0xa2de148 <col:42> 'signed char' lvalue ParmVar 0xa2ddfb0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0xa2de798 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0xa2de788 <col:7, col:46>
    (ParenExpr 0xa2de770 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa2de748 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa2de700 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2de660 0xa2de100 0xa2ddbd0 0xa2dd5e0 0xa2dd030 0xa113c80)
        (DeclRefExpr 0xa2de690 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2de4c0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa2de6e8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa2de6d8 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa2de6c8 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0xa2de6a8 <col:42> 'unsigned char' lvalue ParmVar 0xa2de510 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0xa2deec0 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0xa2dee78 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0xa2dec78 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa2dec60 <col:12> 'const _CharT *' lvalue ParmVar 0xa2deae0 '__s' 'const _CharT *'))
    (CallExpr 0xa2ded20 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2deca8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa2dec8c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2dea70 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa2decfc <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa2dee50 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa2ded40 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa057750)
      (DeclRefExpr 0xa2ded74 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2dea70 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0xa2ded8c <col:26> 'const _CharT *' lvalue ParmVar 0xa2deae0 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0xa2dee38 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa2dee10 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa2dedd0 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa2dedf4 <col:45> 'const _CharT *' lvalue ParmVar 0xa2deae0 '__s' 'const _CharT *')))))
  (ReturnStmt 0xa2deeb0 <line:499:7, col:14>
    (DeclRefExpr 0xa2dee94 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2dea70 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0xa2dfa30 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0xa2df9e8 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0xa2df7e8 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2df7d8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa2df7c8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2df7b0 <col:12> 'const char *' lvalue ParmVar 0xa2df630 '__s' 'const char *'))))
    (CallExpr 0xa2df890 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2df818 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa2df7fc <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2df5e0 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0xa2df86c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa2df9c0 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa2df8b0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa057750)
      (DeclRefExpr 0xa2df8e4 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2df5e0 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0xa2df8fc <col:26> 'const char *' lvalue ParmVar 0xa2df630 '__s' 'const char *')
      (CXXStaticCastExpr 0xa2df9a8 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa2df980 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa2df940 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa2df964 <col:45> 'const char *' lvalue ParmVar 0xa2df630 '__s' 'const char *')))))
  (ReturnStmt 0xa2dfa20 <line:516:7, col:14>
    (DeclRefExpr 0xa2dfa04 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2df5e0 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0xa2e3840 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0xa2e3830 <col:7, col:58>
    (ParenExpr 0xa2e3818 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa2e37f0 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa2e3798 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2e3700 0xa2df780 0xa2df340 0xa2dec30 0xa2de660 0xa2de100 0xa2ddbd0 0xa2dd5e0 0xa2dd030 0xa113c80)
        (DeclRefExpr 0xa2e3730 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2e3540 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa2e3780 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa2e3770 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0xa2e3748 <col:54> 'const signed char *' lvalue ParmVar 0xa2e35b0 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0xa2e3dd8 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0xa2e3dc8 <col:7, col:58>
    (ParenExpr 0xa2e3db0 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa2e3d88 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa2e3d28 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2e3c90 0xa2e3700 0xa2df780 0xa2df340 0xa2dec30 0xa2de660 0xa2de100 0xa2ddbd0 0xa2dd5e0 0xa2dd030 0xa113c80)
        (DeclRefExpr 0xa2e3cc0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa2e3ad0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa2e3d10 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa2e3d00 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa2e3cd8 <col:54> 'const unsigned char *' lvalue ParmVar 0xa2e3b40 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa2e4388 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0xa2e4378 <col:7, col:46>
    (CallExpr 0xa2e4358 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa2e4230 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0xa2e4338 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2e4278 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa2e4260 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e40b0 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0xa2e4318 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2e42c8 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa2e42ac <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e40b0 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0xa2e4300 <col:40> 'char'10))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa2e4860 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0xa2e4850 <col:7, col:31>
    (CallExpr 0xa2e4830 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2e47d8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa2e47bc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e4660 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0xa2e4818 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa2e4d20 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0xa2e4d10 <col:7, col:25>
    (CallExpr 0xa2e4cf0 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2e4cb8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa2e4c9c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e4b40 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0xa2e5458 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0xa2e54a8 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e5330 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0xa2e5878 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0xa2e56c0 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0xa2e55e0 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0xa2e5550 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2e5518 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa2e5500 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e5330 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0xa2e55c0 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2e5588 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa2e556c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e5330 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0xa2e56a0 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2e5668 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0xa2e5648 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2e5610 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0xa2e55f8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e5330 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0xa2e5858 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0xa2e5730 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2e56f8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa2e56dc <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e5330 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0xa2e5790 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa2e5760 <col:2> '_Bool' lvalue ->_M_ok 0xa2dc040
        (CXXThisExpr 0xa2e5750 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0xa2e5780 <col:10> '_Bool' true))
    (CallExpr 0xa2e5838 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2e57c0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa2e57a8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2e5330 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa2e5814 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0xa2e6808 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0xa2e5fb0 <line:67:2, col:22>
    0xa2e5f30 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa2e5f90 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa2e5f78 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2e5f68 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa2e67b0 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0xa2e5fc0 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0xa2e5f30 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa2e6788 <line:69:4, line:86:4>
      (DeclStmt 0xa2e6098 <line:70:6, col:49>
        0xa2e6010 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa2e6088 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2e6064 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa2e64a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e60a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2e6488 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0xa2e61f8 <line:73:3, col:63>
            0xa2e6120 "const __num_put_type &__np =
              (CallExpr 0xa2e61d8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa2e6158 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
                (CXXDependentScopeMemberExpr 0xa2e61a0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2e6190 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa2e6468 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0xa2e6390 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2e6358 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0xa2e6328 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2e6220 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2e6208 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa2e6120 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0xa2e6268 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa2e6258 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0xa2e6290 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa2e6280 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0xa2e62f0 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2e62b8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2e62a8 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0xa2e630c <col:44> '_ValueT' lvalue ParmVar 0xa2e5c70 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0xa2e6440 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2e6430 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2e6418 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2e63ac <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e6010 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa2e6408 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2e63e4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa2e65a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e64c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2e6588 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0xa2e6558 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2e64e0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa2e64d0 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2e6534 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2e6578 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0xa2e6690 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e65c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2e6678 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0xa2e6658 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2e65e0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa2e65d0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2e6634 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa2e6768 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2e66d8 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2e66c8 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2e66ac <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e6010 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa2e6748 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2e66f8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa2e66e8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa2e672c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e6010 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2e67f8 <line:87:2, col:10>
    (UnaryOperator 0xa2e67e0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2e67d0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0xa2e7318 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0xa2e6f78 <line:97:7, col:75>
    0xa2e6e30 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa2e6f50 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa2e6f10 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CallExpr 0xa2e6eb0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2e6e78 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa2e6e68 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa2e6eec <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa2e72f8 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0xa2e70e8 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa2e7020 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa2e7000 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e6fe0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e6f88 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2e6e30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa2e7010 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e6ff0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e6fbc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa2e70d0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa2e70b0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7090 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e7038 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2e6e30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa2e70c0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e70a0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e706c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa2e7208 <line:99:2, col:70>
      (CallExpr 0xa2e71e8 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0xa2e7110 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa2e71d0 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa2e71c0 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa2e7198 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0xa2e7188 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0xa2e7178 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0xa2e714c <col:65> 'short' lvalue ParmVar 0xa2e6bb0 '__n' 'short'))))))))
    (ReturnStmt 0xa2e72e8 <line:101:2, col:41>
      (CallExpr 0xa2e72c8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa2e7228 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa2e72b0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa2e72a0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa2e7290 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0xa2e7264 <col:37> 'short' lvalue ParmVar 0xa2e6bb0 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0xa2e7e18 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0xa2e7a78 <line:111:7, col:75>
    0xa2e7930 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa2e7a50 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa2e7a10 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CallExpr 0xa2e79b0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2e7978 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa2e7968 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa2e79ec <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea390 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa2e7df8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0xa2e7be8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa2e7b20 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa2e7b00 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7ae0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e7a88 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2e7930 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa2e7b10 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7af0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e7abc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e9fd0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa2e7bd0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa2e7bb0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7b90 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e7b38 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2e7930 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa2e7bc0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7ba0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa2e7b6c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1e6dc0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa2e7d08 <line:113:2, col:68>
      (CallExpr 0xa2e7ce8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0xa2e7c10 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa2e7cd0 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa2e7cc0 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa2e7c98 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0xa2e7c88 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0xa2e7c78 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa2e7c4c <col:63> 'int' lvalue ParmVar 0xa2e76b0 '__n' 'int'))))))))
    (ReturnStmt 0xa2e7de8 <line:115:2, col:41>
      (CallExpr 0xa2e7dc8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa2e7d28 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa2e7db0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa2e7da0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa2e7d90 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0xa2e7d64 <col:37> 'int' lvalue ParmVar 0xa2e76b0 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0xa2e8c08 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0xa2e84b8 <line:123:7, col:50>
    0xa2e8430 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa2e84a8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2e8484 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa2e8550 <line:124:7, col:27>
    0xa2e84d0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa2e8530 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa2e8518 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2e8508 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa2e8ad8 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0xa2e8590 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa2e8560 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0xa2e84d0 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0xa2e8578 <col:21> '__streambuf_type *' lvalue ParmVar 0xa2e81b0 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0xa2e89b0 <line:126:2, line:139:2>
      (IfStmt 0xa2e87a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e85a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2e8788 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0xa2e8768 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0xa2e8698 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0xa2e8670 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa2e85b8 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa2129f0)
                (DeclRefExpr 0xa2e85ec <col:31> '__streambuf_type *' lvalue ParmVar 0xa2e81b0 '__sbin' '__streambuf_type *')
                (CallExpr 0xa2e8650 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2e8618 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2e8608 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0xa2e8740 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2e8730 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2e8718 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2e86ac <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e8430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa2e8708 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2e86e4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa2e88a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e87c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2e8888 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0xa2e8858 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2e87e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2e87d0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2e8834 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2e8878 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0xa2e8990 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e88c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2e8978 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0xa2e8958 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2e88e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2e88d0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2e8934 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa2e8ab8 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0xa2e89e8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa2e89cc <col:17> '__streambuf_type *' lvalue ParmVar 0xa2e81b0 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa2e8a90 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa2e8a80 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2e8a68 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa2e89fc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e8430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa2e8a58 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa2e8a34 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa2e8bb0 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2e8b20 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2e8b10 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2e8af4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e8430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa2e8b90 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2e8b40 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2e8b30 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2e8b74 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e8430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2e8bf8 <line:144:7, col:15>
    (UnaryOperator 0xa2e8be0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2e8bd0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0xa2e9a60 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0xa2e9280 <line:158:7, col:27>
    0xa2e9200 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa2e9260 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa2e9248 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2e9238 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa2e9a08 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2e9290 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0xa2e9200 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa2e99e0 <line:160:2, line:177:2>
      (DeclStmt 0xa2e9368 <line:161:4, col:47>
        0xa2e92e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa2e9358 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2e9334 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa2e96f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e9378 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2e96e0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0xa2e94c0 <line:164:8, col:56>
            0xa2e93b0 "const int_type __put =
              (CallExpr 0xa2e94a0 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2e9450 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa2e9430 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2e93f8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2e93e8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa2e9484 <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa2e8fb0 '__c' 'char_type':'_CharT'))")
          (IfStmt 0xa2e96c0 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0xa2e95e0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2e9518 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa2e954c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2e93b0 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0xa2e95c0 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2e9588 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa2e9698 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2e9688 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2e9670 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2e9604 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e92e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa2e9660 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2e963c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa2e97f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e9718 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2e97e0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0xa2e97b0 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2e9738 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2e9728 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2e978c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2e97d0 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0xa2e98e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2e9818 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2e98d0 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0xa2e98b0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2e9838 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2e9828 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2e988c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa2e99c0 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2e9930 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2e9920 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2e9904 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e92e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa2e99a0 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2e9950 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2e9940 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa2e9984 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2e92e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2e9a50 <line:178:7, col:15>
    (UnaryOperator 0xa2e9a38 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2e9a28 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0xa2ea490 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0xa2ea130 <line:193:7, col:27>
    0xa2ea0b0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa2ea110 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa2ea0f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2ea0e8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa2ea438 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2ea140 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0xa2ea0b0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa2ea418 <line:195:2, line:205:2>
      (IfStmt 0xa2ea208 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2ea158 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2ea1f0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0xa2ea1c8 <col:8, col:25> '<dependent type>'
            (MemberExpr 0xa2ea178 <col:8> '<bound member function type>' ->_M_write 0xa2da6b0
              (CXXThisExpr 0xa2ea168 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2ea198 <col:17> 'const _CharT *' lvalue ParmVar 0xa2e9e20 '__s' 'const _CharT *')
            (DeclRefExpr 0xa2ea1b0 <col:22> 'streamsize':'int' lvalue ParmVar 0xa2e9e60 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0xa2ea308 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2ea228 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2ea2f0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0xa2ea2c0 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2ea248 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2ea238 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2ea29c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2ea2e0 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0xa2ea3f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2ea328 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2ea3e0 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0xa2ea3c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2ea348 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2ea338 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2ea39c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2ea480 <line:206:7, col:15>
    (UnaryOperator 0xa2ea468 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2ea458 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0xa2eb0f0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0xa2eaac8 <line:217:7, col:50>
    0xa2eaa40 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa2eaab8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2eaa94 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa2eadd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2eaad8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa2eadb8 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0xa2ead98 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0xa2eacc8 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0xa2eab30 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2eaaf8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2eaae8 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0xa2eaca0 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0xa2eac40 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
            (CallExpr 0xa2eabf0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2eabb8 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0xa2eab98 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2eab60 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2eab50 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0xa2eac28 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0xa2eac10 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0xa2ead70 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0xa2ead60 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2ead48 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0xa2eace0 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2eaa40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0xa2ead38 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2ead14 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa2eaed0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2eadf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2eaeb8 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0xa2eae88 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2eae10 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2eae00 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2eae64 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa2eaea8 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0xa2eafc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2eaef0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2eafa8 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0xa2eaf88 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2eaf10 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2eaf00 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2eaf64 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa2eb098 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2eb008 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2eaff8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2eafdc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2eaa40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa2eb078 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2eb028 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2eb018 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2eb05c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2eaa40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2eb0e0 <line:232:7, col:15>
    (UnaryOperator 0xa2eb0c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2eb0b8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0xa2efd30 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0xa2ef890 <line:240:7, col:36>
    0xa2ef800 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa2ef870 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa2ef858 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa2ef840 <col:34> 'int' 1)))")
  (IfStmt 0xa2efaf8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2ef8a0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa2efae0 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0xa2efac0 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0xa2ef918 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa2ef8f8 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2ef8c0 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa2ef8b0 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0xa2efaa8 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0xa2ef92c <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa2ef800 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0xa2efa80 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2ef9b0 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0xa2ef990 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2ef958 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2ef948 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0xa2ef9e8 <col:40> 'int' 0)
            (DeclRefExpr 0xa2efa1c <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa1ea960 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0xa2efa5c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa2efbf8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2efb18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2efbe0 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0xa2efbb0 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2efb38 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2efb28 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2efb8c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa2efbd0 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0xa2efce8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2efc18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2efcd0 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0xa2efcb0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2efc38 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2efc28 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2efc8c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa2efd20 <line:253:7, col:14>
    (DeclRefExpr 0xa2efd04 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa2ef800 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0xa2f0b60 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0xa2f03e8 <line:261:7, col:50>
    0xa2f0360 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa2f03d8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2f03b4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa2f0840 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2f03f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa2f0828 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0xa2f0808 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0xa2f0470 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa2f0450 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2f0418 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa2f0408 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0xa2f07f0 <line:265:6, line:274:6>
          (DeclStmt 0xa2f05e8 <line:268:8, line:269:27>
            0xa2f0490 "const pos_type __p =
              (CallExpr 0xa2f05c0 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2f0530 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0xa2f0510 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2f04d8 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2f04c8 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa2f0564 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa2f00e0 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0xa2f059c <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa2f07d0 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa2f06f0 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa2f0690 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa2f05f8 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa2f0490 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0xa2f0670 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0xa2f0650 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0xa2f0638 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0xa2f0620 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0xa2f07a8 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2f0798 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2f0780 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2f0714 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2f0360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa2f0770 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2f074c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa2f0940 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2f0860 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2f0928 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0xa2f08f8 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f0880 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f0870 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2f08d4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa2f0918 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0xa2f0a30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2f0960 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2f0a18 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0xa2f09f8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f0980 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f0970 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2f09d4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa2f0b08 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2f0a78 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2f0a68 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2f0a4c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2f0360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa2f0ae8 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f0a98 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f0a88 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2f0acc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2f0360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2f0b50 <line:285:7, col:15>
    (UnaryOperator 0xa2f0b38 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2f0b28 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa2f1a18 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0xa2f1288 <line:293:7, col:50>
    0xa2f1200 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa2f1278 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2f1254 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa2f16f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2f1298 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa2f16e0 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0xa2f16c0 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0xa2f1310 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa2f12f0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2f12b8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa2f12a8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0xa2f16a8 <line:297:6, line:306:6>
          (DeclStmt 0xa2f14a0 <line:300:8, line:301:27>
            0xa2f1330 "const pos_type __p =
              (CallExpr 0xa2f1478 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2f13d0 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0xa2f13b0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2f1378 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2f1368 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa2f1404 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa2f0f10 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0xa2f141c <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa2f0f80 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa2f1454 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa2f1688 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa2f15a8 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa2f1548 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
              (DeclRefExpr 0xa2f14b0 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa2f1330 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0xa2f1528 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0xa2f1508 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0xa2f14f0 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0xa2f14d8 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0xa2f1660 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2f1650 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2f1638 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2f15cc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2f1200 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa2f1628 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2f1604 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa2f17f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2f1718 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2f17e0 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0xa2f17b0 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f1738 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f1728 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2f178c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa2f17d0 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0xa2f18e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2f1818 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2f18d0 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0xa2f18b0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f1838 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f1828 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa2f188c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa2f19c0 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2f1930 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2f1920 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2f1904 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2f1200 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa2f19a0 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f1950 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f1940 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2f1984 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2f1200 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2f1a08 <line:317:7, col:15>
    (UnaryOperator 0xa2f19f0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2f19e0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0xa2f2e18 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0xa2f2dd0 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0xa2f1f08 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2f1ef8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa2f1ee8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2f1ecc <col:12> 'const char *' lvalue ParmVar 0xa2f1d50 '__s' 'const char *'))))
    (CallExpr 0xa2f1fb0 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f1f38 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa2f1f1c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2f1d00 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa2f1f8c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0xa2f2db0 <line:327:2, line:353:2>
      (DeclStmt 0xa2f2128 <line:330:4, col:56>
        0xa2f1fe0 "const size_t __clen =
          (CallExpr 0xa2f20f8 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0xa2f20e8 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2f2090 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x9ffd4d0 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0xa2f2118 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2f20b0 <col:52> 'const char *' lvalue ParmVar 0xa2f1d50 '__s' 'const char *')))")
      (IfStmt 0xa2f2b90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2f2138 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2f2b70 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0xa2f2778 <line:333:8, line:339:35>
            0xa2f2150 "struct __ptr_guard;"
            0xa2f2680 "struct __ptr_guard __pg =
              (ParenListExpr 0xa2f2750 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0xa2f2710 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0xa2f26b4 <col:27> 'const size_t':'const unsigned int' lvalue Var 0xa2f1fe0 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0xa2f2848 <line:341:8, col:35>
            0xa2f27a0 "_CharT *__ws =
              (CallExpr 0xa2f2828 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2f27f0 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2f27d4 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0xa2f2680 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0xa2f2aa0 <line:342:8, line:343:35>
            (DeclStmt 0xa2f28c0 <line:342:13, col:28>
              0xa2f2860 "size_t __i =
                (ImplicitCastExpr 0xa2f28b0 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa2f2898 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0xa2f2920 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0xa2f2900 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2f28d0 <col:30> 'size_t':'unsigned int' lvalue Var 0xa2f2860 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa2f2910 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2f28e8 <col:36> 'const size_t':'const unsigned int' lvalue Var 0xa2f1fe0 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0xa2f2950 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0xa2f2938 <col:46> 'size_t':'unsigned int' lvalue Var 0xa2f2860 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0xa2f2a88 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0xa2f2998 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa2f2964 <col:3> '_CharT *' lvalue Var 0xa2f27a0 '__ws' '_CharT *')
                (DeclRefExpr 0xa2f297c <col:8> 'size_t':'unsigned int' lvalue Var 0xa2f2860 '__i' 'size_t':'unsigned int'))
              (CallExpr 0xa2f2a68 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2f29c8 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2f29ac <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2f1d00 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0xa2f2a50 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0xa2f2a30 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0xa2f29fc <col:27> 'const char *' lvalue ParmVar 0xa2f1d50 '__s' 'const char *'))
                  (ImplicitCastExpr 0xa2f2a40 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2f2a14 <col:31> 'size_t':'unsigned int' lvalue Var 0xa2f2860 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0xa2f2b48 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f2ac8 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0xa057750)
            (DeclRefExpr 0xa2f2afc <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2f1d00 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0xa2f2b14 <col:32> '_CharT *' lvalue Var 0xa2f27a0 '__ws' '_CharT *')
            (DeclRefExpr 0xa2f2b2c <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa2f1fe0 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0xa2f2c98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2f2bb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2f2c80 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0xa2f2c50 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2f2bd8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa2f2bc0 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2f1d00 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa2f2c2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2f2c70 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0xa2f2d90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2f2cb8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2f2d78 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0xa2f2d58 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2f2ce0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa2f2cc8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2f1d00 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa2f2d34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0xa2f2e08 <line:354:7, col:14>
    (DeclRefExpr 0xa2f2dec <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2f1d00 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0xa30cba0 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa30cb88 <col:30> 'int' 0))
) (CompoundStmt 0xa30cc98 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0xa30cc78 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa30cc28 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa30cc18 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa30cc5c <col:20> '__streambuf_type *' lvalue ParmVar 0xa306d90 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0xa30cd30 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0xa30cd18 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0xa30ccc0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa30ccb0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0xa30cd00 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0xa30cce8 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0xa30cdb8 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0xa30cda8 <col:9, col:26>
    (CallExpr 0xa30cd88 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0xa30cd44 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0xa307150 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0xa30cd70 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa30cd60 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa30ce68 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0xa30ce10 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa30cdcc <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa307360 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa30cdf8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa30cde8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa30ce58 <line:128:2, col:10>
    (UnaryOperator 0xa30ce40 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa30ce30 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa30cf18 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0xa30cec0 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa30ce80 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa3074e0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa30cea8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa30ce98 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa30cf08 <line:135:2, col:10>
    (UnaryOperator 0xa30cef0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa30cee0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0xa30cfc8 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0xa30cfb8 <col:9, col:30>
    (CallExpr 0xa30cf98 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30cf40 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30cf7c <col:27> '_Bool' lvalue ParmVar 0xa307600 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0xa30d078 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0xa30d068 <col:9, col:30>
    (CallExpr 0xa30d048 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30cff0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d02c <col:27> 'unsigned short' lvalue ParmVar 0xa307840 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0xa30d128 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0xa30d118 <col:9, col:30>
    (CallExpr 0xa30d0f8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d0a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d0dc <col:27> 'unsigned int' lvalue ParmVar 0xa307a80 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0xa30d1d8 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0xa30d1c8 <col:9, col:30>
    (CallExpr 0xa30d1a8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d150 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d18c <col:27> 'long' lvalue ParmVar 0xa307ba0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0xa30d288 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0xa30d278 <col:9, col:30>
    (CallExpr 0xa30d258 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d200 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d23c <col:27> 'unsigned long' lvalue ParmVar 0xa307cc0 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0xa30d338 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0xa30d328 <col:9, col:30>
    (CallExpr 0xa30d308 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d2b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d2ec <col:27> 'long long' lvalue ParmVar 0xa307de0 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0xa30d3e8 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0xa30d3d8 <col:9, col:30>
    (CallExpr 0xa30d3b8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d360 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d39c <col:27> 'unsigned long long' lvalue ParmVar 0xa307f00 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0xa30d498 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0xa30d488 <col:9, col:30>
    (CallExpr 0xa30d468 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d410 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d44c <col:27> 'float' lvalue ParmVar 0xa308020 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0xa30d548 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0xa30d538 <col:9, col:30>
    (CallExpr 0xa30d518 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d4c0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d4fc <col:27> 'double' lvalue ParmVar 0xa308140 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0xa30d5f8 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0xa30d5e8 <col:9, col:30>
    (CallExpr 0xa30d5c8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d570 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d5ac <col:27> 'long double' lvalue ParmVar 0xa308260 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0xa30d6a8 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0xa30d698 <col:9, col:30>
    (CallExpr 0xa30d678 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa30d620 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30d65c <col:27> 'void *' lvalue ParmVar 0xa308380 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0xa30d718 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0xa30d708 <col:9, col:16>
    (MemberExpr 0xa30d6e8 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa30d6d8 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0xa30d860 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0xa30d850 <col:9, col:53>
    (CallExpr 0xa30d828 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa30d740 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa30d730 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa30d774 <col:26> 'char_type *' lvalue ParmVar 0xa308a00 '__s' 'char_type *')
      (DeclRefExpr 0xa30d78c <col:31> 'streamsize':'int' lvalue ParmVar 0xa308a40 '__n' 'streamsize':'int')
      (CallExpr 0xa30d808 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30d7b8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa30d7a8 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa30d7f0 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0xa30d990 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0xa30d980 <col:9, col:49>
    (CallExpr 0xa30d958 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa30d888 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa30d878 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa30d8bc <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa308d00 '__sb' '__streambuf_type &')
      (CallExpr 0xa30d938 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30d8e8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa30d8d8 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa30d920 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0xa30dad8 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0xa30dac8 <col:9, col:57>
    (CallExpr 0xa30daa0 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa30d9b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa30d9a8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa30d9ec <col:30> 'char_type *' lvalue ParmVar 0xa308f80 '__s' 'char_type *')
      (DeclRefExpr 0xa30da04 <col:35> 'streamsize':'int' lvalue ParmVar 0xa308fc0 '__n' 'streamsize':'int')
      (CallExpr 0xa30da80 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30da30 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0xa30da20 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa30da68 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0xa30db10 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa30daf8 <col:30> 'int' 0))
) (CompoundStmt 0xa30dbf0 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0xa30dbd0 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa30db80 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa30db70 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa30dbb8 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0xa31e030 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0xa31e0b8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0xa31e0a8 <col:9, col:16>
    (MemberExpr 0xa31e084 <col:16> 'const _Bool' lvalue ->_M_ok 0xa31d8a0
      (CXXThisExpr 0xa31e058 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0xa31eb30 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0xa31eb20 <col:7, col:51>
    (ParenExpr 0xa31eb08 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa31eae0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31eaa0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa31ea00 0xa31e550 0xa21f930 0xa21f360)
        (DeclRefExpr 0xa31ea30 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa31e860 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa31ea88 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa31ea48 <col:47> 'unsigned char' lvalue ParmVar 0xa31e8b0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0xa31f098 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0xa31f088 <col:7, col:51>
    (ParenExpr 0xa31f070 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa31f048 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31f000 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa31ef60 0xa31ea00 0xa31e550 0xa21f930 0xa21f360)
        (DeclRefExpr 0xa31ef90 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa31edc0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa31efe8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa31efa8 <col:47> 'signed char' lvalue ParmVar 0xa31ee10 '__c' 'signed char &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0xa3201a0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0xa320190 <col:7, col:51>
    (ParenExpr 0xa320178 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa320150 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa320108 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa320070 0xa31f510 0xa31ef60 0xa31ea00 0xa31e550 0xa21f930)
        (DeclRefExpr 0xa3200a0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa31fed0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa3200f0 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa3200e0 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa3200b8 <col:47> 'unsigned char *' lvalue ParmVar 0xa31ff20 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0xa320708 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0xa3206f8 <col:7, col:51>
    (ParenExpr 0xa3206e0 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa3206b8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa320668 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3205d0 0xa320070 0xa31f510 0xa31ef60 0xa31ea00 0xa31e550 0xa21f930)
        (DeclRefExpr 0xa320600 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa320430 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa320650 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa320640 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0xa320618 <col:47> 'signed char *' lvalue ParmVar 0xa320480 '__s' 'signed char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0xa3213c8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa321160 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0xa321438 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa321160 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0xa3214b0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0xa3214c0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0xa321550 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0xa31e030 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0xa3220f8 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0xa323168 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0xa322208 <line:50:7, col:50>
    0xa322180 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3221f8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3221d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa322e40 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0xa322268 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa322230 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa322218 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0xa322e28 <line:52:2, line:73:2>
      (IfStmt 0xa3223c0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0xa3222d8 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3222a0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0xa322284 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0xa3223a0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa322368 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0xa322348 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa322310 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa3222f4 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0xa322e08 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa322560 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0xa322408 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa3223f8 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3223dc <col:9> '_Bool' lvalue ParmVar 0xa321fd0 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0xa322540 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0xa322518 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa3224d8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
              (CallExpr 0xa322478 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa322440 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa322428 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0xa3224b4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1ea210 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0xa322de0 <line:56:6, line:72:6>
          (DeclStmt 0xa322670 <line:57:8, col:51>
            0xa3225a0 "const __int_type __eof =
              (CallExpr 0xa322650 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa322618 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0xa322768 <line:58:8, col:45>
            0xa3226c0 "__streambuf_type *__sb =
              (CallExpr 0xa322748 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa322710 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3226f4 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa322828 <line:59:8, col:38>
            0xa322780 "__int_type __c =
              (CallExpr 0xa322808 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3227d0 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3227b4 <col:25> '__streambuf_type *' lvalue Var 0xa3226c0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa322960 <line:61:8, col:63>
            0xa322880 "const __ctype_type &__ct =
              (CallExpr 0xa322940 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa3228b8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
                (CXXDependentScopeMemberExpr 0xa322908 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3228ec <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0xa322c38 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0xa322b80 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0xa322a20 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0xa3229f8 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa322990 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3229c4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0xa322780 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa3229dc <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa3225a0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0xa322b58 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa322a50 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0xa322a34 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa322880 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0xa322aa4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0xa226b10 'space' 'const mask':'const unsigned short')
                (CallExpr 0xa322b38 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa322ae8 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa322b1c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0xa322780 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0xa322c20 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa322b98 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0xa322780 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0xa322c00 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa322bc8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa322bb0 <col:9> '__streambuf_type *' lvalue Var 0xa3226c0 '__sb' '__streambuf_type *')))))
          (IfStmt 0xa322dc0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0xa322ce0 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa322c78 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa322cac <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0xa322780 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa322cc4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa3225a0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa322d98 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa322d88 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa322d70 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa322d04 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa322180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa322d60 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa322d3c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa323148 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0xa322f80 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0xa322eb0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa322e78 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa322e5c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0xa322f68 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0xa322f48 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa322f28 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa322ecc <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa322180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0xa322f58 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa322f38 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa322f04 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0xa322fd8 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa322fa8 <col:2> '_Bool' lvalue ->_M_ok 0xa31d8a0
        (CXXThisExpr 0xa322f98 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0xa322fc8 <col:10> '_Bool' true))
    (CompoundStmt 0xa323130 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0xa323080 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa323070 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa323058 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa322ff0 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa322180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa323048 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa323024 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0xa323110 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3230c0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa3230a4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa321f90 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0xa3230f4 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa322180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0xa323fd0 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0xa3238e0 <line:90:2, col:29>
    0xa323850 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3238c0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa323898 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa323888 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3238b0 <col:23> '_Bool' false))")
  (IfStmt 0xa323f78 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0xa3238f0 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0xa323850 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa323f50 <line:92:4, line:108:4>
      (DeclStmt 0xa3239c8 <line:93:6, col:49>
        0xa323940 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3239b8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa323994 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa323c68 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3239d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa323c50 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0xa323b28 <line:96:3, col:63>
            0xa323a50 "const __num_get_type &__ng =
              (CallExpr 0xa323b08 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa323a88 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
                (CXXDependentScopeMemberExpr 0xa323ad0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa323ac0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa323c20 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa323b50 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0xa323b38 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa323a50 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa323b98 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa323b88 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa323bb0 <col:19> 'int' 0)
            (UnaryOperator 0xa323bd8 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa323bc8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa323bec <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa323940 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa323c04 <col:36> '_ValueT' lvalue ParmVar 0xa323590 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0xa323d68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa323c88 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa323d50 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0xa323d20 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa323ca8 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa323c98 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa323cfc <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa323d40 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0xa323e58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa323d88 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa323e40 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0xa323e20 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa323da8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa323d98 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa323dfc <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa323f30 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa323ea0 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa323e90 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa323e74 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa323940 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa323f10 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa323ec0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa323eb0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa323ef4 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa323940 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa323fc0 <line:109:2, col:10>
    (UnaryOperator 0xa323fa8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa323f98 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0xa32a698 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0xa324650 <line:119:7, col:34>
    0xa3245c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa324630 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa324608 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3245f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa324620 <col:28> '_Bool' false))")
  (IfStmt 0xa32a640 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0xa324660 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0xa3245c0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa32a618 <line:121:2, line:153:2>
      (DeclStmt 0xa324738 <line:122:4, col:47>
        0xa3246b0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa324728 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa324704 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa32a330 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa324748 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa32a310 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0xa3247a8 <line:125:8, col:16>
            0xa324770 "long __l")
          (DeclStmt 0xa3248a8 <line:126:8, col:68>
            0xa3247d0 "const __num_get_type &__ng =
              (CallExpr 0xa324888 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa324808 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
                (CXXDependentScopeMemberExpr 0xa324850 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa324840 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa3249a0 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3248d0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3248b8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa3247d0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa324918 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa324908 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa324930 <col:24> 'int' 0)
            (UnaryOperator 0xa324958 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa324948 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32496c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3246b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa324984 <col:41> 'long' lvalue Var 0xa324770 '__l' 'long'))
          (IfStmt 0xa32a2f0 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0xa329d28 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0xa329cf8 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa3249d0 <col:12> 'long' lvalue Var 0xa324770 '__l' 'long'))
              (ImplicitCastExpr 0xa329d18 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa329d08 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa329cd8 <col:18, col:54> 'const short':'const short' lvalue Var 0xa3293f0 '__min' 'const short':'const short'))))
            (CompoundStmt 0xa329f18 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0xa329e00 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa329df0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa329dd8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa329d6c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3246b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa329dc8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa329da4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa329f00 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0xa329e24 <col:5> 'short' lvalue ParmVar 0xa324370 '__n' 'short &')
                (ImplicitCastExpr 0xa329ef0 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa329ed0 <col:11, col:47> 'const short':'const short' lvalue Var 0xa3293f0 '__min' 'const short':'const short'))))
            (IfStmt 0xa32a2d0 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0xa32a030 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0xa32a000 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa329f30 <col:17> 'long' lvalue Var 0xa324770 '__l' 'long'))
                (ImplicitCastExpr 0xa32a020 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa32a010 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa329fe0 <col:23, col:59> 'const short':'const short' lvalue Var 0xa329690 '__max' 'const short':'const short'))))
              (CompoundStmt 0xa32a228 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0xa32a110 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa32a100 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa32a0e8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa32a07c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3246b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa32a0d8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa32a0b4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa32a210 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0xa32a134 <col:5> 'short' lvalue ParmVar 0xa324370 '__n' 'short &')
                  (ImplicitCastExpr 0xa32a200 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa32a1e0 <col:11, col:47> 'const short':'const short' lvalue Var 0xa329690 '__max' 'const short':'const short'))))
              (BinaryOperator 0xa32a2b8 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0xa32a240 <col:3> 'short' lvalue ParmVar 0xa324370 '__n' 'short &')
                (CXXFunctionalCastExpr 0xa32a2a0 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0xa32a290 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0xa32a280 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa32a264 <col:15> 'long' lvalue Var 0xa324770 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa32a430 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32a350 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32a418 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0xa32a3e8 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32a370 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32a360 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32a3c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa32a408 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0xa32a520 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32a450 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32a508 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0xa32a4e8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32a470 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32a460 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32a4c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa32a5f8 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa32a568 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa32a558 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa32a53c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3246b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa32a5d8 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa32a588 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa32a578 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa32a5bc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3246b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa32a688 <line:154:7, col:15>
    (UnaryOperator 0xa32a670 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa32a660 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0xa32bb18 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0xa32ad20 <line:164:7, col:34>
    0xa32ac90 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa32ad00 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa32acd8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa32acc8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa32acf0 <col:28> '_Bool' false))")
  (IfStmt 0xa32bac0 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0xa32ad30 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0xa32ac90 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa32ba98 <line:166:2, line:198:2>
      (DeclStmt 0xa32ae08 <line:167:4, col:47>
        0xa32ad80 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa32adf8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa32add4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa32b7b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32ae18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa32b790 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0xa32ae78 <line:170:8, col:16>
            0xa32ae40 "long __l")
          (DeclStmt 0xa32af78 <line:171:8, col:68>
            0xa32aea0 "const __num_get_type &__ng =
              (CallExpr 0xa32af58 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa32aed8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c2850)
                (CXXDependentScopeMemberExpr 0xa32af20 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa32af10 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa32b070 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32afa0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa32af88 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa32aea0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa32afe8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa32afd8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa32b000 <col:24> 'int' 0)
            (UnaryOperator 0xa32b028 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa32b018 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32b03c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32ad80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa32b054 <col:41> 'long' lvalue Var 0xa32ae40 '__l' 'long'))
          (IfStmt 0xa32b770 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0xa32b1a0 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0xa32b170 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa32b0a0 <col:12> 'long' lvalue Var 0xa32ae40 '__l' 'long'))
              (ImplicitCastExpr 0xa32b190 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa32b180 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa32b150 <col:18, col:52> 'const int':'const int' lvalue Var 0xa0f8dd0 '__min' 'const int':'const int'))))
            (CompoundStmt 0xa32b398 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0xa32b280 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa32b270 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa32b258 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa32b1ec <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32ad80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa32b248 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa32b224 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa32b380 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0xa32b2a4 <col:5> 'int' lvalue ParmVar 0xa32aa40 '__n' 'int &')
                (ImplicitCastExpr 0xa32b370 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa32b350 <col:11, col:45> 'const int':'const int' lvalue Var 0xa0f8dd0 '__min' 'const int':'const int'))))
            (IfStmt 0xa32b750 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0xa32b4b0 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0xa32b480 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa32b3b0 <col:17> 'long' lvalue Var 0xa32ae40 '__l' 'long'))
                (ImplicitCastExpr 0xa32b4a0 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa32b490 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa32b460 <col:23, col:57> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))))
              (CompoundStmt 0xa32b6a8 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0xa32b590 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa32b580 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa32b568 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa32b4fc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32ad80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa32b558 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa32b534 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa32b690 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0xa32b5b4 <col:5> 'int' lvalue ParmVar 0xa32aa40 '__n' 'int &')
                  (ImplicitCastExpr 0xa32b680 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa32b660 <col:11, col:45> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))))
              (BinaryOperator 0xa32b738 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0xa32b6c0 <col:3> 'int' lvalue ParmVar 0xa32aa40 '__n' 'int &')
                (CXXFunctionalCastExpr 0xa32b720 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa32b710 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa32b700 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa32b6e4 <col:13> 'long' lvalue Var 0xa32ae40 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa32b8b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32b7d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32b898 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0xa32b868 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32b7f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32b7e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32b844 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa32b888 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0xa32b9a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32b8d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32b988 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0xa32b968 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32b8f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32b8e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32b944 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa32ba78 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa32b9e8 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa32b9d8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa32b9bc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32ad80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa32ba58 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa32ba08 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa32b9f8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa32ba3c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32ad80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa32bb08 <line:199:7, col:15>
    (UnaryOperator 0xa32baf0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa32bae0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0xa32ca98 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0xa32c1c8 <line:207:7, col:50>
    0xa32c140 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa32c1b8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32c194 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa32c270 <line:208:7, col:34>
    0xa32c1e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa32c250 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa32c228 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa32c218 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa32c240 <col:28> '_Bool' false))")
  (IfStmt 0xa32c968 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0xa32c2b0 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa32c280 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa32c1e0 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0xa32c298 <col:21> '__streambuf_type *' lvalue ParmVar 0xa32bec0 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0xa32c840 <line:210:2, line:226:2>
      (IfStmt 0xa32c630 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32c2c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa32c610 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0xa32c318 <line:213:8, col:20>
            0xa32c2e0 "bool __ineof")
          (IfStmt 0xa32c4f0 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0xa32c420 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0xa32c3f8 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0xa32c328 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa211e90)
                (CallExpr 0xa32c3a8 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32c370 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa32c360 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0xa32c3c4 <col:50> '__streambuf_type *' lvalue ParmVar 0xa32bec0 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0xa32c3dc <col:59> '_Bool' lvalue Var 0xa32c2e0 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0xa32c4c8 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa32c4b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa32c4a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa32c434 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32c140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa32c490 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa32c46c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0xa32c5f0 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0xa32c528 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa32c50c <col:12> '_Bool' lvalue Var 0xa32c2e0 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0xa32c5c8 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa32c5b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa32c5a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa32c534 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32c140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa32c590 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa32c56c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa32c730 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32c650 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32c718 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0xa32c6e8 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32c670 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32c660 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32c6c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa32c708 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0xa32c820 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32c750 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32c808 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0xa32c7e8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32c770 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32c760 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32c7c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa32c948 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0xa32c878 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa32c85c <col:17> '__streambuf_type *' lvalue ParmVar 0xa32bec0 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa32c920 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa32c910 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa32c8f8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa32c88c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32c140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa32c8e8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa32c8c4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa32ca40 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa32c9b0 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa32c9a0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32c984 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32c140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa32ca20 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa32c9d0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa32c9c0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa32ca04 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32c140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa32ca88 <line:231:7, col:15>
    (UnaryOperator 0xa32ca70 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa32ca60 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0xa32dba0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0xa32d190 <line:239:7, col:48>
    0xa32d0c0 "const int_type __eof =
      (CallExpr 0xa32d170 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32d138 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0xa32d200 <line:240:7, col:27>
    0xa32d1b0 "int_type __c =
      (DeclRefExpr 0xa32d1e4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32d0c0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0xa32d258 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa32d220 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa32d210 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa32d240 <col:19> 'int' 0))
  (DeclStmt 0xa32d328 <line:242:7, col:50>
    0xa32d2a0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa32d318 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32d2f4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa32d3d0 <line:243:7, col:33>
    0xa32d340 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa32d3b0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa32d388 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa32d378 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa32d3a0 <col:28> '_Bool' true))")
  (IfStmt 0xa32d940 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0xa32d3e0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0xa32d340 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa32d920 <line:245:2, line:262:2>
      (IfStmt 0xa32d710 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32d3f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa32d6f8 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0xa32d4e0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0xa32d408 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32d1b0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa32d4c0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa32d488 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa32d468 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32d430 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa32d420 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa32d6d8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0xa32d5a8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0xa32d580 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32d518 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa32d54c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32d1b0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa32d564 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32d0c0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0xa32d608 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa32d5d0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                (CXXThisExpr 0xa32d5c0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa32d5f0 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0xa32d6b0 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa32d6a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa32d688 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa32d620 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32d2a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa32d678 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa32d654 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa32d810 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32d730 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32d7f8 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0xa32d7c8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32d750 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32d740 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32d7a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa32d7e8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0xa32d900 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32d830 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32d8e8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0xa32d8c8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32d850 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32d840 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32d8a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa32da80 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0xa32d9b0 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa32d9a0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa32d990 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa32d970 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
            (CXXThisExpr 0xa32d960 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa32da58 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa32da48 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa32da30 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa32d9c4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32d2a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa32da20 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32d9fc <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa32db58 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa32dac8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa32dab8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32da9c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32d2a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa32db38 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa32dae8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa32dad8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa32db1c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32d2a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa32db90 <line:267:7, col:14>
    (DeclRefExpr 0xa32db74 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32d1b0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0xa32eca8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0xa32e1f0 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa32e1b8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa32e1a8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa32e1d8 <col:19> 'int' 0))
  (DeclStmt 0xa32e2c8 <line:276:7, col:50>
    0xa32e240 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa32e2b8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32e294 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa32e370 <line:277:7, col:33>
    0xa32e2e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa32e350 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa32e328 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa32e318 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa32e340 <col:28> '_Bool' true))")
  (IfStmt 0xa32ea38 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0xa32e380 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0xa32e2e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa32ea18 <line:279:2, line:299:2>
      (IfStmt 0xa32e808 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32e398 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa32e7f0 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0xa32e4a8 <line:282:8, col:53>
            0xa32e3b0 "const int_type __cb =
              (CallExpr 0xa32e488 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32e450 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa32e430 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa32e3f8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa32e3e8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa32e7d0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0xa32e5c8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0xa32e5a0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32e4d8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa32e50c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32e3b0 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0xa32e580 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32e548 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0xa32e700 <line:285:3, line:288:3>
              (BinaryOperator 0xa32e628 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0xa32e5f0 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                  (CXXThisExpr 0xa32e5e0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0xa32e610 <col:17> 'int' 1))
              (BinaryOperator 0xa32e6e8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa32e640 <col:5> 'char_type':'_CharT' lvalue ParmVar 0xa32df60 '__c' 'char_type &')
                (CallExpr 0xa32e6c8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32e678 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa32e6ac <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32e3b0 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0xa32e7a8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa32e798 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa32e780 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa32e718 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32e240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa32e770 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa32e74c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa32e908 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32e828 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32e8f0 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0xa32e8c0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32e848 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32e838 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32e89c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa32e8e0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0xa32e9f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32e928 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa32e9e0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0xa32e9c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32e948 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32e938 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32e99c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa32eb78 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0xa32eaa8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa32ea98 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa32ea88 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa32ea68 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
            (CXXThisExpr 0xa32ea58 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa32eb50 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa32eb40 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa32eb28 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa32eabc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32e240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa32eb18 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32eaf4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa32ec50 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa32ebc0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa32ebb0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32eb94 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32e240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa32ec30 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa32ebe0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa32ebd0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa32ec14 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32e240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa32ec98 <line:304:7, col:15>
    (UnaryOperator 0xa32ec80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa32ec70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa3304c8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0xa32f388 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa32f350 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa32f340 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa32f370 <col:19> 'int' 0))
  (DeclStmt 0xa32f458 <line:313:7, col:50>
    0xa32f3d0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa32f448 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa32f424 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa32f500 <line:314:7, col:33>
    0xa32f470 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa32f4e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa32f4b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa32f4a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa32f4d0 <col:28> '_Bool' true))")
  (IfStmt 0xa330178 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0xa32f510 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0xa32f470 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa330158 <line:316:2, line:342:2>
      (IfStmt 0xa32ff48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32f528 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa32ff20 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0xa32f608 <line:319:8, col:67>
            0xa32f540 "const int_type __idelim =
              (CallExpr 0xa32f5e8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32f598 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa32f5cc <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa32f0e0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa32f6d0 <line:320:8, col:49>
            0xa32f620 "const int_type __eof =
              (CallExpr 0xa32f6b0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32f678 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa32f790 <line:321:8, col:46>
            0xa32f6f0 "__streambuf_type *__sb =
              (CallExpr 0xa32f770 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32f738 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa32f728 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa32f858 <line:322:8, col:36>
            0xa32f7b0 "int_type __c =
              (CallExpr 0xa32f838 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa32f800 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa32f7e4 <col:23> '__streambuf_type *' lvalue Var 0xa32f6f0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa32fd78 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0xa32fb50 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0xa32fa70 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa32f980 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32f938 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                  (CXXOperatorCallExpr 0xa32f8f8 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0xa32f8b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                    (MemberExpr 0xa32f878 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa32f868 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa32f898 <col:27> 'int' 1))
                  (DeclRefExpr 0xa32f91c <col:31> 'streamsize':'int' lvalue ParmVar 0xa32f0a0 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa32fa58 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0xa32fa30 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa32f9c8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa32f9fc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32f7b0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa32fa14 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32f620 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa32fb38 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0xa32fb10 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32faa8 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa32fadc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32f7b0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa32faf4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32f540 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa32fd58 <line:327:3, line:331:3>
              (BinaryOperator 0xa32fc58 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0xa32fbb0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa32fb98 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa32fb68 <col:6> 'char_type *' lvalue ParmVar 0xa32f060 '__s' 'char_type *')))
                (CallExpr 0xa32fc38 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32fbe8 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa32fc1c <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32f7b0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa32fca0 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa32fc80 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                  (CXXThisExpr 0xa32fc70 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa32fd40 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa32fcb4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32f7b0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa32fd20 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32fce8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa32fccc <col:11> '__streambuf_type *' lvalue Var 0xa32f6f0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa32ff00 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0xa32fe20 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa32fdb8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa32fdec <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa32f7b0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa32fe04 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa32f620 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa32fed8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa32fec8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa32feb0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa32fe44 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32f3d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa32fea0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa32fe7c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa330048 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa32ff68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa330030 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0xa330000 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32ff88 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa32ff78 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa32ffdc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa330020 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0xa330138 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa330068 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa330120 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0xa330100 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa330088 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa330078 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3300dc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa330258 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0xa3301d8 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa3301c8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa330194 <col:11> 'streamsize':'int' lvalue ParmVar 0xa32f0a0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa3301b0 <col:17> 'int' 0))
    (BinaryOperator 0xa330240 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa330208 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3301f0 <col:3> 'char_type *' lvalue ParmVar 0xa32f060 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa330228 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa330398 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0xa3302c8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3302b8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3302a8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa330288 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
            (CXXThisExpr 0xa330278 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa330370 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa330360 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa330348 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3302dc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32f3d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa330338 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa330314 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa330470 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3303e0 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3303d0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3303b4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32f3d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa330450 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa330400 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3303f0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa330434 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa32f3d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3304b8 <line:351:7, col:15>
    (UnaryOperator 0xa3304a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa330490 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0xa331c60 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0xa330b50 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa330b18 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa330b08 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa330b38 <col:19> 'int' 0))
  (DeclStmt 0xa330c28 <line:360:7, col:50>
    0xa330ba0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa330c18 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa330bf4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa330cd0 <line:361:7, col:33>
    0xa330c40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa330cb0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa330c88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa330c78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa330ca0 <col:28> '_Bool' true))")
  (IfStmt 0xa3319f0 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0xa330ce0 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0xa330c40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3319d0 <line:363:2, line:390:2>
      (IfStmt 0xa3317c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa330cf8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa331790 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0xa330de8 <line:366:8, col:67>
            0xa330d10 "const int_type __idelim =
              (CallExpr 0xa330dc8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa330d78 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa330dac <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa3308c0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa330eb0 <line:367:8, col:49>
            0xa330e00 "const int_type __eof =
              (CallExpr 0xa330e90 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa330e58 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa330f70 <line:368:8, col:51>
            0xa330ed0 "__streambuf_type *__this_sb =
              (CallExpr 0xa330f50 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa330f18 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0xa330f08 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa331038 <line:369:8, col:41>
            0xa330f90 "int_type __c =
              (CallExpr 0xa331018 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa330fe0 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0xa330fc4 <col:23> '__streambuf_type *' lvalue Var 0xa330ed0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0xa331118 <line:370:8, col:55>
            0xa331050 "char_type __c2 =
              (CallExpr 0xa3310f8 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3310a8 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3310dc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa330f90 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0xa3315e8 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0xa331408 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0xa3312b8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0xa3311d8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0xa3311b0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa331148 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa33117c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0xa330f90 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa331194 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa330e00 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0xa3312a0 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0xa331278 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa331210 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa331244 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa330f90 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa33125c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa330d10 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa3313f0 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0xa3313c8 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3312f0 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0xa331390 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa331340 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa331324 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa330880 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0xa331374 <col:48> 'char_type':'_CharT' lvalue Var 0xa331050 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0xa3313b0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa330e00 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa3315c8 <line:375:3, line:379:3>
              (UnaryOperator 0xa331450 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa331430 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                  (CXXThisExpr 0xa331420 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa3314f0 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0xa331464 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa330f90 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa3314d0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa331498 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0xa33147c <col:11> '__streambuf_type *' lvalue Var 0xa330ed0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0xa3315b0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa331508 <col:5> 'char_type':'_CharT' lvalue Var 0xa331050 '__c2' 'char_type':'_CharT')
                (CallExpr 0xa331590 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa331540 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa331574 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa330f90 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0xa331770 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0xa331690 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa331628 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa33165c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa330f90 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa331674 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa330e00 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa331748 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa331738 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa331720 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3316b4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa330ba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa331710 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3316ec <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3318c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3317e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3318a8 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0xa331878 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa331800 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3317f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa331854 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa331898 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0xa3319b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3318e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa331998 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0xa331978 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa331900 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3318f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa331954 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa331b30 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0xa331a60 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa331a50 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa331a40 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa331a20 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
            (CXXThisExpr 0xa331a10 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa331b08 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa331af8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa331ae0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa331a74 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa330ba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa331ad0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa331aac <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa331c08 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa331b78 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa331b68 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa331b4c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa330ba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa331be8 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa331b98 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa331b88 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa331bcc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa330ba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa331c50 <line:395:7, col:15>
    (UnaryOperator 0xa331c38 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa331c28 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa3336f0 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0xa332338 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa332300 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa3322f0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa332320 <col:19> 'int' 0))
  (DeclStmt 0xa332408 <line:404:7, col:50>
    0xa332380 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3323f8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3323d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3324b0 <line:405:7, col:33>
    0xa332420 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa332490 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa332468 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa332458 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa332480 <col:28> '_Bool' true))")
  (IfStmt 0xa3333a0 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0xa3324c0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0xa332420 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa333380 <line:407:9, line:443:9>
      (IfStmt 0xa333170 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3324d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa333148 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0xa3325b8 <line:410:15, col:74>
            0xa3324f0 "const int_type __idelim =
              (CallExpr 0xa332598 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa332548 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0xa33257c <col:66> 'char_type':'_CharT' lvalue ParmVar 0xa332090 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa332680 <line:411:15, col:56>
            0xa3325d0 "const int_type __eof =
              (CallExpr 0xa332660 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa332628 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa332740 <line:412:15, col:53>
            0xa3326a0 "__streambuf_type *__sb =
              (CallExpr 0xa332720 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3326e8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3326d8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa332808 <line:413:15, col:43>
            0xa332760 "int_type __c =
              (CallExpr 0xa3327e8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3327b0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa332794 <col:30> '__streambuf_type *' lvalue Var 0xa3326a0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa332d28 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0xa332b00 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0xa332a20 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa332930 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3328e8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                  (CXXOperatorCallExpr 0xa3328a8 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa332860 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                    (MemberExpr 0xa332828 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa332818 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa332848 <col:34> 'int' 1))
                  (DeclRefExpr 0xa3328cc <col:38> 'streamsize':'int' lvalue ParmVar 0xa332050 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa332a08 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0xa3329e0 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa332978 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3329ac <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa332760 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa3329c4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3325d0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa332ae8 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0xa332ac0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa332a58 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa332a8c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa332760 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa332aa4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3324f0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa332d08 <line:418:17, line:422:17>
              (BinaryOperator 0xa332c08 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0xa332b60 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa332b48 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa332b18 <col:20> 'char_type *' lvalue ParmVar 0xa332010 '__s' 'char_type *')))
                (CallExpr 0xa332be8 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa332b98 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa332bcc <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0xa332760 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0xa332ca8 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0xa332c20 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0xa332760 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa332c88 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa332c50 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa332c38 <col:25> '__streambuf_type *' lvalue Var 0xa3326a0 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0xa332cf0 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0xa332cd0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                  (CXXThisExpr 0xa332cc0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0xa333128 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0xa332dd0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa332d68 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa332d9c <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa332760 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa332db4 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3325d0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa332e88 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa332e78 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa332e60 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa332df4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa332380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa332e50 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa332e2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0xa333110 <line:426:17, line:434:17>
              (IfStmt 0xa3330f0 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0xa332f40 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa332ed8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa332f0c <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0xa332760 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa332f24 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3324f0 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0xa333020 <line:428:21, line:431:21>
                  (CallExpr 0xa332fb8 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa332f80 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0xa332f64 <col:23> '__streambuf_type *' lvalue Var 0xa3326a0 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa333008 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0xa332fe8 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa332fd8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0xa3330c8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3330b8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3330a0 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa333038 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa332380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa333090 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa33306c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa333270 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa333190 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa333258 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0xa333228 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3331b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3331a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa333204 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa333248 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0xa333360 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa333290 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa333348 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0xa333328 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3332b0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa3332a0 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa333304 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa333480 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0xa333400 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa3333f0 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa3333bc <col:11> 'streamsize':'int' lvalue ParmVar 0xa332050 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa3333d8 <col:17> 'int' 0))
    (BinaryOperator 0xa333468 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa333430 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa333418 <col:3> 'char_type *' lvalue ParmVar 0xa332010 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa333450 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa3335c0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0xa3334f0 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3334e0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3334d0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa3334b0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
            (CXXThisExpr 0xa3334a0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa333598 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa333588 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa333570 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa333504 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa332380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa333560 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa33353c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa333698 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0xa333608 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3335f8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3335dc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa332380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa333678 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa333628 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa333618 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa33365c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa332380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3336e0 <line:452:7, col:15>
    (UnaryOperator 0xa3336c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3336b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0xa334630 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0xa333d18 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa333ce0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa333cd0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa333d00 <col:19> 'int' 0))
  (DeclStmt 0xa333dd0 <line:464:7, col:33>
    0xa333d40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa333db0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa333d88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa333d78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa333da0 <col:28> '_Bool' true))")
  (IfStmt 0xa3345d8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0xa333de0 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0xa333d40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3345b0 <line:466:2, line:487:2>
      (DeclStmt 0xa333eb8 <line:467:4, col:47>
        0xa333e30 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa333ea8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa333e84 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3342c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa333ec8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3342a8 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0xa333f90 <line:470:8, col:49>
            0xa333ee0 "const int_type __eof =
              (CallExpr 0xa333f70 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa333f38 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa334050 <line:471:8, col:46>
            0xa333fb0 "__streambuf_type *__sb =
              (CallExpr 0xa334030 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa333ff8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa333fe8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa334288 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0xa334148 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa334088 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0xa334110 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3340d8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3340bc <col:37> '__streambuf_type *' lvalue Var 0xa333fb0 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0xa33412c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa333ee0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa334200 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3341f0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3341d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33416c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa333e30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3341c8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3341a4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa334270 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa334238 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                (CXXThisExpr 0xa334228 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa334258 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0xa3343c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3342e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3343b0 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0xa334380 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa334308 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3342f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33435c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3343a0 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0xa3344b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3343e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3344a0 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0xa334480 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa334408 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3343f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33445c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa334590 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa334500 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3344f0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3344d4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa333e30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa334570 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa334520 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa334510 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa334554 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa333e30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa334620 <line:488:7, col:15>
    (UnaryOperator 0xa334608 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3345f8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0xa335de0 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0xa334c60 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa334c28 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa334c18 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa334c48 <col:19> 'int' 0))
  (DeclStmt 0xa334d10 <line:497:7, col:33>
    0xa334c80 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa334cf0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa334cc8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa334cb8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa334ce0 <col:28> '_Bool' true))")
  (IfStmt 0xa335d88 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0xa334d90 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa334d20 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa334c80 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa334d78 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa334d68 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa334d38 <col:21> 'streamsize':'int' lvalue ParmVar 0xa3349d0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa334d50 <col:27> 'int' 0)))
    (CompoundStmt 0xa335d60 <line:499:9, line:549:9>
      (DeclStmt 0xa334e68 <line:500:11, col:54>
        0xa334de0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa334e58 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa334e34 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa335a78 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa334e78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa335a48 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0xa334f40 <line:503:15, col:56>
            0xa334e90 "const int_type __eof =
              (CallExpr 0xa334f20 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa334ee8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa335000 <line:504:15, col:53>
            0xa334f60 "__streambuf_type *__sb =
              (CallExpr 0xa334fe0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa334fa8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa334f98 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3350c8 <line:505:15, col:43>
            0xa335020 "int_type __c =
              (CallExpr 0xa3350a8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa335070 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa335054 <col:30> '__streambuf_type *' lvalue Var 0xa334f60 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa335128 <line:514:8, col:35>
            0xa3350e0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa335118 <col:30> '_Bool' false)")
          (WhileStmt 0xa335760 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa335138 <line:515:15> '_Bool' true)
            (CompoundStmt 0xa335748 <line:516:3, line:532:3>
              (WhileStmt 0xa3353e0 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0xa3352c8 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0xa3351d8 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0xa335190 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                    (MemberExpr 0xa335158 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa335148 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa335178 <col:24> 'streamsize':'int' lvalue ParmVar 0xa3349d0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0xa3352b0 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0xa335288 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa335220 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa335254 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa335020 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa33526c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa334e90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa3353c8 <line:519:7, line:522:7>
                  (UnaryOperator 0xa335310 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa3352f0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa3352e0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa3353b0 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa335324 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa335020 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa335390 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa335358 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa33533c <col:15> '__streambuf_type *' lvalue Var 0xa334f60 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa335728 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0xa3355c0 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0xa3354e0 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0xa3354c0 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa3353f4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa3349d0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0xa3354d0 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0xa3354a0 <col:16, col:57> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int')))
                  (UnaryOperator 0xa3355a8 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0xa335580 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa335518 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa33554c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa335020 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa335564 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa334e90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa335708 <line:525:7, line:529:7>
                  (BinaryOperator 0xa3356b0 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0xa3355e8 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa3355d8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa335690 <line:527:4, col:45> 'const int':'const int' lvalue Var 0xa0f8dd0 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa3356f0 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa3356c8 <col:9> '_Bool' lvalue Var 0xa3350e0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa3356e0 <col:26> '_Bool' true)))
                (BreakStmt 0xa335720 <line:531:7>))))
          (IfStmt 0xa335898 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa335790 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa335774 <col:12> '_Bool' lvalue Var 0xa3350e0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa335880 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa3357b0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                (CXXThisExpr 0xa3357a0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa335860 <col:15, col:56> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa335a28 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0xa335948 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3358e0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa335914 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa335020 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa33592c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa334e90 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa335a00 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3359f0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3359d8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33596c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa334de0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3359c8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3359a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa335b78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa335a98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa335b60 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0xa335b30 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa335ab8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa335aa8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa335b0c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa335b50 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0xa335c68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa335b98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa335c50 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0xa335c30 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa335bb8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa335ba8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa335c0c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa335d40 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa335cb0 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa335ca0 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa335c84 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa334de0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa335d20 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa335cd0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa335cc0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa335d04 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa334de0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa335dd0 <line:550:7, col:15>
    (UnaryOperator 0xa335db8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa335da8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0xa337aa8 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0xa336450 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa336418 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa336408 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa336438 <col:19> 'int' 0))
  (DeclStmt 0xa336500 <line:559:7, col:33>
    0xa336470 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3364e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3364b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3364a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3364d0 <col:28> '_Bool' true))")
  (IfStmt 0xa337a50 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0xa336580 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa336510 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa336470 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa336568 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa336558 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa336528 <col:21> 'streamsize':'int' lvalue ParmVar 0xa336180 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa336540 <col:27> 'int' 0)))
    (CompoundStmt 0xa337a28 <line:561:9, line:614:9>
      (DeclStmt 0xa336658 <line:562:11, col:54>
        0xa3365d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa336648 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa336624 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa337740 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa336668 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa337710 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0xa336730 <line:565:15, col:56>
            0xa336680 "const int_type __eof =
              (CallExpr 0xa336710 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3366d8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa3367f0 <line:566:15, col:53>
            0xa336750 "__streambuf_type *__sb =
              (CallExpr 0xa3367d0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa336798 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa336788 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3368b8 <line:567:15, col:43>
            0xa336810 "int_type __c =
              (CallExpr 0xa336898 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa336860 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa336844 <col:30> '__streambuf_type *' lvalue Var 0xa336750 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa336918 <line:570:8, col:35>
            0xa3368d0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa336908 <col:30> '_Bool' false)")
          (WhileStmt 0xa337110 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa336928 <line:571:15> '_Bool' true)
            (CompoundStmt 0xa3370f8 <line:572:3, line:590:3>
              (WhileStmt 0xa336cb0 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0xa336b98 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0xa336ab8 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0xa3369c8 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0xa336980 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                      (MemberExpr 0xa336948 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                        (CXXThisExpr 0xa336938 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0xa336968 <col:24> 'streamsize':'int' lvalue ParmVar 0xa336180 '__n' 'streamsize':'int'))
                    (UnaryOperator 0xa336aa0 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0xa336a78 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa336a10 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa336a44 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa336a5c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa336680 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa336b80 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0xa336b58 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa336af0 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa336b24 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa336b3c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa3361c0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa336c98 <line:576:7, line:579:7>
                  (UnaryOperator 0xa336be0 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa336bc0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa336bb0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa336c80 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa336bf4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa336c60 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa336c28 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa336c0c <col:15> '__streambuf_type *' lvalue Var 0xa336750 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa3370d8 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0xa336f70 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0xa336e90 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0xa336db0 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0xa336d90 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa336cc4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa336180 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0xa336da0 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0xa336d70 <col:16, col:57> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int')))
                    (UnaryOperator 0xa336e78 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0xa336e50 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa336de8 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa336e1c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa336e34 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa336680 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa336f58 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0xa336f30 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa336ec8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa336efc <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa336f14 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa3361c0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa3370b8 <line:583:7, line:587:7>
                  (BinaryOperator 0xa337060 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0xa336f98 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa336f88 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa337040 <line:585:4, col:45> 'const int':'const int' lvalue Var 0xa0f8dd0 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa3370a0 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa337078 <col:9> '_Bool' lvalue Var 0xa3368d0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa337090 <col:26> '_Bool' true)))
                (BreakStmt 0xa3370d0 <line:589:7>))))
          (IfStmt 0xa337248 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa337140 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa337124 <col:12> '_Bool' lvalue Var 0xa3368d0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa337230 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa337160 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                (CXXThisExpr 0xa337150 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa337210 <col:15, col:56> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa3376f0 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0xa3372f8 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa337290 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3372c4 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3372dc <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa336680 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3373b0 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3373a0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa337388 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33731c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3365d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa337378 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa337354 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa3376d0 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0xa337468 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa337400 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0xa337434 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa336810 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa33744c <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa3361c0 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0xa3376b8 <line:598:3, line:603:3>
                (IfStmt 0xa337628 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa3375b8 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0xa337570 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
                    (MemberExpr 0xa3374a0 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa337490 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa337550 <line:600:11, col:52> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
                  (UnaryOperator 0xa337610 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0xa3375f0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                      (CXXThisExpr 0xa3375e0 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0xa337698 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa337660 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0xa337644 <col:5> '__streambuf_type *' lvalue Var 0xa336750 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa337840 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa337760 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa337828 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0xa3377f8 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa337780 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa337770 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3377d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa337818 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0xa337930 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa337860 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa337918 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0xa3378f8 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa337880 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa337870 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3378d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa337a08 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa337978 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa337968 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33794c <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3365d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3379e8 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa337998 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa337988 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3379cc <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3365d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa337a98 <line:615:7, col:15>
    (UnaryOperator 0xa337a80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa337a70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0xa3389e8 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0xa338180 <line:623:7, col:40>
    0xa3380d0 "int_type __c =
      (CallExpr 0xa338160 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa338128 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0xa3381d8 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3381a0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa338190 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3381c0 <col:19> 'int' 0))
  (DeclStmt 0xa338290 <line:625:7, col:33>
    0xa338200 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa338270 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa338248 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa338238 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa338260 <col:28> '_Bool' true))")
  (IfStmt 0xa3389a0 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3382a0 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0xa338200 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa338978 <line:627:2, line:644:2>
      (DeclStmt 0xa338378 <line:628:4, col:47>
        0xa3382f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa338368 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa338344 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa338690 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa338388 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa338678 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0xa338470 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa338398 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3380d0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa338450 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa338418 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa3383f8 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3383c0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3383b0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa338658 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0xa338578 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3384b0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3384e4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3380d0 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0xa338558 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa338520 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa338630 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa338620 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa338608 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33859c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3382f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3385f8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3385d4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa338790 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3386b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa338778 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0xa338748 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3386d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3386c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa338724 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa338768 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0xa338880 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3387b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa338868 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0xa338848 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3387d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3387c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa338824 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa338958 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3388c8 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3388b8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33889c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3382f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa338938 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3388e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3388d8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33891c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3382f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3389d8 <line:645:7, col:14>
    (DeclRefExpr 0xa3389bc <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3380d0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0xa339968 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0xa339090 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa339058 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa339048 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa339078 <col:19> 'int' 0))
  (DeclStmt 0xa339140 <line:654:7, col:33>
    0xa3390b0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa339120 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3390f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3390e8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa339110 <col:28> '_Bool' true))")
  (IfStmt 0xa339910 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0xa339150 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0xa3390b0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3398e8 <line:656:2, line:673:2>
      (DeclStmt 0xa339228 <line:657:4, col:47>
        0xa3391a0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa339218 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3391f4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa339600 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa339238 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3395e8 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0xa339370 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0xa339258 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
              (CXXThisExpr 0xa339248 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0xa339348 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3392e0 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0xa3392c0 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa339288 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0xa339278 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0xa339314 <col:41> 'char_type *' lvalue ParmVar 0xa338dc0 '__s' 'char_type *')
              (DeclRefExpr 0xa33932c <col:46> 'streamsize':'int' lvalue ParmVar 0xa338e00 '__n' 'streamsize':'int')))
          (IfStmt 0xa3395c8 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa339428 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0xa3393d0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
              (MemberExpr 0xa339398 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                (CXXThisExpr 0xa339388 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa3393b8 <col:25> 'streamsize':'int' lvalue ParmVar 0xa338e00 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0xa3395a0 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa339590 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa339578 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33944c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3391a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa339560 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa339538 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa339528 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa339510 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e5700 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa3394f0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa339490 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa339500 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3394cc <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa339700 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa339620 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3396e8 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0xa3396b8 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa339640 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa339630 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa339694 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3396d8 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0xa3397f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa339720 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3397d8 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0xa3397b8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa339740 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa339730 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa339794 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3398c8 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa339838 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa339828 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33980c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3391a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3398a8 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa339858 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa339848 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33988c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3391a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa339958 <line:674:7, col:15>
    (UnaryOperator 0xa339940 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa339930 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0xa33a810 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0xa339db0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa339d78 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa339d68 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa339d98 <col:19> 'int' 0))
  (DeclStmt 0xa339e60 <line:683:7, col:33>
    0xa339dd0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa339e40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa339e18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa339e08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa339e30 <col:28> '_Bool' true))")
  (IfStmt 0xa33a7b0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0xa339e70 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0xa339dd0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa33a788 <line:685:2, line:705:2>
      (DeclStmt 0xa339f48 <line:686:4, col:47>
        0xa339ec0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa339f38 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa339f14 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa33a4a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa339f58 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa33a488 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0xa33a068 <line:690:8, col:58>
            0xa339f70 "const streamsize __num =
              (CallExpr 0xa33a048 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33a010 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0xa339ff0 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa339fb8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa339fa8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa33a468 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0xa33a0b8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0xa33a0a8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa33a078 <col:12> 'const streamsize':'const int' lvalue Var 0xa339f70 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0xa33a090 <col:20> 'int' 0))
            (BinaryOperator 0xa33a308 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0xa33a0e0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
                (CXXThisExpr 0xa33a0d0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0xa33a2e0 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33a168 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0xa33a148 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa33a110 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0xa33a100 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa33a19c <col:36> 'char_type *' lvalue ParmVar 0xa339c30 '__s' 'char_type *')
                (CallExpr 0xa33a2a8 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa33a298 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa33a270 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0xa210170 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9fc50d0 'min')))
                  (DeclRefExpr 0xa33a210 <col:50> 'const streamsize':'const int' lvalue Var 0xa339f70 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0xa33a2d0 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0xa33a228 <col:57> 'streamsize':'int' lvalue ParmVar 0xa339c70 '__n' 'streamsize':'int')))))
            (IfStmt 0xa33a448 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0xa33a378 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0xa33a368 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa33a320 <col:17> 'const streamsize':'const int' lvalue Var 0xa339f70 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0xa33a350 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0xa33a338 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0xa33a420 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa33a410 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa33a3f8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa33a390 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa339ec0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa33a3e8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa33a3c4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa33a5a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33a4c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33a588 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0xa33a558 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33a4e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33a4d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33a534 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa33a578 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0xa33a690 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33a5c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33a678 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0xa33a658 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33a5e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33a5d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33a634 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa33a768 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa33a6d8 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa33a6c8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33a6ac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa339ec0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa33a748 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33a6f8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33a6e8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33a72c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa339ec0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa33a800 <line:706:7, col:14>
    (MemberExpr 0xa33a7e0 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa33a7d0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0xa33b938 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0xa33ae40 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa33ae08 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa33adf8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa33ae28 <col:19> 'int' 0))
  (CallExpr 0xa33b020 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa33ae68 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa33ae58 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa33aff8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa33afb8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (CallExpr 0xa33aee8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33aeb0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa33aea0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa33af98 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa33af88 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa33af58 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa1e5b40 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa33af48 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa33af24 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa33b0e0 <line:719:7, col:33>
    0xa33b050 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa33b0c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa33b098 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33b088 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa33b0b0 <col:28> '_Bool' true))")
  (IfStmt 0xa33b8e0 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33b0f0 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0xa33b050 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa33b8b8 <line:721:2, line:740:2>
      (DeclStmt 0xa33b1c8 <line:722:4, col:47>
        0xa33b140 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa33b1b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33b194 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa33b5d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33b1d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa33b5b0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0xa33b2a0 <line:725:8, col:49>
            0xa33b1f0 "const int_type __eof =
              (CallExpr 0xa33b280 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33b248 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa33b360 <line:726:8, col:46>
            0xa33b2c0 "__streambuf_type *__sb =
              (CallExpr 0xa33b340 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33b308 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33b2f8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa33b590 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0xa33b4c0 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0xa33b388 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa33b370 <col:13> '__streambuf_type *' lvalue Var 0xa33b2c0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa33b498 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33b3c0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa33b460 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa33b410 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa33b3f4 <col:33> '__streambuf_type *' lvalue Var 0xa33b2c0 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0xa33b444 <col:49> 'char_type':'_CharT' lvalue ParmVar 0xa33abb0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0xa33b480 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa33b1f0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa33b568 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa33b558 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa33b540 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33b4d8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33b140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa33b530 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa33b50c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa33b6d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33b5f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33b6b8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0xa33b688 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33b610 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33b600 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33b664 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa33b6a8 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0xa33b7c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33b6f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33b7a8 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0xa33b788 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33b710 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33b700 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33b764 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa33b898 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa33b808 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa33b7f8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33b7dc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33b140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa33b878 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33b828 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33b818 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33b85c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33b140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa33b928 <line:741:7, col:15>
    (UnaryOperator 0xa33b910 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33b900 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0xa33ca20 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0xa33bf58 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa33bf20 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa306ce0
      (CXXThisExpr 0xa33bf10 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa33bf40 <col:19> 'int' 0))
  (CallExpr 0xa33c120 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa33bf80 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa33bf70 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa33c0f8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa33c0b8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (CallExpr 0xa33c000 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33bfc8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa33bfb8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa33c098 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa33c088 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa33c070 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa1e5b40 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa33c060 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa33c03c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa33c1e0 <line:754:7, col:33>
    0xa33c150 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa33c1c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa33c198 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33c188 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa33c1b0 <col:28> '_Bool' true))")
  (IfStmt 0xa33c9c8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33c1f0 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0xa33c150 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa33c9a0 <line:756:2, line:775:2>
      (DeclStmt 0xa33c2c8 <line:757:4, col:47>
        0xa33c240 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa33c2b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33c294 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa33c6b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33c2d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa33c698 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0xa33c3a0 <line:760:8, col:49>
            0xa33c2f0 "const int_type __eof =
              (CallExpr 0xa33c380 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33c348 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa33c460 <line:761:8, col:46>
            0xa33c3c0 "__streambuf_type *__sb =
              (CallExpr 0xa33c440 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33c408 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33c3f8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa33c678 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0xa33c5a8 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0xa33c488 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa33c470 <col:13> '__streambuf_type *' lvalue Var 0xa33c3c0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa33c580 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33c4c0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa33c548 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa33c510 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa33c4f4 <col:33> '__streambuf_type *' lvalue Var 0xa33c3c0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0xa33c564 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa33c2f0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa33c650 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa33c640 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa33c628 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa33c5c0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33c240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa33c618 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa33c5f4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa33c7b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33c6d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33c7a0 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0xa33c770 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33c6f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33c6e8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33c74c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa33c790 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0xa33c8a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33c7d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33c890 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0xa33c870 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33c7f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33c7e8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33c84c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa33c980 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa33c8f0 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa33c8e0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33c8c4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33c240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa33c960 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33c910 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33c900 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33c944 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33c240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa33ca10 <line:776:7, col:15>
    (UnaryOperator 0xa33c9f8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33c9e8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0xa33d6d8 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0xa33ce48 <line:786:7, col:21>
    0xa33cde0 "int __ret =
      (UnaryOperator 0xa33ce30 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0xa33ce18 <col:20> 'int' 1))")
  (DeclStmt 0xa33cef0 <line:787:7, col:33>
    0xa33ce60 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa33ced0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa33cea8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33ce98 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa33cec0 <col:28> '_Bool' true))")
  (IfStmt 0xa33d680 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33cf00 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0xa33ce60 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa33d658 <line:789:2, line:811:2>
      (DeclStmt 0xa33cfd8 <line:790:4, col:47>
        0xa33cf50 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa33cfc8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33cfa4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa33d370 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33cfe8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa33d358 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0xa33d0b0 <line:793:8, col:46>
            0xa33d010 "__streambuf_type *__sb =
              (CallExpr 0xa33d090 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33d058 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33d048 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa33d338 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0xa33d0c0 <line:794:12> '__streambuf_type *' lvalue Var 0xa33d010 '__sb' '__streambuf_type *')
            (CompoundStmt 0xa33d320 <line:795:3, line:800:3>
              (IfStmt 0xa33d300 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa33d1d8 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa33d178 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (CallExpr 0xa33d128 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa33d0f0 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa33d0d8 <col:9> '__streambuf_type *' lvalue Var 0xa33d010 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa33d160 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0xa33d148 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0xa33d290 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa33d280 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa33d268 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa33d1fc <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33cf50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa33d258 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa33d234 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa33d2e8 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0xa33d2b4 <col:7> 'int' lvalue Var 0xa33cde0 '__ret' 'int')
                  (IntegerLiteral 0xa33d2d0 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa33d470 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33d390 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33d458 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0xa33d428 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33d3b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33d3a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33d404 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa33d448 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0xa33d560 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33d490 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33d548 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0xa33d528 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33d4b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33d4a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33d504 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa33d638 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa33d5a8 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa33d598 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33d57c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33cf50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa33d618 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33d5c8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33d5b8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33d5fc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33cf50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa33d6c8 <line:812:7, col:14>
    (ImplicitCastExpr 0xa33d6b8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa33d69c <col:14> 'int' lvalue Var 0xa33cde0 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0xa33e358 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0xa33ddb0 <line:822:7, col:36>
    0xa33dd20 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa33dd90 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa33dd78 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa33dd60 <col:34> 'int' 1)))")
  (DeclStmt 0xa33de60 <line:823:7, col:33>
    0xa33ddd0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa33de40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa33de18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33de08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa33de30 <col:28> '_Bool' true))")
  (IfStmt 0xa33e310 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33de70 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0xa33ddd0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa33e2f0 <line:825:2, line:839:2>
      (IfStmt 0xa33e0e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33de88 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa33e0c8 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0xa33e0a8 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0xa33df00 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa33dee0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33dea8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33de98 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0xa33e090 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0xa33df14 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa33dd20 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0xa33e068 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33df98 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa33df78 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa33df40 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa33df30 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0xa33dfd0 <col:37> 'int' 0)
                (DeclRefExpr 0xa33e004 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa1ea960 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa33e044 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa33e1e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33e100 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33e1c8 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0xa33e198 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33e120 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33e110 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33e174 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa33e1b8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0xa33e2d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33e200 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33e2b8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0xa33e298 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33e220 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33e210 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33e274 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa33e348 <line:840:7, col:14>
    (DeclRefExpr 0xa33e32c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa33dd20 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0xa33f458 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0xa33eaf8 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa33e958 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa33e948 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa33ead0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa33ea90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (CallExpr 0xa33e9d8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33e9a0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa33e990 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa33ea70 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa33ea60 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa33ea48 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa1e5b40 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa33ea38 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa33ea14 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa33ebb0 <line:852:7, col:33>
    0xa33eb20 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa33eb90 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa33eb68 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33eb58 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa33eb80 <col:28> '_Bool' true))")
  (IfStmt 0xa33f400 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33ebc0 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0xa33eb20 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa33f3d8 <line:854:2, line:878:2>
      (DeclStmt 0xa33ec98 <line:855:4, col:47>
        0xa33ec10 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa33ec88 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33ec64 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa33f0f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33eca8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa33f0d8 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0xa33f0b8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0xa33ed20 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa33ed00 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33ecc8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33ecb8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa33f0a0 <line:859:3, line:867:3>
              (DeclStmt 0xa33ee98 <line:861:5, line:862:23>
                0xa33ed40 "const pos_type __p =
                  (CallExpr 0xa33ee70 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa33ede0 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa33edc0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa33ed88 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa33ed78 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa33ee14 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa33e700 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0xa33ee4c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa33f080 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa33efa0 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa33ef40 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (DeclRefExpr 0xa33eea8 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa33ed40 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa33ef20 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa33ef00 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa33eee8 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa33eed0 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa33f058 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa33f048 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa33f030 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa33efc4 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33ec10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa33f020 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa33effc <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa33f1f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33f110 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33f1d8 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0xa33f1a8 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33f130 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33f120 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33f184 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa33f1c8 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0xa33f2e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33f210 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa33f2c8 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0xa33f2a8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33f230 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa33f220 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa33f284 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa33f3b8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa33f328 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa33f318 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33f2fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33ec10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa33f398 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33f348 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33f338 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa33f37c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33ec10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa33f448 <line:879:7, col:15>
    (UnaryOperator 0xa33f430 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33f420 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa3405e0 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0xa33fc68 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa33fac8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa33fab8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa33fc40 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa33fc00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (CallExpr 0xa33fb48 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33fb10 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa33fb00 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa33fbe0 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa33fbd0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa33fbb8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa1e5b40 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa33fba8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa33fb84 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa33fd20 <line:891:7, col:33>
    0xa33fc90 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa33fd00 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa33fcd8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33fcc8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa33fcf0 <col:28> '_Bool' true))")
  (IfStmt 0xa340588 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33fd30 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0xa33fc90 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa340560 <line:893:2, line:917:2>
      (DeclStmt 0xa33fe08 <line:894:4, col:47>
        0xa33fd80 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa33fdf8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa33fdd4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa340278 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa33fe18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa340260 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0xa340240 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0xa33fe90 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa33fe70 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33fe38 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33fe28 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa340228 <line:898:3, line:906:3>
              (DeclStmt 0xa340020 <line:900:5, line:901:23>
                0xa33feb0 "const pos_type __p =
                  (CallExpr 0xa33fff8 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa33ff50 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa33ff30 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa33fef8 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa33fee8 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa33ff84 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa33f800 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0xa33ff9c <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa33f870 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0xa33ffd4 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa340208 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa340128 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3400c8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
                  (DeclRefExpr 0xa340030 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa33feb0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa3400a8 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa340088 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa340070 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa340058 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa3401e0 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3401d0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3401b8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa34014c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33fd80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3401a8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa340184 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa340378 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa340298 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa340360 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0xa340330 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3402b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3402a8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa34030c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa340350 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0xa340468 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa340398 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa340450 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0xa340430 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3403b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3403a8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa34040c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa340540 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3404b0 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3404a0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa340484 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33fd80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa340520 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3404d0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3404c0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa340504 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa33fd80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3405d0 <line:918:7, col:15>
    (UnaryOperator 0xa3405b8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3405a8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0xa343920 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0xa340bf0 <line:926:7, col:61>
    0xa340bc0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa340cb0 <line:927:7, col:67>
    0xa340c80 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa343008 <line:929:7, col:58>
    0xa340d20 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa342fe8 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa342fc0 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3408c0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa342fd8 <col:52> '_Bool' false))")
  (IfStmt 0xa3438d8 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0xa343018 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0xa340d20 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa3438b0 <line:931:2, line:950:2>
      (DeclStmt 0xa3430e8 <line:932:4, col:47>
        0xa343060 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3430d8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3430b4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3435b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3430f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa343598 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0xa343230 <line:935:8, col:54>
            0xa343130 "const __int_type __cb =
              (CallExpr 0xa343210 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3431d8 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa3431b8 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa343180 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0xa343164 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3408c0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0xa343578 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0xa343338 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0xa343310 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa343268 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0xa34328c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa343130 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0xa3432f0 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa3432c8 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0xa3433e8 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa34334c <col:3> '_CharT' lvalue ParmVar 0xa340930 '__c' '_CharT &')
              (CallExpr 0xa3433c8 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa343388 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3433ac <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa343130 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0xa343550 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa343540 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa343528 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa343400 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa343060 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa343510 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa3434e8 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa3434d8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3434c0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa1e5700 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa3434a0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa343440 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa3434b0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa34347c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa3436b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3435d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3436a0 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0xa343670 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3435f8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3435e0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3408c0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa34364c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa343690 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0xa3437b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3436d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa343798 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0xa343778 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa343700 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3436e8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3408c0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa343754 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa343890 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3437f8 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3437e8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3437cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa343060 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa343870 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa343820 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0xa343804 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3408c0 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa343854 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa343060 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa343910 <line:951:7, col:14>
    (DeclRefExpr 0xa3438f4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3408c0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0xa345748 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0xa343f20 <line:958:7, col:61>
    0xa343ef0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa344070 <line:959:7, col:73>
    0xa344040 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa344120 <line:960:7, col:51>
    0xa3440f0 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0xa344170 <line:961:7, col:35>
    0xa344140 "typedef _CharT char_type")
  (DeclStmt 0xa344260 <line:962:7, col:44>
    0xa344230 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa3442d0 <line:964:7, col:33>
    0xa344280 "streamsize __extracted =
      (IntegerLiteral 0xa3442b8 <col:32> 'int' 0)")
  (DeclStmt 0xa344398 <line:965:7, col:50>
    0xa344310 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa344388 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa344364 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea5c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3444b0 <line:966:7, col:58>
    0xa344430 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa344490 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa344464 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa344480 <col:52> '_Bool' false))")
  (IfStmt 0xa3454f8 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3444c0 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0xa344430 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa3454d8 <line:968:2, line:1006:2>
      (IfStmt 0xa3452b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3444d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa345280 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0xa344598 <line:972:8, col:39>
            0xa3444f0 "streamsize __num =
              (CallExpr 0xa344578 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa344540 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0xa344524 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0xa3446e8 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0xa3445e8 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0xa3445d8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa3445a8 <col:12> 'streamsize':'int' lvalue Var 0xa3444f0 '__num' 'streamsize':'int'))
              (IntegerLiteral 0xa3445c0 <col:21> 'int' 0))
            (BinaryOperator 0xa3446d0 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0xa344600 <col:3> 'streamsize':'int' lvalue Var 0xa3444f0 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0xa3446c0 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0xa3446a0 <col:11, col:52> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0xa344888 <line:976:8, col:73>
            0xa344750 "const __ctype_type &__ct =
              (CallExpr 0xa344868 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa344790 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
                (CallExpr 0xa344848 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa344810 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3447f8 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa344960 <line:978:8, col:45>
            0xa3448c0 "const int_type __eof =
              (CallExpr 0xa344940 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa344918 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0xa344a58 <line:979:8, col:45>
            0xa3449b0 "__streambuf_type *__sb =
              (CallExpr 0xa344a38 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa344a00 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3449e4 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa344b18 <line:980:8, col:36>
            0xa344a70 "int_type __c =
              (CallExpr 0xa344af8 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa344ac0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa344aa4 <col:23> '__streambuf_type *' lvalue Var 0xa3449b0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa344fe0 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0xa344de0 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0xa344c78 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0xa344ba8 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0xa344b98 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa344b28 <col:15> 'streamsize':'int' lvalue Var 0xa344280 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0xa344b80 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0xa344b70 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa344b40 <col:29> 'streamsize':'int' lvalue Var 0xa3444f0 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0xa344b58 <col:37> 'int' 1)))
                (UnaryOperator 0xa344c60 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa344c38 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa344be0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa344c04 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa344a70 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa344c1c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3448c0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa344dc8 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0xa344da0 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa344ca8 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa344c90 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa344750 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0xa344cfc <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0xa226b10 'space' 'const mask':'const unsigned short')
                  (CallExpr 0xa344d80 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa344d40 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa344d64 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0xa344a70 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0xa344fc0 <line:986:3, line:990:3>
              (BinaryOperator 0xa344ed8 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0xa344e40 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa344e28 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa344df8 <col:6> '_CharT *' lvalue ParmVar 0xa343c80 '__s' '_CharT *')))
                (CallExpr 0xa344eb8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa344e78 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa344e9c <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0xa344a70 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa344f08 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa344ef0 <col:7> 'streamsize':'int' lvalue Var 0xa344280 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0xa344fa8 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa344f1c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa344a70 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa344f88 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa344f50 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa344f34 <col:11> '__streambuf_type *' lvalue Var 0xa3449b0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa345158 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0xa345078 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa345020 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa345044 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa344a70 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa34505c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3448c0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa345130 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa345120 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa345108 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa34509c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa344310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3450f8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3450d4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0xa3451e0 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0xa345190 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa345174 <col:9> '_CharT *' lvalue ParmVar 0xa343c80 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0xa3451c8 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0xa345260 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa345210 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3451f8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa345248 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa3453c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3452d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3453a8 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0xa345378 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa345300 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3452e8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa345354 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa345398 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0xa3454b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3453e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3454a0 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0xa345480 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa345408 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3453f0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa34545c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea4a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa345620 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0xa345550 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa345540 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa345530 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa345514 <col:12> 'streamsize':'int' lvalue Var 0xa344280 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0xa3455f8 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3455e8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3455d0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa1e5d80 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa345564 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa344310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3455c0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa34559c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea560 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa345700 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0xa345668 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa345658 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa34563c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa344310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3456e0 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa345690 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa345674 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa3456c4 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa344310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa345738 <line:1011:7, col:14>
    (DeclRefExpr 0xa34571c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa343c10 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0xa3468a8 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0xa345d10 <line:1019:7, col:61>
    0xa345ce0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa345e60 <line:1020:7, col:73>
    0xa345e30 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa345f20 <line:1021:7, col:60>
    0xa345ef0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa346010 <line:1022:7, col:44>
    0xa345fe0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa346198 <line:1024:7, col:72>
    0xa346060 "const __ctype_type &__ct =
      (CallExpr 0xa346178 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0xa3460a0 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa1d97b0)
        (CallExpr 0xa346158 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa346120 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa346108 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa345a50 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0xa346278 <line:1025:7, col:46>
    0xa3461d0 "const __int_type __eof =
      (CallExpr 0xa346258 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa346230 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0xa346378 <line:1026:7, col:44>
    0xa3462d0 "__streambuf_type *__sb =
      (CallExpr 0xa346358 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa346320 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa346304 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa345a50 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0xa346438 <line:1027:7, col:37>
    0xa346390 "__int_type __c =
      (CallExpr 0xa346418 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3463e0 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa3463c4 <col:24> '__streambuf_type *' lvalue Var 0xa3462d0 '__sb' '__streambuf_type *')))")
  (WhileStmt 0xa3466f0 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0xa346638 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0xa3464e8 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0xa3464c0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa346468 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0xa34648c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa346390 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0xa3464a4 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa3461d0 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0xa346610 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa346518 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa3464fc <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa346060 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0xa34656c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0xa226b10 'space' 'const mask':'const unsigned short')
        (CallExpr 0xa3465f0 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa3465b0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3465d4 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa346390 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0xa3466d8 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0xa346650 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa346390 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0xa3466b8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa346680 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa346668 <col:8> '__streambuf_type *' lvalue Var 0xa3462d0 '__sb' '__streambuf_type *')))))
  (IfStmt 0xa346860 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0xa346788 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa346730 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0xa346754 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa346390 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0xa34676c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa3461d0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0xa346840 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3467c8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa3467ac <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa345a50 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa34681c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa1ea500 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa346898 <line:1035:7, col:14>
    (DeclRefExpr 0xa34687c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa345a50 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3521b8 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3521a8 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa352190 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa352170 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35210c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa352180 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35214c <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0xa3525b8 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa350ef0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0xa352658 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3522a8 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa352298 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa352280 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa352260 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3521fc <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa352270 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35223c <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0xa352738 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa352700 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0xa3526e8 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa351040 '__str' 'const __string_type &')))
, (CallExpr 0xa3527a8 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa352770 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0xa352754 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa351040 '__str' 'const __string_type &')))
) (CompoundStmt 0xa3528a0 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0xa352880 <col:9, col:33> '<dependent type>'
    (MemberExpr 0xa352848 <col:9> '<bound member function type>' ->_M_stringbuf_init 0xa351450
      (CXXThisExpr 0xa352838 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa352868 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3510b0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0xa352e00 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0xa3528f8 <line:123:2, col:21>
    0xa3528c0 "__string_type __ret")
  (IfStmt 0xa352db8 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0xa352970 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa352938 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0xa352928 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0xa352d40 <line:125:4, line:131:4>
      (IfStmt 0xa352d20 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa352aa8 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa352a60 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (CallExpr 0xa3529d8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3529a0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa352990 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa352a40 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa352a08 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0xa3529f8 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa352be0 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0xa352acc <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3528c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa352bc0 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa352b38 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa352b00 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0xa352af0 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa352ba0 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa352b68 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa352b58 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0xa352d08 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0xa352bf8 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3528c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa352ce8 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa352c60 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa352c28 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa352c18 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa352cc8 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa352c90 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa352c80 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0xa352da0 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0xa352d54 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3528c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0xa352d80 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
        (CXXThisExpr 0xa352d70 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0xa352df0 <line:134:2, col:9>
    (DeclRefExpr 0xa352dd4 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3528c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0xa353010 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0xa352f68 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa352e50 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0xa352e30 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
        (CXXThisExpr 0xa352e20 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0xa352ed8 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa352ea0 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0xa352e84 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa351280 '__s' 'const __string_type &')))
    (CallExpr 0xa352f48 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa352f10 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa352ef4 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa351280 '__s' 'const __string_type &'))))
  (CallExpr 0xa352ff0 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0xa352fa0 <col:2> '<bound member function type>' ->_M_stringbuf_init 0xa351450
      (CXXThisExpr 0xa352f90 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0xa352fd0 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
      (CXXThisExpr 0xa352fc0 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0xa3534a0 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0xa353070 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa353038 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
      (CXXThisExpr 0xa353028 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa353058 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa351400 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0xa3530e0 <line:158:2, col:23>
    0xa353090 "__size_type __len =
      (IntegerLiteral 0xa3530c8 <col:22> 'int' 0)")
  (IfStmt 0xa353348 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa353268 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa353230 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e4260)
      (MemberExpr 0xa353100 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
        (CXXThisExpr 0xa3530f0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0xa353218 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0xa3531f0 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa3531e0 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3531c8 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa3531a8 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa353148 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea6d0 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0xa3531b8 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa353184 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea670 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0xa353330 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0xa35328c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0xa353090 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0xa353310 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3532d8 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0xa3532b8 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa3532a8 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0xa353478 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0xa353378 <col:2> '<bound member function type>' ->_M_sync 0xa351e30
      (CXXThisExpr 0xa353368 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0xa353430 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0xa353400 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3533c8 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0xa3533a8 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa353398 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0xa353448 <col:52> 'int' 0)
    (DeclRefExpr 0xa353460 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0xa353090 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0xa353838 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0xa353538 <line:167:2, col:23>
    0xa3534d0 "streamsize __ret =
      (UnaryOperator 0xa353520 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0xa353508 <col:22> 'int' 1))")
  (IfStmt 0xa3537e0 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3535f0 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa3535b8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e4260)
      (MemberExpr 0xa353558 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
        (CXXThisExpr 0xa353548 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa353594 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0xa3537c8 <line:169:4, line:172:4>
      (CallExpr 0xa353648 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0xa353628 <col:6> '<bound member function type>' ->_M_update_egptr 0xa351ec0
          (CXXThisExpr 0xa353618 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0xa3537b0 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa353664 <col:6> 'streamsize':'int' lvalue Var 0xa3534d0 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0xa353788 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa353750 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CallExpr 0xa3536c8 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa353690 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa353680 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa353730 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3536f8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa3536e8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0xa353828 <line:173:2, col:9>
    (ImplicitCastExpr 0xa353818 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa3537fc <col:9> 'streamsize':'int' lvalue Var 0xa3534d0 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0xa352318 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3522f0 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0xa352380 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa352358 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa353a60 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0xa353a20 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0xa3538c8 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0xa353854 <col:6> 'char_type *' lvalue ParmVar 0xa3517d0 '__s' 'char_type *')
      (BinaryOperator 0xa3538b0 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0xa3538a0 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa35386c <col:13> 'streamsize':'int' lvalue ParmVar 0xa351810 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa353888 <col:20> 'int' 0)))
    (CompoundStmt 0xa353a08 <line:200:4, line:211:4>
      (CallExpr 0xa353948 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa353910 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0xa3538f0 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa3538e0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa3539e0 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0xa353978 <col:6> '<bound member function type>' ->_M_sync 0xa351e30
          (CXXThisExpr 0xa353968 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa353998 <col:14> 'char_type *' lvalue ParmVar 0xa3517d0 '__s' 'char_type *')
        (DeclRefExpr 0xa3539b0 <col:19> 'streamsize':'int' lvalue ParmVar 0xa351810 '__n' 'streamsize':'int')
        (IntegerLiteral 0xa3539c8 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0xa353a50 <line:212:2, col:9>
    (CXXThisExpr 0xa353a40 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa352468 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa352458 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa352440 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa352420 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3523bc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa352430 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3523fc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa352558 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa352548 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa352530 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa352510 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3524ac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa352520 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3524ec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0xa357db8 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0xa353b88 <line:234:2, col:46>
    0xa353a80 "const bool __testin =
      (CXXOperatorCallExpr 0xa353b60 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa353b28 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e4260)
        (MemberExpr 0xa353ac8 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
          (CXXThisExpr 0xa353ab8 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa353b04 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa357d98 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0xa353d40 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0xa353be0 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa353ba8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa353b98 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0xa353d18 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa353cd0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
        (CallExpr 0xa353c48 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa353c10 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0xa353c00 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa353cb0 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa353c78 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa353c68 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa3540f0 <line:236:4, line:241:4>
      (IfStmt 0xa3540d0 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0xa353d70 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa353d58 <col:10> 'const _Bool' lvalue Var 0xa353a80 '__testin' 'const _Bool'))
        (CallExpr 0xa353f00 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa353d90 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa353d80 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa353e10 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa353dd8 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa353dc8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa353e78 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa353e40 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa353e30 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa353ee0 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa353ea8 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0xa353e98 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa3540a8 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa353f38 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa353f28 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa353fb8 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa353f80 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa353f70 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa354020 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa353fe8 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0xa353fd8 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa354088 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa354050 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa354040 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa358f38 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa358f14 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa359088 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa359078 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa359060 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa359040 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa358fe8 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa358960 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa359050 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35901c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa359200 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0xa3591e0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa359118 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa359108 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3591c0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa359180 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (MemberExpr 0xa359160 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3588c0
        (CXXThisExpr 0xa359150 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa358f88 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa358f64 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0xa359258 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa358a80 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa359310 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa359300 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3592e8 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3592c8 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa359270 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa358af0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3592d8 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3592a4 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa359478 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0xa359458 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa359390 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa359380 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa359438 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3593f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (MemberExpr 0xa3593d8 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3588c0
        (CXXThisExpr 0xa3593c8 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa359490 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa359580 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0xa359570 <col:9, col:59>
    (CXXConstCastExpr 0xa359558 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa359528 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa3594e8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (MemberExpr 0xa3594c8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3588c0
          (CXXThisExpr 0xa3594b8 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa359630 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0xa359620 <col:9, col:33>
    (CallExpr 0xa359600 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3595c8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa3595a8 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3588c0
          (CXXThisExpr 0xa359598 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa3596e8 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0xa3596c8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa359678 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa359658 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3588c0
        (CXXThisExpr 0xa359648 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa3596ac <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa358e10 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa35a828 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa35a804 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa35a978 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa35a968 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa35a950 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa35a930 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35a8d8 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa35a290 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa35a940 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35a90c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa35aaf0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0xa35aad0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35aa08 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa35a9f8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa35aab0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa35aa70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (MemberExpr 0xa35aa50 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35a1f0
        (CXXThisExpr 0xa35aa40 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa35a878 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa35a854 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0xa35ab48 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35a3b0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa35ac00 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa35abf0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa35abd8 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa35abb8 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35ab60 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa35a420 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa35abc8 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35ab94 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa35ad68 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0xa35ad48 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35ac80 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa35ac70 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa35ad28 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa35ace8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (MemberExpr 0xa35acc8 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35a1f0
        (CXXThisExpr 0xa35acb8 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa35ad80 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa35ae70 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0xa35ae60 <col:9, col:59>
    (CXXConstCastExpr 0xa35ae48 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa35ae18 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa35add8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (MemberExpr 0xa35adb8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35a1f0
          (CXXThisExpr 0xa35ada8 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa35af20 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0xa35af10 <col:9, col:33>
    (CallExpr 0xa35aef0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35aeb8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa35ae98 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35a1f0
          (CXXThisExpr 0xa35ae88 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa35afd8 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0xa35afb8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35af68 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa35af48 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35a1f0
        (CXXThisExpr 0xa35af38 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa35af9c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35a700 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0xa35c1a0 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa35c190 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa35c178 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa35c158 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35c0f4 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa35c168 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35c134 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa35c308 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa35bb80 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa35c470 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0xa35c450 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35c388 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa35c378 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa35c430 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa35c3f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (MemberExpr 0xa35c3d0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35bae0
        (CXXThisExpr 0xa35c3c0 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0xa35c290 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa35c280 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa35c268 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa35c248 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35c1e4 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa35c258 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa35c224 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa35c4c8 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35bca0 '__str' 'const __string_type &')
, (DeclRefExpr 0xa35c4e0 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa35bd10 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa35c638 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0xa35c618 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35c550 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa35c540 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa35c5f8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa35c5b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
      (MemberExpr 0xa35c598 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35bae0
        (CXXThisExpr 0xa35c588 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa35c650 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa35c740 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0xa35c730 <col:9, col:59>
    (CXXConstCastExpr 0xa35c718 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa35c6e8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa35c6a8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (MemberExpr 0xa35c688 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35bae0
          (CXXThisExpr 0xa35c678 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa35c7f0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0xa35c7e0 <col:9, col:33>
    (CallExpr 0xa35c7c0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35c788 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa35c768 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35bae0
          (CXXThisExpr 0xa35c758 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa35c8a8 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0xa35c888 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35c838 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa35c818 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa35bae0
        (CXXThisExpr 0xa35c808 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa35c86c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35bff0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0xa352318 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3522f0 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0xa35dca8 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0xa35d1a0 <line:49:7, col:42>
    0xa35d0f0 "int_type __ret =
      (CallExpr 0xa35d180 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d148 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0xa35dc60 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa35d2c8 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa35d280 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (CallExpr 0xa35d1f8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d1c0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d1b0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa35d260 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d228 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d218 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0xa35dc48 <line:51:2, line:74:2>
      (DeclStmt 0xa35d3e8 <line:54:4, col:63>
        0xa35d300 "const bool __testeof =
          (CallExpr 0xa35d3c0 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35d358 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0xa35d38c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35ce70 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0xa35d3a4 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0xa35d0f0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0xa35dc28 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0xa35d420 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa35d410 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa35d3f8 <col:9> 'const _Bool' lvalue Var 0xa35d300 '__testeof' 'const _Bool')))
        (CompoundStmt 0xa35da98 <line:56:6, line:68:6>
          (DeclStmt 0xa35d638 <line:57:8, line:59:28>
            0xa35d440 "const bool __testeq =
              (CallExpr 0xa35d610 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa35d498 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0xa35d540 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa35d4f0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa35d524 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35ce70 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0xa35d5f8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa35d5a8 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa35d570 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa35d560 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0xa35d5e0 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0xa35d5c8 <col:25> 'int' 1))))")
          (DeclStmt 0xa35d778 <line:60:8, col:60>
            0xa35d650 "const bool __testout =
              (CXXOperatorCallExpr 0xa35d750 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0xa35d710 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
                (CXXDependentScopeMemberExpr 0xa35d698 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa35d688 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa35d6ec <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa35da78 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0xa35d7d8 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0xa35d7b8 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa35d788 <col:12> 'const _Bool' lvalue Var 0xa35d440 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0xa35d7c8 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa35d7a0 <col:24> 'const _Bool' lvalue Var 0xa35d650 '__testout' 'const _Bool')))
            (CompoundStmt 0xa35da58 <line:62:3, line:67:3>
              (CallExpr 0xa35d868 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa35d800 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa35d7f0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0xa35d850 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0xa35d838 <col:18> 'int' 1)))
              (IfStmt 0xa35d9f0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0xa35d8b0 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa35d8a0 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa35d888 <col:10> 'const _Bool' lvalue Var 0xa35d440 '__testeq' 'const _Bool')))
                (BinaryOperator 0xa35d9d8 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0xa35d930 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0xa35d910 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa35d8d8 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0xa35d8c8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0xa35d9b8 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa35d968 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa35d99c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35ce70 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0xa35da40 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa35da0c <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa35d0f0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0xa35da24 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35ce70 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0xa35dc10 <line:70:6, line:73:6>
          (CallExpr 0xa35db30 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35dac8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa35dab8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0xa35db18 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0xa35db00 <col:21> 'int' 1)))
          (BinaryOperator 0xa35dbf8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0xa35db50 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa35d0f0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa35dbd8 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa35db88 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0xa35dbbc <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35ce70 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa35dc98 <line:75:7, col:14>
    (DeclRefExpr 0xa35dc7c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa35d0f0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0xa352380 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa352358 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0xa35fc60 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0xa35e548 <line:83:7, col:59>
    0xa35e420 "const bool __testout =
      (CXXOperatorCallExpr 0xa35e520 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0xa35e4e0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CXXDependentScopeMemberExpr 0xa35e468 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0xa35e458 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa35e4bc <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa35e6b0 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0xa35e618 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa35e5d0 <col:11, col:45> 'long'
        (ImplicitCastExpr 0xa35e5c0 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa35e558 <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa35e5f8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0xa35e598 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa35e588 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa35e570 <col:29> 'const _Bool' lvalue Var 0xa35e420 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0xa35e608 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa35e5b0 <col:40> '_Bool' false))))
    (ReturnStmt 0xa35e6a0 <line:85:2, col:26>
      (CallExpr 0xa35e680 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35e648 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa35e828 <line:87:7, col:79>
    0xa35e6e0 "const bool __testeof =
      (CallExpr 0xa35e800 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35e738 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0xa35e76c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35e1a0 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa35e7e0 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35e7a8 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0xa35e990 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0xa35e8e0 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa35e888 <col:11, col:44> 'long'
        (ImplicitCastExpr 0xa35e878 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa35e838 <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa35e8c0 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa35e8b0 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa35e850 <col:28> 'const _Bool' lvalue Var 0xa35e6e0 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0xa35e8d0 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa35e868 <col:39> '_Bool' false))))
    (ReturnStmt 0xa35e980 <line:89:2, col:33>
      (CallExpr 0xa35e960 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35e910 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0xa35e944 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35e1a0 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0xa35ea80 <line:91:7, col:58>
    0xa35e9c0 "const __size_type __capacity =
      (CallExpr 0xa35ea60 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35ea28 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa35ea08 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa35e9f8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa35eb60 <line:92:7, col:58>
    0xa35eaa0 "const __size_type __max_size =
      (CallExpr 0xa35eb40 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35eb08 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa35eae8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa35ead8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa35ecf8 <line:93:7, col:58>
    0xa35eb80 "const bool __testput =
      (CXXOperatorCallExpr 0xa35ecd0 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa35ec88 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (CallExpr 0xa35ec00 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35ebc8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa35ebb8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa35ec68 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35ec30 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0xa35ec20 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa35eef0 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0xa35ee40 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0xa35ed08 <col:11> 'long (long, long)' lvalue Function 0xa0f24c0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa35ee18 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0xa35ed48 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa35ed38 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa35ed20 <col:29> 'const _Bool' lvalue Var 0xa35eb80 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0xa35edf0 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa35ed90 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
          (DeclRefExpr 0xa35ed5c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35e9c0 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0xa35ed74 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35eaa0 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0xa35ee30 <col:68> '_Bool' false))
    (ReturnStmt 0xa35eee0 <line:95:2, col:26>
      (CallExpr 0xa35eec0 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35ee88 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa35efe8 <line:99:7, col:62>
    0xa35ef20 "const char_type __conv =
      (CallExpr 0xa35efc8 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35ef78 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa35efac <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35e1a0 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa35fb98 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0xa35f020 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa35f010 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa35eff8 <col:12> 'const _Bool' lvalue Var 0xa35eb80 '__testput' 'const _Bool')))
    (CompoundStmt 0xa35fab8 <line:101:2, line:122:2>
      (DeclStmt 0xa35f1a8 <line:111:4, line:112:25>
        0xa35f040 "const __size_type __opt_len =
          (CallExpr 0xa35f180 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa35f098 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc53e0 0x9fc5b50)
            (CXXUnresolvedConstructExpr 0xa35f120 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0xa35f108 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0xa35f0d8 <col:55> 'int' 2)
                (DeclRefExpr 0xa35f0f0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35e9c0 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0xa35f160 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0xa35f148 <col:20> 'int' 512)))")
      (DeclStmt 0xa35f2a0 <line:113:4, col:61>
        0xa35f1c0 "const __size_type __len =
          (CallExpr 0xa35f278 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa35f210 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc50d0 0x9fc57c0)
            (DeclRefExpr 0xa35f248 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35f040 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0xa35f260 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35eaa0 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0xa35f2f8 <line:114:4, col:23>
        0xa35f2c0 "__string_type __tmp")
      (CallExpr 0xa35f370 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35f320 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa35f308 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa35f2c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa35f354 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35f1c0 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0xa35f608 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0xa35f3d8 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35f3a0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa35f390 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa35f5e0 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35f410 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0xa35f3f4 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa35f2c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0xa35f490 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35f458 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa35f448 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa35f5b8 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0xa35f580 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
            (CallExpr 0xa35f4f8 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa35f4c0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa35f4b0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa35f560 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa35f528 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0xa35f518 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0xa35f690 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35f640 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa35f624 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa35f2c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa35f674 <col:20> 'const char_type':'const _CharT' lvalue Var 0xa35ef20 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0xa35f730 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35f6e0 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0xa35f6c0 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa35f6b0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa35f714 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa35f2c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0xa35fa90 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0xa35f760 <line:120:4> '<bound member function type>' ->_M_sync 0xa351e30
          (CXXThisExpr 0xa35f750 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0xa35f818 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0xa35f7e8 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35f7b0 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0xa35f790 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
                (CXXThisExpr 0xa35f780 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0xa35f938 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa35f900 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CallExpr 0xa35f878 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35f840 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0xa35f830 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa35f8e0 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35f8a8 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa35f898 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa35fa68 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa35fa30 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CallExpr 0xa35f9a8 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35f970 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0xa35f960 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa35fa10 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35f9d8 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0xa35f9c8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0xa35fb80 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0xa35fb50 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0xa35fb30 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35faf8 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0xa35fae8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa35fb64 <col:18> 'const char_type':'const _CharT' lvalue Var 0xa35ef20 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0xa35fc18 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35fbc8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa35fbb8 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa35fc00 <col:19> 'int' 1))
  (ReturnStmt 0xa35fc50 <line:126:7, col:14>
    (DeclRefExpr 0xa35fc38 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa35e1a0 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0xa363ed8 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0xa363a20 <line:134:7, col:42>
    0xa363970 "int_type __ret =
      (CallExpr 0xa363a00 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3639c8 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0xa363b68 <line:135:7, col:57>
    0xa363a40 "const bool __testin =
      (CXXOperatorCallExpr 0xa363b40 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa363b00 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (CXXDependentScopeMemberExpr 0xa363a88 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0xa363a78 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa363adc <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa363e90 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa363b90 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa363b78 <col:11> 'const _Bool' lvalue Var 0xa363a40 '__testin' 'const _Bool'))
    (CompoundStmt 0xa363e78 <line:137:2, line:143:2>
      (CallExpr 0xa363bd0 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0xa363bb0 <col:4> '<bound member function type>' ->_M_update_egptr 0xa351ec0
          (CXXThisExpr 0xa363ba0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0xa363e58 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa363d08 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa363cc0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (CallExpr 0xa363c38 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa363c00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa363bf0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa363ca0 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa363c68 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0xa363c58 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa363e40 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0xa363d2c <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa363970 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0xa363e20 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa363d68 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0xa363e08 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0xa363de8 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa363db0 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa363da0 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa363ec8 <line:144:7, col:14>
    (DeclRefExpr 0xa363eac <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa363970 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa352468 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa352458 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa352440 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa352420 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3523bc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa352430 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3523fc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3665a8 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0xa364828 <line:152:7, col:47>
    0xa364770 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa364808 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa3647e8 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa3647d0 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa3647b8 <col:44> 'int' 1))))")
  (DeclStmt 0xa364aa0 <line:153:7, col:67>
    0xa364840 "bool __testin =
      (CXXOperatorCallExpr 0xa364a78 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa364a20 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
        (ParenExpr 0xa3649f0 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0xa3649c8 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0xa364988 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
            (CXXOperatorCallExpr 0xa364948 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0xa364908 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
              (DeclRefExpr 0xa3648a0 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa3648d0 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0xa3648c0 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa36496c <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3644d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa364a08 <col:66> 'int' 0))")
  (DeclStmt 0xa364d20 <line:154:7, col:69>
    0xa364ac0 "bool __testout =
      (CXXOperatorCallExpr 0xa364cf8 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa364ca0 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
        (ParenExpr 0xa364c70 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0xa364c48 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa364c08 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
            (CXXOperatorCallExpr 0xa364bc8 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0xa364b88 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
              (DeclRefExpr 0xa364b20 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa364b50 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa364b40 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa364bec <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3644d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa364c88 <col:68> 'int' 0))")
  (DeclStmt 0xa364ee0 <line:155:7, col:78>
    0xa364d40 "const bool __testboth =
      (BinaryOperator 0xa364e90 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0xa364dc8 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0xa364da8 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa364d74 <col:31> '_Bool' lvalue Var 0xa364840 '__testin' '_Bool'))
          (ImplicitCastExpr 0xa364db8 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa364d8c <col:43> '_Bool' lvalue Var 0xa364ac0 '__testout' '_Bool')))
        (BinaryOperator 0xa364e78 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0xa364e58 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa364e38 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa364de0 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa364460 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa364e68 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa364e48 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa364e14 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa1ea960 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0xa365020 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa364ef0 <col:7> '_Bool' lvalue Var 0xa364840 '__testin' '_Bool')
    (ImplicitCastExpr 0xa365010 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa364ff8 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa364fe8 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa364fd0 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa364fa8 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa364f98 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa364f80 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4260 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa364f60 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa364f08 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3644d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa364f70 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa364f3c <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0xa365170 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa365040 <col:7> '_Bool' lvalue Var 0xa364ac0 '__testout' '_Bool')
    (ImplicitCastExpr 0xa365160 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa365148 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa365138 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa365120 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa3650f8 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa3650e8 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3650d0 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4260 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa3650b0 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa365058 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3644d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa3650c0 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa36508c <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0xa365310 <line:161:7, col:72>
    0xa3651c0 "const char_type *__beg =
      (ConditionalOperator 0xa3652f0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa3652e0 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3651f4 <col:32> '_Bool' lvalue Var 0xa364840 '__testin' '_Bool'))
        (CallExpr 0xa365258 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa365220 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa365210 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa3652c0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa365288 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa365278 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa366560 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0xa365458 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0xa365380 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0xa365368 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0xa365320 <col:12> 'const char_type *' lvalue Var 0xa3651c0 '__beg' 'const char_type *')
          (UnaryOperator 0xa365350 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0xa365338 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3643f0 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0xa365440 <col:32, col:68> '_Bool'
        (BinaryOperator 0xa365428 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0xa3653e8 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0xa3653c8 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa365394 <col:33> '_Bool' lvalue Var 0xa364840 '__testin' '_Bool'))
            (ImplicitCastExpr 0xa3653d8 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3653ac <col:45> '_Bool' lvalue Var 0xa364ac0 '__testout' '_Bool')))
          (ImplicitCastExpr 0xa365418 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa365400 <col:58> 'const _Bool' lvalue Var 0xa364d40 '__testboth' 'const _Bool')))))
    (CompoundStmt 0xa366538 <line:163:2, line:191:2>
      (CallExpr 0xa3654a0 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0xa365480 <col:4> '<bound member function type>' ->_M_update_egptr 0xa351ec0
          (CXXThisExpr 0xa365470 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa365520 <line:166:4, col:30>
        0xa3654d0 "off_type __newoffi =
          (DeclRefExpr 0xa365504 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3643f0 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0xa365590 <line:167:4, col:34>
        0xa365540 "off_type __newoffo =
          (DeclRefExpr 0xa365574 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0xa365ae8 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0xa365638 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0xa365618 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3655f8 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa3655a0 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa364460 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa365628 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa365608 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa3655d4 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa1ea960 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0xa365880 <line:169:6, line:172:6>
          (CompoundAssignOperator 0xa365748 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa365650 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa365720 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa3656e8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (CallExpr 0xa3656b0 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa365678 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa365668 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3656cc <col:36> 'const char_type *' lvalue Var 0xa3651c0 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0xa365860 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa365768 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa365540 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa365838 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa365800 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (CallExpr 0xa3657c8 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa365790 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa365780 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3657e4 <col:36> 'const char_type *' lvalue Var 0xa3651c0 '__beg' 'const char_type *'))))
        (IfStmt 0xa365ac8 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0xa365930 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0xa365910 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3658f0 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa365898 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa364460 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0xa365920 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa365900 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa3658cc <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa1ea9c0 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0xa365ab0 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0xa36597c <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0xa365540 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0xa365a90 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa365994 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0xa365a68 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa365a30 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                (CallExpr 0xa3659f8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3659c0 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3659b0 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa365a14 <col:47> 'const char_type *' lvalue Var 0xa3651c0 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0xa366078 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0xa365da8 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0xa365c28 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0xa365b70 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0xa365b58 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0xa365b38 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa365b04 <col:9> '_Bool' lvalue Var 0xa364840 '__testin' '_Bool'))
                (ImplicitCastExpr 0xa365b48 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa365b1c <col:21> 'const _Bool' lvalue Var 0xa364d40 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa365c00 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa365bb8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
              (DeclRefExpr 0xa365b84 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa365ba0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa365d80 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa365d38 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
            (CXXOperatorCallExpr 0xa365cf8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa365cc0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (CallExpr 0xa365c88 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa365c50 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa365c40 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa365ca4 <col:27> 'const char_type *' lvalue Var 0xa3651c0 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa365d1c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa366060 <line:179:6, line:183:6>
          (CallExpr 0xa365fc8 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa365dd0 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa365dc0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa365e50 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa365e18 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0xa365e08 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa365f38 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa365ef0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
              (CallExpr 0xa365eb8 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa365e80 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0xa365e70 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa365ed4 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0xa365fa8 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa365f70 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0xa365f60 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0xa366048 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa365ff0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa364770 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa366028 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa366010 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3654d0 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0xa366518 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0xa366338 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0xa3661b8 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0xa366100 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0xa3660e8 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0xa3660c8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa366094 <col:9> '_Bool' lvalue Var 0xa364ac0 '__testout' '_Bool'))
                (ImplicitCastExpr 0xa3660d8 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa3660ac <col:22> 'const _Bool' lvalue Var 0xa364d40 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa366190 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa366148 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
              (DeclRefExpr 0xa366114 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa365540 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa366130 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa366310 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa3662c8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
            (CXXOperatorCallExpr 0xa366288 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa366250 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
              (CallExpr 0xa366218 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3661e0 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3661d0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa366234 <col:27> 'const char_type *' lvalue Var 0xa3651c0 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa3662ac <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa365540 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa366500 <line:187:6, line:190:6>
          (CallExpr 0xa366468 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0xa366360 <col:8> '<bound member function type>' ->_M_pbump 0xa352080
              (CXXThisExpr 0xa366350 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa3663c8 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa366390 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa366380 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa366430 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3663f8 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0xa3663e8 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa36644c <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0xa365540 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0xa3664e8 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa366490 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa364770 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa3664c8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa3664b0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa365540 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa366598 <line:192:7, col:14>
    (DeclRefExpr 0xa36657c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa364770 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa352558 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa352548 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa352530 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa1e4490 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa352510 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3524ac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa352520 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3524ec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa367e98 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0xa366e68 <line:200:7, col:47>
    0xa366db0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa366e48 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa366e28 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa366e10 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa366df8 <col:44> 'int' 1))))")
  (DeclStmt 0xa3670e0 <line:201:7, col:73>
    0xa366e80 "const bool __testin =
      (CXXOperatorCallExpr 0xa3670b8 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa367060 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
        (ParenExpr 0xa367030 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0xa367008 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0xa366fc8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
            (CXXOperatorCallExpr 0xa366f88 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa366f48 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
              (DeclRefExpr 0xa366ee0 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa366f10 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa366f00 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa366fac <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa366b20 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa367048 <col:72> 'int' 0))")
  (DeclStmt 0xa367360 <line:202:7, col:75>
    0xa367100 "const bool __testout =
      (CXXOperatorCallExpr 0xa367338 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa3672e0 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
        (ParenExpr 0xa3672b0 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0xa367288 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa367248 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
            (CXXOperatorCallExpr 0xa367208 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa3671c8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
              (DeclRefExpr 0xa367160 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa367190 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0xa367180 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa36722c <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa366b20 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa3672c8 <col:74> 'int' 0))")
  (DeclStmt 0xa3674d0 <line:204:7, col:72>
    0xa367380 "const char_type *__beg =
      (ConditionalOperator 0xa3674b0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa3674a0 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3673b4 <col:32> 'const _Bool' lvalue Var 0xa366e80 '__testin' 'const _Bool'))
        (CallExpr 0xa367418 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3673e0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa3673d0 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa367480 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa367448 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa367438 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa367e50 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0xa367600 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0xa367568 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0xa367550 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0xa3674e0 <col:12> 'const char_type *' lvalue Var 0xa367380 '__beg' 'const char_type *')
          (UnaryOperator 0xa367538 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0xa367518 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0xa367500 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa366ab0 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0xa3675e8 <col:41, col:63> '_Bool'
        (BinaryOperator 0xa3675d0 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0xa3675b0 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa36757c <col:42> 'const _Bool' lvalue Var 0xa366e80 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0xa3675c0 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa367594 <col:54> 'const _Bool' lvalue Var 0xa367100 '__testout' 'const _Bool')))))
    (CompoundStmt 0xa367e30 <line:206:2, line:221:2>
      (CallExpr 0xa367648 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0xa367628 <col:4> '<bound member function type>' ->_M_update_egptr 0xa351ec0
          (CXXThisExpr 0xa367618 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa3676e0 <line:209:4, col:30>
        0xa367670 "const off_type __pos =
          (ParenListExpr 0xa3676c0 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0xa3676a4 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa366ab0 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0xa367970 <line:210:4, line:211:41>
        0xa367700 "const bool __testpos =
          (ParenExpr 0xa367958 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0xa367940 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa3677b0 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa367768 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
                (IntegerLiteral 0xa367738 <col:28> 'int' 0)
                (DeclRefExpr 0xa367750 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa367670 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0xa367918 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa3678d0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f6f0 0x9fa8b50 0x9fab540 0xa110320 0xa110850 0xa110d80)
                (DeclRefExpr 0xa3677d4 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa367670 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0xa3678a8 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0xa367870 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
                  (CallExpr 0xa367838 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa367800 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3677f0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0xa367854 <col:35> 'const char_type *' lvalue Var 0xa367380 '__beg' 'const char_type *')))))")
      (IfStmt 0xa367e10 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa367998 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa367980 <col:8> 'const _Bool' lvalue Var 0xa367700 '__testpos' 'const _Bool'))
        (CompoundStmt 0xa367df0 <line:213:6, line:220:6>
          (IfStmt 0xa367c00 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3679c0 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3679a4 <col:12> 'const _Bool' lvalue Var 0xa366e80 '__testin' 'const _Bool'))
            (CallExpr 0xa367bd8 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3679e0 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3679d0 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa367a60 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa367a28 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa367a18 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa367b48 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa367b00 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
                (CallExpr 0xa367ac8 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa367a90 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa367a80 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa367ae4 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa367670 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0xa367bb8 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa367b80 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0xa367b70 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0xa367d88 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0xa367c38 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa367c1c <col:12> 'const _Bool' lvalue Var 0xa367100 '__testout' 'const _Bool'))
            (CallExpr 0xa367d60 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0xa367c58 <col:3> '<bound member function type>' ->_M_pbump 0xa352080
                (CXXThisExpr 0xa367c48 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa367cc0 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa367c88 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa367c78 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0xa367d28 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa367cf0 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0xa367ce0 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa367d44 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa367670 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0xa367dd8 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0xa367da4 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa366db0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0xa367dbc <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa366ab0 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa367e88 <line:222:7, col:14>
    (DeclRefExpr 0xa367e6c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa366db0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0xa368ec8 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0xa3684d8 <line:230:7, col:51>
    0xa3683d0 "const bool __testin =
      (CXXOperatorCallExpr 0xa3684b0 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa368478 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e4260)
        (MemberExpr 0xa368418 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
          (CXXThisExpr 0xa368408 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa368454 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea790 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa3685f8 <line:231:7, col:53>
    0xa3684f0 "const bool __testout =
      (CXXOperatorCallExpr 0xa3685d0 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa368598 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e4260)
        (MemberExpr 0xa368538 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa350e10
          (CXXThisExpr 0xa368528 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa368574 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa1ea7f0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa368768 <line:232:7, col:52>
    0xa368620 "char_type *__endg =
      (CXXOperatorCallExpr 0xa368740 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa3686f8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (DeclRefExpr 0xa368654 <col:27> 'char_type *' lvalue ParmVar 0xa368240 '__base' 'char_type *')
        (CallExpr 0xa3686d8 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3686a0 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa368680 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
              (CXXThisExpr 0xa368670 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0xa3688d8 <line:233:7, col:56>
    0xa368790 "char_type *__endp =
      (CXXOperatorCallExpr 0xa3688b0 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa368868 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (DeclRefExpr 0xa3687c4 <col:27> 'char_type *' lvalue ParmVar 0xa368240 '__base' 'char_type *')
        (CallExpr 0xa368848 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa368810 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa3687f0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
              (CXXThisExpr 0xa3687e0 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0xa368b08 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3689e0 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa368988 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (DeclRefExpr 0xa3688e8 <col:11> 'char_type *' lvalue ParmVar 0xa368240 '__base' 'char_type *')
      (CallExpr 0xa368968 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa368930 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa368910 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa350e50
            (CXXThisExpr 0xa368900 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa368ae8 <line:236:2, line:241:2>
      (CompoundAssignOperator 0xa368a38 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa368a04 <col:4> 'char_type *' lvalue Var 0xa368620 '__endg' 'char_type *')
        (DeclRefExpr 0xa368a1c <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa368280 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0xa368a88 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa368a58 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa368280 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0xa368a70 <col:10> 'int' 0))
      (BinaryOperator 0xa368ad0 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa368aa0 <col:4> 'char_type *' lvalue Var 0xa368790 '__endp' 'char_type *')
        (DeclRefExpr 0xa368ab8 <col:13> 'char_type *' lvalue Var 0xa368620 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0xa368c90 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0xa368b40 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa368b24 <col:11> 'const _Bool' lvalue Var 0xa3683d0 '__testin' 'const _Bool'))
    (CallExpr 0xa368c68 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa368b60 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa368b50 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa368b94 <col:13> 'char_type *' lvalue ParmVar 0xa368240 '__base' 'char_type *')
      (CXXOperatorCallExpr 0xa368c28 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa368be0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (DeclRefExpr 0xa368bac <col:21> 'char_type *' lvalue ParmVar 0xa368240 '__base' 'char_type *')
        (DeclRefExpr 0xa368bc4 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa368280 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0xa368c4c <col:35> 'char_type *' lvalue Var 0xa368620 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0xa368ea8 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa368cc8 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa368cac <col:11> 'const _Bool' lvalue Var 0xa3684f0 '__testout' 'const _Bool'))
    (CompoundStmt 0xa368e90 <line:246:2, line:253:2>
      (CallExpr 0xa368d50 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0xa368ce8 <col:4> '<bound member function type>' ->_M_pbump 0xa352080
          (CXXThisExpr 0xa368cd8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa368d08 <col:13> 'char_type *' lvalue ParmVar 0xa368240 '__base' 'char_type *')
        (DeclRefExpr 0xa368d20 <col:21> 'char_type *' lvalue Var 0xa368790 '__endp' 'char_type *')
        (DeclRefExpr 0xa368d38 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa3682c0 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0xa368e70 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0xa368da0 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa368d90 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa368d78 <col:9> 'const _Bool' lvalue Var 0xa3683d0 '__testin' 'const _Bool')))
        (CallExpr 0xa368e48 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa368dc8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa368db8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa368dfc <col:17> 'char_type *' lvalue Var 0xa368620 '__endg' 'char_type *')
          (DeclRefExpr 0xa368e14 <col:25> 'char_type *' lvalue Var 0xa368620 '__endg' 'char_type *')
          (DeclRefExpr 0xa368e2c <col:33> 'char_type *' lvalue Var 0xa368620 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0xa3698b0 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0xa369488 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa369420 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa369410 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa369454 <col:18> 'char_type *' lvalue ParmVar 0xa369280 '__pbeg' 'char_type *')
    (DeclRefExpr 0xa36946c <col:26> 'char_type *' lvalue ParmVar 0xa3692d0 '__pend' 'char_type *'))
  (WhileStmt 0xa369818 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3695c8 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa369580 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
      (DeclRefExpr 0xa3694ac <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa369310 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa369560 <col:22, col:56> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
    (CompoundStmt 0xa369800 <line:263:2, line:266:2>
      (CallExpr 0xa3696f0 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa369600 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa3695f0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3696d0 <col:16, col:50> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0xa3697e0 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa369710 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa369310 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0xa3697c0 <col:13, col:47> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))))
  (CallExpr 0xa369890 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa369840 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa369830 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa369874 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa369310 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0xa37e5f0 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0xa37e5b0 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0xa37e578 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0xa37e550 <col:32> '_T1 *' lvalue ParmVar 0xa37e3b0 '__p' '_T1 *'))
    (DeclRefExpr 0xa37e590 <col:42> 'const _T2' lvalue ParmVar 0xa37e420 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0xa37e820 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0xa37e800 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0xa37e7d0 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0xa37e7ac <col:7> '_Tp *' lvalue ParmVar 0xa37e6a0 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa37f2b0 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa37eeb0 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0xa37ee88 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa37ed08 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa37ecb0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (DeclRefExpr 0xa37ec80 <col:11> '_ForwardIterator' lvalue ParmVar 0xa37eb00 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa37ec98 <col:22> '_ForwardIterator' lvalue ParmVar 0xa37eb40 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa37ed48 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa37ed2c <col:32> '_ForwardIterator' lvalue ParmVar 0xa37eb00 '__first' '_ForwardIterator'))
    (CallExpr 0xa37ee68 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa37ed90 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780)
      (CallExpr 0xa37ee48 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa37ede0 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
        (UnaryOperator 0xa37ee30 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa37ee14 <col:38> '_ForwardIterator' lvalue ParmVar 0xa37eb00 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa37f2b0 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa37f758 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0xa37f590 <line:125:7, line:126:35>
    0xa37f560 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0xa37f730 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa37f6d8 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa37f6fc <col:12> '_ForwardIterator' lvalue ParmVar 0xa37f320 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa37f714 <col:21> '_ForwardIterator' lvalue ParmVar 0xa37f360 '__last' '_ForwardIterator')))

;
    template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa013af8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa437860 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4375b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa01ae10 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa013c10 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa013c30 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0xa37fd30 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0xa37fd08 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa37fba0 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa37fb48 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (DeclRefExpr 0xa37fb14 <col:14> '_ForwardIterator' lvalue ParmVar 0xa37f910 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa37fb2c <col:25> '_ForwardIterator' lvalue ParmVar 0xa37f950 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa37fbe0 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa37fbc4 <col:35> '_ForwardIterator' lvalue ParmVar 0xa37f910 '__first' '_ForwardIterator'))
    (CallExpr 0xa37fce8 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa37fc10 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0xa37fbf4 <col:2> '_Allocator' lvalue ParmVar 0xa37f9c0 '__alloc' '_Allocator &'))
      (CallExpr 0xa37fcc8 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa37fc60 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
        (UnaryOperator 0xa37fcb0 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa37fc94 <col:36> '_ForwardIterator' lvalue ParmVar 0xa37f910 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0xa380160 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0xa380138 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0xa3800c8 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa380090 0xa37fae0 0xa37f440 0xa37e780)
    (DeclRefExpr 0xa380108 <col:16> '_ForwardIterator' lvalue ParmVar 0xa37fe10 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa380120 <col:25> '_ForwardIterator' lvalue ParmVar 0xa37fe50 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa381140 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa381130 <col:11, col:53>
    (CallExpr 0xa381108 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa381088 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
      (DeclRefExpr 0xa3810c0 <col:28> '_InputIterator' lvalue ParmVar 0xa380eb0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3810d8 <col:37> '_InputIterator' lvalue ParmVar 0xa380ef0 '__last' '_InputIterator')
      (DeclRefExpr 0xa3810f0 <col:45> '_ForwardIterator' lvalue ParmVar 0xa380f30 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa380bc8 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0xa380780 <line:73:4, col:37>
    0xa380730 "_ForwardIterator __cur =
      (DeclRefExpr 0xa380764 <col:29> '_ForwardIterator' lvalue ParmVar 0xa3805e0 '__result' '_ForwardIterator')")
  (IfStmt 0xa380a90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa380790 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa380a78 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0xa380a28 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa380828 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa3807d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (DeclRefExpr 0xa3807a0 <col:15> '_InputIterator' lvalue ParmVar 0xa380560 '__first' '_InputIterator')
          (DeclRefExpr 0xa3807b8 <col:26> '_InputIterator' lvalue ParmVar 0xa3805a0 '__last' '_InputIterator'))
        (BinaryOperator 0xa3808b0 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0xa380868 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa38084c <col:36> '_InputIterator' lvalue ParmVar 0xa380560 '__first' '_InputIterator'))
          (UnaryOperator 0xa380898 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa38087c <col:47> '_ForwardIterator' lvalue Var 0xa380730 '__cur' '_ForwardIterator')))
        (CallExpr 0xa380a00 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa3808f8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e520)
          (CallExpr 0xa3809b0 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa380948 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
            (UnaryOperator 0xa380998 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa38097c <col:37> '_ForwardIterator' lvalue Var 0xa380730 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa3809e8 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa3809d0 <col:46> '_InputIterator' lvalue ParmVar 0xa380560 '__first' '_InputIterator'))))
      (ReturnStmt 0xa380a68 <line:78:8, col:15>
        (DeclRefExpr 0xa380a4c <col:15> '_ForwardIterator' lvalue Var 0xa380730 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa380ba8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa380ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa380b90 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0xa380b58 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa380ae8 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa380b28 <col:22> '_ForwardIterator' lvalue ParmVar 0xa3805e0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa380b40 <col:32> '_ForwardIterator' lvalue Var 0xa380730 '__cur' '_ForwardIterator'))
      (NullStmt 0xa380b80 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa381140 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa381130 <col:11, col:53>
    (CallExpr 0xa381108 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa381088 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
      (DeclRefExpr 0xa3810c0 <col:28> '_InputIterator' lvalue ParmVar 0xa380eb0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3810d8 <col:37> '_InputIterator' lvalue ParmVar 0xa380ef0 '__last' '_InputIterator')
      (DeclRefExpr 0xa3810f0 <col:45> '_ForwardIterator' lvalue ParmVar 0xa380f30 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa381848 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0xa3814e0 <line:112:7, line:113:13>
    0xa3814b0 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0xa381610 <line:114:7, line:115:13>
    0xa3815e0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0xa381838 <line:117:7, line:119:41>
    (CallExpr 0xa381810 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa3817a0 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0xa3817c4 <col:16> '_InputIterator' lvalue ParmVar 0xa381220 '__first' '_InputIterator')
      (DeclRefExpr 0xa3817dc <col:25> '_InputIterator' lvalue ParmVar 0xa381260 '__last' '_InputIterator')
      (DeclRefExpr 0xa3817f4 <col:33> '_ForwardIterator' lvalue ParmVar 0xa3812a0 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa382780 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa382758 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa3826d8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0)
    (DeclRefExpr 0xa38270c <col:21> '_ForwardIterator' lvalue ParmVar 0xa3824c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa382724 <col:30> '_ForwardIterator' lvalue ParmVar 0xa382500 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa38273c <col:38> 'const _Tp' lvalue ParmVar 0xa382570 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa3821e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0xa381e30 <line:131:4, col:36>
    0xa381de0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa381e14 <col:29> '_ForwardIterator' lvalue ParmVar 0xa381b90 '__first' '_ForwardIterator')")
  (IfStmt 0xa3820a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa381e40 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa382090 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0xa382068 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa381ed8 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa381e80 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (DeclRefExpr 0xa381e50 <col:15> '_ForwardIterator' lvalue Var 0xa381de0 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa381e68 <col:24> '_ForwardIterator' lvalue ParmVar 0xa381bd0 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa381f18 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa381efc <col:34> '_ForwardIterator' lvalue Var 0xa381de0 '__cur' '_ForwardIterator'))
        (CallExpr 0xa382040 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa381f50 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e520)
          (CallExpr 0xa382008 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa381fa0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
            (UnaryOperator 0xa381ff0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa381fd4 <col:37> '_ForwardIterator' lvalue Var 0xa381de0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa382028 <col:45> 'const _Tp' lvalue ParmVar 0xa381c60 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa3821c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3820c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3821a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0xa382170 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa382100 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa382140 <col:22> '_ForwardIterator' lvalue ParmVar 0xa381b90 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa382158 <col:31> '_ForwardIterator' lvalue Var 0xa381de0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa382198 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa382780 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa382758 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa3826d8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0)
    (DeclRefExpr 0xa38270c <col:21> '_ForwardIterator' lvalue ParmVar 0xa3824c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa382724 <col:30> '_ForwardIterator' lvalue ParmVar 0xa382500 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa38273c <col:38> 'const _Tp' lvalue ParmVar 0xa382570 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa382d30 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0xa382b50 <line:169:7, line:170:12>
    0xa382b20 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa382d08 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa382c98 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa382cbc <col:16> '_ForwardIterator' lvalue ParmVar 0xa382860 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa382cd4 <col:25> '_ForwardIterator' lvalue ParmVar 0xa3828a0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa382cec <col:33> 'const _Tp' lvalue ParmVar 0xa382910 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa383d70 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa383d48 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa383cc8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd87a0)
    (DeclRefExpr 0xa383cfc <col:23> '_ForwardIterator' lvalue ParmVar 0xa383a80 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa383d14 <col:32> '_Size' lvalue ParmVar 0xa383ac0 '__n' '_Size')
    (DeclRefExpr 0xa383d2c <col:37> 'const _Tp' lvalue ParmVar 0xa383b30 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa383750 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0xa383360 <line:185:4, col:36>
    0xa383310 "_ForwardIterator __cur =
      (DeclRefExpr 0xa383344 <col:29> '_ForwardIterator' lvalue ParmVar 0xa3830c0 '__first' '_ForwardIterator')")
  (IfStmt 0xa383618 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa383370 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa383600 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0xa3835d8 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3833f8 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa3833b0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (DeclRefExpr 0xa383380 <col:15> '_Size' lvalue ParmVar 0xa383100 '__n' '_Size')
          (IntegerLiteral 0xa383398 <col:21> 'int' 0))
        (BinaryOperator 0xa383480 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0xa383438 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa38341c <col:26> '_Size' lvalue ParmVar 0xa383100 '__n' '_Size'))
          (UnaryOperator 0xa383468 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa38344c <col:33> '_ForwardIterator' lvalue Var 0xa383310 '__cur' '_ForwardIterator')))
        (CallExpr 0xa3835b0 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa3834c0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e520)
          (CallExpr 0xa383578 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa383510 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
            (UnaryOperator 0xa383560 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa383544 <col:37> '_ForwardIterator' lvalue Var 0xa383310 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa383598 <col:45> 'const _Tp' lvalue ParmVar 0xa383190 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa383730 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa383638 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa383718 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0xa3836e0 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa383670 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa3836b0 <col:22> '_ForwardIterator' lvalue ParmVar 0xa3830c0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3836c8 <col:31> '_ForwardIterator' lvalue Var 0xa383310 '__cur' '_ForwardIterator'))
      (NullStmt 0xa383708 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa383d70 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa383d48 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa383cc8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd87a0)
    (DeclRefExpr 0xa383cfc <col:23> '_ForwardIterator' lvalue ParmVar 0xa383a80 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa383d14 <col:32> '_Size' lvalue ParmVar 0xa383ac0 '__n' '_Size')
    (DeclRefExpr 0xa383d2c <col:37> 'const _Tp' lvalue ParmVar 0xa383b30 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa384370 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0xa384190 <line:222:7, line:223:12>
    0xa384160 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa384348 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa3842d8 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa3842fc <col:18> '_ForwardIterator' lvalue ParmVar 0xa383ea0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa384314 <col:27> '_Size' lvalue ParmVar 0xa383ee0 '__n' '_Size')
    (DeclRefExpr 0xa38432c <col:32> 'const _Tp' lvalue ParmVar 0xa383f50 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa384ba8 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0xa384760 <line:241:7, col:40>
    0xa384710 "_ForwardIterator __cur =
      (DeclRefExpr 0xa384744 <col:32> '_ForwardIterator' lvalue ParmVar 0xa384520 '__result' '_ForwardIterator')")
  (IfStmt 0xa384a58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa384770 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa384a40 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0xa3849f0 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa384808 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa3847b0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (DeclRefExpr 0xa384780 <col:11> '_InputIterator' lvalue ParmVar 0xa3844a0 '__first' '_InputIterator')
          (DeclRefExpr 0xa384798 <col:22> '_InputIterator' lvalue ParmVar 0xa3844e0 '__last' '_InputIterator'))
        (BinaryOperator 0xa384890 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0xa384848 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa38482c <col:32> '_InputIterator' lvalue ParmVar 0xa3844a0 '__first' '_InputIterator'))
          (UnaryOperator 0xa384878 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa38485c <col:43> '_ForwardIterator' lvalue Var 0xa384710 '__cur' '_ForwardIterator')))
        (CallExpr 0xa3849c8 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3848c0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa3848a8 <col:6> '_Allocator' lvalue ParmVar 0xa3845b0 '__alloc' '_Allocator &'))
          (CallExpr 0xa384978 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa384910 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
            (UnaryOperator 0xa384960 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa384944 <col:42> '_ForwardIterator' lvalue Var 0xa384710 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa3849b0 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa384998 <col:51> '_InputIterator' lvalue ParmVar 0xa3844a0 '__first' '_InputIterator'))))
      (ReturnStmt 0xa384a30 <line:246:4, col:11>
        (DeclRefExpr 0xa384a14 <col:11> '_ForwardIterator' lvalue Var 0xa384710 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa384b88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa384a78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa384b70 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0xa384b38 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa384ab0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa384af0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa384520 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa384b08 <col:28> '_ForwardIterator' lvalue Var 0xa384710 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa384b20 <col:35> '_Allocator' lvalue ParmVar 0xa3845b0 '__alloc' '_Allocator &'))
      (NullStmt 0xa384b60 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0xa3850d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0xa3850c8 <col:7, col:63>
    (CallExpr 0xa3850a0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa385020 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa381390)
      (DeclRefExpr 0xa385054 <col:38> '_InputIterator' lvalue ParmVar 0xa384ce0 '__first' '_InputIterator')
      (DeclRefExpr 0xa38506c <col:47> '_InputIterator' lvalue ParmVar 0xa384d20 '__last' '_InputIterator')
      (DeclRefExpr 0xa385084 <col:55> '_ForwardIterator' lvalue ParmVar 0xa384d60 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa38bcd8 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0xa38bcc8 <line:267:7, line:269:24>
    (CallExpr 0xa38bc98 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa38bbd0 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
      (ParenExpr 0xa38bc20 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa38bc08 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0xa38b9a0 '__first' '_InputIterator'))
      (ParenExpr 0xa38bc50 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa38bc34 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0xa38b9e0 '__last' '_InputIterator'))
      (DeclRefExpr 0xa38bc64 <line:269:7> '_ForwardIterator' lvalue ParmVar 0xa38ba20 '__result' '_ForwardIterator')
      (DeclRefExpr 0xa38bc7c <col:17> '_Allocator' lvalue ParmVar 0xa38ba90 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa38c490 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0xa38c0d0 <line:277:7, col:39>
    0xa38c080 "_ForwardIterator __cur =
      (DeclRefExpr 0xa38c0b4 <col:32> '_ForwardIterator' lvalue ParmVar 0xa38be00 '__first' '_ForwardIterator')")
  (IfStmt 0xa38c340 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38c0e0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa38c328 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0xa38c300 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa38c178 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa38c120 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
          (DeclRefExpr 0xa38c0f0 <col:11> '_ForwardIterator' lvalue Var 0xa38c080 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa38c108 <col:20> '_ForwardIterator' lvalue ParmVar 0xa38be40 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa38c1b8 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa38c19c <col:30> '_ForwardIterator' lvalue Var 0xa38c080 '__cur' '_ForwardIterator'))
        (CallExpr 0xa38c2d8 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa38c1e8 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa38c1cc <col:6> '_Allocator' lvalue ParmVar 0xa38bf20 '__alloc' '_Allocator &'))
          (CallExpr 0xa38c2a0 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa38c238 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
            (UnaryOperator 0xa38c288 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa38c26c <col:42> '_ForwardIterator' lvalue Var 0xa38c080 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa38c2c0 <col:50> 'const _Tp' lvalue ParmVar 0xa38beb0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa38c470 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38c360 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa38c458 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0xa38c420 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa38c398 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa38c3d8 <col:18> '_ForwardIterator' lvalue ParmVar 0xa38be00 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa38c3f0 <col:27> '_ForwardIterator' lvalue Var 0xa38c080 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa38c408 <col:34> '_Allocator' lvalue ParmVar 0xa38bf20 '__alloc' '_Allocator &'))
      (NullStmt 0xa38c448 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa38c998 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0xa38c970 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa38c8f0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa382a00)
    (DeclRefExpr 0xa38c924 <col:31> '_ForwardIterator' lvalue ParmVar 0xa38c5c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa38c93c <col:40> '_ForwardIterator' lvalue ParmVar 0xa38c600 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa38c954 <col:48> 'const _Tp' lvalue ParmVar 0xa38c670 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa38d1f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0xa38ce00 <line:302:7, col:39>
    0xa38cdb0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa38cde4 <col:32> '_ForwardIterator' lvalue ParmVar 0xa38cb10 '__first' '_ForwardIterator')")
  (IfStmt 0xa38d0a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38ce10 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa38d090 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0xa38d068 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa38ce98 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa38ce50 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
          (DeclRefExpr 0xa38ce20 <col:11> '_Size' lvalue ParmVar 0xa38cb50 '__n' '_Size')
          (IntegerLiteral 0xa38ce38 <col:17> 'int' 0))
        (BinaryOperator 0xa38cf20 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0xa38ced8 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa38cebc <col:22> '_Size' lvalue ParmVar 0xa38cb50 '__n' '_Size'))
          (UnaryOperator 0xa38cf08 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa38ceec <col:29> '_ForwardIterator' lvalue Var 0xa38cdb0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa38d040 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa38cf50 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa38cf38 <col:6> '_Allocator' lvalue ParmVar 0xa38cc50 '__alloc' '_Allocator &'))
          (CallExpr 0xa38d008 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa38cfa0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
            (UnaryOperator 0xa38cff0 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa38cfd4 <col:42> '_ForwardIterator' lvalue Var 0xa38cdb0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa38d028 <col:50> 'const _Tp' lvalue ParmVar 0xa38cbc0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa38d1d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38d0c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa38d1c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0xa38d188 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa38d100 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa38d140 <col:18> '_ForwardIterator' lvalue ParmVar 0xa38cb10 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa38d158 <col:27> '_ForwardIterator' lvalue Var 0xa38cdb0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa38d170 <col:34> '_Allocator' lvalue ParmVar 0xa38cc50 '__alloc' '_Allocator &'))
      (NullStmt 0xa38d1b0 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa38d7a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0xa38d780 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa38d700 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa384040)
    (DeclRefExpr 0xa38d734 <col:33> '_ForwardIterator' lvalue ParmVar 0xa38d380 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa38d74c <col:42> '_Size' lvalue ParmVar 0xa38d3c0 '__n' '_Size')
    (DeclRefExpr 0xa38d764 <col:47> 'const _Tp' lvalue ParmVar 0xa38d430 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa38dfa0 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0xa38dd28 <line:342:7, line:344:19>
    0xa38dc10 "_ForwardIterator __mid =
      (CallExpr 0xa38dcf8 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa38dc60 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
        (DeclRefExpr 0xa38dc98 <col:60> '_InputIterator1' lvalue ParmVar 0xa38d920 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa38dcb0 <col:70> '_InputIterator1' lvalue ParmVar 0xa38d960 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa38dcc8 <line:343:11> '_ForwardIterator' lvalue ParmVar 0xa38da20 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa38dce0 <line:344:11> '_Allocator' lvalue ParmVar 0xa38da90 '__alloc' '_Allocator &'))")
  (IfStmt 0xa38de50 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38dd38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa38de38 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0xa38de28 <line:347:4, col:72>
        (CallExpr 0xa38ddf8 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa38dd60 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
          (DeclRefExpr 0xa38dd94 <col:39> '_InputIterator2' lvalue ParmVar 0xa38d9a0 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa38ddac <col:49> '_InputIterator2' lvalue ParmVar 0xa38d9e0 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa38ddc4 <col:58> '_ForwardIterator' lvalue Var 0xa38dc10 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa38dddc <col:65> '_Allocator' lvalue ParmVar 0xa38da90 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa38df80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38de70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa38df68 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0xa38df30 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa38dea8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa38dee8 <col:18> '_ForwardIterator' lvalue ParmVar 0xa38da20 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa38df00 <col:28> '_ForwardIterator' lvalue Var 0xa38dc10 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa38df18 <col:35> '_Allocator' lvalue ParmVar 0xa38da90 '__alloc' '_Allocator &'))
      (NullStmt 0xa38df58 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa38e770 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0xa38e4f8 <line:370:7, line:372:19>
    0xa38e3e0 "_ForwardIterator __mid =
      (CallExpr 0xa38e4c8 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa38e430 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
        (DeclRefExpr 0xa38e464 <col:60> '_InputIterator1' lvalue ParmVar 0xa38e120 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa38e47c <col:70> '_InputIterator1' lvalue ParmVar 0xa38e160 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa38e494 <line:371:11> '_ForwardIterator' lvalue ParmVar 0xa38e220 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa38e4ac <line:372:11> '_Allocator' lvalue ParmVar 0xa38e290 '__alloc' '_Allocator &'))")
  (IfStmt 0xa38e620 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38e508 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa38e608 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0xa38e5f8 <line:375:4, col:72>
        (CallExpr 0xa38e5c8 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa38e530 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
          (DeclRefExpr 0xa38e568 <col:39> '_InputIterator2' lvalue ParmVar 0xa38e1a0 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa38e580 <col:49> '_InputIterator2' lvalue ParmVar 0xa38e1e0 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa38e598 <col:58> '_ForwardIterator' lvalue Var 0xa38e3e0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa38e5b0 <col:65> '_Allocator' lvalue ParmVar 0xa38e290 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa38e750 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38e640 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa38e738 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0xa38e700 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa38e678 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa38e6b8 <col:18> '_ForwardIterator' lvalue ParmVar 0xa38e220 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa38e6d0 <col:28> '_ForwardIterator' lvalue Var 0xa38e3e0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa38e6e8 <col:35> '_Allocator' lvalue ParmVar 0xa38e290 '__alloc' '_Allocator &'))
      (NullStmt 0xa38e728 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0xa38ef58 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0xa38ecc0 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0xa38ec28 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38c040 0xa38c890)
    (DeclRefExpr 0xa38ec60 <col:35> '_ForwardIterator' lvalue ParmVar 0xa38e8f0 '__result' '_ForwardIterator')
    (DeclRefExpr 0xa38ec78 <col:45> '_ForwardIterator' lvalue ParmVar 0xa38e930 '__mid' '_ForwardIterator')
    (DeclRefExpr 0xa38ec90 <col:52> 'const _Tp' lvalue ParmVar 0xa38e9a0 '__x' 'const _Tp &')
    (DeclRefExpr 0xa38eca8 <col:57> '_Allocator' lvalue ParmVar 0xa38ea90 '__alloc' '_Allocator &'))
  (IfStmt 0xa38ee08 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38ecf0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa38edf0 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0xa38ede0 <line:397:4, col:70>
        (CallExpr 0xa38edb0 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0xa38ed18 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
          (DeclRefExpr 0xa38ed4c <col:39> '_InputIterator' lvalue ParmVar 0xa38e9e0 '__first' '_InputIterator')
          (DeclRefExpr 0xa38ed64 <col:48> '_InputIterator' lvalue ParmVar 0xa38ea20 '__last' '_InputIterator')
          (DeclRefExpr 0xa38ed7c <col:56> '_ForwardIterator' lvalue ParmVar 0xa38e930 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa38ed94 <col:63> '_Allocator' lvalue ParmVar 0xa38ea90 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa38ef38 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38ee28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa38ef20 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0xa38eee8 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa38ee60 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa38eea0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa38e8f0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa38eeb8 <col:28> '_ForwardIterator' lvalue ParmVar 0xa38e930 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa38eed0 <col:35> '_Allocator' lvalue ParmVar 0xa38ea90 '__alloc' '_Allocator &'))
      (NullStmt 0xa38ef10 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa38f790 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0xa38f518 <line:417:7, line:419:20>
    0xa38f400 "_ForwardIterator __mid2 =
      (CallExpr 0xa38f4e8 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa38f450 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
        (DeclRefExpr 0xa38f484 <col:61> '_InputIterator' lvalue ParmVar 0xa38f0e0 '__first1' '_InputIterator')
        (DeclRefExpr 0xa38f49c <col:71> '_InputIterator' lvalue ParmVar 0xa38f120 '__last1' '_InputIterator')
        (DeclRefExpr 0xa38f4b4 <line:418:12> '_ForwardIterator' lvalue ParmVar 0xa38f160 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa38f4cc <line:419:12> '_Allocator' lvalue ParmVar 0xa38f280 '__alloc' '_Allocator &'))")
  (IfStmt 0xa38f640 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38f528 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa38f628 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0xa38f5f8 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa38f560 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38c040 0xa38c890)
        (DeclRefExpr 0xa38f598 <col:32> '_ForwardIterator' lvalue Var 0xa38f400 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa38f5b0 <col:40> '_ForwardIterator' lvalue ParmVar 0xa38f1a0 '__last2' '_ForwardIterator')
        (DeclRefExpr 0xa38f5c8 <col:49> 'const _Tp' lvalue ParmVar 0xa38f210 '__x' 'const _Tp &')
        (DeclRefExpr 0xa38f5e0 <col:54> '_Allocator' lvalue ParmVar 0xa38f280 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0xa38f770 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa38f660 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa38f758 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0xa38f720 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa38f698 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (DeclRefExpr 0xa38f6d8 <col:18> '_ForwardIterator' lvalue ParmVar 0xa38f160 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa38f6f0 <col:28> '_ForwardIterator' lvalue Var 0xa38f400 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa38f708 <col:36> '_Allocator' lvalue ParmVar 0xa38f280 '__alloc' '_Allocator &'))
      (NullStmt 0xa38f748 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0xa390d58 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0xa390da8 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa390df8 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0xa390e58 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0xa390e68 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0xa390110 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0xa390ec8 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0xa390f18 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa390f68 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0xa390fc8 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0xa391128 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0xa391118 <col:9, col:60>
    (UnaryOperator 0xa391100 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa3910e8 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa391080 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa391040 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CXXDependentScopeMemberExpr 0xa391008 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0xa390ff8 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0xa391288 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0xa391278 <col:9, col:66>
    (UnaryOperator 0xa391260 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa391248 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa3911e0 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa3911a0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CXXDependentScopeMemberExpr 0xa391168 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0xa391158 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa391348 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0xa391338 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa391318 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0xa3912f8 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0xa3912b8 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0xa3913a0 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa3913b0 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa3905d0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa391410 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0xa391830 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0xa391560 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3914a8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa391470 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa391460 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa391540 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3914f0 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa3914e0 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa391524 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa3906f0 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa391678 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3915c0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa391588 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa391578 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa391640 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa391608 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa3915f8 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa391818 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3916d8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3916a0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa391690 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa3917f0 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa3917a8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
      (CXXDependentScopeMemberExpr 0xa391758 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa391720 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa391710 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa39178c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa3906f0 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0xa39184c </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa390810 '__a' 'const allocator_type &')
) (CompoundStmt 0xa391c80 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0xa3919b0 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3918f8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3918c0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3918b0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa391990 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa391940 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa391930 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa391974 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa3907c0 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa391ac8 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa391a10 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3919d8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3919c8 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa391a90 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa391a58 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa391a48 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa391c68 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa391b28 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa391af0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa391ae0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa391c40 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa391bf8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
      (CXXDependentScopeMemberExpr 0xa391ba8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa391b70 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa391b60 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa391bdc <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa3907c0 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0xa391ed8 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0xa391eb0 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0xa391cb0 <line:142:9> '<bound member function type>' ->_M_deallocate 0xa390cb0
      (CXXThisExpr 0xa391ca0 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa391d18 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa391ce0 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa391cd0 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa391e88 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa391e50 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
      (CXXDependentScopeMemberExpr 0xa391d98 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa391d60 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa391d50 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa391e18 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa391de0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa391dd0 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0xa392040 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0xa392030 <col:9, col:51>
    (ConditionalOperator 0xa392010 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0xa391f40 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa391f20 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa391eec <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa390a70 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa391f30 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa391f08 <col:23> 'int' 0)))
      (CallExpr 0xa391fd8 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa391f88 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0xa391f68 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa390a10
            (CXXThisExpr 0xa391f58 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa391fbc <col:44> 'size_t':'unsigned int' lvalue ParmVar 0xa390a70 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0xa391ff8 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0xa392150 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0xa392130 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0xa392054 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa390bd0 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0xa392108 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3920a0 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa392080 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa390a10
          (CXXThisExpr 0xa392070 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa3920d4 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa390bd0 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0xa3920ec <col:28> 'size_t':'unsigned int' lvalue ParmVar 0xa390c10 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0xa39c3b0 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0xa39c3c0 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa3936a0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa39c420 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0xa39c2f0 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa39c310 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa39c430 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0xa3937b0 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0xa39c448 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa393880 '__a' 'const allocator_type &')
) (CompoundStmt 0xa39c550 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0xa39c528 <col:9, col:40> '<dependent type>'
    (MemberExpr 0xa39c4d8 <col:9> '<bound member function type>' ->_M_fill_initialize 0xa39a980
      (CXXThisExpr 0xa39c4c8 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa39c4f8 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa3937b0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa39c510 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0xa393830 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0xa39c5b8 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa39c580 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0xa39c564 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa397720 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0xa39c628 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa39c5f0 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0xa39c5d4 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa397720 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0xa39c960 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0xa39c948 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa39c6d8 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa39c6a0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa39c690 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa39c918 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa39c728 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
      (CallExpr 0xa39c7b0 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39c778 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa39c760 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa397720 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa39c820 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39c7e8 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0xa39c7cc <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa397720 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0xa39c888 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39c850 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa39c840 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa39c8f8 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa39c8bc <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa39c330 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa39c974 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa397900 '__a' 'const allocator_type &')
) (CompoundStmt 0xa39cbf8 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0xa39cb10 <line:339:4, col:72>
    0xa39cae0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa39cbd0 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0xa39cb30 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa39cb70 <col:27> '_InputIterator' lvalue ParmVar 0xa397870 '__first' '_InputIterator')
    (DeclRefExpr 0xa39cb88 <col:36> '_InputIterator' lvalue ParmVar 0xa3978b0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa39cbb8 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0xa39cdf8 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0xa39cdd0 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa39cc38 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
    (CXXDependentScopeMemberExpr 0xa39ccc0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa39cc88 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa39cc78 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa39cd40 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa39cd08 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa39ccf8 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa39cdb0 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa39cd74 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0xa39ce98 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0xa39ce70 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa39ce20 <col:9> '<bound member function type>' ->_M_fill_assign 0xa39b320
      (CXXThisExpr 0xa39ce10 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa39ce40 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0xa397c30 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa39ce58 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0xa397c80 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa39d0c8 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0xa39cfe0 <line:432:4, col:72>
    0xa39cfb0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa39d0a0 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0xa39d000 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa39d040 <col:23> '_InputIterator' lvalue ParmVar 0xa397df0 '__first' '_InputIterator')
    (DeclRefExpr 0xa39d058 <col:32> '_InputIterator' lvalue ParmVar 0xa397e30 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa39d088 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0xa39d198 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0xa39d188 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0xa39d168 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa39d130 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39d0f8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa39d0e8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0xa39d288 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0xa39d278 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa39d258 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa39d220 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39d1e8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa39d1d8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0xa39d358 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0xa39d348 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0xa39d328 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa39d2f0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39d2b8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa39d2a8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0xa39d428 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0xa39d418 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0xa39d3f8 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa39d3c0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39d388 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa39d378 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0xa39d4e8 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0xa39d4d8 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0xa39d4b8 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa39d498 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa39d458 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa39d5a8 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0xa39d598 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa39d578 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa39d558 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0xa39d518 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0xa39d668 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0xa39d658 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa39d638 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa39d618 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa39d5d8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0xa39d728 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0xa39d718 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa39d6f8 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa39d6d8 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0xa39d698 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0xa39d8d8 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0xa39d8c8 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0xa39d8a8 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa39d880 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa39d848 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CXXDependentScopeMemberExpr 0xa39d790 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39d758 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa39d748 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa39d810 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39d7d8 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0xa39d7c8 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0xa39d9b0 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0xa39d9a0 <col:9, col:47>
    (CallExpr 0xa39d980 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa39d948 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0xa39d928 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa39d8ec <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0xa39c350 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0xa39dee0 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0xa39dec0 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa39da78 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa39da30 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
      (DeclRefExpr 0xa39d9c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa398590 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa39da10 <col:19, col:24> '<dependent type>'
        (MemberExpr 0xa39d9f0 <col:19> '<bound member function type>' ->size 0xa3984a0
          (CXXThisExpr 0xa39d9e0 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa39dc48 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0xa39dab0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa39db48 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa39db08 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa39dc08 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa39dbd0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (DeclRefExpr 0xa39db64 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0xa398590 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa39dbb0 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa39db90 <col:31> '<bound member function type>' ->size 0xa3984a0
            (CXXThisExpr 0xa39db80 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa39dc2c <col:39> 'value_type':'_Tp' lvalue ParmVar 0xa3985d0 '__x' 'value_type':'_Tp'))
    (IfStmt 0xa39dea0 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa39dd20 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa39dcd8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
        (DeclRefExpr 0xa39dc70 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa398590 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa39dcb8 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa39dc98 <col:24> '<bound member function type>' ->size 0xa3984a0
            (CXXThisExpr 0xa39dc88 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0xa39de80 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0xa39dd58 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa39c280
          (CXXThisExpr 0xa39dd48 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa39de58 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa39de10 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (CXXDependentScopeMemberExpr 0xa39ddc0 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa39dd88 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa39dd78 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa39ddf4 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0xa398590 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0xa39e090 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0xa39e080 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0xa39e060 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa39e038 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa39e000 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CXXDependentScopeMemberExpr 0xa39df48 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39df10 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa39df00 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa39dfc8 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39df90 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa39df80 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0xa39e220 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0xa39e210 <col:9, col:31>
    (CXXOperatorCallExpr 0xa39e1e8 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0xa39e188 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
      (CallExpr 0xa39e0f8 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa39e0b8 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0xa39e168 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa39e128 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0xa39e380 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0xa39e370 <col:9, col:46>
    (UnaryOperator 0xa39e358 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa39e340 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa39e318 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa39e2d0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (CXXDependentScopeMemberExpr 0xa39e280 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa39e248 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa39e238 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa39e2b4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa3988f0 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa39e4e0 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0xa39e4d0 <col:9, col:46>
    (UnaryOperator 0xa39e4b8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa39e4a0 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa39e478 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa39e430 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
          (CXXDependentScopeMemberExpr 0xa39e3e0 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa39e3a8 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa39e398 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa39e414 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa398a20 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa39e6e0 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0xa39e6c0 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa39e5c0 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa39e578 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50)
      (DeclRefExpr 0xa39e4f4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa398b80 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa39e558 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39e520 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa39e510 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa39e690 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0xa39e680 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa39e664 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa39e6b0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa39e650 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0xa39e61c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa39e7e0 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0xa39e740 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0xa39e708 <col:2> '<bound member function type>' ->_M_range_check 0xa398c20
      (CXXThisExpr 0xa39e6f8 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa39e728 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa398ce0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa39e7d0 <line:738:2, col:20>
    (ArraySubscriptExpr 0xa39e7b8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa39e788 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa39e770 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa39e760 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa39e79c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa398ce0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa39e8e0 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0xa39e840 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0xa39e808 <col:2> '<bound member function type>' ->_M_range_check 0xa398c20
      (CXXThisExpr 0xa39e7f8 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa39e828 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa398da0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa39e8d0 <line:756:2, col:20>
    (ArraySubscriptExpr 0xa39e8b8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa39e888 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa39e870 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa39e860 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa39e89c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa398da0 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0xa39e990 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0xa39e980 <col:9, col:23>
    (UnaryOperator 0xa39e968 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa39e948 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa39e908 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa39ea40 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0xa39ea30 <col:9, col:23>
    (UnaryOperator 0xa39ea18 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa39e9f8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa39e9b8 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa39eb80 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0xa39eb70 <col:9, col:27>
    (UnaryOperator 0xa39eb58 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa39eb40 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa39eb18 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa39eae0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CallExpr 0xa39eaa8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa39ea68 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa39eac8 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa39ecc0 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0xa39ecb0 <col:9, col:27>
    (UnaryOperator 0xa39ec98 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa39ec80 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa39ec58 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa39ec20 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
          (CallExpr 0xa39ebe8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa39eba8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa39ec08 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0xa39edc8 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0xa39edb8 <col:9, col:40>
    (CallExpr 0xa39ed98 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa39ecf0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
      (CallExpr 0xa39ed78 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa39ed38 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0xa39eed0 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0xa39eec0 <col:9, col:40>
    (CallExpr 0xa39eea0 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa39edf8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86320)
      (CallExpr 0xa39ee80 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa39ee40 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0xa39f358 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0xa39f338 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa39f040 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa39efe8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (CXXDependentScopeMemberExpr 0xa39ef30 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39eef8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa39eee8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa39efb0 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa39ef78 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa39ef68 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa39f240 <line:829:4, line:832:4>
      (CallExpr 0xa39f180 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39f0b0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39f078 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa39f068 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa39f130 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39f0f8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa39f0e8 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa39f164 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0xa399230 '__x' 'const value_type &'))
      (UnaryOperator 0xa39f228 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa39f1f0 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa39f1b8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa39f1a8 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0xa39f310 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0xa39f268 <col:4> '<bound member function type>' ->_M_insert_aux 0xa39c030
        (CXXThisExpr 0xa39f258 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0xa39f2d8 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa39f298 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa39f2f4 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0xa399230 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0xa39f528 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0xa39f3f0 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa39f3b8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa39f380 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa39f370 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa39f508 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa39f450 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa39f418 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa39f408 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa39f4d0 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa39f498 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0xa39f488 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa39f5e0 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0xa39f5b8 <col:9, col:44> '<dependent type>'
    (MemberExpr 0xa39f550 <col:9> '<bound member function type>' ->_M_fill_insert 0xa39bec0
      (CXXThisExpr 0xa39f540 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa39f570 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa399500 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa39f588 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa399540 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa39f5a0 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0xa399590 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa3a83c0 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0xa3a82b0 <line:966:4, col:72>
    0xa3a8280 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa3a8390 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0xa3a82d0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3a8310 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa399720 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa3a8328 <col:35> '_InputIterator' lvalue ParmVar 0xa399760 '__first' '_InputIterator')
    (DeclRefExpr 0xa3a8340 <col:44> '_InputIterator' lvalue ParmVar 0xa3997a0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3a8378 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa3a8b40 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0xa3a8548 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0xa3a8400 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510)
    (CXXDependentScopeMemberExpr 0xa3a8488 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a8450 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a8440 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa3a8510 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a84d8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa3a84bc <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa399b70 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa3a86d8 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0xa3a8590 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510)
    (CXXDependentScopeMemberExpr 0xa3a8618 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a85e0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a85d0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa3a86a0 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a8668 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0xa3a864c <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa399b70 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa3a8868 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0xa3a8720 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510)
    (CXXDependentScopeMemberExpr 0xa3a87a8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a8770 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a8760 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa3a8830 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a87f8 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0xa3a87dc <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa399b70 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa3a8b18 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3a8a18 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0xa3a8a88 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa3a8a4c <col:46> '<dependent type>' lvalue))
    (CallExpr 0xa3a8af8 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3a8ac0 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa3a8aa4 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa399b70 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0xa3a8c30 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0xa3a8c10 <col:9, col:47> '<dependent type>'
    (MemberExpr 0xa3a8b70 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa39c280
      (CXXThisExpr 0xa3a8b60 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa3a8bd8 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a8ba0 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a8b90 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa3a8fb0 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0xa3a8d08 <line:1052:4, col:45>
    0xa3a8c50 "pointer __result =
      (CallExpr 0xa3a8ce8 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3a8c98 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0xa3a8c88 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa3a8ccc <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa399d70 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0xa3a8ea0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3a8d18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa3a8e88 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0xa3a8e30 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa3a8d50 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
        (DeclRefExpr 0xa3a8d88 <col:36> '_ForwardIterator' lvalue ParmVar 0xa399db0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3a8da0 <col:45> '_ForwardIterator' lvalue ParmVar 0xa399df0 '__last' '_ForwardIterator')
        (DeclRefExpr 0xa3a8db8 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3a8c50 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0xa3a8e10 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa3a8dd0 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0xa3a8e78 <line:1057:8, col:15>
        (DeclRefExpr 0xa3a8e5c <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3a8c50 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0xa3a8f90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3a8ec0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3a8f78 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0xa3a8f40 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa3a8ed0 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3a8f0c <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3a8c50 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0xa3a8f24 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa399d70 '__n' 'size_type':'unsigned int'))
      (NullStmt 0xa3a8f68 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0xa3a9360 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0xa3a90e0 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3a9018 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a8fe0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a8fd0 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa3a90c0 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa3a904c <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0xa3a90a8 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa3a9088 <col:64> '_Integer' lvalue ParmVar 0xa399fb0 '__n' '_Integer'))))
  (BinaryOperator 0xa3a92a0 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3a9140 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9108 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a90f8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa3a9278 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa3a9230 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
      (CXXDependentScopeMemberExpr 0xa3a91c0 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3a9188 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3a9178 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0xa3a9218 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa3a91f4 <col:54> '_Integer' lvalue ParmVar 0xa399fb0 '__n' '_Integer'))))
  (CallExpr 0xa3a9338 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0xa3a92c8 <col:4> '<bound member function type>' ->_M_fill_initialize 0xa39a980
      (CXXThisExpr 0xa3a92b8 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0xa3a9308 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa3a92e8 <col:46> '_Integer' lvalue ParmVar 0xa399fb0 '__n' '_Integer'))
    (DeclRefExpr 0xa3a9320 <col:52> '_Integer' lvalue ParmVar 0xa399ff0 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa3a9598 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0xa3a94b0 <line:1089:4, line:1090:37>
    0xa3a9480 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa3a9570 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0xa3a94d0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3a9510 <col:24> '_InputIterator' lvalue ParmVar 0xa39a1f0 '__first' '_InputIterator')
    (DeclRefExpr 0xa3a9528 <col:33> '_InputIterator' lvalue ParmVar 0xa39a230 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3a9558 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa3a9738 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0xa3a9710 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3a9638 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa3a95e0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50)
      (DeclRefExpr 0xa3a95b0 <col:11> '_InputIterator' lvalue ParmVar 0xa39a430 '__first' '_InputIterator')
      (DeclRefExpr 0xa3a95c8 <col:22> '_InputIterator' lvalue ParmVar 0xa39a470 '__last' '_InputIterator'))
    (UnaryOperator 0xa3a9678 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa3a965c <col:32> '_InputIterator' lvalue ParmVar 0xa39a430 '__first' '_InputIterator'))
    (CallExpr 0xa3a96f0 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0xa3a96a0 <col:6> '<bound member function type>' ->push_back 0xa3992b0
        (CXXThisExpr 0xa3a9690 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0xa3a96d8 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3a96c0 <col:17> '_InputIterator' lvalue ParmVar 0xa39a430 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa3a9d28 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0xa3a9840 <line:1110:4, col:56>
    0xa3a9760 "const size_type __n =
      (CallExpr 0xa3a9818 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3a97b0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
        (DeclRefExpr 0xa3a97e4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa39a6b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3a97fc <col:49> '_ForwardIterator' lvalue ParmVar 0xa39a6f0 '__last' '_ForwardIterator'))")
  (BinaryOperator 0xa3a9950 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3a9898 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9860 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a9850 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa3a9930 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3a98e0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a98d0 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa3a9914 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa3a9760 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa3a9af0 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3a99b0 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9978 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a9968 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa3a9ac8 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa3a9a80 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
      (CXXDependentScopeMemberExpr 0xa3a9a30 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3a99f8 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa3a99e8 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa3a9a64 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa3a9760 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa3a9d10 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3a9b50 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9b18 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a9b08 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa3a9ce0 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa3a9ba0 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
      (DeclRefExpr 0xa3a9bd8 <col:34> '_ForwardIterator' lvalue ParmVar 0xa39a6b0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa3a9bf0 <col:43> '_ForwardIterator' lvalue ParmVar 0xa39a6f0 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0xa3a9c50 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3a9c18 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3a9c08 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa3a9cc0 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa3a9c84 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0xa3a9ff8 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0xa3a9eb0 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa3a9d70 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38cd70 0xa38d6a0)
    (CXXDependentScopeMemberExpr 0xa3a9df0 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9db8 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a9da8 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa3a9e24 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0xa39a8d0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa3a9e3c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0xa39a920 '__value' 'const value_type &')
    (CallExpr 0xa3a9e90 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0xa3a9e54 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0xa3a9fe0 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3a9f28 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9ef0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a9ee0 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa3a9fa8 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3a9f70 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa3a9f60 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa3aa098 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0xa3aa070 <col:11, col:36> '<dependent type>'
    (MemberExpr 0xa3aa020 <col:11> '<bound member function type>' ->_M_fill_assign 0xa39b320
      (CXXThisExpr 0xa3aa010 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa3aa040 <col:26> '_Integer' lvalue ParmVar 0xa39aa50 '__n' '_Integer')
    (DeclRefExpr 0xa3aa058 <col:31> '_Integer' lvalue ParmVar 0xa39aa90 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa3aa2c8 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0xa3aa1e0 <line:1158:4, line:1159:37>
    0xa3aa1b0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa3aa2a0 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0xa3aa200 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3aa240 <col:18> '_InputIterator' lvalue ParmVar 0xa39ac60 '__first' '_InputIterator')
    (DeclRefExpr 0xa3aa258 <col:27> '_InputIterator' lvalue ParmVar 0xa39aca0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3aa288 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa3aa380 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0xa3aa358 <col:11, col:43> '<dependent type>'
    (MemberExpr 0xa3aa2f0 <col:11> '<bound member function type>' ->_M_fill_insert 0xa39bec0
      (CXXThisExpr 0xa3aa2e0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa3aa310 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa39b3f0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa3aa328 <col:33> '_Integer' lvalue ParmVar 0xa39b430 '__n' '_Integer')
    (DeclRefExpr 0xa3aa340 <col:38> '_Integer' lvalue ParmVar 0xa39b470 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa3aa5d0 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0xa3aa4c0 <line:1199:4, line:1200:37>
    0xa3aa490 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa3aa5a0 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0xa3aa4e0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3aa520 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa39b670 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa3aa538 <col:27> '_InputIterator' lvalue ParmVar 0xa39b6b0 '__first' '_InputIterator')
    (DeclRefExpr 0xa3aa550 <col:36> '_InputIterator' lvalue ParmVar 0xa39b6f0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3aa588 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa3aacc0 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0xa3aa830 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3aa748 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa3aa700 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (CXXOperatorCallExpr 0xa3aa6c0 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa3aa688 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0)
        (CallExpr 0xa3aa618 <col:6, col:15> '<dependent type>'
          (MemberExpr 0xa3aa5f8 <col:6> '<bound member function type>' ->max_size 0xa398520
            (CXXThisExpr 0xa3aa5e8 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa3aa668 <col:19, col:24> '<dependent type>'
          (MemberExpr 0xa3aa648 <col:19> '<bound member function type>' ->size 0xa3984a0
            (CXXThisExpr 0xa3aa638 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa3aa6e4 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa39c0a0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa3aa800 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0xa3aa7f0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3aa7d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f598d0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa3aa820 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa3aa7c0 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa3aa7a4 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0xa39c0f0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa3aaa38 <line:1244:2, col:56>
    0xa3aa860 "const size_type __len =
      (CXXOperatorCallExpr 0xa3aaa10 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3aa9c8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850)
        (CallExpr 0xa3aa8c8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa3aa8a8 <col:26> '<bound member function type>' ->size 0xa3984a0
            (CXXThisExpr 0xa3aa898 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa3aa9a0 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa3aa900 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc53e0 0x9fc5b50)
          (CallExpr 0xa3aa968 <col:44, col:49> '<dependent type>'
            (MemberExpr 0xa3aa948 <col:44> '<bound member function type>' ->size 0xa3984a0
              (CXXThisExpr 0xa3aa938 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa3aa984 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0xa39c0a0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa3aacb0 <line:1245:2, col:63>
    (ConditionalOperator 0xa3aac90 <col:9, col:63> '<dependent type>'
      (ParenExpr 0xa3aac10 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0xa3aabf8 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa3aaaf8 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa3aaab0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
            (DeclRefExpr 0xa3aaa48 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa3aa860 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa3aaa90 <col:18, col:23> '<dependent type>'
              (MemberExpr 0xa3aaa70 <col:18> '<bound member function type>' ->size 0xa3984a0
                (CXXThisExpr 0xa3aaa60 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0xa3aabd0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa3aab88 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0)
            (DeclRefExpr 0xa3aab1c <col:28> 'const size_type':'const unsigned int' lvalue Var 0xa3aa860 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa3aab68 <col:36, col:45> '<dependent type>'
              (MemberExpr 0xa3aab48 <col:36> '<bound member function type>' ->max_size 0xa398520
                (CXXThisExpr 0xa3aab38 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa3aac58 <col:50, col:59> '<dependent type>'
        (MemberExpr 0xa3aac38 <col:50> '<bound member function type>' ->max_size 0xa398520
          (CXXThisExpr 0xa3aac28 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa3aac74 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa3aa860 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0xa3aaf08 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0xa3aae30 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0xa3aad00 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
    (DeclRefExpr 0xa3aad40 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa39c1e0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0xa3aada0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3aad68 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa3aad58 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa3aae10 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa3aadd4 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0xa3aaef0 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3aaea0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3aae68 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3aae58 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa3aaed4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa39c1e0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3ab730 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0xa3ab720 <line:1274:7, line:1275:58>
    (ParenExpr 0xa3ab708 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0xa3ab6f0 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa3ab500 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa3ab4a0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3ab390 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
          (CallExpr 0xa3ab410 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ab3d8 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa3ab3c0 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab120 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa3ab480 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ab448 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa3ab42c <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab290 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0xa3ab6c8 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa3ab540 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fe52f0 0x9fe5860)
          (CallExpr 0xa3ab5c8 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ab590 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0xa3ab578 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab120 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa3ab638 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ab600 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa3ab5e4 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab120 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa3ab6a8 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ab670 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0xa3ab654 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab290 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3abe00 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0xa3abdf0 <line:1291:7, line:1292:30>
    (CallExpr 0xa3abdc0 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa3abbc8 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fe5db0 0x9fe6680)
      (CallExpr 0xa3abc50 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3abc18 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0xa3abc00 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab930 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa3abcc0 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3abc88 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0xa3abc6c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ab930 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa3abd30 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3abcf8 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa3abcdc <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3abaa0 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa3abda0 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3abd68 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa3abd4c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3abaa0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3ac378 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0xa3ac368 <col:7, col:26>
    (UnaryOperator 0xa3ac350 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa3ac338 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa3ac310 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa3ac2b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3ab390 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840)
          (DeclRefExpr 0xa3ac280 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ac000 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa3ac298 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ac170 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3ac8a8 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0xa3ac898 <col:7, col:20>
    (CXXOperatorCallExpr 0xa3ac870 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ac820 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3abb80 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
      (DeclRefExpr 0xa3ac7f0 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ac6e0 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0xa3ac808 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ac570 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3ace08 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0xa3acdf8 <col:7, col:25>
    (UnaryOperator 0xa3acde0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa3acdc8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa3acda0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa3acd50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3abb80 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (DeclRefExpr 0xa3acd20 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3acc10 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa3acd38 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3acaa0 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3ad368 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0xa3ad358 <col:7, col:25>
    (UnaryOperator 0xa3ad340 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa3ad328 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa3ad300 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa3ad2b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3abb80 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90)
          (DeclRefExpr 0xa3ad280 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ad000 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa3ad298 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ad170 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa3ad8a8 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0xa3ad888 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ad838 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa3ad820 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ad580 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0xa3ad86c <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa3ad6f0 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0xa3adaf8 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0xa3adaa8 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0xa3ada98 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0xa3ada80 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0xa3ada70 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa3ada20 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0xa3ada58 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0xa3ae3e8 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa3ae3cc <col:12> '_Bit_type *' lvalue ParmVar 0xa3adce0 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0xa3ae430 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0xa3ae418 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0xa3add20 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0xa3ae460 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0xa3ae488 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa3ae470 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0xa3ae4d0 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0xa3ae4b8 <col:41> 'int' 0))
) (CompoundStmt 0xa3ae500 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0xa3ae670 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0xa3ae660 <col:7, col:32>
    (UnaryOperator 0xa3ae648 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0xa3ae630 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa3ae620 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa3ae608 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0xa3ae5f0 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0xa3ae5d0 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0xa3ae588 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0xa3ae578 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa3ae554 <col:18> '_Bit_type *const' lvalue ->_M_p 0xa3adc60
                      (CXXThisExpr 0xa3ae528 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0xa3ae5e0 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0xa3ae5b0 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0xa3adca0
                  (CXXThisExpr 0xa3ae5a0 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0xa3ae890 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0xa3ae838 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3ae6a0 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3ae684 <col:11> '_Bool' lvalue ParmVar 0xa3adf60 '__x' '_Bool'))
    (CompoundAssignOperator 0xa3ae748 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa3ae6f0 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa3ae6e0 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3ae6c0 <col:3> '_Bit_type *' lvalue ->_M_p 0xa3adc60
            (CXXThisExpr 0xa3ae6b0 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0xa3ae738 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0xa3ae718 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa3adca0
          (CXXThisExpr 0xa3ae708 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0xa3ae818 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa3ae7a8 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa3ae798 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3ae778 <col:3> '_Bit_type *' lvalue ->_M_p 0xa3adc60
            (CXXThisExpr 0xa3ae768 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0xa3ae800 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa3ae7f0 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0xa3ae7d0 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa3adca0
            (CXXThisExpr 0xa3ae7c0 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0xa3ae880 <line:89:7, col:15>
    (UnaryOperator 0xa3ae868 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0xa3ae858 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0xa3aeaf0 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0xa3aeae0 <col:7, col:30>
    (CXXOperatorCallExpr 0xa3aeab8 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa3aeaa8 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3aea70 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa3ae000 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0xa3ae8b8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0xa3ae8a8 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0xa3ae960 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa3ae950 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa3ae930 <col:27> '_Bool'
            (MemberExpr 0xa3ae910 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
              (DeclRefExpr 0xa3ae8d8 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0xa3ae0a0 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0xa3aec80 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0xa3aec70 <col:7, col:37>
    (BinaryOperator 0xa3aec58 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0xa3aec38 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa3aeb90 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa3aeb80 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa3aeb60 <col:19, col:20> '_Bool'
              (MemberExpr 0xa3aeb40 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
                (UnaryOperator 0xa3aeb20 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa3aeb10 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0xa3aec48 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa3aec20 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa3aec10 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa3aebf0 <col:34> '_Bool'
              (MemberExpr 0xa3aebd0 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
                (DeclRefExpr 0xa3aebb0 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0xa3ae1a0 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0xa3aee08 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0xa3aedf8 <col:7, col:38>
    (BinaryOperator 0xa3aede0 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0xa3aed38 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0xa3aed20 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa3aed10 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa3aecf0 <col:20, col:21> '_Bool'
              (MemberExpr 0xa3aecd0 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
                (UnaryOperator 0xa3aecb0 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa3aeca0 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0xa3aedc8 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa3aedb8 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa3aed98 <col:35> '_Bool'
            (MemberExpr 0xa3aed78 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
              (DeclRefExpr 0xa3aed58 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0xa3ae2a0 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0xa3aeed8 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0xa3aeeb8 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0xa3aee60 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0xa3aee50 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa3aee30 <col:8> '_Bit_type *' lvalue ->_M_p 0xa3adc60
          (CXXThisExpr 0xa3aee20 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0xa3aeea8 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0xa3aee88 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa3adca0
        (CXXThisExpr 0xa3aee78 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0xa3b4360 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa3b433c <col:10> '_Bit_type *const' lvalue ._M_p 0xa3adc60
    (DeclRefExpr 0xa3b4324 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa3aea30 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0xa3b43c0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0xa3b439c <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0xa3adca0
    (DeclRefExpr 0xa3b4384 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa3aea30 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0xa3b43f0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0xa3afe90 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa3afe74 <col:12> '_Bit_type *' lvalue ParmVar 0xa3af5e0 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0xa3afed0 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa3afeb8 <col:28> 'unsigned int' lvalue ParmVar 0xa3af630 '__y' 'unsigned int'))
) (CompoundStmt 0xa3b0148 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0xa3b2088 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0xa3b2068 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0xa3b1f80 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0xa3b1ed8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0xa3b0188 <col:11> 'unsigned int' lvalue ->_M_offset 0xa3af5a0
          (CXXThisExpr 0xa3b0178 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa3b1f70 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0xa3b1f58 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0xa3b1f28 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa3b1f18 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0xa3b1efc <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0xa3b1f40 <col:45> 'int' 1))))
    (CompoundStmt 0xa3b2050 <line:122:2, line:125:2>
      (BinaryOperator 0xa3b1ff0 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0xa3b1fa8 <col:4> 'unsigned int' lvalue ->_M_offset 0xa3af5a0
          (CXXThisExpr 0xa3b1f98 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa3b1fe0 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa3b1fc8 <col:16> 'int' 0)))
      (UnaryOperator 0xa3b2038 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0xa3b2018 <col:6> '_Bit_type *' lvalue ->_M_p 0xa3af560
          (CXXThisExpr 0xa3b2008 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0xa3b2280 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0xa3b2260 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0xa3b2110 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0xa3b20d0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0xa3b20b0 <col:11> 'unsigned int' lvalue ->_M_offset 0xa3af5a0
          (CXXThisExpr 0xa3b20a0 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa3b2100 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa3b20e8 <col:26> 'int' 0)))
    (CompoundStmt 0xa3b2248 <line:132:2, line:135:2>
      (BinaryOperator 0xa3b21e8 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0xa3b2138 <col:4> 'unsigned int' lvalue ->_M_offset 0xa3af5a0
          (CXXThisExpr 0xa3b2128 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa3b21d8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa3b21c0 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0xa3b2190 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa3b2180 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0xa3b2164 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0xa3b21a8 <col:35> 'int' 1))))
      (UnaryOperator 0xa3b2230 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa3b2210 <col:6> '_Bit_type *' lvalue ->_M_p 0xa3af560
          (CXXThisExpr 0xa3b2200 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0xa3b2750 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0xa3b2398 <line:141:7, col:44>
    0xa3b22c0 "difference_type __n =
      (ImplicitCastExpr 0xa3b2388 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0xa3b2370 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0xa3b2360 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa3b2340 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa3b22f4 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0xa3af860 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0xa3b2350 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa3b2320 <col:35> 'unsigned int' lvalue ->_M_offset 0xa3af5a0
              (CXXThisExpr 0xa3b2310 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0xa3b2468 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0xa3b23b8 <col:7> '_Bit_type *' lvalue ->_M_p 0xa3af560
      (CXXThisExpr 0xa3b23a8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0xa3b2450 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0xa3b2440 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa3b23d8 <col:15> 'difference_type':'int' lvalue Var 0xa3b22c0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa3b2428 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa3b2418 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0xa3b23fc <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0xa3b2530 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0xa3b2488 <col:7> 'difference_type':'int' lvalue Var 0xa3b22c0 '__n' 'difference_type':'int')
    (BinaryOperator 0xa3b2518 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0xa3b2508 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa3b24a0 <col:13> 'difference_type':'int' lvalue Var 0xa3b22c0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa3b24f0 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa3b24e0 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0xa3b24c4 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0xa3b2688 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0xa3b2588 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0xa3b2578 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa3b2548 <col:11> 'difference_type':'int' lvalue Var 0xa3b22c0 '__n' 'difference_type':'int'))
      (IntegerLiteral 0xa3b2560 <col:17> 'int' 0))
    (CompoundStmt 0xa3b2670 <line:145:2, line:148:2>
      (CompoundAssignOperator 0xa3b2608 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa3b25a0 <col:4> 'difference_type':'int' lvalue Var 0xa3b22c0 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0xa3b25f0 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0xa3b25e0 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0xa3b25c4 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0xa3b2658 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa3b2638 <col:6> '_Bit_type *' lvalue ->_M_p 0xa3af560
          (CXXThisExpr 0xa3b2628 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0xa3b2738 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0xa3b26b8 <col:7> 'unsigned int' lvalue ->_M_offset 0xa3af5a0
      (CXXThisExpr 0xa3b26a8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0xa3b2720 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0xa3b2710 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa3b2700 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa3b26d8 <col:45> 'difference_type':'int' lvalue Var 0xa3b22c0 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa3b2900 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0xa3b28f0 <col:7, col:51>
    (BinaryOperator 0xa3b28d8 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0xa3b2820 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0xa3b2800 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3b27a8 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa3af560
            (CXXThisExpr 0xa3b2798 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa3b2810 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3b27e0 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0xa3af560
            (DeclRefExpr 0xa3b27c8 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3af980 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0xa3b28c0 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0xa3b28a0 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa3b2848 <col:34> 'const unsigned int' lvalue ->_M_offset 0xa3af5a0
            (CXXThisExpr 0xa3b2838 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa3b28b0 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa3b2880 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0xa3af5a0
            (DeclRefExpr 0xa3b2868 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3af980 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa3b2b50 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0xa3b2b40 <line:159:7, line:160:56>
    (BinaryOperator 0xa3b2b28 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0xa3b29a0 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0xa3b2980 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3b2928 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa3af560
            (CXXThisExpr 0xa3b2918 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa3b2990 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3b2960 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0xa3af560
            (DeclRefExpr 0xa3b2948 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afa80 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0xa3b2b10 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0xa3b2af8 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0xa3b2a40 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0xa3b2a20 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa3b29c8 <col:11> '_Bit_type *const' lvalue ->_M_p 0xa3af560
                (CXXThisExpr 0xa3b29b8 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa3b2a30 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa3b2a00 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0xa3af560
                (DeclRefExpr 0xa3b29e8 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afa80 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0xa3b2ae0 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0xa3b2ac0 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa3b2a68 <col:31> 'const unsigned int' lvalue ->_M_offset 0xa3af5a0
                (CXXThisExpr 0xa3b2a58 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa3b2ad0 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa3b2aa0 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0xa3af5a0
                (DeclRefExpr 0xa3b2a88 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afa80 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa3b2c50 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0xa3b2c40 <col:7, col:28>
    (UnaryOperator 0xa3b2c28 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0xa3b2c10 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0xa3b2be8 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0xa3b2bd8 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b2ba8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa3afa00 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa3b2b78 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa3b2b68 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa3b2b8c <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afb50 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa3b2d08 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0xa3b2cf8 <col:7, col:21>
    (CXXOperatorCallExpr 0xa3b2cd0 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0xa3b2cc0 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3b2ca8 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa3afad0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0xa3b2c64 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afc20 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0xa3b2c90 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0xa3b2c80 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa3b2df0 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0xa3b2de0 <col:7, col:27>
    (UnaryOperator 0xa3b2dc8 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa3b2db0 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa3b2d88 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0xa3b2d78 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b2d60 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa3afad0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0xa3b2d1c <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afcf0 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0xa3b2d48 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa3b2d38 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa3b2ed8 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0xa3b2ec8 <col:7, col:27>
    (UnaryOperator 0xa3b2eb0 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa3b2e98 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa3b2e70 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0xa3b2e60 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b2e48 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa3afad0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa3b2e18 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa3b2e08 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa3b2e2c <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3afdc0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0xa3b4700 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0xa3b46e8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b4070 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0xa3b4800 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa3b47e0 <col:10> '_Bit_type *const' lvalue ._M_p 0xa3af560
    (DeclRefExpr 0xa3b47c8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b4070 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0xa3b4860 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa3b483c <col:10> 'const unsigned int' lvalue ._M_offset 0xa3af5a0
    (DeclRefExpr 0xa3b4824 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b4070 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0xa3b4898 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0xa3b3288 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0xa3b3278 <line:183:5, line:184:37>
    (ImplicitCastExpr 0xa3b3268 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0xa3b3250 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0xa3b3238 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0xa3b31d8 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0xa3b31c8 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0xa3b3168 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0xa3b3090 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa3b3080 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa3b3064 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0xa3b3150 <col:32, col:52> 'int'
                  (BinaryOperator 0xa3b3138 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0xa3b3118 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa3b30c0 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0xa3af560
                        (DeclRefExpr 0xa3b30a8 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b2f00 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0xa3b3128 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa3b30f8 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0xa3af560
                        (DeclRefExpr 0xa3b30e0 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b2f50 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0xa3b31b8 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa3b3198 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0xa3af5a0
                (DeclRefExpr 0xa3b3180 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b2f00 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0xa3b3228 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa3b3208 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0xa3af5a0
              (DeclRefExpr 0xa3b31f0 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa3b2f50 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b40b0 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa3b3f68 <col:42> 'int' 0))
, (ImplicitCastExpr 0xa3b40c0 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3b3f80 <col:45> 'int' 0))
) (CompoundStmt 0xa3b4120 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b4168 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa3b4130 <col:26> '_Bit_type *' lvalue ParmVar 0xa3b3570 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa3b4178 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa3b4148 <col:31> 'unsigned int' lvalue ParmVar 0xa3b35c0 '__y' 'unsigned int'))
) (CompoundStmt 0xa3b41d0 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0xa3b4438 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0xa3b4428 <col:7, col:46>
    (CXXConstructExpr 0xa3b4400 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa3b4318 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa3b4308 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0xa3b42d8 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0xa3b42c8 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa3b4228 <col:24> '_Bit_type *const' lvalue ->_M_p 0xa3af560
                (ImplicitCastExpr 0xa3b4218 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0xa3b4208 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0xa3b42b0 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0xa3b4248 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0xa3b42a0 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0xa3b4280 <col:37> 'const unsigned int' lvalue ->_M_offset 0xa3af5a0
                  (ImplicitCastExpr 0xa3b4270 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa3b4260 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0xa3b4500 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0xa3b4498 <line:205:7, col:18> 'void'
    (MemberExpr 0xa3b4478 <col:7> '<bound member function type>' ->_M_bump_up 0xa3af770
      (ImplicitCastExpr 0xa3b44b8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b4468 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa3b44f0 <line:206:7, col:15>
    (UnaryOperator 0xa3b44d8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b44c8 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0xa3b4a08 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0xa3b4938 <line:212:7, col:29>
    0xa3b4520 "iterator __tmp =
      (CXXConstructExpr 0xa3b4910 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa3b46b0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa3b4568 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa3b4558 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa3b4978 <line:213:7, col:18> 'void'
    (MemberExpr 0xa3b4958 <col:7> '<bound member function type>' ->_M_bump_up 0xa3af770
      (ImplicitCastExpr 0xa3b4998 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b4948 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa3b49f8 <line:214:7, col:14>
    (CXXConstructExpr 0xa3b49d0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa3b49c0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa3b49a8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3b4520 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0xa3b4ac0 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0xa3b4a58 <line:220:7, col:20> 'void'
    (MemberExpr 0xa3b4a38 <col:7> '<bound member function type>' ->_M_bump_down 0xa3af7f0
      (ImplicitCastExpr 0xa3b4a78 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b4a28 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa3b4ab0 <line:221:7, col:15>
    (UnaryOperator 0xa3b4a98 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b4a88 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0xa3b4c48 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0xa3b4b78 <line:227:7, col:29>
    0xa3b4ae0 "iterator __tmp =
      (CXXConstructExpr 0xa3b4b50 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa3b4b40 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa3b4b28 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa3b4b18 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa3b4bb8 <line:228:7, col:20> 'void'
    (MemberExpr 0xa3b4b98 <col:7> '<bound member function type>' ->_M_bump_down 0xa3af7f0
      (ImplicitCastExpr 0xa3b4bd8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b4b88 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa3b4c38 <line:229:7, col:14>
    (CXXConstructExpr 0xa3b4c10 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa3b4c00 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa3b4be8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3b4ae0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0xa3b4d28 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0xa3b4cb0 <line:235:7, col:18> 'void'
    (MemberExpr 0xa3b4c78 <col:7> '<bound member function type>' ->_M_incr 0xa3af8e0
      (ImplicitCastExpr 0xa3b4cd0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b4c68 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0xa3b4ce0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa3b4c98 <col:15> 'difference_type':'int' lvalue ParmVar 0xa3b3ab0 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa3b4d18 <line:236:7, col:15>
    (UnaryOperator 0xa3b4d00 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b4cf0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0xa3b4e68 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0xa3b4e08 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0xa3b4df8 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3b4da8 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa3b3b50 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0xa3b4d50 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b4d40 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0xa3b4d90 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa3b4d80 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa3b4d64 <col:17> 'difference_type':'int' lvalue ParmVar 0xa3b3bc0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa3b4e58 <line:243:7, col:15>
    (UnaryOperator 0xa3b4e40 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b4e30 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0xa3b5000 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0xa3b4f18 <line:249:7, col:29>
    0xa3b4e90 "iterator __tmp =
      (CXXConstructExpr 0xa3b4ef0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa3b4ed8 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa3b4ec8 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa3b4ff0 <line:250:7, col:23>
    (CXXConstructExpr 0xa3b4fc8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa3b4fb8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa3b4f90 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa3b4f80 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b4f68 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa3b3b50 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa3b4f28 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3b4e90 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa3b4f58 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa3b4f40 <col:23> 'difference_type':'int' lvalue ParmVar 0xa3b3c90 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0xa3b5190 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0xa3b50a8 <line:256:7, col:29>
    0xa3b5020 "iterator __tmp =
      (CXXConstructExpr 0xa3b5080 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa3b5068 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa3b5058 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa3b5180 <line:257:7, col:23>
    (CXXConstructExpr 0xa3b5158 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa3b5148 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa3b5120 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa3b5110 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b50f8 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa3b3c20 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa3b50b8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3b5020 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa3b50e8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa3b50d0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa3b3da0 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0xa3b5380 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0xa3b5370 <col:7, col:27>
    (CXXConstructExpr 0xa3b5348 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa3b5338 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa3b5328 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa3b5308 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa3b52f8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3b52a8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa3b36f0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa3b5298 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0xa3b5280 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa3b5258 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0xa3b5248 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3b51f8 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0xa3b51b8 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0xa3b51a8 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0xa3b51e8 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0xa3b51cc <col:24> 'difference_type':'int' lvalue ParmVar 0xa3b3e60 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b46d8 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa3b46bc <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa3b4670 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0xa3b4900 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0xa3b55e0 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0xa3b55d0 <col:5, col:18>
    (CXXConstructExpr 0xa3b55a8 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa3b5598 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa3b5588 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa3b5560 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa3b5550 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3b5538 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0xa3b54f8 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa3b53f0 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0xa3b5528 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa3b5510 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa3b53a0 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b6410 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa3b63d8 <col:48> 'int' 0))
, (ImplicitCastExpr 0xa3b6420 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3b63f0 <col:51> 'int' 0))
) (CompoundStmt 0xa3b6480 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b64c8 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa3b6490 <col:26> '_Bit_type *' lvalue ParmVar 0xa3b5930 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa3b64d8 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa3b64a8 <col:31> 'unsigned int' lvalue ParmVar 0xa3b5980 '__y' 'unsigned int'))
) (CompoundStmt 0xa3b6530 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b65d8 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa3b6568 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0xa3af560
    (ImplicitCastExpr 0xa3b6558 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa3b6540 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa3b5a60 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0xa3b65e8 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa3b65b0 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0xa3af5a0
    (ImplicitCastExpr 0xa3b65a0 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa3b6588 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa3b5a60 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0xa3b6640 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0xa3b67f0 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0xa3b67e0 <col:7, col:51>
    (ImplicitCastExpr 0xa3b67d0 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0xa3b67b0 <col:14, col:51> '_Bool'
        (MemberExpr 0xa3b6790 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
          (ImplicitCastExpr 0xa3b6780 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0xa3b6748 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0xa3b6738 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0xa3b6698 <col:29> '_Bit_type *const' lvalue ->_M_p 0xa3af560
                  (ImplicitCastExpr 0xa3b6688 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa3b6678 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0xa3b6720 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0xa3b66b8 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0xa3b6710 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0xa3b66f0 <col:42> 'const unsigned int' lvalue ->_M_offset 0xa3af5a0
                    (ImplicitCastExpr 0xa3b66e0 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0xa3b66d0 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0xa3b68c0 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0xa3b6858 <line:291:7, col:18> 'void'
    (MemberExpr 0xa3b6838 <col:7> '<bound member function type>' ->_M_bump_up 0xa3af770
      (ImplicitCastExpr 0xa3b6878 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b6828 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa3b68b0 <line:292:7, col:15>
    (UnaryOperator 0xa3b6898 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b6888 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0xa3b6be8 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0xa3b6b18 <line:298:7, col:35>
    0xa3b68e0 "const_iterator __tmp =
      (CXXConstructExpr 0xa3b6af0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa3b6a50 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa3b6928 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa3b6918 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa3b6b58 <line:299:7, col:18> 'void'
    (MemberExpr 0xa3b6b38 <col:7> '<bound member function type>' ->_M_bump_up 0xa3af770
      (ImplicitCastExpr 0xa3b6b78 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b6b28 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa3b6bd8 <line:300:7, col:14>
    (CXXConstructExpr 0xa3b6bb0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa3b6ba0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa3b6b88 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa3b68e0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0xa3b6ca0 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0xa3b6c38 <line:306:7, col:20> 'void'
    (MemberExpr 0xa3b6c18 <col:7> '<bound member function type>' ->_M_bump_down 0xa3af7f0
      (ImplicitCastExpr 0xa3b6c58 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b6c08 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa3b6c90 <line:307:7, col:15>
    (UnaryOperator 0xa3b6c78 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b6c68 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0xa3b6e28 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0xa3b6d58 <line:313:7, col:35>
    0xa3b6cc0 "const_iterator __tmp =
      (CXXConstructExpr 0xa3b6d30 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa3b6d20 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa3b6d08 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa3b6cf8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa3b6d98 <line:314:7, col:20> 'void'
    (MemberExpr 0xa3b6d78 <col:7> '<bound member function type>' ->_M_bump_down 0xa3af7f0
      (ImplicitCastExpr 0xa3b6db8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b6d68 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa3b6e18 <line:315:7, col:14>
    (CXXConstructExpr 0xa3b6df0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa3b6de0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa3b6dc8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa3b6cc0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0xa3b6f08 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0xa3b6e90 <line:321:7, col:18> 'void'
    (MemberExpr 0xa3b6e58 <col:7> '<bound member function type>' ->_M_incr 0xa3af8e0
      (ImplicitCastExpr 0xa3b6eb0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa3b6e48 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0xa3b6ec0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa3b6e78 <col:15> 'difference_type':'int' lvalue ParmVar 0xa3b5f20 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa3b6ef8 <line:322:7, col:15>
    (UnaryOperator 0xa3b6ee0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b6ed0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0xa3b7048 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0xa3b6fe8 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0xa3b6fd8 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3b6f88 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa3b5fc0 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0xa3b6f30 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b6f20 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0xa3b6f70 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa3b6f60 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa3b6f44 <col:17> 'difference_type':'int' lvalue ParmVar 0xa3b6030 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa3b7038 <line:329:7, col:15>
    (UnaryOperator 0xa3b7020 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa3b7010 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0xa3b71e0 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0xa3b70f8 <line:335:7, col:35>
    0xa3b7070 "const_iterator __tmp =
      (CXXConstructExpr 0xa3b70d0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa3b70b8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa3b70a8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa3b71d0 <line:336:7, col:23>
    (CXXConstructExpr 0xa3b71a8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa3b7198 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa3b7170 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa3b7160 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b7148 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa3b5fc0 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa3b7108 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa3b7070 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa3b7138 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa3b7120 <col:23> 'difference_type':'int' lvalue ParmVar 0xa3b6100 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0xa3b7370 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0xa3b7288 <line:342:7, col:35>
    0xa3b7200 "const_iterator __tmp =
      (CXXConstructExpr 0xa3b7260 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa3b7248 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa3b7238 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa3b7360 <line:343:7, col:23>
    (CXXConstructExpr 0xa3b7338 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa3b7328 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa3b7300 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa3b72f0 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3b72d8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa3b6090 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa3b7298 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa3b7200 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa3b72c8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa3b72b0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa3b6210 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0xa3b74f8 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0xa3b74e8 <col:7, col:27>
    (CXXOperatorCallExpr 0xa3b74c8 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa3b74b8 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3b7488 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa3b5b60 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa3b7478 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0xa3b7460 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa3b7438 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa3b7428 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3b73d8 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa3b61a0 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0xa3b7398 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0xa3b7388 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0xa3b73c8 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0xa3b73ac <col:24> 'difference_type':'int' lvalue ParmVar 0xa3b62d0 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa3b6a78 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa3b6a5c <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa3b6a10 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0xa3b6ae0 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0xa3b7760 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0xa3b7750 <col:5, col:18>
    (CXXConstructExpr 0xa3b7728 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa3b7718 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0xa3b7708 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa3b76e0 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa3b76d0 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3b76b8 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa3b61a0 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0xa3b7678 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa3b7570 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0xa3b76a8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa3b7690 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa3b7520 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0xa3b7b58 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0xa3b7b30 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3b7988 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0xa3b7978 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3b7960 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa3afba0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa3b7950 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa3b78fc <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7780 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa3b7940 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa3b7930 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa3b7914 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b77c0 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0xa3b7a28 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0xa3b7a18 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3b79c8 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa3b37f0 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0xa3b79ac <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7780 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0xa3b7b08 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa3b7af8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3b7ae0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa3ae000 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0xa3b7a98 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa3b7a88 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b7a70 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa3b36f0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa3b7a60 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa3b7a48 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7780 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa3b7ad0 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa3b7ab8 <col:18> '_Bool' lvalue ParmVar 0xa3b7800 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0xa3b8940 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0xa3b8920 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0xa3b7de0 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0xa3b7dc0 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa3b7d58 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0xa3af560
          (ImplicitCastExpr 0xa3b7d48 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa3b7d2c <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7b80 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0xa3b7dd0 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa3b7da0 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0xa3af560
          (ImplicitCastExpr 0xa3b7d90 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa3b7d78 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7bc0 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0xa3b87b0 <line:366:7, line:370:7>
      (CallExpr 0xa3b8318 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0xa3b8308 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b82a8 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa3b81e0 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9fd5ca0 'fill')))
        (BinaryOperator 0xa3b7ec8 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0xa3b7eb8 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0xa3b7e80 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0xa3af560
              (ImplicitCastExpr 0xa3b7e70 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0xa3b7e58 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7b80 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0xa3b7ea0 <col:27> 'int' 1))
        (ImplicitCastExpr 0xa3b8340 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3b7f08 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0xa3af560
            (ImplicitCastExpr 0xa3b7ef8 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa3b7ee0 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7bc0 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0xa3b8350 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0xa3b7f98 <col:43, col:54> 'int'
            (ImplicitCastExpr 0xa3b7f88 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3b7f28 <col:43> 'const _Bool' lvalue ParmVar 0xa3b7c30 '__x' 'const _Bool &'))
            (UnaryOperator 0xa3b7f58 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0xa3b7f40 <col:50> 'int' 0))
            (IntegerLiteral 0xa3b7f70 <col:54> 'int' 0))))
      (CallExpr 0xa3b84f8 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0xa3b84e8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b84b0 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa3b7890 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa3b8530 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa3b8520 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa3b8394 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7b80 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa3b8578 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa3b8568 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa3b8558 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa3b8468 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0xa3b8428 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0xa3b8418 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa3b83e0 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0xa3af560
                      (ImplicitCastExpr 0xa3b83d0 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0xa3b83b8 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7b80 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0xa3b8400 <col:55> 'int' 1))
                (ImplicitCastExpr 0xa3b8458 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa3b8440 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0xa3b85a0 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3b8498 <col:62> 'const _Bool' lvalue ParmVar 0xa3b7c30 '__x' 'const _Bool &')))
      (CallExpr 0xa3b86f8 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0xa3b86e8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b86d0 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa3b7890 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa3b8740 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa3b8730 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa3b8720 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa3b8670 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0xa3b8650 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0xa3b8618 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0xa3af560
                    (ImplicitCastExpr 0xa3b8608 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0xa3b85f0 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7bc0 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0xa3b8660 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa3b8638 <col:44> 'int' 0))))))
        (CXXConstructExpr 0xa3b8778 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa3b8768 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa3b86a0 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7bc0 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa3b87a0 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3b86b8 <col:56> 'const _Bool' lvalue ParmVar 0xa3b7c30 '__x' 'const _Bool &'))))
    (CallExpr 0xa3b8878 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0xa3b8868 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3b884c <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa3b7890 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0xa3b88b0 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa3b88a0 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa3b8804 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7b80 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0xa3b88e8 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa3b88d8 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa3b881c <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa3b7bc0 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa3b8910 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa3b8834 <col:39> 'const _Bool' lvalue ParmVar 0xa3b7c30 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa3b99a8 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0xa3b9a18 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0xa3b9a28 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0xa3b9090 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa3b9b28 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0xa3b9b98 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0xa3b9cf8 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0xa3b9ce8 <col:9, col:61>
    (UnaryOperator 0xa3b9cd0 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa3b9cb8 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa3b9c50 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa3b9c10 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CXXDependentScopeMemberExpr 0xa3b9bd8 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0xa3b9bc8 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0xa3b9e58 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0xa3b9e48 <col:9, col:67>
    (UnaryOperator 0xa3b9e30 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa3b9e18 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa3b9db0 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa3b9d70 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
          (CXXDependentScopeMemberExpr 0xa3b9d38 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0xa3b9d28 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa3b9f30 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0xa3b9f20 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa3b9f00 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0xa3b9ee0 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0xa3b9e88 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0xa3b9f80 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa3b9f90 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa3b9530 '__a' 'const allocator_type &')
) (CompoundStmt 0xa3b9ff0 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0xa3ba068 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0xa3ba048 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ba010 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3ba000 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0xa3ba288 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0xa3ba278 <line:439:9, line:440:23>
    (CallExpr 0xa3ba258 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3ba0b0 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0xa3ba090 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa3b9710
          (CXXThisExpr 0xa3ba080 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0xa3ba240 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0xa3ba1c8 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0xa3ba1b0 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0xa3ba170 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0xa3ba150 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3ba0e4 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa3b9750 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa3ba160 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa3ba138 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa3ba128 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0xa3ba10c <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0xa3ba1a0 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa3ba188 <col:59> 'int' 1))))
        (ImplicitCastExpr 0xa3ba230 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0xa3ba218 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa3ba208 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0xa3ba1ec <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0xa3ba600 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0xa3ba5e0 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa3ba308 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3ba2d0 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0xa3ba2b0 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa3b9710
          (CXXThisExpr 0xa3ba2a0 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0xa3ba5b8 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3ba370 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa3ba350 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa3b9710
          (CXXThisExpr 0xa3ba340 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa3ba410 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3ba3d8 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa3ba3b8 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa3b9710
            (CXXThisExpr 0xa3ba3a8 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0xa3ba590 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa3ba550 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3b2ff0 0x9fa94c0 0x9fac7a0)
        (CXXDependentScopeMemberExpr 0xa3ba478 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0xa3ba458 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa3b9710
            (CXXThisExpr 0xa3ba448 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3ba518 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3ba4e0 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0xa3ba4c0 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa3b9710
              (CXXThisExpr 0xa3ba4b0 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0xa3c0490 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0xa3c0480 <col:7, col:35>
    (CallExpr 0xa3c0460 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c0428 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0xa3c04f0 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0xa3c0500 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa3bb550 '__a' 'const allocator_type &')
) (CompoundStmt 0xa3c0560 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0xa3c0360 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa3c0350 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa3c0378 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa3c0570 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa3bb700 '__a' 'const allocator_type &')
) (CompoundStmt 0xa3c08a0 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0xa3c0630 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0xa3c05f8 <col:7> '<bound member function type>' ->_M_initialize 0xa3be0e0
      (CXXThisExpr 0xa3c05e8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3c0618 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa3bb660 '__n' 'size_type':'unsigned int'))
  (CallExpr 0xa3c0878 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0xa3c0678 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
    (CXXDependentScopeMemberExpr 0xa3c0730 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c06f8 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3c06c0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa3c06b0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa3c07b0 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c0778 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c0768 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa3c0858 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0xa3c0848 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa3c07e4 <col:3> 'const _Bool' lvalue ParmVar 0xa3bb6b0 '__value' 'const _Bool &'))
      (UnaryOperator 0xa3c0818 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0xa3c0800 <col:14> 'int' 0))
      (IntegerLiteral 0xa3c0830 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0xa3c0908 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa3c08d0 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0xa3c08b8 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bb870 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0xa3c0be8 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0xa3c0a10 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0xa3c0980 <col:7> '<bound member function type>' ->_M_initialize 0xa3be0e0
      (CXXThisExpr 0xa3c0970 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa3c09f0 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c09b8 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa3c09a0 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bb870 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa3c0bc0 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0xa3c0a40 <col:7> '<bound member function type>' ->_M_copy_aligned 0xa3be010
      (CXXThisExpr 0xa3c0a30 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa3c0ab0 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c0a78 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0xa3c0a60 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bb870 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0xa3c0b20 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c0ae8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa3c0acc <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bb870 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0xa3c0b88 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c0b50 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c0b40 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa3c0398 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa3c0c00 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa3bba50 '__a' 'const allocator_type &')
) (CompoundStmt 0xa3c0e78 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0xa3c0d90 <line:552:2, col:70>
    0xa3c0d60 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa3c0e50 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0xa3c0db0 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3c0df0 <col:25> '_InputIterator' lvalue ParmVar 0xa3bb9c0 '__first' '_InputIterator')
    (DeclRefExpr 0xa3c0e08 <col:34> '_InputIterator' lvalue ParmVar 0xa3bba00 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3c0e38 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0xa3c0e90 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa3c1518 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0xa3c0fe8 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3c0f88 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa3c0f28 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840 0xa3ab390)
      (CXXOperatorCallExpr 0xa3c0ef8 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa3c0eb8 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (DeclRefExpr 0xa3c0ea0 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bbc70 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0xa3c0f18 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0xa3c0fd8 <line:562:2, col:10>
      (UnaryOperator 0xa3c0fc0 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa3c0fb0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0xa3c1280 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3c1118 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa3c10c8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
      (CallExpr 0xa3c1058 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c1020 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa3c1004 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bbc70 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa3c10a8 <col:24, col:33> '<dependent type>'
        (MemberExpr 0xa3c1088 <col:24> '<bound member function type>' ->capacity 0xa3bc6a0
          (CXXThisExpr 0xa3c1078 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa3c1268 <line:564:2, line:567:2>
      (CallExpr 0xa3c1188 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c1150 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa3c1140 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0xa3c1248 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0xa3c11b8 <col:4> '<bound member function type>' ->_M_initialize 0xa3be0e0
          (CXXThisExpr 0xa3c11a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0xa3c1228 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c11f0 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c11d8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bbc70 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0xa3c14c8 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3c12e8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c12b0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c12a0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0xa3c14a0 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0xa3c1330 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0xa3be010
        (CXXThisExpr 0xa3c1320 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa3c13a0 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c1368 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0xa3c1350 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bbc70 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa3c1410 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c13d8 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa3c13bc <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bbc70 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa3c1480 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0xa3c1440 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0xa3c1508 <line:570:7, col:15>
    (UnaryOperator 0xa3c14f0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c14e0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0xa3c15c0 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0xa3c1598 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa3c1548 <col:7> '<bound member function type>' ->_M_fill_assign 0xa3beef0
      (CXXThisExpr 0xa3c1538 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3c1568 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa3bbd80 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa3c1580 <col:27> 'const _Bool' lvalue ParmVar 0xa3bbdd0 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa3c17e8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0xa3c1700 <line:604:2, col:70>
    0xa3c16d0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa3c17c0 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0xa3c1720 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3c1760 <col:21> '_InputIterator' lvalue ParmVar 0xa3bbf40 '__first' '_InputIterator')
    (DeclRefExpr 0xa3c1778 <col:30> '_InputIterator' lvalue ParmVar 0xa3bbf80 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3c17a8 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0xa3c1890 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0xa3c1880 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa3c1848 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c1810 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c1800 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0xa3c1938 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0xa3c1928 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa3c18f0 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c18b8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c18a8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0xa3c19e0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0xa3c19d0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa3c1998 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c1960 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c1950 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0xa3c1a88 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0xa3c1a78 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa3c1a40 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3c1a08 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c19f8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0xa3cd9c0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0xa3cd9b0 <col:7, col:36>
    (CXXConstructExpr 0xa3cd988 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa3cd978 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa3cd968 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa3cd738 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa3cd718 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0xa3cd6d8 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa3d0920 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0xa3d0910 <col:7, col:42>
    (CXXConstructExpr 0xa3d08e8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa3d08d8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa3d08c8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa3d0698 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa3d0678 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa3d0638 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0xa3d0a78 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0xa3d0a68 <col:7, col:38>
    (CXXConstructExpr 0xa3d0a40 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa3d0a30 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa3d0a20 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa3d09b0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa3d0990 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0xa3d0950 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa3d0bd0 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0xa3d0bc0 <col:7, col:44>
    (CXXConstructExpr 0xa3d0b98 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa3d0b88 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa3d0b78 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa3d0b08 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa3d0ae8 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa3d0aa8 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0xa3d0d68 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0xa3d0d58 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0xa3d0d38 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa3d0d10 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d0cd0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (CallExpr 0xa3d0c40 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d0c00 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0xa3d0cb0 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d0c70 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0xa3d1248 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0xa3d0f48 <line:671:7, line:673:24>
    0xa3d0d90 "const size_type __isize =
      (ImplicitCastExpr 0xa3d0f38 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0xa3d0f20 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0xa3d0ef0 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0xa3d0ee0 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0xa3d0e70 <col:2, col:48> 'const int':'const int' lvalue Var 0xa0f8fe0 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0xa3d0ec8 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa3d0eb8 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0xa3d0e9c <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0xa3d0f08 <col:23> 'int' 1)))")
  (DeclStmt 0xa3d1048 <line:674:7, col:66>
    0xa3d0f60 "const size_type __asize =
      (CallExpr 0xa3d1028 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d0ff0 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0xa3d0fd0 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0xa3d0f94 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0xa3d1238 <line:675:7, line:676:46>
    (ParenExpr 0xa3d1220 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0xa3d1200 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0xa3d1120 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0xa3d1110 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3d1058 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa3d0f60 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0xa3d10f8 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0xa3d10d8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa3d1070 <col:26> 'const size_type':'const unsigned int' lvalue Var 0xa3d0d90 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0xa3d10e8 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa3d10c0 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa3d10b0 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0xa3d1094 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0xa3d11c0 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0xa3d11a0 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3d1138 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa3d0f60 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0xa3d11b0 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0xa3d1188 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa3d1178 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa3d115c <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0xa3d11f0 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa3d11d8 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa3d0d90 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0xa3d1438 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0xa3d1428 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0xa3d1408 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa3d13e0 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d13a0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (CXXUnresolvedConstructExpr 0xa3d1310 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0xa3d12c0 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d1288 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d1278 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa3d12f8 <col:72> 'int' 0))
        (CallExpr 0xa3d1380 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d1340 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0xa3d15c8 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0xa3d15b8 <col:7, col:29>
    (CXXOperatorCallExpr 0xa3d1590 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d1530 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840 0xa3ab390)
      (CallExpr 0xa3d14a0 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d1460 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0xa3d1510 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d14d0 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0xa3d1928 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0xa3d1918 <line:691:7, line:692:58>
    (CXXConstructExpr 0xa3d18f0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa3d18e0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa3d18d0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa3d18b0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa3d18a0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3d1888 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa3b36f0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa3d1878 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0xa3d1858 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa3d1790 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3d1740 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                  (CXXDependentScopeMemberExpr 0xa3d1668 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3d1630 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0xa3d15f8 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0xa3d15e8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0xa3d1728 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0xa3d1708 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa3d169c <col:12> 'size_type':'unsigned int' lvalue ParmVar 0xa3bc7a0 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa3d1718 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa3d16f0 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa3d16e0 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0xa3d16c4 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0xa3d1840 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0xa3d1820 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3d17b4 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa3bc7a0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa3d1830 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa3d1808 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa3d17f8 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0xa3d17dc <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa3d1c40 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0xa3d1c30 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0xa3d1c10 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa3d1c00 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3d1be8 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa3b5b60 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa3d1bd8 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0xa3d1bb8 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa3d1af0 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa3d1aa0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
            (CXXDependentScopeMemberExpr 0xa3d19c8 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3d1990 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3d1958 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3d1948 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0xa3d1a88 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0xa3d1a68 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3d19fc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3bc8d0 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0xa3d1a78 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa3d1a50 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa3d1a40 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0xa3d1a24 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0xa3d1ba0 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0xa3d1b80 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa3d1b14 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0xa3bc8d0 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa3d1b90 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa3d1b68 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa3d1b58 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0xa3d1b3c <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa3d1e50 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0xa3d1e30 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d1d28 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d1cd8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50 0xa3ad250)
      (DeclRefExpr 0xa3d1c54 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3bca30 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa3d1cb8 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d1c80 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d1c70 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa3d1e00 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0xa3d1df0 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3d1dd4 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f599a0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa3d1e20 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa3d1dc0 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0xa3d1d84 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa3d1f50 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0xa3d1eb0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa3d1e78 <col:7> '<bound member function type>' ->_M_range_check 0xa3bcab0
      (CXXThisExpr 0xa3d1e68 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3d1e98 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa3bcb70 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa3d1f40 <col:28, col:46>
    (ArraySubscriptExpr 0xa3d1f28 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa3d1ef8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa3d1ee0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3d1ed0 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa3d1f0c <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa3bcb70 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa3d2050 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0xa3d1fb0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa3d1f78 <col:7> '<bound member function type>' ->_M_range_check 0xa3bcab0
      (CXXThisExpr 0xa3d1f68 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3d1f98 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa3bcc30 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa3d2040 <col:28, col:46>
    (ArraySubscriptExpr 0xa3d2028 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa3d1ff8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa3d1fe0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3d1fd0 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa3d200c <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa3bcc30 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0xa3d2100 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0xa3d20f0 <col:7, col:21>
    (UnaryOperator 0xa3d20d8 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa3d20b8 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d2078 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa3d21b0 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0xa3d21a0 <col:7, col:21>
    (UnaryOperator 0xa3d2188 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa3d2168 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d2128 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa3d22f8 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0xa3d22e8 <col:7, col:25>
    (UnaryOperator 0xa3d22d0 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa3d22b8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa3d2290 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa3d2250 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CallExpr 0xa3d2218 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa3d21d8 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa3d2238 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa3d2440 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0xa3d2430 <col:7, col:25>
    (UnaryOperator 0xa3d2418 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa3d2400 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa3d23d8 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa3d2398 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CallExpr 0xa3d2360 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa3d2320 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa3d2380 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0xa3d2458 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0xa3d2820 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0xa3d2800 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d2600 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d25a0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (CXXDependentScopeMemberExpr 0xa3d24e8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3d24b0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d2478 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa3d2468 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa3d2568 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3d2530 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d2520 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0xa3d2708 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa3d26d8 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa3d26c0 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa3d2670 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d2638 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d2628 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa3d26ec <col:38> '_Bool' lvalue ParmVar 0xa3bd0b0 '__x' '_Bool'))
    (CallExpr 0xa3d27d8 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0xa3d2730 <col:9> '<bound member function type>' ->_M_insert_aux 0xa3c0090
        (CXXThisExpr 0xa3d2720 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa3d27a0 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d2760 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa3d27bc <col:30> '_Bool' lvalue ParmVar 0xa3bd0b0 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa3d52e0 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0xa3d29a0 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa3d2858 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510 0xa3ad7f0)
    (CXXDependentScopeMemberExpr 0xa3d28e0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d28a8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d2898 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa3d2968 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d2930 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0xa3d2914 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bd1b0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa3d2b30 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0xa3d29e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510 0xa3ad7f0)
    (CXXDependentScopeMemberExpr 0xa3d2a70 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d2a38 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d2a28 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa3d2af8 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d2ac0 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa3d2aa4 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bd1b0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa3d2cc0 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa3d2b78 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510 0xa3ad7f0)
    (CXXDependentScopeMemberExpr 0xa3d2c00 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d2bc8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d2bb8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa3d2c88 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d2c50 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa3d2c34 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bd1b0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa3d52b8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3d51b8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0xa3d5228 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0xa3d51ec <col:11> '<dependent type>' lvalue))
    (CallExpr 0xa3d5298 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3d5260 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0xa3d5244 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa3bd1b0 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0xa3d5520 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0xa3d53c8 <line:773:7, col:23>
    0xa3d5310 "bool __tmp =
      (ImplicitCastExpr 0xa3d53b8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0xa3d5398 <col:20> '_Bool'
          (MemberExpr 0xa3d5378 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa3adef0
            (ImplicitCastExpr 0xa3d5368 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0xa3d5344 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa3bd2a0 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0xa3d5468 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa3d5458 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3d5420 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0xa3ae120 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0xa3d53d8 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa3bd2a0 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa3d5410 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0xa3d53f0 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa3bd2e0 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0xa3d54f8 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa3d54e8 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3d54d0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa3ae000 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0xa3d548c <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa3bd2e0 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa3d54c0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3d54a4 <col:13> '_Bool' lvalue Var 0xa3d5310 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0xa3c03c8 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa3c03b8 <col:51, col:56> '_Bool'))
) (CompoundStmt 0xa3d5c20 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0xa3d5678 <line:781:7, col:55>
    0xa3d5550 "const difference_type __n =
      (CXXOperatorCallExpr 0xa3d5650 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d5610 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (DeclRefExpr 0xa3d5584 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd3f0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa3d55f0 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d55b0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0xa3d5af0 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0xa3d5958 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa3d5820 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d57c0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
        (CXXDependentScopeMemberExpr 0xa3d5708 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d56d0 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d5698 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d5688 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa3d5788 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d5750 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa3d5740 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0xa3d5930 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d58d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840 0xa3ab390)
        (DeclRefExpr 0xa3d5844 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd3f0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa3d58b0 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d5870 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa3d5a50 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa3d5a20 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa3d5a08 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa3d59b8 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d5980 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d5970 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa3d5a34 <col:38> 'const _Bool' lvalue ParmVar 0xa3bd440 '__x' 'const _Bool &'))
    (CallExpr 0xa3d5ac8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0xa3d5a78 <col:9> '<bound member function type>' ->_M_insert_aux 0xa3c0090
        (CXXThisExpr 0xa3d5a68 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa3d5a98 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd3f0 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0xa3d5ab0 <col:35> 'const _Bool' lvalue ParmVar 0xa3bd440 '__x' 'const _Bool &')))
  (ReturnStmt 0xa3d5c10 <line:787:7, col:24>
    (CXXOperatorCallExpr 0xa3d5be8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d5b98 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
      (CallExpr 0xa3d5b60 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d5b20 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa3d5b7c <col:24> 'const difference_type':'const int' lvalue Var 0xa3d5550 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa3d5e80 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0xa3d5d70 <line:795:2, col:70>
    0xa3d5d40 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa3d5e50 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0xa3d5d90 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3d5dd0 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd5b0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa3d5de8 <col:33> '_InputIterator' lvalue ParmVar 0xa3bd5f0 '__first' '_InputIterator')
    (DeclRefExpr 0xa3d5e00 <col:42> '_InputIterator' lvalue ParmVar 0xa3bd630 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa3d5e38 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0xa3d5f38 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0xa3d5f10 <col:7, col:42> '<dependent type>'
    (MemberExpr 0xa3d5ea8 <col:7> '<bound member function type>' ->_M_fill_insert 0xa3bfa00
      (CXXThisExpr 0xa3d5e98 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3d5ec8 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd790 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa3d5ee0 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa3bd7d0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa3d5ef8 <col:39> 'const _Bool' lvalue ParmVar 0xa3bd820 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0xa3d5fe8 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0xa3d5fd0 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa3d5f98 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d5f60 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d5f50 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0xa3d6438 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0xa3d6320 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d6160 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d6100 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (CXXOperatorCallExpr 0xa3d6068 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa3d6058 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d6040 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa3d6030 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa3d5ffc <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd9e0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa3d6018 <col:24> 'int' 1))
      (CallExpr 0xa3d60e0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d60a0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa3d62f8 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d61a8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
      (CXXOperatorCallExpr 0xa3d6248 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa3d6238 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d6220 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa3d6210 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa3d61e0 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd9e0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa3d61f8 <col:32> 'int' 1))
      (CallExpr 0xa3d62c0 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d6280 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa3d62dc <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd9e0 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0xa3d63c0 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa3d6388 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d6350 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d6340 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0xa3d6428 <line:818:7, col:14>
    (CXXConstructExpr 0xa3d6400 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa3d63f0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa3d63d4 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bd9e0 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa3d66f0 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0xa3d6670 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d64e0 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0xa3d64d0 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3d64b8 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa3afba0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa3d64a8 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa3d6454 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bdaf0 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa3d6498 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa3d6488 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa3d646c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bdb30 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0xa3d6650 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0xa3d6518 <col:2> '<bound member function type>' ->_M_erase_at_end 0xa3c02e0
        (CXXThisExpr 0xa3d6508 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa3d6628 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d6550 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
        (DeclRefExpr 0xa3d6588 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bdb30 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa3d65f0 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d65b0 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa3d660c <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bdaf0 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0xa3d66e0 <line:826:7, col:14>
    (CXXConstructExpr 0xa3d66b8 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa3d66a8 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa3d668c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bdaf0 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0xa3c03e0 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0xa3d6b70 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0xa3d6b50 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d67c0 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d6770 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90 0xa3abb80)
      (DeclRefExpr 0xa3d6708 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3bdc40 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa3d6750 <col:24, col:29> '<dependent type>'
        (MemberExpr 0xa3d6730 <col:24> '<bound member function type>' ->size 0xa3bc5a0
          (CXXThisExpr 0xa3d6720 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa3d6958 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0xa3d67f8 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa3c02e0
        (CXXThisExpr 0xa3d67e8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0xa3d6930 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d68e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
        (CallExpr 0xa3d6868 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d6828 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0xa3d68c8 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa3d68b8 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d68a8 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa3d6890 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa3bdc40 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0xa3d6b28 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0xa3d6988 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0xa3d6a20 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d69e0 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa3d6ae8 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d6aa8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (DeclRefExpr 0xa3d6a3c <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa3bdc40 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa3d6a88 <col:36, col:41> '<dependent type>'
          (MemberExpr 0xa3d6a68 <col:36> '<bound member function type>' ->size 0xa3bc5a0
            (CXXThisExpr 0xa3d6a58 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa3d6b0c <col:44> '_Bool' lvalue ParmVar 0xa3bdc80 '__x' '_Bool'))))


        void flip() (CompoundStmt 0xa3d6ed8 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0xa3d6eb0 <line:847:7, line:849:18>
    (DeclStmt 0xa3d6c90 <line:847:12, col:57>
      0xa3d6ba0 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0xa3d6c58 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d6c20 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d6be8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d6bd8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d6d98 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d6d38 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3d6ca0 <col:5> '_Bit_type *' lvalue Var 0xa3d6ba0 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0xa3d6d00 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3d6cc8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d6cb8 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0xa3d6dd8 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0xa3d6dbc <col:47> '_Bit_type *' lvalue Var 0xa3d6ba0 '__p' '_Bit_type *'))
    (BinaryOperator 0xa3d6e98 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0xa3d6e18 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa3d6e08 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa3d6dec <col:10> '_Bit_type *' lvalue Var 0xa3d6ba0 '__p' '_Bit_type *')))
      (UnaryOperator 0xa3d6e80 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa3d6e70 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0xa3d6e58 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0xa3d6e48 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa3d6e2c <col:18> '_Bit_type *' lvalue Var 0xa3d6ba0 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0xa3d6fb0 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0xa3d6f90 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa3d6f00 <col:7> '<bound member function type>' ->_M_erase_at_end 0xa3c02e0
      (CXXThisExpr 0xa3d6ef0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa3d6f70 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa3d6f30 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0xa3d7aa0 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0xa3d74d0 <line:863:7, col:75>
    0xa3d6fe0 "_Bit_type *__q =
      (CallExpr 0xa3d7478 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0xa3d7468 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d7408 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0xa3d7340 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x9fce7d0 'copy')))
        (ImplicitCastExpr 0xa3d74a0 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3d7090 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0xa3af560
            (ImplicitCastExpr 0xa3d7080 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa3d7068 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa3bded0 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa3d74b0 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3d70d8 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0xa3af560
            (ImplicitCastExpr 0xa3d70c8 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa3d70b0 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa3bdf10 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa3d74c0 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa3d7120 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0xa3af560
            (ImplicitCastExpr 0xa3d7110 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa3d70f8 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bdf50 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0xa3d7a90 <line:864:7, line:865:26>
    (CXXConstructExpr 0xa3d7a68 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa3d7a58 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa3d7a48 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0xa3d7958 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa3d7948 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3d78e8 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0xa3d7820 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x9fce7d0 'copy')))
            (CXXConstructExpr 0xa3d79a0 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa3d7990 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0xa3d7980 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa3d75b8 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa3d7598 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa3d7560 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0xa3af560
                        (ImplicitCastExpr 0xa3d7550 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0xa3d7538 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa3bdf10 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0xa3d75a8 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa3d7580 <col:52> 'int' 0))))))
            (CXXConstructExpr 0xa3d79d8 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0xa3d79c8 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0xa3d75e8 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa3bdf10 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0xa3d7a20 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa3d7a10 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0xa3d7a00 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa3d7658 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa3d7638 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0xa3d7608 <col:19> '_Bit_type *' lvalue Var 0xa3d6fe0 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0xa3d7648 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa3d7620 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0xa3d8118 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0xa3d7b88 <line:871:7, col:46>
    0xa3d7ad0 "_Bit_type *__q =
      (CallExpr 0xa3d7b68 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d7b18 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d7b08 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0xa3d7b4c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa3be090 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0xa3d7df8 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3d7be0 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d7ba8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d7b98 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0xa3d7de0 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0xa3d7dc8 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0xa3d7db8 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa3d7c14 <col:42> '_Bit_type *' lvalue Var 0xa3d7ad0 '__q' '_Bit_type *'))
        (ParenExpr 0xa3d7da0 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0xa3d7d88 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0xa3d7d10 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0xa3d7cf8 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0xa3d7cb8 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa3d7c98 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3d7c2c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3be090 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa3d7ca8 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa3d7c80 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa3d7c70 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0xa3d7c54 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0xa3d7ce8 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa3d7cd0 <col:36> 'int' 1))))
            (ImplicitCastExpr 0xa3d7d78 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa3d7d60 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa3d7d50 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0xa3d7d34 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0xa3d7f18 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3d7e58 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d7e20 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d7e10 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0xa3d7ee8 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0xa3d7ec8 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0xa3d7e98 <col:41> '_Bit_type *' lvalue Var 0xa3d7ad0 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0xa3d7ed8 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa3d7eb0 <col:46> 'int' 0))))
  (BinaryOperator 0xa3d8100 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3d7f78 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d7f40 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d7f30 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0xa3d80d8 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d8088 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
      (CXXDependentScopeMemberExpr 0xa3d7ff8 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3d7fc0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d7fb0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0xa3d8070 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0xa3d8060 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0xa3d8050 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3d8038 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0xa3be090 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa3d8400 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0xa3d81a0 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0xa3d8148 <col:2> '<bound member function type>' ->_M_initialize 0xa3be0e0
      (CXXThisExpr 0xa3d8138 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0xa3d8188 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa3d8168 <col:39> '_Integer' lvalue ParmVar 0xa3be1b0 '__n' '_Integer')))
  (CallExpr 0xa3d83d8 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa3d81e8 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
    (CXXDependentScopeMemberExpr 0xa3d82a0 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d8268 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3d8230 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d8220 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa3d8320 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d82e8 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d82d8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa3d83b8 <col:38, col:49> 'int'
      (DeclRefExpr 0xa3d8354 <col:38> '_Integer' lvalue ParmVar 0xa3be1f0 '__x' '_Integer')
      (UnaryOperator 0xa3d8388 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0xa3d8370 <col:45> 'int' 0))
      (IntegerLiteral 0xa3d83a0 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa3d8548 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0xa3d8520 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0xa3d8428 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3d8468 <col:29> '_InputIterator' lvalue ParmVar 0xa3be3c0 '__first' '_InputIterator')
    (DeclRefExpr 0xa3d8480 <col:38> '_InputIterator' lvalue ParmVar 0xa3be400 '__last' '_InputIterator')
    (CallExpr 0xa3d8500 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d84b0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f983d0)
      (DeclRefExpr 0xa3d84e4 <col:33> '_InputIterator' lvalue ParmVar 0xa3be3c0 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa3d86f0 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0xa3d86c8 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d85f0 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d8590 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3d855c <col:9> '_InputIterator' lvalue ParmVar 0xa3be5d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3d8574 <col:20> '_InputIterator' lvalue ParmVar 0xa3be610 '__last' '_InputIterator'))
    (UnaryOperator 0xa3d8630 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa3d8614 <col:30> '_InputIterator' lvalue ParmVar 0xa3be5d0 '__first' '_InputIterator'))
    (CallExpr 0xa3d86a8 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0xa3d8658 <col:4> '<bound member function type>' ->push_back 0xa3bd130
        (CXXThisExpr 0xa3d8648 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0xa3d8690 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3d8678 <col:15> '_InputIterator' lvalue ParmVar 0xa3be5d0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa3d89a0 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0xa3d87f0 <line:913:2, col:54>
    0xa3d8710 "const size_type __n =
      (CallExpr 0xa3d87c8 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d8760 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
        (DeclRefExpr 0xa3d8794 <col:38> '_ForwardIterator' lvalue ParmVar 0xa3be820 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3d87ac <col:47> '_ForwardIterator' lvalue ParmVar 0xa3be860 '__last' '_ForwardIterator'))")
  (CallExpr 0xa3d8848 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0xa3d8810 <col:2> '<bound member function type>' ->_M_initialize 0xa3be0e0
      (CXXThisExpr 0xa3d8800 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3d8830 <col:16> 'const size_type':'const unsigned int' lvalue Var 0xa3d8710 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0xa3d8978 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa3d8890 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
    (DeclRefExpr 0xa3d88c8 <col:12> '_ForwardIterator' lvalue ParmVar 0xa3be820 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa3d88e0 <col:21> '_ForwardIterator' lvalue ParmVar 0xa3be860 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0xa3d8940 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3d8908 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa3d88f8 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa3d8a48 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0xa3d8a20 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa3d89d0 <col:9> '<bound member function type>' ->_M_fill_assign 0xa3beef0
      (CXXThisExpr 0xa3d89c0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3d89f0 <col:24> '_Integer' lvalue ParmVar 0xa3bea70 '__n' '_Integer')
    (DeclRefExpr 0xa3d8a08 <col:29> '_Integer' lvalue ParmVar 0xa3beab0 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa3d8b90 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0xa3d8b68 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0xa3d8a70 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3d8ab0 <col:23> '_InputIterator' lvalue ParmVar 0xa3bec80 '__first' '_InputIterator')
    (DeclRefExpr 0xa3d8ac8 <col:32> '_InputIterator' lvalue ParmVar 0xa3becc0 '__last' '_InputIterator')
    (CallExpr 0xa3d8b48 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d8af8 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f983d0)
      (DeclRefExpr 0xa3d8b2c <col:65> '_InputIterator' lvalue ParmVar 0xa3bec80 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0xa3d9498 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0xa3d9478 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d8c60 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d8c10 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
      (DeclRefExpr 0xa3d8ba4 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa3bee30 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa3d8bf0 <col:17, col:22> '<dependent type>'
        (MemberExpr 0xa3d8bd0 <col:17> '<bound member function type>' ->size 0xa3bc5a0
          (CXXThisExpr 0xa3d8bc0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa3d90a8 <line:935:2, line:939:2>
      (CallExpr 0xa3d8ea8 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d8ca8 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
        (CXXDependentScopeMemberExpr 0xa3d8d60 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d8d28 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d8cf0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d8ce0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa3d8de0 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d8da8 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa3d8d98 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa3d8e88 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa3d8e78 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3d8e14 <col:40> '_Bool' lvalue ParmVar 0xa3bee70 '__x' '_Bool'))
          (UnaryOperator 0xa3d8e48 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa3d8e30 <col:47> 'int' 0))
          (IntegerLiteral 0xa3d8e60 <col:51> 'int' 0)))
      (CallExpr 0xa3d9080 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d8ee0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa3d8f78 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d8f38 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa3d9040 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa3d9000 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (DeclRefExpr 0xa3d8f94 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0xa3bee30 '__n' 'size_t':'unsigned int')
          (CallExpr 0xa3d8fe0 <col:24, col:29> '<dependent type>'
            (MemberExpr 0xa3d8fc0 <col:24> '<bound member function type>' ->size 0xa3bc5a0
              (CXXThisExpr 0xa3d8fb0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0xa3d9064 <col:32> '_Bool' lvalue ParmVar 0xa3bee70 '__x' '_Bool')))
    (CompoundStmt 0xa3d9460 <line:941:2, line:945:2>
      (CallExpr 0xa3d91f0 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0xa3d90d0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa3c02e0
          (CXXThisExpr 0xa3d90c0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0xa3d91c8 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa3d9178 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CallExpr 0xa3d9140 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa3d9100 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa3d915c <col:30> 'size_t':'unsigned int' lvalue ParmVar 0xa3bee30 '__n' 'size_t':'unsigned int')))
      (CallExpr 0xa3d9438 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d9238 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
        (CXXDependentScopeMemberExpr 0xa3d92f0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d92b8 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3d9280 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d9270 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa3d9370 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3d9338 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa3d9328 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa3d9418 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa3d9408 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3d93a4 <col:40> '_Bool' lvalue ParmVar 0xa3bee70 '__x' '_Bool'))
          (UnaryOperator 0xa3d93d8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa3d93c0 <col:47> 'int' 0))
          (IntegerLiteral 0xa3d93f0 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa3d9b40 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0xa3d9568 <line:953:2, col:26>
    0xa3d94c0 "iterator __cur =
      (CallExpr 0xa3d9548 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d9508 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0xa3d98b8 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa3d9740 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa3d9608 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d95a8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
        (DeclRefExpr 0xa3d9578 <col:9> '_InputIterator' lvalue ParmVar 0xa3befc0 '__first' '_InputIterator')
        (DeclRefExpr 0xa3d9590 <col:20> '_InputIterator' lvalue ParmVar 0xa3bf000 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa3d9718 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d96b8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
        (DeclRefExpr 0xa3d962c <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3d94c0 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa3d9698 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d9658 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa3d97e8 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0xa3d9798 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa3d9788 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d9770 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa3b37f0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa3d9758 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3d94c0 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0xa3d97d0 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa3d97b8 <col:57> '_InputIterator' lvalue ParmVar 0xa3befc0 '__first' '_InputIterator')))
    (BinaryOperator 0xa3d98a0 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0xa3d9850 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa3d9840 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d9828 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa3b36f0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa3d9818 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa3d9800 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3d94c0 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0xa3d9888 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3d9870 <col:14> '_InputIterator' lvalue ParmVar 0xa3befc0 '__first' '_InputIterator'))))
  (IfStmt 0xa3d9b20 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d9970 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d9910 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840 0xa3ab390)
      (DeclRefExpr 0xa3d98dc <col:6> '_InputIterator' lvalue ParmVar 0xa3befc0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3d98f4 <col:17> '_InputIterator' lvalue ParmVar 0xa3bf000 '__last' '_InputIterator'))
    (CallExpr 0xa3d99e0 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0xa3d99a8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa3c02e0
        (CXXThisExpr 0xa3d9998 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa3d99c8 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3d94c0 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0xa3d9af8 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa3d9a10 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa3d9aa8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa3d9a68 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa3d9ac4 <col:18> '_InputIterator' lvalue ParmVar 0xa3befc0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3d9adc <col:27> '_InputIterator' lvalue ParmVar 0xa3bf000 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa3da280 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0xa3d9c50 <line:967:2, col:56>
    0xa3d9b70 "const size_type __len =
      (CallExpr 0xa3d9c28 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d9bc0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
        (DeclRefExpr 0xa3d9bf4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa3bf1f0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3d9c0c <col:49> '_ForwardIterator' lvalue ParmVar 0xa3bf230 '__last' '_ForwardIterator'))")
  (IfStmt 0xa3da260 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3d9d18 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d9cc8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90 0xa3abb80)
      (DeclRefExpr 0xa3d9c60 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa3d9b70 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa3d9ca8 <col:14, col:19> '<dependent type>'
        (MemberExpr 0xa3d9c88 <col:14> '<bound member function type>' ->size 0xa3bc5a0
          (CXXThisExpr 0xa3d9c78 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa3d9e88 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0xa3d9d50 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa3c02e0
        (CXXThisExpr 0xa3d9d40 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa3d9e60 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d9d88 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
        (DeclRefExpr 0xa3d9dc0 <col:30> '_ForwardIterator' lvalue ParmVar 0xa3bf1f0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3d9dd8 <col:39> '_ForwardIterator' lvalue ParmVar 0xa3bf230 '__last' '_ForwardIterator')
        (CallExpr 0xa3d9e40 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa3d9e00 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa3da240 <line:971:4, line:976:4>
      (DeclStmt 0xa3d9f00 <line:972:6, col:38>
        0xa3d9eb0 "_ForwardIterator __mid =
          (DeclRefExpr 0xa3d9ee4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa3bf1f0 '__first' '_ForwardIterator')")
      (CallExpr 0xa3d9fd8 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d9f38 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f080f0)
        (DeclRefExpr 0xa3d9f6c <col:19> '_ForwardIterator' lvalue Var 0xa3d9eb0 '__mid' '_ForwardIterator')
        (CallExpr 0xa3d9fb8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa3d9f98 <col:26> '<bound member function type>' ->size 0xa3bc5a0
            (CXXThisExpr 0xa3d9f88 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0xa3da0f8 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa3da020 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
        (DeclRefExpr 0xa3da058 <col:16> '_ForwardIterator' lvalue ParmVar 0xa3bf1f0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3da070 <col:25> '_ForwardIterator' lvalue Var 0xa3d9eb0 '__mid' '_ForwardIterator')
        (CallExpr 0xa3da0d8 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa3da098 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0xa3da218 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa3da130 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0xa3da1c8 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0xa3da188 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa3da1e4 <col:20> '_ForwardIterator' lvalue Var 0xa3d9eb0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa3da1fc <col:27> '_ForwardIterator' lvalue ParmVar 0xa3bf230 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa3da338 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0xa3da310 <col:9, col:39> '<dependent type>'
    (MemberExpr 0xa3da2a8 <col:9> '<bound member function type>' ->_M_fill_insert 0xa3bfa00
      (CXXThisExpr 0xa3da298 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa3da2c8 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bf420 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa3da2e0 <col:31> '_Integer' lvalue ParmVar 0xa3bf460 '__n' '_Integer')
    (DeclRefExpr 0xa3da2f8 <col:36> '_Integer' lvalue ParmVar 0xa3bf4a0 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa3da4a0 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0xa3da470 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0xa3da360 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa3da3a0 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bf6a0 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa3da3b8 <col:32> '_InputIterator' lvalue ParmVar 0xa3bf6e0 '__first' '_InputIterator')
    (DeclRefExpr 0xa3da3d0 <col:41> '_InputIterator' lvalue ParmVar 0xa3bf720 '__last' '_InputIterator')
    (CallExpr 0xa3da450 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa3da400 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f983d0)
      (DeclRefExpr 0xa3da434 <col:29> '_InputIterator' lvalue ParmVar 0xa3bf6e0 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa3da738 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0xa3da710 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3da548 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa3da4e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3da4b4 <col:9> '_InputIterator' lvalue ParmVar 0xa3bfb10 '__first' '_InputIterator')
      (DeclRefExpr 0xa3da4cc <col:20> '_InputIterator' lvalue ParmVar 0xa3bfb50 '__last' '_InputIterator'))
    (UnaryOperator 0xa3da588 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa3da56c <col:30> '_InputIterator' lvalue ParmVar 0xa3bfb10 '__first' '_InputIterator'))
    (CompoundStmt 0xa3da6f8 <line:1006:4, line:1009:4>
      (BinaryOperator 0xa3da680 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa3da59c <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bfad0 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa3da658 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa3da5c8 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa3da60c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bfad0 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0xa3da640 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa3da624 <col:29> '_InputIterator' lvalue ParmVar 0xa3bfb10 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0xa3da6d8 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa3da6c8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3da6b0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa3b37f0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa3da698 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3bfad0 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa3dae48 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0xa3da9a8 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3da8c0 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa3da870 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90 0xa3abb80)
      (CXXOperatorCallExpr 0xa3da830 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa3da7f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (CallExpr 0xa3da780 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa3da760 <col:11> '<bound member function type>' ->max_size 0xa3bc620
            (CXXThisExpr 0xa3da750 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa3da7d0 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa3da7b0 <col:24> '<bound member function type>' ->size 0xa3bc5a0
            (CXXThisExpr 0xa3da7a0 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa3da854 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0xa3c0100 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa3da978 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0xa3da968 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3da94c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f598d0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa3da998 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa3da938 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa3da91c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0xa3c0150 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa3dabb0 <line:1026:7, col:61>
    0xa3da9d0 "const size_type __len =
      (CXXOperatorCallExpr 0xa3dab88 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa3dab38 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
        (CallExpr 0xa3daa38 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa3daa18 <col:31> '<bound member function type>' ->size 0xa3bc5a0
            (CXXThisExpr 0xa3daa08 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa3dab10 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa3daa70 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc53e0 0x9fc5b50)
          (CallExpr 0xa3daad8 <col:49, col:54> '<dependent type>'
            (MemberExpr 0xa3daab8 <col:49> '<bound member function type>' ->size 0xa3bc5a0
              (CXXThisExpr 0xa3daaa8 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0xa3daaf4 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0xa3c0100 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa3dae38 <line:1027:7, col:68>
    (ConditionalOperator 0xa3dae18 <col:14, col:68> '<dependent type>'
      (ParenExpr 0xa3dad98 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0xa3dad80 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa3dac78 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa3dac28 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90 0xa3abb80)
            (DeclRefExpr 0xa3dabc0 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa3da9d0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa3dac08 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa3dabe8 <col:23> '<bound member function type>' ->size 0xa3bc5a0
                (CXXThisExpr 0xa3dabd8 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0xa3dad58 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa3dad08 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
            (DeclRefExpr 0xa3dac9c <col:33> 'const size_type':'const unsigned int' lvalue Var 0xa3da9d0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa3dace8 <col:41, col:50> '<dependent type>'
              (MemberExpr 0xa3dacc8 <col:41> '<bound member function type>' ->max_size 0xa3bc620
                (CXXThisExpr 0xa3dacb8 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0xa3dade0 <col:55, col:64> '<dependent type>'
        (MemberExpr 0xa3dadc0 <col:55> '<bound member function type>' ->max_size 0xa3bc620
          (CXXThisExpr 0xa3dadb0 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa3dadfc <col:68> 'const size_type':'const unsigned int' lvalue Var 0xa3da9d0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0xa3daf18 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0xa3daf00 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa3daeb0 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3dae78 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa3dae68 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0xa3daee4 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3c0240 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0xa3dc150 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa3db560 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3db438 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa3db3e8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
      (DeclRefExpr 0xa3db364 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3db280 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa3db3c8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3db390 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa3db380 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa3db530 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa3db520 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3db504 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f598d0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa3db550 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa3db4f0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa3db4c0 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa3dc130 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3db650 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa3db600 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90 0xa3abb80)
      (CallExpr 0xa3db5c8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3db590 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa3db580 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa3db5e4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa3db280 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa3dc100 <line:72:2, line:85:2>
      (DeclStmt 0xa3db708 <line:73:4, col:39>
        0xa3db680 "const size_type __old_size =
          (CallExpr 0xa3db6e8 <col:33, col:38> '<dependent type>'
            (MemberExpr 0xa3db6c8 <col:33> '<bound member function type>' ->size 0xa3984a0
              (CXXThisExpr 0xa3db6b8 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0xa3db918 <line:74:4, line:76:57>
        0xa3db720 "pointer __tmp =
          (CallExpr 0xa3db8f0 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa3db768 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa3db7a4 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa3db280 '__n' 'size_type':'unsigned int')
            (ParenExpr 0xa3db840 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3db808 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3db7d0 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3db7c0 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0xa3db8d8 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3db8a0 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3db868 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3db858 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0xa3dbaf0 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa3db958 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (CXXDependentScopeMemberExpr 0xa3db9e0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3db9a8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa3db998 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3dba60 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dba28 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dba18 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa3dbad0 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa3dba94 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa3dbd40 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa3dbb18 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa3dbba0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dbb68 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dbb58 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3dbd18 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa3dbcd8 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CXXDependentScopeMemberExpr 0xa3dbc20 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3dbbe8 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa3dbbd8 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa3dbca0 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3dbc68 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa3dbc58 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa3dbe00 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3dbdb0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dbd78 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dbd68 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3dbde4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3db720 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa3dbf40 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3dbe60 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dbe28 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dbe18 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3dbf18 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa3dbec8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (DeclRefExpr 0xa3dbe94 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3db720 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa3dbeac <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa3db680 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa3dc0e8 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3dbfa0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dbf68 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dbf58 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3dc0c0 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa3dc070 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CXXDependentScopeMemberExpr 0xa3dc020 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3dbfe8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa3dbfd8 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa3dc054 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa3db280 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0xa3dcfe0 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0xa3dc928 <line:111:7, col:49>
    0xa3dc800 "const size_type __n =
      (CXXOperatorCallExpr 0xa3dc900 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa3dc8c0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (DeclRefExpr 0xa3dc834 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3dc560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa3dc8a0 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0xa3dc860 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0xa3dce78 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0xa3dcbd0 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa3dca98 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa3dca38 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
        (CXXDependentScopeMemberExpr 0xa3dc980 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dc948 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dc938 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3dca00 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dc9c8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dc9b8 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa3dcba8 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa3dcb48 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840 0xa3ab390)
        (DeclRefExpr 0xa3dcabc <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3dc560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa3dcb28 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa3dcae8 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa3dcdc0 <line:114:2, line:117:2>
      (CallExpr 0xa3dcd00 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3dcc30 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dcbf8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dcbe8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3dccb0 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dcc78 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dcc68 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3dcce4 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0xa3dc5b0 '__x' 'const value_type &'))
      (UnaryOperator 0xa3dcda8 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa3dcd70 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dcd38 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dcd28 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0xa3dce60 <line:119:2, line:129:2>
      (CallExpr 0xa3dce38 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0xa3dcde8 <col:6> '<bound member function type>' ->_M_insert_aux 0xa39c030
          (CXXThisExpr 0xa3dcdd8 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa3dce08 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3dc560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0xa3dce20 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0xa3dc5b0 '__x' 'const value_type &'))))
  (ReturnStmt 0xa3dcfd0 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0xa3dcfb0 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0xa3dcf88 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa3dcf38 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
        (CXXDependentScopeMemberExpr 0xa3dcee8 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3dceb0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa3dcea0 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3dcf1c <col:48> 'const size_type':'const unsigned int' lvalue Var 0xa3dc800 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0xa3e1438 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0xa3e1238 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e1060 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e1000 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (CXXOperatorCallExpr 0xa3e0f68 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e0f18 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
        (DeclRefExpr 0xa3e0ee4 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e0cb0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa3e0f00 <col:24> 'int' 1))
      (CallExpr 0xa3e0fe0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa3e0fa0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa3e1210 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e10a8 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
      (CXXOperatorCallExpr 0xa3e1160 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e1110 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
        (DeclRefExpr 0xa3e10e0 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e0cb0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa3e10f8 <col:30> 'int' 1))
      (CallExpr 0xa3e11d8 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa3e1198 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa3e11f4 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e0cb0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0xa3e12d8 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa3e12a0 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3e1268 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa3e1258 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa3e13f0 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3e1338 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3e1300 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa3e12f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa3e13b8 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa3e1380 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa3e1370 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0xa3e1428 <line:142:7, col:14>
    (DeclRefExpr 0xa3e1410 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e0cb0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa3e2050 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0xa3e2008 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e1b38 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e1ad8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3e1aa8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1820 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0xa3e1ac0 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1860 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0xa3e1ff0 <line:151:2, line:155:2>
      (IfStmt 0xa3e1d90 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3e1c48 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e1be8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
          (DeclRefExpr 0xa3e1b5c <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1860 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa3e1bc8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e1b88 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0xa3e1d68 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e1c90 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
          (DeclRefExpr 0xa3e1cc8 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1860 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa3e1d30 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e1cf0 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa3e1d4c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1820 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0xa3e1fd0 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0xa3e1dc0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa39c280
          (CXXThisExpr 0xa3e1db0 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa3e1fa8 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e1f58 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CallExpr 0xa3e1e30 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e1df8 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa3e1de0 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1820 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0xa3e1f40 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa3e1f18 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e1ed8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
              (CallExpr 0xa3e1ea0 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e1e60 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa3e1ebc <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1860 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa3e2040 <line:156:7, col:14>
    (DeclRefExpr 0xa3e2024 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e1820 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa3e3f20 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0xa3e3ec8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e2840 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e27e0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (CXXOperatorCallExpr 0xa3e27b0 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e2770 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e19e0 0xa1e4260 0xa1e54d0)
        (DeclRefExpr 0xa3e2754 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0xa3e27d0 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0xa3e3ea8 <line:165:2, line:194:2>
      (DeclStmt 0xa3e2918 <line:166:4, col:39>
        0xa3e2870 "const size_type __xlen =
          (CallExpr 0xa3e28f8 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e28c0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa3e28a4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0xa3e3ce0 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3e29e0 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e2990 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
          (DeclRefExpr 0xa3e2928 <col:8> 'const size_type':'const unsigned int' lvalue Var 0xa3e2870 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0xa3e2970 <col:17, col:26> '<dependent type>'
            (MemberExpr 0xa3e2950 <col:17> '<bound member function type>' ->capacity 0xa3986f0
              (CXXThisExpr 0xa3e2940 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0xa3e3258 <line:168:6, line:178:6>
          (DeclStmt 0xa3e2bb8 <line:169:8, line:170:20>
            0xa3e2a10 "pointer __tmp =
              (CallExpr 0xa3e2b90 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e2a58 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0xa3e2a94 <col:45> 'const size_type':'const unsigned int' lvalue Var 0xa3e2870 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0xa3e2b00 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3e2ac8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3e2aac <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa3e2b70 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3e2b38 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3e2b1c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0xa3e2d88 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa3e2bf0 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
            (CXXDependentScopeMemberExpr 0xa3e2c78 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e2c40 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e2c30 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa3e2cf8 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e2cc0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e2cb0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa3e2d68 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa3e2d2c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa3e2fd8 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e2db0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa3e2e38 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e2e00 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e2df0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3e2fb0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e2f70 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
              (CXXDependentScopeMemberExpr 0xa3e2eb8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e2e80 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e2e70 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa3e2f38 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e2f00 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e2ef0 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa3e3098 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3e3048 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e3010 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e3000 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa3e307c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e2a10 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa3e3240 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3e30f8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e30c0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e30b0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3e3218 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e31c8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
              (CXXDependentScopeMemberExpr 0xa3e3178 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e3140 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e3130 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa3e31ac <col:67> 'const size_type':'const unsigned int' lvalue Var 0xa3e2870 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0xa3e3cc0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa3e3338 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa3e32e8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50 0xa3ad250)
            (CallExpr 0xa3e32b0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0xa3e3290 <col:13> '<bound member function type>' ->size 0xa3984a0
                (CXXThisExpr 0xa3e3280 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa3e32cc <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa3e2870 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0xa3e3678 <line:180:6, line:183:6>
            (CallExpr 0xa3e3650 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e3380 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
              (CallExpr 0xa3e3560 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e33d8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
                (CallExpr 0xa3e3460 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3e3428 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3e3410 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa3e34d0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3e3498 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3e347c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa3e3540 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3e3500 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0xa3e35d8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e3598 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0xa3e3630 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e35f4 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0xa3e3ca8 <line:185:6, line:192:6>
            (CallExpr 0xa3e3940 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e36b0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
              (CXXDependentScopeMemberExpr 0xa3e3738 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e3700 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3e36e8 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0xa3e3898 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e3848 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                (CXXDependentScopeMemberExpr 0xa3e37c0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e3788 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3e376c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa3e3828 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0xa3e3808 <col:63> '<bound member function type>' ->size 0xa3984a0
                    (CXXThisExpr 0xa3e37f8 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa3e3908 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e38d0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e38c0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0xa3e3c78 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e3990 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
              (CXXOperatorCallExpr 0xa3e3af0 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e3aa0 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                (CXXDependentScopeMemberExpr 0xa3e3a18 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e39e0 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3e39c8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa3e3a80 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0xa3e3a60 <col:59> '<bound member function type>' ->size 0xa3984a0
                    (CXXThisExpr 0xa3e3a50 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa3e3b68 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e3b30 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3e3b14 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa3e2510 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0xa3e3be8 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e3bb0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e3ba0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa3e3c58 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e3c1c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0xa3e3e90 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e3d48 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e3d10 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e3d00 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3e3e68 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e3e18 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CXXDependentScopeMemberExpr 0xa3e3dc8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e3d90 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e3d80 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa3e3dfc <col:55> 'const size_type':'const unsigned int' lvalue Var 0xa3e2870 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa3e3f10 <line:195:7, col:15>
    (UnaryOperator 0xa3e3ef8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3e3ee8 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0xa3e4dc8 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0xa3e4da8 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e4400 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e43b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
      (DeclRefExpr 0xa3e4348 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa3e41e0 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa3e4390 <col:17, col:26> '<dependent type>'
        (MemberExpr 0xa3e4370 <col:17> '<bound member function type>' ->capacity 0xa3986f0
          (CXXThisExpr 0xa3e4360 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa3e45c0 <line:204:2, line:207:2>
      (DeclStmt 0xa3e4518 <line:205:4, col:51>
        0xa3e4430 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0xa3e44f0 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0xa3e4464 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0xa3e41e0 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0xa3e447c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0xa3e4230 '__val' 'const value_type &')
            (CallExpr 0xa3e44d0 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0xa3e4494 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0xa3e45a0 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3e4540 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa3e4528 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0xa3e4430 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0xa3e4588 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3e4578 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0xa3e4d88 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa3e4690 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e4640 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
        (DeclRefExpr 0xa3e45d8 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa3e41e0 '__n' 'size_t':'unsigned int')
        (CallExpr 0xa3e4620 <col:22, col:27> '<dependent type>'
          (MemberExpr 0xa3e4600 <col:22> '<bound member function type>' ->size 0xa3984a0
            (CXXThisExpr 0xa3e45f0 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0xa3e4bf0 <line:209:2, line:215:2>
        (CallExpr 0xa3e4808 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e46d8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
          (CallExpr 0xa3e4760 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e4720 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa3e47d0 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e4790 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa3e47ec <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa3e4230 '__val' 'const value_type &'))
        (CallExpr 0xa3e4a50 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e4858 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38cd70 0xa38d6a0)
          (CXXDependentScopeMemberExpr 0xa3e48d8 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e48a0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4890 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa3e49b8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0xa3e4978 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
            (DeclRefExpr 0xa3e490c <col:6> 'size_t':'unsigned int' lvalue ParmVar 0xa3e41e0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa3e4958 <col:12, col:17> '<dependent type>'
              (MemberExpr 0xa3e4938 <col:12> '<bound member function type>' ->size 0xa3984a0
                (CXXThisExpr 0xa3e4928 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0xa3e49dc <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0xa3e4230 '__val' 'const value_type &')
          (CallExpr 0xa3e4a30 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e49f4 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0xa3e4bd0 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3e4ac8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e4a90 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4a80 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa3e4ba8 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa3e4b68 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
            (DeclRefExpr 0xa3e4afc <col:31> 'size_t':'unsigned int' lvalue ParmVar 0xa3e41e0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa3e4b48 <col:37, col:42> '<dependent type>'
              (MemberExpr 0xa3e4b28 <col:37> '<bound member function type>' ->size 0xa3984a0
                (CXXThisExpr 0xa3e4b18 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa3e4d68 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0xa3e4c20 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa39c280
          (CXXThisExpr 0xa3e4c10 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa3e4d40 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e4c58 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd87a0)
          (CXXDependentScopeMemberExpr 0xa3e4cd8 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e4ca0 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4c90 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa3e4d0c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa3e41e0 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0xa3e4d24 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0xa3e4230 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa3e5990 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0xa3e5418 <line:227:2, col:39>
    0xa3e5340 "pointer __cur =
      (ParenListExpr 0xa3e53f8 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0xa3e53c0 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e5388 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e5378 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0xa3e5708 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa3e5600 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa3e54b8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e5458 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
        (DeclRefExpr 0xa3e5428 <col:9> '_InputIterator' lvalue ParmVar 0xa3e50e0 '__first' '_InputIterator')
        (DeclRefExpr 0xa3e5440 <col:20> '_InputIterator' lvalue ParmVar 0xa3e5120 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa3e55d8 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e5578 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
        (DeclRefExpr 0xa3e54dc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e5340 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0xa3e5540 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e5508 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e54f8 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0xa3e5678 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0xa3e5630 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa3e5618 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e5340 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa3e5660 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa3e5644 <col:18> '_InputIterator' lvalue ParmVar 0xa3e50e0 '__first' '_InputIterator')))
    (BinaryOperator 0xa3e56f0 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0xa3e56a8 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3e5690 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e5340 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa3e56d8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3e56bc <col:14> '_InputIterator' lvalue ParmVar 0xa3e50e0 '__first' '_InputIterator'))))
  (IfStmt 0xa3e5970 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e57c0 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e5760 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ddc0 0x9fa79e0 0x9faa050 0x9ff2590 0xa014030 0xa0143c0 0xa10b220 0xa10bc90 0xa10c4d0 0xa10ca40 0xa235840 0xa3ab390)
      (DeclRefExpr 0xa3e572c <col:6> '_InputIterator' lvalue ParmVar 0xa3e50e0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3e5744 <col:17> '_InputIterator' lvalue ParmVar 0xa3e5120 '__last' '_InputIterator'))
    (CallExpr 0xa3e5830 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0xa3e57f8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa39c280
        (CXXThisExpr 0xa3e57e8 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa3e5818 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e5340 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0xa3e5948 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa3e5860 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa3e58f8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa3e58b8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa3e5914 <col:18> '_InputIterator' lvalue ParmVar 0xa3e50e0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3e592c <col:27> '_InputIterator' lvalue ParmVar 0xa3e5120 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa3e7150 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0xa3e5ff0 <line:244:2, col:56>
    0xa3e5f10 "const size_type __len =
      (CallExpr 0xa3e5fc8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e5f60 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
        (DeclRefExpr 0xa3e5f94 <col:40> '_ForwardIterator' lvalue ParmVar 0xa3e5cb0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa3e5fac <col:49> '_ForwardIterator' lvalue ParmVar 0xa3e5cf0 '__last' '_ForwardIterator'))")
  (IfStmt 0xa3e7130 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e60b8 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e6068 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
      (DeclRefExpr 0xa3e6000 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa3e5f10 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa3e6048 <col:14, col:23> '<dependent type>'
        (MemberExpr 0xa3e6028 <col:14> '<bound member function type>' ->capacity 0xa3986f0
          (CXXThisExpr 0xa3e6018 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa3e69c0 <line:247:4, line:257:4>
      (DeclStmt 0xa3e6208 <line:248:6, col:65>
        0xa3e60f0 "pointer __tmp =
          (ParenListExpr 0xa3e61e8 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa3e61c0 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0xa3e6138 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa3e6174 <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa3e5f10 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0xa3e618c <col:48> '_ForwardIterator' lvalue ParmVar 0xa3e5cb0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa3e61a4 <col:57> '_ForwardIterator' lvalue ParmVar 0xa3e5cf0 '__last' '_ForwardIterator')))")
      (CallExpr 0xa3e63d8 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e6240 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (CXXDependentScopeMemberExpr 0xa3e62c8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e6290 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e6280 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3e6348 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e6310 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e6300 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa3e63b8 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa3e637c <col:6> '<dependent type>' lvalue)))
      (CallExpr 0xa3e6628 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa3e6400 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa3e6488 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e6450 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e6440 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3e6600 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e65c0 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CXXDependentScopeMemberExpr 0xa3e6508 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e64d0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e64c0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa3e6588 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e6550 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e6540 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa3e66e8 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e6698 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e6660 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e6650 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3e66cc <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e60f0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa3e6890 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e6748 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e6710 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e6700 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3e6868 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e6818 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CXXDependentScopeMemberExpr 0xa3e67c8 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e6790 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e6780 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa3e67fc <col:57> 'const size_type':'const unsigned int' lvalue Var 0xa3e5f10 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa3e69a8 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e68f0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e68b8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e68a8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3e6970 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e6938 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e6928 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0xa3e7110 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa3e6aa0 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e6a50 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50 0xa3ad250)
        (CallExpr 0xa3e6a18 <col:11, col:16> '<dependent type>'
          (MemberExpr 0xa3e69f8 <col:11> '<bound member function type>' ->size 0xa3984a0
            (CXXThisExpr 0xa3e69e8 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3e6a34 <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa3e5f10 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0xa3e6c20 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0xa3e6ad8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa39c280
          (CXXThisExpr 0xa3e6ac8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa3e6bf8 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e6b10 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
          (DeclRefExpr 0xa3e6b48 <col:30> '_ForwardIterator' lvalue ParmVar 0xa3e5cb0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa3e6b60 <col:39> '_ForwardIterator' lvalue ParmVar 0xa3e5cf0 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa3e6bc0 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e6b88 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e6b78 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0xa3e70f0 <line:261:4, line:269:4>
        (DeclStmt 0xa3e6ca0 <line:262:6, col:38>
          0xa3e6c50 "_ForwardIterator __mid =
            (DeclRefExpr 0xa3e6c84 <col:31> '_ForwardIterator' lvalue ParmVar 0xa3e5cb0 '__first' '_ForwardIterator')")
        (CallExpr 0xa3e6d78 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e6cd8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f080f0)
          (DeclRefExpr 0xa3e6d0c <col:19> '_ForwardIterator' lvalue Var 0xa3e6c50 '__mid' '_ForwardIterator')
          (CallExpr 0xa3e6d58 <col:26, col:31> '<dependent type>'
            (MemberExpr 0xa3e6d38 <col:26> '<bound member function type>' ->size 0xa3984a0
              (CXXThisExpr 0xa3e6d28 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0xa3e6ea8 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e6dc0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
          (DeclRefExpr 0xa3e6df8 <col:16> '_ForwardIterator' lvalue ParmVar 0xa3e5cb0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa3e6e10 <col:25> '_ForwardIterator' lvalue Var 0xa3e6c50 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa3e6e70 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e6e38 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e6e28 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0xa3e70d8 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa3e6f18 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e6ee0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e6ed0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0xa3e70a8 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa3e6f68 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
            (DeclRefExpr 0xa3e6fa0 <col:36> '_ForwardIterator' lvalue Var 0xa3e6c50 '__mid' '_ForwardIterator')
            (DeclRefExpr 0xa3e6fb8 <col:43> '_ForwardIterator' lvalue ParmVar 0xa3e5cf0 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0xa3e7018 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e6fe0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e6fd0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa3e7088 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa3e704c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0xa3e9340 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa3e9320 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e76f8 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e7698 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (CXXDependentScopeMemberExpr 0xa3e75e0 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3e75a8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa3e7598 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa3e7660 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3e7628 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa3e7618 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa3e7de8 <line:305:2, line:321:2>
      (CallExpr 0xa3e7968 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3e7768 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e7730 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e7720 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3e77e8 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e77b0 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e77a0 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0xa3e7950 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0xa3e7938 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0xa3e7920 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0xa3e78f8 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e78b8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                (CXXDependentScopeMemberExpr 0xa3e7868 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e7830 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3e7820 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0xa3e78a0 <line:308:11> 'int' 1))))))
      (UnaryOperator 0xa3e7a10 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa3e79d8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e79a0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e7990 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0xa3e7a80 <line:311:4, col:22>
        0xa3e7a30 "_Tp __x_copy =
          (DeclRefExpr 0xa3e7a64 <col:19> 'const _Tp' lvalue ParmVar 0xa3e7480 '__x' 'const _Tp &')")
      (CallExpr 0xa3e7d60 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e7ab8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3560)
        (CallExpr 0xa3e7b40 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3e7b08 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0xa3e7aec <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e7410 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0xa3e7c38 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e7bf8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CXXDependentScopeMemberExpr 0xa3e7ba8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e7b70 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e7b60 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa3e7be0 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0xa3e7d38 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e7cf8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CXXDependentScopeMemberExpr 0xa3e7ca8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e7c70 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e7c60 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa3e7ce0 <col:33> 'int' 1)))
      (BinaryOperator 0xa3e7dd0 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0xa3e7da0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa3e7d88 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e7410 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0xa3e7db4 <col:18> '_Tp' lvalue Var 0xa3e7a30 '__x_copy' '_Tp')))
    (CompoundStmt 0xa3e92e0 <line:323:2, line:372:2>
      (DeclStmt 0xa3e7f30 <line:324:4, line:325:57>
        0xa3e7e20 "const size_type __len =
          (CallExpr 0xa3e7f08 <col:6, col:56> '<dependent type>'
            (MemberExpr 0xa3e7e68 <col:6> '<bound member function type>' ->_M_check_len 0xa39c170
              (CXXThisExpr 0xa3e7e58 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0xa3e7eb8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa3e7ea8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa3e7e90 <col:29> 'int' 1)))
            (StringLiteral 0xa3e7ed0 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0xa3e8078 <line:326:4, col:57>
        0xa3e7f50 "const size_type __elems_before =
          (CXXOperatorCallExpr 0xa3e8050 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa3e8010 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
            (DeclRefExpr 0xa3e7f84 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e7410 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0xa3e7ff0 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0xa3e7fb0 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0xa3e8168 <line:327:4, col:49>
        0xa3e8090 "pointer __new_start =
          (ParenListExpr 0xa3e8148 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa3e8128 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3e80d8 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e80c8 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0xa3e810c <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa3e7e20 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa3e81f0 <line:328:4, col:37>
        0xa3e8180 "pointer __new_finish =
          (ParenListExpr 0xa3e81d0 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0xa3e81b4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0xa3e8838 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3e8200 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3e8810 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0xa3e8350 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e8258 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3e8220 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e8210 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3e8310 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e82c0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
              (DeclRefExpr 0xa3e828c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa3e82a4 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa3e7f50 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0xa3e8334 <line:339:32> 'const _Tp' lvalue ParmVar 0xa3e7480 '__x' 'const _Tp &'))
          (BinaryOperator 0xa3e83a8 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0xa3e8374 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0xa3e8390 <col:23> 'int' 0))
          (BinaryOperator 0xa3e85b8 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0xa3e83c0 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa3e8588 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e83f0 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
              (CXXDependentScopeMemberExpr 0xa3e8470 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e8438 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e8428 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa3e84f8 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3e84c0 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3e84a4 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e7410 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0xa3e8514 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa3e8568 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e852c <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0xa3e85e8 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa3e85d0 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa3e87f8 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0xa3e85fc <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa3e87c8 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e8630 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
              (CallExpr 0xa3e86b8 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3e8680 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3e8664 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e7410 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0xa3e8720 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e86e8 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e86d8 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa3e8754 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa3e87a8 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e876c <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa3e8bf0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3e8858 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3e8bd0 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa3e8b10 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa3e8880 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0xa3e8868 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0xa3e89c0 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3e88e0 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e88a8 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e8898 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa3e8998 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e8948 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                (DeclRefExpr 0xa3e8914 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa3e892c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa3e7f50 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0xa3e8ae8 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e8a18 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
              (DeclRefExpr 0xa3e8a58 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa3e8a70 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa3e8ac8 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0xa3e8a88 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0xa3e8b98 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0xa3e8b2c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0xa3e8b68 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0xa3e8b80 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa3e7e20 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0xa3e8bc0 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa3e8dc8 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e8c30 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
        (CXXDependentScopeMemberExpr 0xa3e8cb8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e8c80 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e8c70 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa3e8d38 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e8d00 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e8cf0 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa3e8da8 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa3e8d6c <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa3e9018 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa3e8df0 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa3e8e78 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e8e40 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e8e30 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3e8ff0 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e8fb0 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
          (CXXDependentScopeMemberExpr 0xa3e8ef8 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e8ec0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e8eb0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa3e8f78 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3e8f40 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e8f30 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa3e90d8 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e9088 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e9050 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e9040 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3e90bc <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa3e9188 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e9138 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e9100 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e90f0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa3e916c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8180 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa3e92c8 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3e91e8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3e91b0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e91a0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa3e92a0 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e9250 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (DeclRefExpr 0xa3e921c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e8090 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa3e9234 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa3e7e20 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa3ec288 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0xa3ec268 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0xa3e97e0 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0xa3e97c0 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa3e978c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa3e97d0 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa3e97a8 <col:18> 'int' 0)))
    (CompoundStmt 0xa3ec250 <line:381:2, line:463:2>
      (IfStmt 0xa3ec230 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0xa3e99b0 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa3e9968 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa3e9940 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa3e9900 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
              (CXXDependentScopeMemberExpr 0xa3e9848 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e9810 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e9800 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa3e98c8 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3e9890 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3e9880 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa3e99a0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3e9984 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0xa3eab58 <line:384:6, line:413:6>
          (DeclStmt 0xa3e9a20 <line:385:8, col:33>
            0xa3e99d0 "value_type __x_copy =
              (DeclRefExpr 0xa3e9a04 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa3e9690 '__x' 'const value_type &')")
          (DeclStmt 0xa3e9b68 <line:386:8, col:58>
            0xa3e9a40 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa3e9b40 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e9b00 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                (CallExpr 0xa3e9ac8 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3e9a88 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa3e9ae4 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa3e9c58 <line:387:8, col:53>
            0xa3e9b80 "pointer __old_finish =
              (ParenListExpr 0xa3e9c38 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa3e9c00 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e9bc8 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3e9bb8 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa3eab38 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0xa3e9cb8 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0xa3e9c98 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3e9c68 <col:12> 'const size_type':'const unsigned int' lvalue Var 0xa3e9a40 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa3e9ca8 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3e9c80 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0xa3ea428 <line:389:3, line:399:3>
              (CallExpr 0xa3e9f88 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa3e9cf8 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                (CXXOperatorCallExpr 0xa3e9e08 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3e9dc8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                  (CXXDependentScopeMemberExpr 0xa3e9d78 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3e9d40 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3e9d30 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa3e9dac <col:59> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0xa3e9e78 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e9e40 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3e9e30 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa3e9ef8 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e9ec0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3e9eb0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa3e9f68 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3e9f2c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa3ea050 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ea000 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3e9fc8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3e9fb8 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa3ea034 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
              (CallExpr 0xa3ea1f0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ea098 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3560)
                (CallExpr 0xa3ea120 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ea0e8 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3ea0cc <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa3ea1b0 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3ea170 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                  (DeclRefExpr 0xa3ea13c <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e9b80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa3ea154 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa3ea1d4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e9b80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa3ea400 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ea240 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
                (CallExpr 0xa3ea2c8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ea290 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3ea278 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa3ea3c0 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3ea370 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                  (CallExpr 0xa3ea338 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3ea300 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3ea2e4 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa3ea354 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa3ea3e4 <line:398:8> 'value_type':'_Tp' lvalue Var 0xa3e99d0 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0xa3eab10 <line:401:3, line:412:3>
              (CallExpr 0xa3ea608 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ea470 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38cd70 0xa38d6a0)
                (CXXDependentScopeMemberExpr 0xa3ea4f0 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ea4b8 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ea4a8 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa3ea578 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa3ea558 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3ea524 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa3ea568 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3ea53c <col:13> 'const size_type':'const unsigned int' lvalue Var 0xa3e9a40 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0xa3ea590 <line:404:7> 'value_type':'_Tp' lvalue Var 0xa3e99d0 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0xa3ea5e8 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3ea5a8 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa3ea720 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ea680 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ea648 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ea638 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa3ea708 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa3ea6e8 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3ea6b4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa3ea6f8 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3ea6cc <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa3e9a40 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa3ea900 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ea768 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                (CallExpr 0xa3ea7f0 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ea7b8 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3ea79c <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa3ea80c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e9b80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa3ea870 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ea838 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ea828 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa3ea8e0 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3ea8a4 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa3ea9c8 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ea978 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ea940 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ea930 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa3ea9ac <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa3e9a40 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa3eaae8 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa3eaa10 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd5ca0 0xa3b7cc0)
                (CallExpr 0xa3eaa98 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3eaa60 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3eaa48 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa3eaab4 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3e9b80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa3eaacc <col:48> 'value_type':'_Tp' lvalue Var 0xa3e99d0 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0xa3ec1f0 <line:415:6, line:462:6>
          (DeclStmt 0xa3eac60 <line:416:8, line:417:46>
            0xa3eab80 "const size_type __len =
              (CallExpr 0xa3eac38 <col:3, col:45> '<dependent type>'
                (MemberExpr 0xa3eabc8 <col:3> '<bound member function type>' ->_M_check_len 0xa39c170
                  (CXXThisExpr 0xa3eabb8 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa3eabe8 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa3eac00 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0xa3eada8 <line:418:8, col:61>
            0xa3eac80 "const size_type __elems_before =
              (CXXOperatorCallExpr 0xa3ead80 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ead40 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                (DeclRefExpr 0xa3eacb4 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0xa3ead20 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3eace0 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0xa3eae98 <line:419:8, col:53>
            0xa3eadc0 "pointer __new_start =
              (ParenListExpr 0xa3eae78 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa3eae58 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3eae08 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3eadf8 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa3eae3c <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa3eab80 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa3eaf20 <line:420:8, col:41>
            0xa3eaeb0 "pointer __new_finish =
              (ParenListExpr 0xa3eaf00 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa3eaee4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa3eb5e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa3eaf30 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa3eb5b8 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0xa3eb0d0 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa3eaf68 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38cd70 0xa38d6a0)
                (CXXOperatorCallExpr 0xa3eb020 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3eafd0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                  (DeclRefExpr 0xa3eafa0 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa3eafb8 <col:49> 'const size_type':'const unsigned int' lvalue Var 0xa3eac80 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa3eb044 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0xa3eb05c <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0xa3e9690 '__x' 'const value_type &')
                (CallExpr 0xa3eb0b0 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3eb074 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0xa3eb130 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0xa3eb0fc <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0xa3eb118 <col:20> 'int' 0))
              (BinaryOperator 0xa3eb340 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0xa3eb148 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa3eb310 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3eb178 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                  (CXXDependentScopeMemberExpr 0xa3eb1f8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3eb1c0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3eb1b0 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa3eb280 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3eb248 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3eb22c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa3eb29c <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa3eb2f0 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3eb2b4 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0xa3eb388 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa3eb358 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa3eb370 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0xa3eb5a0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0xa3eb3a8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa3eb570 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3eb3d8 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                  (CallExpr 0xa3eb460 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3eb428 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3eb40c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3e9600 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa3eb4c8 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3eb490 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3eb480 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa3eb4fc <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa3eb550 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3eb514 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa3ebb00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa3eb600 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa3ebae0 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0xa3eba20 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0xa3eb628 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa3eb610 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0xa3eb8d8 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3eb660 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
                  (CXXOperatorCallExpr 0xa3eb720 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3eb6d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                    (DeclRefExpr 0xa3eb6a0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0xa3eb6b8 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa3eac80 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0xa3eb858 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3eb808 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                    (CXXOperatorCallExpr 0xa3eb7c8 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0xa3eb778 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
                      (DeclRefExpr 0xa3eb744 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0xa3eb75c <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa3eac80 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0xa3eb7ec <col:38> 'size_type':'unsigned int' lvalue ParmVar 0xa3e9640 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0xa3eb8b8 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3eb87c <col:7> '<dependent type>' lvalue)))
                (CallExpr 0xa3eb9f8 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3eb928 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
                  (DeclRefExpr 0xa3eb968 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa3eb980 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa3eb9d8 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3eb998 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0xa3ebaa8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa3eba3c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3eba78 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa3eba90 <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa3eab80 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa3ebad0 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0xa3ebcd8 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa3ebb40 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
            (CXXDependentScopeMemberExpr 0xa3ebbc8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ebb90 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ebb80 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa3ebc48 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ebc10 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ebc00 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa3ebcb8 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa3ebc7c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa3ebf28 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa3ebd00 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa3ebd88 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ebd50 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ebd40 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3ebf00 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa3ebec0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
              (CXXDependentScopeMemberExpr 0xa3ebe08 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3ebdd0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ebdc0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa3ebe88 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3ebe50 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ebe40 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa3ebfe8 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3ebf98 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ebf60 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ebf50 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa3ebfcc <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa3ec098 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3ec048 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ec010 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ec000 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa3ec07c <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eaeb0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa3ec1d8 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3ec0f8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ec0c0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ec0b0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3ec1b0 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0xa3ec160 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
              (DeclRefExpr 0xa3ec12c <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3eadc0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa3ec144 <col:56> 'const size_type':'const unsigned int' lvalue Var 0xa3eab80 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa3eca60 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0xa3eca38 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3ec8a0 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ec840 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3ec80c <col:9> '_InputIterator' lvalue ParmVar 0xa3ec5e0 '__first' '_InputIterator')
      (DeclRefExpr 0xa3ec824 <col:20> '_InputIterator' lvalue ParmVar 0xa3ec620 '__last' '_InputIterator'))
    (UnaryOperator 0xa3ec8e0 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa3ec8c4 <col:30> '_InputIterator' lvalue ParmVar 0xa3ec5e0 '__first' '_InputIterator'))
    (CompoundStmt 0xa3eca20 <line:527:4, line:530:4>
      (BinaryOperator 0xa3ec9d8 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa3ec8f4 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ec5a0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa3ec9b0 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa3ec920 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa3ec964 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ec5a0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0xa3ec998 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa3ec97c <col:29> '_InputIterator' lvalue ParmVar 0xa3ec5e0 '__first' '_InputIterator'))))
      (UnaryOperator 0xa3eca08 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa3ec9f0 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ec5a0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa3ef5a0 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0xa3ef580 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3ed080 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ed020 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3ecfec <col:6> '_ForwardIterator' lvalue ParmVar 0xa3ecdc0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa3ed004 <col:17> '_ForwardIterator' lvalue ParmVar 0xa3ece00 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa3ef568 <line:541:4, line:614:4>
      (DeclStmt 0xa3ed190 <line:542:6, col:58>
        0xa3ed0b0 "const size_type __n =
          (CallExpr 0xa3ed168 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa3ed100 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
            (DeclRefExpr 0xa3ed134 <col:42> '_ForwardIterator' lvalue ParmVar 0xa3ecdc0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa3ed14c <col:51> '_ForwardIterator' lvalue ParmVar 0xa3ece00 '__last' '_ForwardIterator'))")
      (IfStmt 0xa3ef548 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0xa3ed358 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa3ed310 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa3ed2e8 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0xa3ed2a8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
              (CXXDependentScopeMemberExpr 0xa3ed1f0 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3ed1b8 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ed1a8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa3ed270 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3ed238 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ed228 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa3ed348 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3ed32c <col:36> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0xa3ee3c8 <line:545:8, line:574:8>
          (DeclStmt 0xa3ed4a8 <line:546:3, col:53>
            0xa3ed380 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa3ed480 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ed440 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                (CallExpr 0xa3ed408 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3ed3c8 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa3ed424 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa3ed598 <line:547:3, col:48>
            0xa3ed4c0 "pointer __old_finish =
              (ParenListExpr 0xa3ed578 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa3ed540 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ed508 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ed4f8 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa3ee3a8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0xa3ed5f8 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0xa3ed5d8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3ed5a8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0xa3ed380 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa3ed5e8 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3ed5c0 <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0xa3edc28 <line:549:5, line:558:5>
              (CallExpr 0xa3ed8c8 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ed638 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                (CXXOperatorCallExpr 0xa3ed748 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3ed708 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                  (CXXDependentScopeMemberExpr 0xa3ed6b8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3ed680 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3ed670 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa3ed6ec <col:61> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0xa3ed7b8 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ed780 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ed770 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa3ed838 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ed800 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ed7f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa3ed8a8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3ed86c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa3ed990 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ed940 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ed908 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ed8f8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa3ed974 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0xa3edb30 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ed9d8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3560)
                (CallExpr 0xa3eda60 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3eda28 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3eda0c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa3edaf0 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3edab0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
                  (DeclRefExpr 0xa3eda7c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ed4c0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa3eda94 <col:25> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa3edb14 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ed4c0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa3edc00 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa3edb80 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
                (DeclRefExpr 0xa3edbb8 <col:17> '_ForwardIterator' lvalue ParmVar 0xa3ecdc0 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa3edbd0 <col:26> '_ForwardIterator' lvalue ParmVar 0xa3ece00 '__last' '_ForwardIterator')
                (DeclRefExpr 0xa3edbe8 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0xa3ee378 <line:560:5, line:573:5>
              (DeclStmt 0xa3edca0 <line:561:7, col:39>
                0xa3edc50 "_ForwardIterator __mid =
                  (DeclRefExpr 0xa3edc84 <col:32> '_ForwardIterator' lvalue ParmVar 0xa3ecdc0 '__first' '_ForwardIterator')")
              (CallExpr 0xa3edd40 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0xa3edcd8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f080f0)
                (DeclRefExpr 0xa3edd0c <col:20> '_ForwardIterator' lvalue Var 0xa3edc50 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa3edd24 <col:27> 'const size_type':'const unsigned int' lvalue Var 0xa3ed380 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa3edec8 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa3edd88 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
                (DeclRefExpr 0xa3eddc0 <col:35> '_ForwardIterator' lvalue Var 0xa3edc50 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa3eddd8 <col:42> '_ForwardIterator' lvalue ParmVar 0xa3ece00 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0xa3ede38 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ede00 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3eddf0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa3edea8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3ede6c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa3edfe0 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3edf40 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3edf08 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3edef8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa3edfc8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa3edfa8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3edf74 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0xa3edfb8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3edf8c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa3ed380 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa3ee1c0 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ee028 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                (CallExpr 0xa3ee0b0 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ee078 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3ee05c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa3ee0cc <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ed4c0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa3ee130 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ee0f8 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ee0e8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa3ee1a0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3ee164 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa3ee288 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ee238 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3ee200 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ee1f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa3ee26c <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa3ed380 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa3ee350 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ee2d0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
                (DeclRefExpr 0xa3ee308 <col:17> '_ForwardIterator' lvalue ParmVar 0xa3ecdc0 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa3ee320 <col:26> '_ForwardIterator' lvalue Var 0xa3edc50 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa3ee338 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0xa3ef510 <line:576:8, line:613:8>
          (DeclStmt 0xa3ee4d0 <line:577:3, line:578:49>
            0xa3ee3f0 "const size_type __len =
              (CallExpr 0xa3ee4a8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0xa3ee438 <col:5> '<bound member function type>' ->_M_check_len 0xa39c170
                  (CXXThisExpr 0xa3ee428 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa3ee458 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa3ed0b0 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0xa3ee470 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0xa3ee5c8 <line:579:3, col:48>
            0xa3ee4f0 "pointer __new_start =
              (ParenListExpr 0xa3ee5a8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa3ee588 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ee538 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ee528 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa3ee56c <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa3ee3f0 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa3ee650 <line:580:3, col:36>
            0xa3ee5e0 "pointer __new_finish =
              (ParenListExpr 0xa3ee630 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa3ee614 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee4f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa3eec08 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa3ee660 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa3eebe8 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0xa3ee868 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0xa3ee670 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa3ee838 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3ee6a0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                  (CXXDependentScopeMemberExpr 0xa3ee720 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3ee6e8 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3ee6d8 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa3ee7a8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3ee770 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3ee754 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa3ee7c4 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee4f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa3ee818 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3ee7dc <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa3ee9c0 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0xa3ee880 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa3ee990 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3ee8b0 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa3846d0 0xa384fd0)
                  (DeclRefExpr 0xa3ee8e8 <col:37> '_ForwardIterator' lvalue ParmVar 0xa3ecdc0 '__first' '_ForwardIterator')
                  (DeclRefExpr 0xa3ee900 <col:46> '_ForwardIterator' lvalue ParmVar 0xa3ece00 '__last' '_ForwardIterator')
                  (DeclRefExpr 0xa3ee918 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa3ee970 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3ee930 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa3eebd0 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0xa3ee9d8 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa3eeba0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3eea08 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa38bb80)
                  (CallExpr 0xa3eea90 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3eea58 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3eea3c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa3ecd80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa3eeaf8 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa3eeac0 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3eeab0 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa3eeb2c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa3eeb80 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa3eeb44 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa3eee20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa3eec28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa3eee00 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0xa3eed30 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa3eec60 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
                (DeclRefExpr 0xa3eeca0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee4f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa3eecb8 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa3eed10 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3eecd0 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0xa3eedc8 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0xa3eed58 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3eed94 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee4f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa3eedac <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa3ee3f0 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa3eedf0 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0xa3eeff8 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa3eee60 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa37e780 0xa37f440 0xa37fae0 0xa380090)
            (CXXDependentScopeMemberExpr 0xa3eeee8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3eeeb0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa3eeea0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa3eef68 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3eef30 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa3eef20 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa3eefd8 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0xa3eef9c <col:10> '<dependent type>' lvalue)))
          (CallExpr 0xa3ef248 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0xa3ef020 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa3ef0a8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ef070 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ef060 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3ef220 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa3ef1e0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
              (CXXDependentScopeMemberExpr 0xa3ef128 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3ef0f0 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ef0e0 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa3ef1a8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3ef170 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ef160 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa3ef308 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3ef2b8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ef280 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ef270 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa3ef2ec <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee4f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa3ef3b8 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3ef368 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ef330 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ef320 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa3ef39c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee5e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa3ef4f8 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3ef418 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3ef3e0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3ef3d0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3ef4d0 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa3ef480 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
              (DeclRefExpr 0xa3ef44c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa3ee4f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa3ef464 <col:51> 'const size_type':'const unsigned int' lvalue Var 0xa3ee3f0 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0xa3f0340 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0xa3efac0 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3ef9c8 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ef978 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8f1d0 0x9fa8740 0x9fab0f0 0xa10f240 0xa10f770 0xa10fca0 0xa3ac7c0)
      (DeclRefExpr 0xa3ef8f4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3ef810 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa3ef958 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3ef920 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa3ef910 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa3efa90 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0xa3efa80 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3efa64 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9f598d0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa3efab0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa3efa50 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa3efa24 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa3f0320 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3efbb0 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa3efb60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8e460 0x9fa7e80 0x9faa550 0xa10e130 0xa10e660 0xa10eb90 0xa3abb80)
      (CallExpr 0xa3efb28 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3efaf0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa3efae0 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa3efb44 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa3ef810 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa3f02f8 <line:628:2, line:636:2>
      (DeclStmt 0xa3efca8 <line:629:4, col:43>
        0xa3efbf0 "_Bit_type *__q =
          (CallExpr 0xa3efc88 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3efc38 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0xa3efc28 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa3efc6c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0xa3ef810 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0xa3efef8 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3efd00 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3efcc8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3efcb8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa3efed0 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0xa3efd48 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0xa3be010
            (CXXThisExpr 0xa3efd38 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0xa3efdb8 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0xa3efd78 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0xa3efe28 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0xa3efde8 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0xa3efea0 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0xa3efe80 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa3efe50 <col:20> '_Bit_type *' lvalue Var 0xa3efbf0 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0xa3efe90 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa3efe68 <col:25> 'int' 0)))))
      (CallExpr 0xa3eff58 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3eff20 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa3eff10 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa3f0080 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3effc0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3eff88 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3eff78 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa3f0050 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa3f0030 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa3f0000 <col:38> '_Bit_type *' lvalue Var 0xa3efbf0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa3f0040 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa3f0018 <col:43> 'int' 0))))
      (BinaryOperator 0xa3f02e0 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f00e0 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f00a8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f0098 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa3f02c8 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0xa3f02b0 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa3f02a0 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa3f0114 <col:39> '_Bit_type *' lvalue Var 0xa3efbf0 '__q' '_Bit_type *'))
            (BinaryOperator 0xa3f0288 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0xa3f0210 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0xa3f01f8 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0xa3f01b8 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa3f0198 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa3f012c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0xa3ef810 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa3f01a8 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa3f0180 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa3f0170 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0xa3f0154 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0xa3f01e8 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa3f01d0 <col:71> 'int' 1))))
              (ImplicitCastExpr 0xa3f0278 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa3f0260 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa3f0250 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa3f0234 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0xa3f1ec8 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0xa3f07a8 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0xa3f0780 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0xa3f0760 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa3f072c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa3f0770 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa3f0748 <col:18> 'int' 0)))
    (ReturnStmt 0xa3f0798 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0xa3f1ea8 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3f0938 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0xa3f08e8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50 0xa3ad250)
      (CXXOperatorCallExpr 0xa3f08a8 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f0868 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
        (CallExpr 0xa3f07f8 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa3f07d8 <col:11> '<bound member function type>' ->capacity 0xa3bc6a0
            (CXXThisExpr 0xa3f07c8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa3f0848 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa3f0828 <col:24> '<bound member function type>' ->size 0xa3bc5a0
            (CXXThisExpr 0xa3f0818 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa3f08cc <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa3f11d8 <line:647:2, line:652:2>
      (CallExpr 0xa3f0bc0 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f0980 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3560)
        (DeclRefExpr 0xa3f09b4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f05b0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa3f0a50 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa3f0a10 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa3f0b98 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f0b48 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CXXDependentScopeMemberExpr 0xa3f0ab8 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3f0a80 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f0a70 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0xa3f0b30 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0xa3f0b20 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0xa3f0b10 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3f0af8 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0xa3f1028 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0xa3f1018 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3f0fd8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa3b7cc0 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa3f1060 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa3f1050 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa3f0c48 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f05b0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa3f10a8 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa3f1098 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa3f1088 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa3f0d08 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa3f0cf8 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa3f0ce0 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa3f0cd0 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa3f0c60 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f05b0 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa3f0cb8 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa3f0ca8 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa3f0c98 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa3f0c80 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa3f10d0 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa3f0d2c <col:61> '_Bool' lvalue ParmVar 0xa3f0630 '__x' '_Bool')))
      (CompoundAssignOperator 0xa3f11b8 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f1128 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f10f0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f10e0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0xa3f11a0 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa3f1190 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa3f1180 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa3f1168 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0xa3f1e78 <line:654:2, line:668:2>
      (DeclStmt 0xa3f12e0 <line:655:4, line:656:55>
        0xa3f1200 "const size_type __len =
          (CallExpr 0xa3f12b8 <col:6, col:54> '<dependent type>'
            (MemberExpr 0xa3f1248 <col:6> '<bound member function type>' ->_M_check_len 0xa3c01d0
              (CXXThisExpr 0xa3f1238 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa3f1268 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int')
            (StringLiteral 0xa3f1280 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0xa3f13b8 <line:657:4, col:46>
        0xa3f1300 "_Bit_type *__q =
          (CallExpr 0xa3f1398 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1348 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f1338 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa3f137c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa3f1200 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa3f1570 <line:658:4, line:659:24>
        0xa3f13d0 "iterator __i =
          (CallExpr 0xa3f1548 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0xa3f1418 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0xa3be010
              (CXXThisExpr 0xa3f1408 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa3f1488 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa3f1448 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa3f14a4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f05b0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa3f1518 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa3f14f8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa3f14c8 <col:16> '_Bit_type *' lvalue Var 0xa3f1300 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa3f1508 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa3f14e0 <col:21> 'int' 0))))")
      (CallExpr 0xa3f1758 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0xa3f1748 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3f1728 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa3b7cc0 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa3f1790 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa3f1780 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa3f15e0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f13d0 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa3f17d8 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa3f17c8 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa3f17b8 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa3f16a0 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa3f1690 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa3f1678 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa3f1668 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa3f15f8 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f13d0 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa3f1650 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa3f1640 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa3f1630 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa3f1618 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa3f1800 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa3f16c4 <col:47> '_Bool' lvalue ParmVar 0xa3f0630 '__x' '_Bool')))
      (BinaryOperator 0xa3f1a60 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f1858 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f1820 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f1810 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa3f1a38 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f18a8 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
          (DeclRefExpr 0xa3f18e0 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f05b0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa3f1948 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa3f1908 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0xa3f1a10 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa3f1a00 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3f19e8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa3b3d30 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0xa3f19d8 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0xa3f1964 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f13d0 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0xa3f19c0 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa3f19b0 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa3f19a0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa3f1988 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa3f05f0 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0xa3f1ac0 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f1a88 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa3f1a78 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa3f1d40 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f1b28 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f1af0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f1ae0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa3f1d28 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0xa3f1d10 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa3f1d00 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa3f1b5c <col:39> '_Bit_type *' lvalue Var 0xa3f1300 '__q' '_Bit_type *'))
            (ParenExpr 0xa3f1ce8 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0xa3f1cd0 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0xa3f1c58 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0xa3f1c40 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0xa3f1c00 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa3f1be0 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa3f1b74 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa3f1200 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa3f1bf0 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa3f1bc8 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa3f1bb8 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa3f1b9c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa3f1c30 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa3f1c18 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa3f1cc0 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa3f1ca8 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa3f1c98 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa3f1c7c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa3f1e60 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f1da0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f1d68 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f1d58 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa3f1e30 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa3f1e10 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa3f1de0 <col:38> '_Bit_type *' lvalue Var 0xa3f1300 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa3f1e20 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa3f1df8 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa3f3688 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0xa3f3668 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3f2490 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa3f2430 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (DeclRefExpr 0xa3f23fc <col:6> '_ForwardIterator' lvalue ParmVar 0xa3f21d0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa3f2414 <col:17> '_ForwardIterator' lvalue ParmVar 0xa3f2210 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa3f3650 <line:679:4, line:705:4>
      (DeclStmt 0xa3f25a0 <line:680:6, col:52>
        0xa3f24c0 "size_type __n =
          (CallExpr 0xa3f2578 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f2510 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f9c4d0)
            (DeclRefExpr 0xa3f2544 <col:36> '_ForwardIterator' lvalue ParmVar 0xa3f21d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa3f255c <col:45> '_ForwardIterator' lvalue ParmVar 0xa3f2210 '__last' '_ForwardIterator'))")
      (IfStmt 0xa3f3630 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3f2720 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f26d0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f916a0 0x9fa8f70 0x9fab9c0 0xa1113f0 0xa111920 0xa111e50 0xa3ad250)
          (CXXOperatorCallExpr 0xa3f2690 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f2650 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa94c0 0x9fac7a0 0xa3b2ff0)
            (CallExpr 0xa3f25e0 <col:10, col:19> '<dependent type>'
              (MemberExpr 0xa3f25c0 <col:10> '<bound member function type>' ->capacity 0xa3bc6a0
                (CXXThisExpr 0xa3f25b0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa3f2630 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa3f2610 <col:23> '<bound member function type>' ->size 0xa3bc5a0
                (CXXThisExpr 0xa3f2600 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0xa3f26b4 <col:33> 'size_type':'unsigned int' lvalue Var 0xa3f24c0 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0xa3f2b68 <line:682:8, line:688:8>
          (CallExpr 0xa3f2978 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f2768 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3560)
            (DeclRefExpr 0xa3f279c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f2190 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa3f2808 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0xa3f27c8 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0xa3f2950 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f2900 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
              (CXXDependentScopeMemberExpr 0xa3f2870 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa3f2838 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f2828 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0xa3f28e8 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0xa3f28d8 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0xa3f28c8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3f28b0 <col:26> 'size_type':'unsigned int' lvalue Var 0xa3f24c0 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0xa3f2a48 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f29c8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
            (DeclRefExpr 0xa3f2a00 <col:13> '_ForwardIterator' lvalue ParmVar 0xa3f21d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa3f2a18 <col:22> '_ForwardIterator' lvalue ParmVar 0xa3f2210 '__last' '_ForwardIterator')
            (DeclRefExpr 0xa3f2a30 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f2190 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0xa3f2b48 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f2ab8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3f2a80 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f2a70 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0xa3f2b30 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa3f2b20 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa3f2b10 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa3f2af8 <col:46> 'size_type':'unsigned int' lvalue Var 0xa3f24c0 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0xa3f3600 <line:690:8, line:704:8>
          (DeclStmt 0xa3f2cb8 <line:691:3, line:692:55>
            0xa3f2b90 "const size_type __len =
              (CallExpr 0xa3f2c90 <col:5, col:54> '<dependent type>'
                (MemberExpr 0xa3f2bd8 <col:5> '<bound member function type>' ->_M_check_len 0xa3c01d0
                  (CXXThisExpr 0xa3f2bc8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa3f2bf8 <col:18> 'size_type':'unsigned int' lvalue Var 0xa3f24c0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa3f2c50 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0xa3f2d98 <line:693:3, col:45>
            0xa3f2ce0 "_Bit_type *__q =
              (CallExpr 0xa3f2d78 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f2d28 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f2d18 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa3f2d5c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa3f2b90 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0xa3f2f50 <line:694:3, line:695:30>
            0xa3f2db0 "iterator __i =
              (CallExpr 0xa3f2f28 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0xa3f2df8 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0xa3be010
                  (CXXThisExpr 0xa3f2de8 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0xa3f2e68 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0xa3f2e28 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa3f2e84 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f2190 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0xa3f2ef8 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0xa3f2ed8 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0xa3f2ea8 <col:22> '_Bit_type *' lvalue Var 0xa3f2ce0 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0xa3f2ee8 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa3f2ec0 <col:27> 'int' 0))))")
          (BinaryOperator 0xa3f3038 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0xa3f2f60 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f2db0 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa3f3010 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f2f90 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
              (DeclRefExpr 0xa3f2fc8 <col:19> '_ForwardIterator' lvalue ParmVar 0xa3f21d0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa3f2fe0 <col:28> '_ForwardIterator' lvalue ParmVar 0xa3f2210 '__last' '_ForwardIterator')
              (DeclRefExpr 0xa3f2ff8 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f2db0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0xa3f31e8 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3f3098 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3f3060 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f3050 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa3f31c0 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f30e8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
              (DeclRefExpr 0xa3f3120 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f2190 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0xa3f3188 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0xa3f3148 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa3f31a4 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f2db0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0xa3f3248 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f3210 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f3200 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0xa3f34c8 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3f32b0 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3f3278 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f3268 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0xa3f34b0 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0xa3f3498 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0xa3f3488 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0xa3f32e4 <col:38> '_Bit_type *' lvalue Var 0xa3f2ce0 '__q' '_Bit_type *'))
                (ParenExpr 0xa3f3470 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0xa3f3458 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0xa3f33e0 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0xa3f33c8 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0xa3f3388 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0xa3f3368 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0xa3f32fc <col:14> 'const size_type':'const unsigned int' lvalue Var 0xa3f2b90 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0xa3f3378 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0xa3f3350 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0xa3f3340 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0xa3f3324 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0xa3f33b8 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa3f33a0 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0xa3f3448 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa3f3430 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa3f3420 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0xa3f3404 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0xa3f35e8 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa3f3528 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa3f34f0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f34e0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0xa3f35b8 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa3f3598 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa3f3568 <col:37> '_Bit_type *' lvalue Var 0xa3f2ce0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa3f35a8 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa3f3580 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0xa3f4b40 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0xa3f4b20 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3f3bc0 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa3f3b60 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f8ec80 0x9fa8320 0x9faac70 0x9ff2980 0xa014790 0xa014b00 0xa10d0d0 0xa10d5d0 0xa10dae0 0xa235d50 0xa3ac250)
      (CXXDependentScopeMemberExpr 0xa3f3aa8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3f3a70 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f3a38 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f3a28 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa3f3b28 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa3f3af0 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa3f3ae0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa3f3f90 <line:714:2, line:719:2>
      (CallExpr 0xa3f3de8 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f3c08 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fd3560)
        (DeclRefExpr 0xa3f3c3c <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f38f0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0xa3f3ca0 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f3c68 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f3c58 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0xa3f3dc0 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f3d70 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fa9a70 0xa108d60 0xa133610 0xa134210 0xa10a050 0xa10a850 0xa3b5490 0xa3b7610)
          (CXXDependentScopeMemberExpr 0xa3f3d20 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa3f3ce8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f3cd8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa3f3d58 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0xa3f3ed0 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa3f3ec0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3f3ea8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa3ae000 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa3f3e60 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa3f3e50 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3f3e38 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa3b36f0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa3f3e28 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa3f3e10 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f38f0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa3f3e98 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3f3e80 <col:18> '_Bool' lvalue ParmVar 0xa3f3930 '__x' '_Bool')))
      (UnaryOperator 0xa3f3f78 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa3f3f40 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f3f08 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f3ef8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0xa3f4af0 <line:721:2, line:734:2>
      (DeclStmt 0xa3f4110 <line:722:4, line:723:63>
        0xa3f3fc0 "const size_type __len =
          (CallExpr 0xa3f40e8 <col:6, col:62> '<dependent type>'
            (MemberExpr 0xa3f4008 <col:6> '<bound member function type>' ->_M_check_len 0xa3c01d0
              (CXXThisExpr 0xa3f3ff8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0xa3f4058 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa3f4048 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa3f4030 <col:29> 'int' 1)))
            (StringLiteral 0xa3f40b0 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0xa3f41e8 <line:724:4, col:46>
        0xa3f4130 "_Bit_type *__q =
          (CallExpr 0xa3f41c8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f4178 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f4168 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa3f41ac <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa3f3fc0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa3f43a0 <line:725:4, line:726:24>
        0xa3f4200 "iterator __i =
          (CallExpr 0xa3f4378 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0xa3f4248 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0xa3be010
              (CXXThisExpr 0xa3f4238 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa3f42b8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa3f4278 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa3f42d4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f38f0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa3f4348 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa3f4328 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa3f42f8 <col:16> '_Bit_type *' lvalue Var 0xa3f4130 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa3f4338 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa3f4310 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0xa3f4518 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa3f4508 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3f44f0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa3ae000 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa3f44a8 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa3f4498 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3f4480 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa3b36f0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa3f4470 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0xa3f4448 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0xa3f4438 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3f43e0 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0xa3b3900 'operator++' 'iterator (int)'))
              (DeclRefExpr 0xa3f43b0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f4200 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0xa3f43c8 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0xa3f44e0 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3f44c8 <col:13> '_Bool' lvalue ParmVar 0xa3f3930 '__x' '_Bool')))
      (BinaryOperator 0xa3f46d8 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f4588 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f4550 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f4540 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa3f46b0 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f45d8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fce7d0 0xa239650)
          (DeclRefExpr 0xa3f4610 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa3f38f0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa3f4678 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa3f4638 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa3f4694 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa3f4200 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0xa3f4738 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f4700 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa3f46f0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa3f49b8 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f47a0 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f4768 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f4758 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa3f49a0 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0xa3f4988 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa3f4978 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa3f47d4 <col:39> '_Bit_type *' lvalue Var 0xa3f4130 '__q' '_Bit_type *'))
            (ParenExpr 0xa3f4960 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0xa3f4948 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0xa3f48d0 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0xa3f48b8 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0xa3f4878 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa3f4858 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa3f47ec <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa3f3fc0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa3f4868 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa3f4840 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa3f4830 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa3f4814 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa3f48a8 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa3f4890 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa3f4938 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa3f4920 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa3f4910 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa3f48f4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa3adac0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa3f4ad8 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa3f4a18 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa3f49e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f49d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa3f4aa8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa3f4a88 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa3f4a58 <col:38> '_Bit_type *' lvalue Var 0xa3f4130 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa3f4a98 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa3f4a70 <col:43> 'int' 0)))))))


}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0xa3f5b38 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3f59e0 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0xa3f59b0 <col:18> 'int' 1)
    (IntegerLiteral 0xa3f59c8 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0xa3f5b48 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3f5a68 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0xa3f5a38 <col:24> 'int' 1)
    (IntegerLiteral 0xa3f5a50 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0xa3f5b58 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3f5ae8 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0xa3f5ab8 <col:23> 'int' 1)
    (IntegerLiteral 0xa3f5ad0 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0xa3f7078 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3f6ea0 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0xa3f72d0 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0xa3f71b0 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3f71a0 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa3f7190 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa3f7174 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa3f7090 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa3f7298 <line:277:5, line:283:5>
      (CaseStmt 0xa3f71e8 <line:278:9, line:280:20>
        (ImplicitCastExpr 0xa3f72c0 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa3f71cc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa3f6ec0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa3f7220 <line:279:9, line:280:20>
          (ImplicitCastExpr 0xa3f72b0 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa3f7208 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa3f6f00 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0xa3f7250 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0xa3f7240 <col:20> '_Bool' false))))
      (DefaultStmt 0xa3f7280 <line:281:9, line:282:20>
        (ReturnStmt 0xa3f7270 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa3f7260 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0xa3f7590 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0xa3f73e0 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3f73d0 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa3f73c0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa3f73a4 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa3f72f0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa3f7538 <line:290:5, line:298:5>
      (CaseStmt 0xa3f7418 <line:291:9, line:295:20>
        (ImplicitCastExpr 0xa3f7580 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa3f73fc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa3f6ec0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa3f7450 <line:292:9, line:295:20>
          (ImplicitCastExpr 0xa3f7570 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa3f7438 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa3f6f00 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0xa3f7488 <line:293:9, line:295:20>
            (ImplicitCastExpr 0xa3f7560 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0xa3f7470 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa3f6f40 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0xa3f74c0 <line:294:9, line:295:20>
              (ImplicitCastExpr 0xa3f7550 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0xa3f74a8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa3f6f80 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0xa3f74f0 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0xa3f74e0 <col:20> '_Bool' true))))))
      (DefaultStmt 0xa3f7520 <line:296:9, line:297:20>
        (ReturnStmt 0xa3f7510 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa3f7500 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0xa3f7ac0 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3f7aa8 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0xa3f7ae8 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3f7ad0 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0xa3f7bd4 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0xa3f7040 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0xa3f8580 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8568 <col:14> 'int' 0))
, const char *param2 = (ImplicitCastExpr 0xa3f85f0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f85d8 <col:14> 'int' 0))
, const char *param3 = (ImplicitCastExpr 0xa3f8660 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8648 <col:14> 'int' 0))
, const char *param4 = (ImplicitCastExpr 0xa3f86d0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f86b8 <col:14> 'int' 0))
, const char *param5 = (ImplicitCastExpr 0xa3f8740 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8728 <col:14> 'int' 0))
, const char *param6 = (ImplicitCastExpr 0xa3f87b0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8798 <col:14> 'int' 0))
, const char *param7 = (ImplicitCastExpr 0xa3f8820 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8808 <col:14> 'int' 0))
, const char *param8 = (ImplicitCastExpr 0xa3f8890 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8878 <col:14> 'int' 0))
, const char *param9 = (ImplicitCastExpr 0xa3f8900 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f88e8 <col:14> 'int' 0))
, const char *param10 = (ImplicitCastExpr 0xa3f8970 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f8958 <col:14> 'int' 0))
, const char *param11 = (ImplicitCastExpr 0xa3f89e0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa3f89c8 <col:14> 'int' 0))
, const char *param12 = (ImplicitCastExpr 0xa405d50 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa405d38 <col:14> 'int' 0))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0xa408e18 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa408e08 <line:395:5, col:51>
    (BinaryOperator 0xa408df0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa408be8 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa408bb0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa408b90 <col:14, col:16> '<bound member function type>' .empty 0xa1797d0
            (DeclRefExpr 0xa408b78 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa408890 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa408de0 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa408d98 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa408d88 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa408d6c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9e8c220 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa408dc0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa408c80 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa408dd0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa408d40 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa408d20 <col:44, col:46> '<bound member function type>' .at 0xa17a160
                (DeclRefExpr 0xa408cb0 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa408890 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa408d60 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa408d08 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0xa406b50 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0xa406388 <line:354:5, col:13>
    0xa406350 "T result")
  (DeclStmt 0xa406ad0 <line:355:5, col:33>
    0xa4063f0 "std::wstringstream stream =
      (CXXConstructExpr 0xa406aa8 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa406424 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa406210 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0xa406a90 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa406b10 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa406ae0 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa4063f0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa406af8 <col:15> 'T' lvalue Var 0xa406350 'result' 'T'))
  (ReturnStmt 0xa406b40 <line:357:5, col:12>
    (DeclRefExpr 0xa406b28 <col:12> 'T' lvalue Var 0xa406350 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0xa408858 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa408848 <line:389:5, col:50>
    (BinaryOperator 0xa408830 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa408630 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa408610 <col:14, col:22> '_Bool'
          (MemberExpr 0xa4085f0 <col:14, col:16> '<bound member function type>' .empty 0xa1522a0
            (DeclRefExpr 0xa4085d8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa4082f0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa408820 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa4087c8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa4087b8 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa40875c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9e61040 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa4087f0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa40867c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa408810 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa408800 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa408730 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa408710 <col:43, col:45> '<bound member function type>' .at 0xa152c30
                  (DeclRefExpr 0xa4086a0 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa4082f0 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa408750 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa4086f8 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0xa407540 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0xa406d98 <line:363:5, col:19>
    0xa406d40 "T result =
      (CXXUnresolvedConstructExpr 0xa406d80 <col:16, col:18> 'T')")
  (DeclStmt 0xa4074c0 <line:364:5, col:32>
    0xa406e00 "std::stringstream stream =
      (CXXConstructExpr 0xa407498 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa406e34 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa406c00 'x' 'const std::string &')
        (CXXDefaultArgExpr 0xa407480 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa407500 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa4074d0 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0xa406e00 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0xa4074e8 <col:15> 'T' lvalue Var 0xa406d40 'result' 'T'))
  (ReturnStmt 0xa407530 <line:366:5, col:12>
    (DeclRefExpr 0xa407518 <col:12> 'T' lvalue Var 0xa406d40 'result' 'T')))

;
template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0xa409350 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa409340 <line:401:5, col:42>
    (ExprWithCleanups 0xa409320 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa4092c0)
      (CXXConstructExpr 0xa4092f8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa4092e8 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa4092d8 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa4092c8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa4092c0)
              (CallExpr 0xa409288 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa409278 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa409220 <col:12> 'wcstring (const long &)' lvalue Function 0xa407af0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa4076f0 'to_string')))
                (MaterializeTemporaryExpr 0xa4092a8 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa4091d8 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa4091c8 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa4091b8 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa40918c <col:40> 'const int' lvalue ParmVar 0xa408e50 'x' 'const int &')))))))))))))

template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0xa408288 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa407de8 <line:381:5, col:22>
    0xa407db0 "wchar_t buff[128]")
  (CallExpr 0xa407ea8 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa407e98 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa407e60 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa406130 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa407ed0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa407e30 <col:22> 'wchar_t [128]' lvalue Var 0xa407db0 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa407ee0 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa407e48 <col:28> 'const long' lvalue ParmVar 0xa407a50 'x' 'const long &')))
  (ReturnStmt 0xa408278 <line:383:5, col:25>
    (ExprWithCleanups 0xa408258 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa407f60)
      (CXXTemporary 0xa4081e0)
      (CXXConstructExpr 0xa408230 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa408220 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa408210 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa4081f8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa4081e8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa4081e0)
                (CXXConstructExpr 0xa4081b8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa407f20 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa407f10 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa407ef8 <col:21> 'wchar_t [128]' lvalue Var 0xa407db0 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa4081a0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0xa4079f0 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0xa407838 <line:372:5, col:30>
    0xa407750 "std::wstringstream stream =
      (CXXConstructExpr 0xa407810 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0xa4077f8 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa407878 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0xa407848 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa407750 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa407860 <col:15> 'const T' lvalue ParmVar 0xa4075f0 'x' 'const T &'))
  (ReturnStmt 0xa4079e0 <line:374:5, col:23>
    (ExprWithCleanups 0xa4079c0 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa407960)
      (CXXConstructExpr 0xa407998 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa407988 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa407978 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa407968 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0xa407960)
              (CXXMemberCallExpr 0xa407908 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0xa4078e8 <col:12, col:19> '<bound member function type>' .str 0xa37de80
                  (ImplicitCastExpr 0xa407948 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0xa407890 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa407750 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0xa408288 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa407de8 <line:381:5, col:22>
    0xa407db0 "wchar_t buff[128]")
  (CallExpr 0xa407ea8 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa407e98 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa407e60 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa406130 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa407ed0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa407e30 <col:22> 'wchar_t [128]' lvalue Var 0xa407db0 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa407ee0 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa407e48 <col:28> 'const long' lvalue ParmVar 0xa407a50 'x' 'const long &')))
  (ReturnStmt 0xa408278 <line:383:5, col:25>
    (ExprWithCleanups 0xa408258 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa407f60)
      (CXXTemporary 0xa4081e0)
      (CXXConstructExpr 0xa408230 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa408220 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa408210 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa4081f8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa4081e8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa4081e0)
                (CXXConstructExpr 0xa4081b8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa407f20 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa407f10 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa407ef8 <col:21> 'wchar_t [128]' lvalue Var 0xa407db0 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa4081a0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0xa408858 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa408848 <line:389:5, col:50>
    (BinaryOperator 0xa408830 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa408630 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa408610 <col:14, col:22> '_Bool'
          (MemberExpr 0xa4085f0 <col:14, col:16> '<bound member function type>' .empty 0xa1522a0
            (DeclRefExpr 0xa4085d8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa4082f0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa408820 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa4087c8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa4087b8 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa40875c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9e61040 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa4087f0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa40867c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa408810 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa408800 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa408730 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa408710 <col:43, col:45> '<bound member function type>' .at 0xa152c30
                  (DeclRefExpr 0xa4086a0 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa4082f0 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa408750 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa4086f8 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0xa408e18 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa408e08 <line:395:5, col:51>
    (BinaryOperator 0xa408df0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa408be8 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa408bb0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa408b90 <col:14, col:16> '<bound member function type>' .empty 0xa1797d0
            (DeclRefExpr 0xa408b78 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa408890 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa408de0 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa408d98 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa408d88 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa408d6c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9e8c220 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa408dc0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa408c80 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa408dd0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa408d40 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa408d20 <col:44, col:46> '<bound member function type>' .at 0xa17a160
                (DeclRefExpr 0xa408cb0 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa408890 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa408d60 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa408d08 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0xa409350 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa409340 <line:401:5, col:42>
    (ExprWithCleanups 0xa409320 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa4092c0)
      (CXXConstructExpr 0xa4092f8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa4092e8 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa4092d8 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa4092c8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa4092c0)
              (CallExpr 0xa409288 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa409278 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa409220 <col:12> 'wcstring (const long &)' lvalue Function 0xa407af0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa4076f0 'to_string')))
                (MaterializeTemporaryExpr 0xa4092a8 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa4091d8 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa4091c8 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa4091b8 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa40918c <col:40> 'const int' lvalue ParmVar 0xa408e50 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0xa40ab98 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0xa40a990 <line:421:9, col:23>
    0xa40a930 "size_t len =
      (ImplicitCastExpr 0xa40a980 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa40a968 <col:22> 'int' 0))")
  (IfStmt 0xa40ab40 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0xa40aa20 <line:422:13, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
      (MemberExpr 0xa40a9e4 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0xa409b80
        (CXXThisExpr 0xa40a9b8 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (IntegerLiteral 0xa40aa08 </usr/include/linux/stddef.h:8:14> 'int' 0))
    (CompoundStmt 0xa40ab28 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0xa40ab10 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0xa40aab0 <line:424:20, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0xa40aa80 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0xa40aa48 <col:20> 'CharType_t **const' lvalue ->array 0xa409b80
              (CXXThisExpr 0xa40aa38 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0xa40aa68 <col:26> 'size_t':'unsigned int' lvalue Var 0xa40a930 'len' 'size_t':'unsigned int'))
          (IntegerLiteral 0xa40aa98 </usr/include/linux/stddef.h:8:14> 'int' 0))
        (CompoundStmt 0xa40aaf8 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0xa40aae0 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa40aac8 <col:17> 'size_t':'unsigned int' lvalue Var 0xa40a930 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa40ab88 <line:429:9, col:16>
    (ImplicitCastExpr 0xa40ab78 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa40ab5c <col:16> 'size_t':'unsigned int' lvalue Var 0xa40a930 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0xa40acf8 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0xa40ac78 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0xa40ac68 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa40abcc <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9e5c200 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa40ac30 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0xa40ac00 <col:24> 'CharType_t **' lvalue ->array 0xa409b80
        (CXXThisExpr 0xa40abf0 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0xa40ace0 <line:435:9, /usr/include/linux/stddef.h:8:14> '<dependent type>' '='
    (MemberExpr 0xa40aca8 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0xa409b80
      (CXXThisExpr 0xa40ac98 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (IntegerLiteral 0xa40acc8 </usr/include/linux/stddef.h:8:14> 'int' 0)))


public:
public:
    null_terminated_array_t<CharType_t>() : array((IntegerLiteral 0xa40ad10 </usr/include/linux/stddef.h:8:14> 'int' 0)
) (CompoundStmt 0xa40ad70 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0xa40add0 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0xa40ad80 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0xa409850 0xa409420)
  (DeclRefExpr 0xa40adb8 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa40a500 'argv' 'const string_list_t &'))
) (CompoundStmt 0xa40ae30 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0xa40aea8 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0xa40ae88 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa40ae50 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa40ae40 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0xa40aff8 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0xa40af08 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa40aed0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa40aec0 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0xa40afe0 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa40af38 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa40af28 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0xa40afc0 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa40af70 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0xa409850 0xa409420)
      (DeclRefExpr 0xa40afa8 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa40a6c0 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0xa40b050 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0xa40b040 <line:457:9, col:16>
    (MemberExpr 0xa40b020 <col:16> 'CharType_t **const' lvalue ->array 0xa409b80
      (CXXThisExpr 0xa40b010 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0xa40b0d0 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0xa40b0b0 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa40b078 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa40b068 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0xa40bcb8 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0xa40bc98 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0xa40bc88 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa40bc70 <col:9> 'void (void *) throw()' lvalue Function 0x9e5c200 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa40bc58 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa40bc48 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa40bc38 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa40bc08 <col:22> 'const char *' lvalue ->str 0xa40b650
            (CXXThisExpr 0xa40bbf8 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0xa40bce8 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa40bcd0 <col:14> 'int' 0))
) (CompoundStmt 0xa40bd20 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0xa40bf70 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0xa40be08 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0xa40bdf8 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa40bde0 <col:9> 'void (void *) throw()' lvalue Function 0x9e5c200 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa40bdc8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa40bdb8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa40bda8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa40bd78 <col:22> 'const char *' lvalue ->str 0xa40b650
            (CXXThisExpr 0xa40bd68 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0xa40bf58 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0xa40be38 <col:9> 'const char *' lvalue ->str 0xa40b650
      (CXXThisExpr 0xa40be28 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0xa40bf48 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0xa40bf28 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0xa40bf18 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa40bee4 <col:15> 'char *(const wchar_t *)' lvalue Function 0xa3f64f0 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0xa40bec8 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0xa40bea8 <col:23, col:25> '<bound member function type>' .c_str 0xa189580
            (DeclRefExpr 0xa40be90 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa40ba40 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0xa40bff8 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0xa40bfe8 <line:495:9, col:16>
    (ImplicitCastExpr 0xa40bfd8 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0xa40bfb8 <col:16> 'const char *const' lvalue ->str 0xa40b650
        (CXXThisExpr 0xa40bfa8 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0xa40cf3c <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0xa40cbc0 'r' 'T *')
), saved_value((UnaryOperator 0xa40cfb0 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa40cf98 <col:45> 'T *' lvalue ParmVar 0xa40cbc0 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa40d008 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0xa40d068 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0xa40d078 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0xa40ccd0 'r' 'T *')
), saved_value((UnaryOperator 0xa40d0e0 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa40d0c8 <col:66> 'T *' lvalue ParmVar 0xa40ccd0 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa40d138 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0xa40d1f8 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0xa40d1e0 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0xa40d1b0 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa40d194 <col:10> 'T *' lvalue ParmVar 0xa40ccd0 'r' 'T *'))
    (DeclRefExpr 0xa40d1c4 <col:14> 'const T' lvalue ParmVar 0xa40cd40 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0xa40d278 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0xa40d258 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0xa40d238 <col:9> '<bound member function type>' ->restore 0xa40cee0
      (CXXThisExpr 0xa40d228 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0xa40d478 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0xa40d458 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0xa40d2d0 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa40d2c0 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0xa40d2a0 <col:14> '_Bool' lvalue ->restored 0xa40cb40
          (CXXThisExpr 0xa40d290 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0xa40d440 <line:551:9, line:554:9>
      (CallExpr 0xa40d3c0 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa40d308 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f86710 0x9f8c260 0xa112510 0xa3ad7f0)
        (UnaryOperator 0xa40d378 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0xa40d358 <col:24> 'T *const' lvalue ->ref 0xa40cac0
            (CXXThisExpr 0xa40d348 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0xa40d3a0 <col:29> 'T' lvalue ->saved_value 0xa40cb00
          (CXXThisExpr 0xa40d390 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0xa40d428 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0xa40d3f8 <col:13> '_Bool' lvalue ->restored 0xa40cb40
          (CXXThisExpr 0xa40d3e8 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0xa40d418 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
void wutil_init();
void wutil_destroy();
FILE *wfopen(const wcstring &path, const char *mode);
bool set_cloexec(int fd);
FILE *wfreopen(const wcstring &path, const char *mode, FILE *stream);
int wopen(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0xa413f60 <../codeBase/fish-shell-master/wutil.h:46:62> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa413f48 <col:62> 'int' 0))
);
int wopen_cloexec(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0xa414150 <../codeBase/fish-shell-master/wutil.h:49:70> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa414138 <col:70> 'int' 0))
);
int make_fd_nonblocking(int fd);
int make_fd_blocking(int fd);
int wcreat(const wcstring &pathname, mode_t mode);
DIR *wopendir(const wcstring &name);
int wstat(const wcstring &file_name, struct stat *buf);
int lwstat(const wcstring &file_name, struct stat *buf);
int waccess(const wcstring &pathname, int mode);
int wunlink(const wcstring &pathname);
void wperror(const wcstring &s);
void safe_perror(const char *message);
const char *safe_strerror(int err);
wchar_t *wgetcwd(wchar_t *buff, size_t sz);
int wchdir(const wcstring &dir);
wchar_t *wrealpath(const wcstring &pathname, wchar_t *resolved_path);
bool wreaddir(DIR *dir, std::wstring &out_name);
bool wreaddir_resolving(DIR *dir, const std::wstring &dir_path, std::wstring &out_name, bool *out_is_dir);
std::wstring wdirname(const std::wstring &path);
std::wstring wbasename(const std::wstring &path);
const wchar_t *wgettext(const wchar_t *in);
const wchar_t *wgetenv(const wcstring &name);
int wmkdir(const wcstring &dir, int mode);
int wrename(const wcstring &oldName, const wcstring &newName);
int fish_wcstoi(const wchar_t *str, wchar_t **endptr, int base);
typedef std::pair<dev_t, ino_t> file_id_t;
enum token_type {
    TOK_NONE,
    TOK_ERROR,
    TOK_INVALID,
    TOK_STRING,
    TOK_PIPE,
    TOK_END,
    TOK_REDIRECT_OUT,
    TOK_REDIRECT_APPEND,
    TOK_REDIRECT_IN,
    TOK_REDIRECT_FD,
    TOK_REDIRECT_NOCLOB,
    TOK_BACKGROUND,
    TOK_COMMENT
};
enum tokenizer_error {
    TOK_UNTERMINATED_QUOTE,
    TOK_UNTERMINATED_SUBSHELL,
    TOK_UNTERMINATED_ESCAPE,
    TOK_OTHER
};
typedef unsigned int tok_flags_t;
struct tokenizer_t {
    struct tokenizer_t;
    const wchar_t *buff;
    const wchar_t *orig_buff;
    wcstring last_token;
    enum token_type last_type;
    size_t last_pos;
    bool has_next;
    bool accept_unfinished;
    bool show_comments;
    wchar_t last_quote;
    int error;
    bool squash_errors;
    size_t cached_lineno_offset;
    int cached_lineno_count;
    int line_number_of_character_at_offset(size_t offset);
    tokenizer_t(const wchar_t *b, tok_flags_t flags);
    inline tokenizer_t(const tokenizer_t &);
    inline void ~tokenizer_t() (CompoundStmt 0xa42ce10 <../codeBase/fish-shell-master/tokenizer.h:70:8>)


};
void tok_next(tokenizer_t *tok);
enum token_type tok_last_type(tokenizer_t *tok);
const wchar_t *tok_last(tokenizer_t *tok);
wchar_t tok_last_quote(tokenizer_t *tok);
int tok_has_next(tokenizer_t *tok);
int tok_get_pos(tokenizer_t *tok);
enum token_type tok_peek_next(tokenizer_t *tok, wcstring *out_next_string);
const wchar_t *tok_string(tokenizer_t *tok);
wcstring tok_first(const wchar_t *str);
bool tok_is_string_character(wchar_t c, bool is_first);
void tok_set_pos(tokenizer_t *tok, int pos);
const wchar_t *tok_get_desc(int type);
int tok_get_error(tokenizer_t *tok);
enum move_word_style_t {
    move_word_style_punctuation,
    move_word_style_path_components
};
class move_word_state_machine_t {
    class move_word_state_machine_t;
private:
private:
    bool consume_char_punctuation(wchar_t c);
    bool consume_char_path_components(wchar_t c);
    bool is_path_component_character(wchar_t c);
    int state;
    move_word_style_t style;
public:
public:
    move_word_state_machine_t(move_word_style_t st);
    bool consume_char(wchar_t c);
    void reset();
    inline move_word_state_machine_t &operator=(const move_word_state_machine_t &) throw();
    inline move_word_state_machine_t(const move_word_state_machine_t &) throw();
};
static const wchar_t *tok_desc[13] = (InitListExpr 0xa418c38 <../codeBase/fish-shell-master/tokenizer.cpp:64:1, line:78:1> 'const wchar_t *[13]'
  (ImplicitCastExpr 0xa418c60 <line:65:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418380 <col:8> 'const wchar_t [30]' lvalue L"T\000\000\000o\000\000\000k\000\000\000e\000\000\000n\000\000\000i\000\000\000z\000\000\000e\000\000\000r\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000y\000\000\000e\000\000\000t\000\000\000 \000\000\000i\000\000\000n\000\000\000i\000\000\000t\000\000\000i\000\000\000a\000\000\000l\000\000\000i\000\000\000z\000\000\000e\000\000\000d\000\000\000"))
  (ImplicitCastExpr 0xa418c78 <line:66:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418450 <col:8> 'const wchar_t [16]' lvalue L"T\000\000\000o\000\000\000k\000\000\000e\000\000\000n\000\000\000i\000\000\000z\000\000\000e\000\000\000r\000\000\000 \000\000\000e\000\000\000r\000\000\000r\000\000\000o\000\000\000r\000\000\000"))
  (ImplicitCastExpr 0xa418c90 <line:67:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa4184f0 <col:8> 'const wchar_t [14]' lvalue L"I\000\000\000n\000\000\000v\000\000\000a\000\000\000l\000\000\000i\000\000\000d\000\000\000 \000\000\000t\000\000\000o\000\000\000k\000\000\000e\000\000\000n\000\000\000"))
  (ImplicitCastExpr 0xa418cb0 <line:68:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418580 <col:8> 'const wchar_t [7]' lvalue L"S\000\000\000t\000\000\000r\000\000\000i\000\000\000n\000\000\000g\000\000\000"))
  (ImplicitCastExpr 0xa418cc0 <line:69:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418600 <col:8> 'const wchar_t [5]' lvalue L"P\000\000\000i\000\000\000p\000\000\000e\000\000\000"))
  (ImplicitCastExpr 0xa418cf0 <line:70:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418670 <col:8> 'const wchar_t [15]' lvalue L"E\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000f\000\000\000 \000\000\000c\000\000\000o\000\000\000m\000\000\000m\000\000\000a\000\000\000n\000\000\000d\000\000\000"))
  (ImplicitCastExpr 0xa418d00 <line:71:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418710 <col:8> 'const wchar_t [24]' lvalue L"R\000\000\000e\000\000\000d\000\000\000i\000\000\000r\000\000\000e\000\000\000c\000\000\000t\000\000\000 \000\000\000o\000\000\000u\000\000\000t\000\000\000p\000\000\000u\000\000\000t\000\000\000 \000\000\000t\000\000\000o\000\000\000 \000\000\000f\000\000\000i\000\000\000l\000\000\000e\000\000\000"))
  (ImplicitCastExpr 0xa418d10 <line:72:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa4187d0 <col:8> 'const wchar_t [22]' lvalue L"A\000\000\000p\000\000\000p\000\000\000e\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000u\000\000\000t\000\000\000p\000\000\000u\000\000\000t\000\000\000 \000\000\000t\000\000\000o\000\000\000 \000\000\000f\000\000\000i\000\000\000l\000\000\000e\000\000\000"))
  (ImplicitCastExpr 0xa418d20 <line:73:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418880 <col:8> 'const wchar_t [23]' lvalue L"R\000\000\000e\000\000\000d\000\000\000i\000\000\000r\000\000\000e\000\000\000c\000\000\000t\000\000\000 \000\000\000i\000\000\000n\000\000\000p\000\000\000u\000\000\000t\000\000\000 \000\000\000t\000\000\000o\000\000\000 \000\000\000f\000\000\000i\000\000\000l\000\000\000e\000\000\000"))
  (ImplicitCastExpr 0xa41d410 <line:74:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418940 <col:8> 'const wchar_t [28]' lvalue L"R\000\000\000e\000\000\000d\000\000\000i\000\000\000r\000\000\000e\000\000\000c\000\000\000t\000\000\000 \000\000\000t\000\000\000o\000\000\000 \000\000\000f\000\000\000i\000\000\000l\000\000\000e\000\000\000 \000\000\000d\000\000\000e\000\000\000s\000\000\000c\000\000\000r\000\000\000i\000\000\000p\000\000\000t\000\000\000o\000\000\000r\000\000\000"))
  (ImplicitCastExpr 0xa41d420 <line:75:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418a10 <col:8> 'const wchar_t [47]' lvalue L"R\000\000\000e\000\000\000d\000\000\000i\000\000\000r\000\000\000e\000\000\000c\000\000\000t\000\000\000 \000\000\000o\000\000\000u\000\000\000t\000\000\000p\000\000\000u\000\000\000t\000\000\000 \000\000\000t\000\000\000o\000\000\000 \000\000\000f\000\000\000i\000\000\000l\000\000\000e\000\000\000 \000\000\000i\000\000\000f\000\000\000 \000\000\000f\000\000\000i\000\000\000l\000\000\000e\000\000\000 \000\000\000d\000\000\000o\000\000\000e\000\000\000s\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000e\000\000\000x\000\000\000i\000\000\000s\000\000\000t\000\000\000"))
  (ImplicitCastExpr 0xa41d430 <line:76:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418ae4 <col:8> 'const wchar_t [22]' lvalue L"R\000\000\000u\000\000\000n\000\000\000 \000\000\000j\000\000\000o\000\000\000b\000\000\000 \000\000\000i\000\000\000n\000\000\000 \000\000\000b\000\000\000a\000\000\000c\000\000\000k\000\000\000g\000\000\000r\000\000\000o\000\000\000u\000\000\000n\000\000\000d\000\000\000"))
  (ImplicitCastExpr 0xa41d440 <line:77:8> 'const wchar_t *' <ArrayToPointerDecay>
    (StringLiteral 0xa418ba0 <col:8> 'const wchar_t [8]' lvalue L"C\000\000\000o\000\000\000m\000\000\000m\000\000\000e\000\000\000n\000\000\000t\000\000\000")))
;
static void tok_call_error(tokenizer_t *tok, int error_type, const wchar_t *error_message) (CompoundStmt 0xa41d9b0 <../codeBase/fish-shell-master/tokenizer.cpp:84:1, line:88:1>
  (BinaryOperator 0xa41d6b8 <line:85:5, col:22> 'enum token_type':'enum token_type' lvalue '='
    (MemberExpr 0xa41d644 <col:5, col:10> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
      (ImplicitCastExpr 0xa41d638 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa41d61c <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa41d480 'tok' 'struct tokenizer_t *')))
    (DeclRefExpr 0xa41d664 <col:22> 'enum token_type' EnumConstant 0xa416150 'TOK_ERROR' 'enum token_type'))
  (BinaryOperator 0xa41d740 <line:86:5, col:18> 'int' lvalue '='
    (MemberExpr 0xa41d6f4 <col:5, col:10> 'int' lvalue ->error 0xa416980
      (ImplicitCastExpr 0xa41d6e8 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa41d6d0 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa41d480 'tok' 'struct tokenizer_t *')))
    (ImplicitCastExpr 0xa41d730 <col:18> 'int' <LValueToRValue>
      (DeclRefExpr 0xa41d714 <col:18> 'int' lvalue ParmVar 0xa41d4d0 'error_type' 'int')))
  (CXXOperatorCallExpr 0xa41d988 <line:87:5, col:23> 'class std::basic_string<wchar_t>' lvalue
    (ImplicitCastExpr 0xa41d978 <col:21, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const wchar_t *)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa41d928 <col:21, <invalid sloc>> 'class std::basic_string<wchar_t> &(const wchar_t *)' lvalue CXXMethod 0xa1779b0 'operator=' 'class std::basic_string<wchar_t> &(const wchar_t *)'))
    (MemberExpr 0xa41d77c <col:5, col:10> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
      (ImplicitCastExpr 0xa41d770 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa41d758 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa41d480 'tok' 'struct tokenizer_t *')))
    (ImplicitCastExpr 0xa41d918 <col:23> 'const wchar_t *' <LValueToRValue>
      (DeclRefExpr 0xa41d79c <col:23> 'const wchar_t *' lvalue ParmVar 0xa41d520 'error_message' 'const wchar_t *'))))


int tok_get_error(tokenizer_t *tok) (CompoundStmt 0xa41db10 <../codeBase/fish-shell-master/tokenizer.cpp:91:1, line:93:1>
  (ReturnStmt 0xa41db00 <line:92:5, col:17>
    (ImplicitCastExpr 0xa41daf0 <col:12, col:17> 'int' <LValueToRValue>
      (MemberExpr 0xa41dacc <col:12, col:17> 'int' lvalue ->error 0xa416980
        (ImplicitCastExpr 0xa41dac0 <col:12> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa41daa4 <col:12> 'struct tokenizer_t *' lvalue ParmVar 0xa41d9e0 'tok' 'struct tokenizer_t *'))))))


struct tokenizer_t::tokenizer_t(const wchar_t *b, tok_flags_t flags) : buff((ImplicitCastExpr 0xa41ddd8 </usr/include/linux/stddef.h:8:14> 'const wchar_t *' <NullToPointer>
  (IntegerLiteral 0xa41ddc0 <col:14> 'int' 0))
), orig_buff((ImplicitCastExpr 0xa41de20 </usr/include/linux/stddef.h:8:14> 'const wchar_t *' <NullToPointer>
  (IntegerLiteral 0xa41de08 <col:14> 'int' 0))
), last_token(), last_type((DeclRefExpr 0xa41de48 <../codeBase/fish-shell-master/tokenizer.cpp:96:104> 'enum token_type' EnumConstant 0xa416110 'TOK_NONE' 'enum token_type')
), last_pos((ImplicitCastExpr 0xa41de90 <../codeBase/fish-shell-master/tokenizer.cpp:96:124> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa41de78 <col:124> 'int' 0))
), has_next((CXXBoolLiteralExpr 0xa41deb8 <../codeBase/fish-shell-master/tokenizer.cpp:96:137> '_Bool' false)
), accept_unfinished((CXXBoolLiteralExpr 0xa41dee8 <../codeBase/fish-shell-master/tokenizer.cpp:96:163> '_Bool' false)
), show_comments((CXXBoolLiteralExpr 0xa41df18 <../codeBase/fish-shell-master/tokenizer.cpp:96:185> '_Bool' false)
), last_quote((ImplicitCastExpr 0xa41df60 <../codeBase/fish-shell-master/tokenizer.cpp:96:204> 'wchar_t' <IntegralCast>
  (IntegerLiteral 0xa41df48 <col:204> 'int' 0))
), error((IntegerLiteral 0xa41df88 <../codeBase/fish-shell-master/tokenizer.cpp:96:214> 'int' 0)
), squash_errors((CXXBoolLiteralExpr 0xa41dfb8 <../codeBase/fish-shell-master/tokenizer.cpp:96:232> '_Bool' false)
), cached_lineno_offset((ImplicitCastExpr 0xa41e000 <../codeBase/fish-shell-master/tokenizer.cpp:96:261> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa41dfe8 <col:261> 'int' 0))
), cached_lineno_count((IntegerLiteral 0xa41e028 <../codeBase/fish-shell-master/tokenizer.cpp:96:285> 'int' 0)
) (CompoundStmt 0xa41ec38 <../codeBase/fish-shell-master/tokenizer.cpp:97:1, line:117:1>
  (IfStmt 0xa41e250 <line:100:5, line:103:5>
    <<<NULL>>>
    (UnaryOperator 0xa41e160 <line:100:9, col:36> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41e150 <col:10, col:36> '_Bool' <IntegralToBoolean>
        (ParenExpr 0xa41e138 <col:10, col:36> 'unsigned int'
          (BinaryOperator 0xa41e120 <col:11, ../codeBase/fish-shell-master/tokenizer.h:63:27> 'unsigned int' '&'
            (ImplicitCastExpr 0xa41e100 <../codeBase/fish-shell-master/tokenizer.cpp:100:11> 'tok_flags_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa41e0cc <col:11> 'tok_flags_t':'unsigned int' lvalue ParmVar 0xa41dbd0 'flags' 'tok_flags_t':'unsigned int'))
            (ImplicitCastExpr 0xa41e110 <../codeBase/fish-shell-master/tokenizer.h:63:27> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa41e0e8 <col:27> 'int' 4))))))
    (CompoundStmt 0xa41e238 <../codeBase/fish-shell-master/tokenizer.cpp:101:5, line:103:5>
      (CallExpr 0xa41e208 <../codeBase/fish-shell-master/common.h:326:45, col:68> 'void'
        (ImplicitCastExpr 0xa41e1f8 <col:45> 'void (*)(const char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41e1c0 <col:45> 'void (const char *)' lvalue Function 0xa3f7f00 'assert_is_main_thread' 'void (const char *)'))
        (ImplicitCastExpr 0xa41e228 <line:327:66> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41e1b0 <col:66> 'const char [12]' lvalue __FUNCTION__))))
    <<<NULL>>>)
  (IfStmt 0xa41e5c8 <line:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa41e2c0 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41e2b0 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa41e2a0 <col:7, col:11> 'const wchar_t *' <LValueToRValue>
          (ParenExpr 0xa41e288 <col:7, col:11> 'const wchar_t *' lvalue
            (DeclRefExpr 0xa41e26c <../codeBase/fish-shell-master/tokenizer.cpp:105:11> 'const wchar_t *' lvalue ParmVar 0xa41db90 'b' 'const wchar_t *')))))
    (CompoundStmt 0xa41e5a8 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa41e438 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa41e428 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41e3f0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa41e310 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa41e468 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41e370 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa41e478 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41e3c0 <col:20> 'const char [12]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa41e488 <<scratch space>:150:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41e3d0 <col:1> 'const char [2]' lvalue "b")))
      (CallExpr 0xa41e4f8 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa41e4e8 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41e4cc <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa41e578 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa41e568 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41e54c <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa41e598 <line:140:3>))
    <<<NULL>>>)
  (NullStmt 0xa41e5e8 <../codeBase/fish-shell-master/tokenizer.cpp:105:14>)
  (BinaryOperator 0xa41e6e8 <line:108:5, col:63> '_Bool' lvalue '='
    (MemberExpr 0xa41e608 <col:5, col:11> '_Bool' lvalue ->accept_unfinished 0xa4168c0
      (CXXThisExpr 0xa41e5f8 <col:5> 'struct tokenizer_t *' this))
    (UnaryOperator 0xa41e6d0 <col:31, col:63> '_Bool' prefix '!'
      (UnaryOperator 0xa41e6b8 <col:32, col:63> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa41e6a8 <col:33, col:63> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa41e690 <col:33, col:63> 'unsigned int'
            (BinaryOperator 0xa41e678 <col:34, ../codeBase/fish-shell-master/tokenizer.h:53:31> 'unsigned int' '&'
              (ImplicitCastExpr 0xa41e658 <../codeBase/fish-shell-master/tokenizer.cpp:108:34> 'tok_flags_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa41e628 <col:34> 'tok_flags_t':'unsigned int' lvalue ParmVar 0xa41dbd0 'flags' 'tok_flags_t':'unsigned int'))
              (ImplicitCastExpr 0xa41e668 <../codeBase/fish-shell-master/tokenizer.h:53:31> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa41e640 <col:31> 'int' 1))))))))
  (BinaryOperator 0xa41e7f0 <../codeBase/fish-shell-master/tokenizer.cpp:109:5, col:55> '_Bool' lvalue '='
    (MemberExpr 0xa41e710 <col:5, col:11> '_Bool' lvalue ->show_comments 0xa416900
      (CXXThisExpr 0xa41e700 <col:5> 'struct tokenizer_t *' this))
    (UnaryOperator 0xa41e7d8 <col:27, col:55> '_Bool' prefix '!'
      (UnaryOperator 0xa41e7c0 <col:28, col:55> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa41e7b0 <col:29, col:55> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa41e798 <col:29, col:55> 'unsigned int'
            (BinaryOperator 0xa41e780 <col:30, ../codeBase/fish-shell-master/tokenizer.h:59:27> 'unsigned int' '&'
              (ImplicitCastExpr 0xa41e760 <../codeBase/fish-shell-master/tokenizer.cpp:109:30> 'tok_flags_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa41e730 <col:30> 'tok_flags_t':'unsigned int' lvalue ParmVar 0xa41dbd0 'flags' 'tok_flags_t':'unsigned int'))
              (ImplicitCastExpr 0xa41e770 <../codeBase/fish-shell-master/tokenizer.h:59:27> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa41e748 <col:27> 'int' 2))))))))
  (BinaryOperator 0xa41e8f8 <../codeBase/fish-shell-master/tokenizer.cpp:110:5, col:55> '_Bool' lvalue '='
    (MemberExpr 0xa41e818 <col:5, col:11> '_Bool' lvalue ->squash_errors 0xa4169c0
      (CXXThisExpr 0xa41e808 <col:5> 'struct tokenizer_t *' this))
    (UnaryOperator 0xa41e8e0 <col:27, col:55> '_Bool' prefix '!'
      (UnaryOperator 0xa41e8c8 <col:28, col:55> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa41e8b8 <col:29, col:55> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa41e8a0 <col:29, col:55> 'unsigned int'
            (BinaryOperator 0xa41e888 <col:30, ../codeBase/fish-shell-master/tokenizer.h:63:27> 'unsigned int' '&'
              (ImplicitCastExpr 0xa41e868 <../codeBase/fish-shell-master/tokenizer.cpp:110:30> 'tok_flags_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa41e838 <col:30> 'tok_flags_t':'unsigned int' lvalue ParmVar 0xa41dbd0 'flags' 'tok_flags_t':'unsigned int'))
              (ImplicitCastExpr 0xa41e878 <../codeBase/fish-shell-master/tokenizer.h:63:27> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa41e850 <col:27> 'int' 4))))))))
  (BinaryOperator 0xa41e9d8 <../codeBase/fish-shell-master/tokenizer.cpp:112:5, col:34> '_Bool' lvalue '='
    (MemberExpr 0xa41e920 <col:5, col:11> '_Bool' lvalue ->has_next 0xa416880
      (CXXThisExpr 0xa41e910 <col:5> 'struct tokenizer_t *' this))
    (ParenExpr 0xa41e9c0 <col:22, col:34> '_Bool'
      (BinaryOperator 0xa41e9a8 <col:23, col:29> '_Bool' '!='
        (ImplicitCastExpr 0xa41e998 <col:23, col:24> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa41e968 <col:23, col:24> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa41e958 <col:24> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa41e940 <col:24> 'const wchar_t *' lvalue ParmVar 0xa41db90 'b' 'const wchar_t *'))))
        (CharacterLiteral 0xa41e980 <col:29> 'wchar_t'0))))
  (BinaryOperator 0xa41eaa0 <line:113:5, col:36> 'const wchar_t *' lvalue '='
    (MemberExpr 0xa41ea00 <col:5, col:11> 'const wchar_t *' lvalue ->orig_buff 0xa416760
      (CXXThisExpr 0xa41e9f0 <col:5> 'struct tokenizer_t *' this))
    (ImplicitCastExpr 0xa41ea90 <col:23, col:36> 'const wchar_t *' <LValueToRValue>
      (BinaryOperator 0xa41ea78 <col:23, col:36> 'const wchar_t *' lvalue '='
        (MemberExpr 0xa41ea30 <col:23, col:29> 'const wchar_t *' lvalue ->buff 0xa416720
          (CXXThisExpr 0xa41ea20 <col:23> 'struct tokenizer_t *' this))
        (ImplicitCastExpr 0xa41ea68 <col:36> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa41ea50 <col:36> 'const wchar_t *' lvalue ParmVar 0xa41db90 'b' 'const wchar_t *')))))
  (BinaryOperator 0xa41eb10 <line:114:5, col:34> 'size_t':'unsigned int' lvalue '='
    (MemberExpr 0xa41eac8 <col:5, col:11> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
      (CXXThisExpr 0xa41eab8 <col:5> 'struct tokenizer_t *' this))
    (ImplicitCastExpr 0xa41eb00 <col:34> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa41eae8 <col:34> 'int' 0)))
  (BinaryOperator 0xa41eb70 <line:115:5, col:33> 'int' lvalue '='
    (MemberExpr 0xa41eb38 <col:5, col:11> 'int' lvalue ->cached_lineno_count 0xa416a40
      (CXXThisExpr 0xa41eb28 <col:5> 'struct tokenizer_t *' this))
    (IntegerLiteral 0xa41eb58 <col:33> 'int' 0))
  (CallExpr 0xa41ec18 <line:116:5, col:18> 'void'
    (ImplicitCastExpr 0xa41ec08 <col:5> 'void (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa41ebd0 <col:5> 'void (struct tokenizer_t *)' lvalue Function 0xa416db0 'tok_next' 'void (struct tokenizer_t *)'))
    (CXXThisExpr 0xa41ebc0 <col:14> 'struct tokenizer_t *' this)))


enum token_type tok_last_type(tokenizer_t *tok) (CompoundStmt 0xa41f4d0 <../codeBase/fish-shell-master/tokenizer.cpp:120:1, line:125:1>
  (IfStmt 0xa41f080 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa41eda8 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41ed98 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa41ed88 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa41ed70 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa41ed54 <../codeBase/fish-shell-master/tokenizer.cpp:121:11> 'struct tokenizer_t *' lvalue ParmVar 0xa41ec90 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa41f060 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa41eed8 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa41eec8 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41eeb0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa41edf8 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa41ef08 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41ee10 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa41ef18 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41ee60 <col:20> 'const char [14]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa41ef28 <<scratch space>:151:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41ee90 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa41ef98 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa41ef88 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41ef6c <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa41f018 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa41f008 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41efec <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa41f050 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:121:16>
        (DeclRefExpr 0xa41f034 <col:16> 'enum token_type' EnumConstant 0xa416150 'TOK_ERROR' 'enum token_type')))
    <<<NULL>>>)
  (NullStmt 0xa41f0a0 <col:26>)
  (IfStmt 0xa41f438 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa41f130 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41f120 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa41f110 <col:7, col:11> 'const wchar_t *' <LValueToRValue>
          (ParenExpr 0xa41f0f8 <col:7, col:11> 'const wchar_t *' lvalue
            (MemberExpr 0xa41f0d4 <../codeBase/fish-shell-master/tokenizer.cpp:122:11, col:16> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa41f0c8 <col:11> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa41f0ac <col:11> 'struct tokenizer_t *' lvalue ParmVar 0xa41ec90 'tok' 'struct tokenizer_t *')))))))
    (CompoundStmt 0xa41f418 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa41f290 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa41f280 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41f268 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa41f180 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa41f2c0 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41f198 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa41f2d0 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41f1e8 <col:20> 'const char [14]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa41f2e0 <<scratch space>:152:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41f240 <col:1> 'const char [10]' lvalue "tok->buff")))
      (CallExpr 0xa41f350 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa41f340 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41f324 <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa41f3d0 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa41f3c0 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41f3a4 <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa41f408 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:122:22>
        (DeclRefExpr 0xa41f3ec <col:22> 'enum token_type' EnumConstant 0xa416150 'TOK_ERROR' 'enum token_type')))
    <<<NULL>>>)
  (NullStmt 0xa41f458 <col:32>)
  (ReturnStmt 0xa41f4c0 <line:124:5, col:17>
    (ImplicitCastExpr 0xa41f4b0 <col:12, col:17> 'enum token_type':'enum token_type' <LValueToRValue>
      (MemberExpr 0xa41f48c <col:12, col:17> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
        (ImplicitCastExpr 0xa41f480 <col:12> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa41f464 <col:12> 'struct tokenizer_t *' lvalue ParmVar 0xa41ec90 'tok' 'struct tokenizer_t *'))))))


const wchar_t *tok_last(tokenizer_t *tok) (CompoundStmt 0xa41fa08 <../codeBase/fish-shell-master/tokenizer.cpp:128:1, line:132:1>
  (IfStmt 0xa41f930 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa41f628 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41f618 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa41f608 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa41f5f0 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa41f5d4 <../codeBase/fish-shell-master/tokenizer.cpp:129:11> 'struct tokenizer_t *' lvalue ParmVar 0xa41f510 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa41f910 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa41f778 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa41f768 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41f750 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa41f678 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa41f7a8 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41f690 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa41f7b8 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41f720 <col:20> 'const char [9]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa41f7c8 <<scratch space>:153:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41f730 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa41f838 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa41f828 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41f80c <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa41f8b8 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa41f8a8 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41f88c <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa41f900 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:129:16>
        (ImplicitCastExpr 0xa41f8f0 <col:16> 'const wchar_t *' <NullToPointer>
          (IntegerLiteral 0xa41f8d8 <col:16> 'int' 0))))
    <<<NULL>>>)
  (NullStmt 0xa41f950 <col:18>)
  (ReturnStmt 0xa41f9f8 <line:131:5, col:34>
    (CXXMemberCallExpr 0xa41f9c8 <col:12, col:34> 'const wchar_t *'
      (MemberExpr 0xa41f9a4 <col:12, col:28> '<bound member function type>' .c_str 0xa189580
        (ImplicitCastExpr 0xa41f9e8 <col:12, col:17> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
          (MemberExpr 0xa41f984 <col:12, col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
            (ImplicitCastExpr 0xa41f978 <col:12> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa41f95c <col:12> 'struct tokenizer_t *' lvalue ParmVar 0xa41f510 'tok' 'struct tokenizer_t *'))))))))


int tok_has_next(tokenizer_t *tok) (CompoundStmt 0xa420228 <../codeBase/fish-shell-master/tokenizer.cpp:135:1, line:144:1>
  (IfStmt 0xa41fe10 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa41fb58 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41fb48 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa41fb38 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa41fb20 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa41fb04 <../codeBase/fish-shell-master/tokenizer.cpp:139:11> 'struct tokenizer_t *' lvalue ParmVar 0xa41fa40 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa41fdf0 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa41fc68 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa41fc58 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41fc40 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa41fba8 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa41fc98 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41fbc0 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa41fca8 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41fc10 <col:20> 'const char [13]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa41fcb8 <<scratch space>:154:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41fc20 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa41fd28 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa41fd18 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41fcfc <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa41fda8 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa41fd98 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41fd7c <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa41fde0 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:139:16>
        (IntegerLiteral 0xa41fdc8 <col:16> 'int' 1)))
    <<<NULL>>>)
  (NullStmt 0xa41fe30 <col:18>)
  (IfStmt 0xa420180 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa41fec0 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa41feb0 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa41fea0 <col:7, col:11> 'const wchar_t *' <LValueToRValue>
          (ParenExpr 0xa41fe88 <col:7, col:11> 'const wchar_t *' lvalue
            (MemberExpr 0xa41fe64 <../codeBase/fish-shell-master/tokenizer.cpp:140:11, col:16> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa41fe58 <col:11> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa41fe3c <col:11> 'struct tokenizer_t *' lvalue ParmVar 0xa41fa40 'tok' 'struct tokenizer_t *')))))))
    (CompoundStmt 0xa420160 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa41ffd8 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa41ffc8 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa41ffb0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa41ff10 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa420008 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41ff28 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa420018 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa41ff78 <col:20> 'const char [13]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa420028 <<scratch space>:155:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa41ff88 <col:1> 'const char [10]' lvalue "tok->buff")))
      (CallExpr 0xa420098 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa420088 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42006c <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa420118 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa420108 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4200ec <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa420150 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:140:22>
        (IntegerLiteral 0xa420138 <col:22> 'int' 1)))
    <<<NULL>>>)
  (NullStmt 0xa4201a0 <col:24>)
  (ReturnStmt 0xa420218 <line:143:5, col:19>
    (ImplicitCastExpr 0xa420208 <col:14, col:19> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa4201f8 <col:14, col:19> '_Bool' <LValueToRValue>
        (MemberExpr 0xa4201d4 <col:14, col:19> '_Bool' lvalue ->has_next 0xa416880
          (ImplicitCastExpr 0xa4201c8 <col:14> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa4201ac <col:14> 'struct tokenizer_t *' lvalue ParmVar 0xa41fa40 'tok' 'struct tokenizer_t *')))))))


int line_number_of_character_at_offset(size_t offset) (CompoundStmt 0xa420db8 <../codeBase/fish-shell-master/tokenizer.cpp:147:1, line:180:1>
  (DeclStmt 0xa4203e8 <line:150:5, col:35>
    0xa420370 "const wchar_t *str =
      (ImplicitCastExpr 0xa4203d8 <col:26> 'const wchar_t *' <LValueToRValue>
        (MemberExpr 0xa4203b8 <col:26> 'const wchar_t *' lvalue ->orig_buff 0xa416760
          (CXXThisExpr 0xa4203a8 <col:26> 'struct tokenizer_t *' this)))")
  (IfStmt 0xa420470 <line:151:5, line:152:16>
    <<<NULL>>>
    (UnaryOperator 0xa420430 <line:151:9, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa420420 <col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa420410 <col:11> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa4203f8 <col:11> 'const wchar_t *' lvalue Var 0xa420370 'str' 'const wchar_t *'))))
    (ReturnStmt 0xa420460 <line:152:9, col:16>
      (IntegerLiteral 0xa420448 <col:16> 'int' 0))
    <<<NULL>>>)
  (IfStmt 0xa420520 <line:155:5, line:156:16>
    <<<NULL>>>
    (BinaryOperator 0xa4204e0 <line:155:9, col:19> '_Bool' '=='
      (ImplicitCastExpr 0xa4204c0 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa42048c <col:9> 'size_t':'unsigned int' lvalue ParmVar 0xa420270 'offset' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa4204d0 <col:19> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa4204a8 <col:19> 'int' 0)))
    (ReturnStmt 0xa420510 <line:156:9, col:16>
      (IntegerLiteral 0xa4204f8 <col:16> 'int' 1))
    <<<NULL>>>)
  (DeclStmt 0xa420588 <line:158:5, col:13>
    0xa420550 "size_t i")
  (IfStmt 0xa420d18 <line:159:5, line:178:5>
    <<<NULL>>>
    (BinaryOperator 0xa420600 <line:159:9, col:18> '_Bool' '>'
      (ImplicitCastExpr 0xa4205e0 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa420598 <col:9> 'size_t':'unsigned int' lvalue ParmVar 0xa420270 'offset' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa4205f0 <col:18> 'size_t':'unsigned int' <LValueToRValue>
        (MemberExpr 0xa4205c0 <col:18> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
          (CXXThisExpr 0xa4205b0 <col:18> 'struct tokenizer_t *' this))))
    (CompoundStmt 0xa420980 <line:160:5, line:168:5>
      (ForStmt 0xa4208e8 <line:161:9, line:166:9>
        (BinaryOperator 0xa420670 <line:161:14, col:18> 'size_t':'unsigned int' lvalue '='
          (DeclRefExpr 0xa420618 <col:14> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int')
          (ImplicitCastExpr 0xa420660 <col:18> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0xa420640 <col:18> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
              (CXXThisExpr 0xa420630 <col:18> 'struct tokenizer_t *' this))))
        <<<NULL>>>
        (BinaryOperator 0xa420778 <col:40, col:52> '_Bool' '&&'
          (ImplicitCastExpr 0xa420768 <col:40, col:45> '_Bool' <IntegralToBoolean>
            (ImplicitCastExpr 0xa420758 <col:40, col:45> 'wchar_t' <LValueToRValue>
              (ArraySubscriptExpr 0xa4206d8 <col:40, col:45> 'const wchar_t' lvalue
                (ImplicitCastExpr 0xa4206b8 <col:40> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa420688 <col:40> 'const wchar_t *' lvalue Var 0xa420370 'str' 'const wchar_t *'))
                (ImplicitCastExpr 0xa4206c8 <col:44> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa4206a0 <col:44> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int')))))
          (BinaryOperator 0xa420740 <col:50, col:52> '_Bool' '<'
            (ImplicitCastExpr 0xa420720 <col:50> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa4206ec <col:50> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa420730 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa420704 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0xa420270 'offset' 'size_t':'unsigned int'))))
        (UnaryOperator 0xa4207a8 <col:60, col:61> 'size_t':'unsigned int' postfix '++'
          (DeclRefExpr 0xa420790 <col:60> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))
        (CompoundStmt 0xa4208d0 <line:162:9, line:166:9>
          (IfStmt 0xa4208b0 <line:164:13, line:165:36>
            <<<NULL>>>
            (BinaryOperator 0xa420850 <line:164:17, col:27> '_Bool' '=='
              (ImplicitCastExpr 0xa420840 <col:17, col:22> 'wchar_t' <LValueToRValue>
                (ArraySubscriptExpr 0xa420810 <col:17, col:22> 'const wchar_t' lvalue
                  (ImplicitCastExpr 0xa4207f0 <col:17> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa4207bc <col:17> 'const wchar_t *' lvalue Var 0xa420370 'str' 'const wchar_t *'))
                  (ImplicitCastExpr 0xa420800 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa4207d4 <col:21> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))))
              (CharacterLiteral 0xa420828 <col:27> 'wchar_t'10))
            (UnaryOperator 0xa420898 <line:165:17, col:36> 'int' postfix '++'
              (MemberExpr 0xa420878 <col:17> 'int' lvalue ->cached_lineno_count 0xa416a40
                (CXXThisExpr 0xa420868 <col:17> 'struct tokenizer_t *' this)))
            <<<NULL>>>)))
      (BinaryOperator 0xa420968 <line:167:9, col:32> 'size_t':'unsigned int' lvalue '='
        (MemberExpr 0xa420920 <col:9> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
          (CXXThisExpr 0xa420910 <col:9> 'struct tokenizer_t *' this))
        (ImplicitCastExpr 0xa420958 <col:32> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa420940 <col:32> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))))
    (IfStmt 0xa420cf8 <line:169:10, line:178:5>
      <<<NULL>>>
      (BinaryOperator 0xa420a00 <line:169:14, col:23> '_Bool' '<'
        (ImplicitCastExpr 0xa4209e0 <col:14> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa420998 <col:14> 'size_t':'unsigned int' lvalue ParmVar 0xa420270 'offset' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa4209f0 <col:23> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0xa4209c0 <col:23> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
            (CXXThisExpr 0xa4209b0 <col:23> 'struct tokenizer_t *' this))))
      (CompoundStmt 0xa420ce0 <line:170:5, line:178:5>
        (ForStmt 0xa420c48 <line:172:9, line:176:9>
          (BinaryOperator 0xa420a58 <line:172:14, col:18> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa420a18 <col:14> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa420a48 <col:18> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa420a30 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0xa420270 'offset' 'size_t':'unsigned int')))
          <<<NULL>>>
          (BinaryOperator 0xa420ad8 <col:26, col:30> '_Bool' '<'
            (ImplicitCastExpr 0xa420ab8 <col:26> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa420a70 <col:26> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa420ac8 <col:30> 'size_t':'unsigned int' <LValueToRValue>
              (MemberExpr 0xa420a98 <col:30> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
                (CXXThisExpr 0xa420a88 <col:30> 'struct tokenizer_t *' this))))
          (UnaryOperator 0xa420b08 <col:52, col:53> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa420af0 <col:52> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))
          (CompoundStmt 0xa420c30 <line:173:9, line:176:9>
            (IfStmt 0xa420c10 <line:174:13, line:175:36>
              <<<NULL>>>
              (BinaryOperator 0xa420bb0 <line:174:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0xa420ba0 <col:17, col:22> 'wchar_t' <LValueToRValue>
                  (ArraySubscriptExpr 0xa420b70 <col:17, col:22> 'const wchar_t' lvalue
                    (ImplicitCastExpr 0xa420b50 <col:17> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa420b1c <col:17> 'const wchar_t *' lvalue Var 0xa420370 'str' 'const wchar_t *'))
                    (ImplicitCastExpr 0xa420b60 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa420b34 <col:21> 'size_t':'unsigned int' lvalue Var 0xa420550 'i' 'size_t':'unsigned int'))))
                (CharacterLiteral 0xa420b88 <col:27> 'wchar_t'10))
              (UnaryOperator 0xa420bf8 <line:175:17, col:36> 'int' postfix '--'
                (MemberExpr 0xa420bd8 <col:17> 'int' lvalue ->cached_lineno_count 0xa416a40
                  (CXXThisExpr 0xa420bc8 <col:17> 'struct tokenizer_t *' this)))
              <<<NULL>>>)))
        (BinaryOperator 0xa420cc8 <line:177:9, col:32> 'size_t':'unsigned int' lvalue '='
          (MemberExpr 0xa420c80 <col:9> 'size_t':'unsigned int' lvalue ->cached_lineno_offset 0xa416a00
            (CXXThisExpr 0xa420c70 <col:9> 'struct tokenizer_t *' this))
          (ImplicitCastExpr 0xa420cb8 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa420ca0 <col:32> 'size_t':'unsigned int' lvalue ParmVar 0xa420270 'offset' 'size_t':'unsigned int'))))
      <<<NULL>>>))
  (ReturnStmt 0xa420da8 <line:179:5, col:34>
    (BinaryOperator 0xa420d90 <col:12, col:34> 'int' '+'
      (ImplicitCastExpr 0xa420d80 <col:12> 'int' <LValueToRValue>
        (MemberExpr 0xa420d48 <col:12> 'int' lvalue ->cached_lineno_count 0xa416a40
          (CXXThisExpr 0xa420d38 <col:12> 'struct tokenizer_t *' this)))
      (IntegerLiteral 0xa420d68 <col:34> 'int' 1))))


bool tok_is_string_character(wchar_t c, bool is_first) (CompoundStmt 0xa4212a8 <../codeBase/fish-shell-master/tokenizer.cpp:186:1, line:210:1>
  (SwitchStmt 0xa420f20 <line:187:5, line:209:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa420f10 <line:187:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa420ef8 <col:13> 'wchar_t' lvalue ParmVar 0xa420df0 'c' 'wchar_t'))
    (CompoundStmt 0xa421288 <line:188:5, line:209:5>
      (CaseStmt 0xa420f58 <line:190:9, line:201:20>
        (CharacterLiteral 0xa420f40 <line:190:14> 'wchar_t'0)
        <<<NULL>>>
        (CaseStmt 0xa420f90 <line:191:9, line:201:20>
          (CharacterLiteral 0xa420f78 <line:191:14> 'wchar_t'32)
          <<<NULL>>>
          (CaseStmt 0xa420fc8 <line:192:9, line:201:20>
            (CharacterLiteral 0xa420fb0 <line:192:14> 'wchar_t'10)
            <<<NULL>>>
            (CaseStmt 0xa421000 <line:193:9, line:201:20>
              (CharacterLiteral 0xa420fe8 <line:193:14> 'wchar_t'124)
              <<<NULL>>>
              (CaseStmt 0xa421038 <line:194:9, line:201:20>
                (CharacterLiteral 0xa421020 <line:194:14> 'wchar_t'9)
                <<<NULL>>>
                (CaseStmt 0xa421070 <line:195:9, line:201:20>
                  (CharacterLiteral 0xa421058 <line:195:14> 'wchar_t'59)
                  <<<NULL>>>
                  (CaseStmt 0xa4210a8 <line:196:9, line:201:20>
                    (CharacterLiteral 0xa421090 <line:196:14> 'wchar_t'35)
                    <<<NULL>>>
                    (CaseStmt 0xa4210e0 <line:197:9, line:201:20>
                      (CharacterLiteral 0xa4210c8 <line:197:14> 'wchar_t'13)
                      <<<NULL>>>
                      (CaseStmt 0xa421118 <line:198:9, line:201:20>
                        (CharacterLiteral 0xa421100 <line:198:14> 'wchar_t'60)
                        <<<NULL>>>
                        (CaseStmt 0xa421150 <line:199:9, line:201:20>
                          (CharacterLiteral 0xa421138 <line:199:14> 'wchar_t'62)
                          <<<NULL>>>
                          (CaseStmt 0xa421188 <line:200:9, line:201:20>
                            (CharacterLiteral 0xa421170 <line:200:14> 'wchar_t'38)
                            <<<NULL>>>
                            (ReturnStmt 0xa4211b8 <line:201:13, col:20>
                              (CXXBoolLiteralExpr 0xa4211a8 <col:20> '_Bool' false)))))))))))))
      (CaseStmt 0xa4211e0 <line:204:9, line:205:22>
        (CharacterLiteral 0xa4211c8 <line:204:14> 'wchar_t'94)
        <<<NULL>>>
        (ReturnStmt 0xa421240 <line:205:13, col:22>
          (UnaryOperator 0xa421228 <col:20, col:22> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa421218 <col:22> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa421200 <col:22> '_Bool' lvalue ParmVar 0xa420e30 'is_first' '_Bool')))))
      (DefaultStmt 0xa421270 <line:207:9, line:208:20>
        (ReturnStmt 0xa421260 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa421250 <col:20> '_Bool' true))))))


static int myal(wchar_t c) (CompoundStmt 0xa421590 <../codeBase/fish-shell-master/tokenizer.cpp:219:1, line:221:1>
  (ReturnStmt 0xa421580 <line:220:5, col:53>
    (ImplicitCastExpr 0xa421570 <col:12, col:53> 'int' <IntegralCast>
      (BinaryOperator 0xa421558 <col:12, col:53> '_Bool' '||'
        (ParenExpr 0xa421460 <col:12, col:31> '_Bool'
          (BinaryOperator 0xa421448 <col:13, col:27> '_Bool' '&&'
            (BinaryOperator 0xa4213d8 <col:13, col:16> '_Bool' '>='
              (ImplicitCastExpr 0xa4213c8 <col:13> 'wchar_t' <LValueToRValue>
                (DeclRefExpr 0xa421394 <col:13> 'wchar_t' lvalue ParmVar 0xa4212d0 'c' 'wchar_t'))
              (CharacterLiteral 0xa4213b0 <col:16> 'wchar_t'97))
            (BinaryOperator 0xa421430 <col:24, col:27> '_Bool' '<='
              (ImplicitCastExpr 0xa421420 <col:24> 'wchar_t' <LValueToRValue>
                (DeclRefExpr 0xa4213f0 <col:24> 'wchar_t' lvalue ParmVar 0xa4212d0 'c' 'wchar_t'))
              (CharacterLiteral 0xa421408 <col:27> 'wchar_t'122))))
        (ParenExpr 0xa421540 <col:36, col:53> '_Bool'
          (BinaryOperator 0xa421528 <col:37, col:49> '_Bool' '&&'
            (BinaryOperator 0xa4214b8 <col:37, col:40> '_Bool' '>='
              (ImplicitCastExpr 0xa4214a8 <col:37> 'wchar_t' <LValueToRValue>
                (DeclRefExpr 0xa421474 <col:37> 'wchar_t' lvalue ParmVar 0xa4212d0 'c' 'wchar_t'))
              (CharacterLiteral 0xa421490 <col:40> 'wchar_t'65))
            (BinaryOperator 0xa421510 <col:46, col:49> '_Bool' '<='
              (ImplicitCastExpr 0xa421500 <col:46> 'wchar_t' <LValueToRValue>
                (DeclRefExpr 0xa4214d0 <col:46> 'wchar_t' lvalue ParmVar 0xa4212d0 'c' 'wchar_t'))
              (CharacterLiteral 0xa4214e8 <col:49> 'wchar_t'90))))))))


static void read_string(tokenizer_t *tok) (CompoundStmt 0xa4265d8 <../codeBase/fish-shell-master/tokenizer.cpp:227:1, line:419:1>
  (DeclStmt 0xa4216c8 <line:228:5, col:25>
    0xa421690 "const wchar_t *start")
  (DeclStmt 0xa421728 <line:229:5, col:13>
    0xa4216f0 "long len")
  (DeclStmt 0xa4217a0 <line:230:5, col:18>
    0xa421750 "int do_loop =
      (IntegerLiteral 0xa421788 <col:17> 'int' 1)")
  (DeclStmt 0xa421810 <line:231:5, col:22>
    0xa4217c0 "int paran_count =
      (IntegerLiteral 0xa4217f8 <col:21> 'int' 0)")
  (BinaryOperator 0xa421890 <line:233:5, col:18> 'const wchar_t *' lvalue '='
    (DeclRefExpr 0xa421820 <col:5> 'const wchar_t *' lvalue Var 0xa421690 'start' 'const wchar_t *')
    (ImplicitCastExpr 0xa421880 <col:13, col:18> 'const wchar_t *' <LValueToRValue>
      (MemberExpr 0xa42185c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
        (ImplicitCastExpr 0xa421850 <col:13> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa421838 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
  (DeclStmt 0xa4218f8 <line:234:5, col:25>
    0xa4218b0 "bool is_first =
      (CXXBoolLiteralExpr 0xa4218e8 <col:21> '_Bool' true)")
  (DeclStmt 0xa421b88 <line:236:5, line:242:31>
    0xa421910 "enum tok_mode_t;"
    0xa421b30 "enum tok_mode_t mode =
      (DeclRefExpr 0xa421b64 <col:14> 'enum tok_mode_t' EnumConstant 0xa421990 'mode_regular_text' 'enum tok_mode_t')")
  (WhileStmt 0xa4247f8 <line:244:5, line:394:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa421bb0 <line:244:12> '_Bool' <IntegralToBoolean>
      (IntegerLiteral 0xa421b98 <col:12> 'int' 1))
    (CompoundStmt 0xa4247d8 <line:245:5, line:394:5>
      (IfStmt 0xa4246a0 <line:246:9, line:386:9>
        <<<NULL>>>
        (UnaryOperator 0xa421ce8 <line:246:13, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa421cd8 <col:14, col:29> '_Bool' <IntegralToBoolean>
            (CallExpr 0xa421ca8 <col:14, col:29> 'int'
              (ImplicitCastExpr 0xa421c98 <col:14> 'int (*)(wchar_t)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa421c64 <col:14> 'int (wchar_t)' lvalue Function 0xa421330 'myal' 'int (wchar_t)'))
              (ImplicitCastExpr 0xa421cc8 <col:19, col:25> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa421c50 <col:19, col:25> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa421c40 <col:20, col:25> 'const wchar_t *' <LValueToRValue>
                    (MemberExpr 0xa421c1c <col:20, col:25> 'const wchar_t *' lvalue ->buff 0xa416720
                      (ImplicitCastExpr 0xa421c10 <col:20> 'struct tokenizer_t *' <LValueToRValue>
                        (DeclRefExpr 0xa421bf4 <col:20> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))))))
        (CompoundStmt 0xa424688 <line:247:9, line:386:9>
          (IfStmt 0xa422580 <line:248:13, line:268:13>
            <<<NULL>>>
            (BinaryOperator 0xa421d98 <line:248:17, col:31> '_Bool' '=='
              (ImplicitCastExpr 0xa421d88 <col:17, col:23> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa421d58 <col:17, col:23> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa421d48 <col:18, col:23> 'const wchar_t *' <LValueToRValue>
                    (MemberExpr 0xa421d24 <col:18, col:23> 'const wchar_t *' lvalue ->buff 0xa416720
                      (ImplicitCastExpr 0xa421d18 <col:18> 'struct tokenizer_t *' <LValueToRValue>
                        (DeclRefExpr 0xa421cfc <col:18> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
              (CharacterLiteral 0xa421d70 <col:31> 'wchar_t'92))
            (CompoundStmt 0xa422560 <line:249:13, line:268:13>
              (UnaryOperator 0xa421df8 <line:250:17, col:26> 'const wchar_t *' postfix '++'
                (MemberExpr 0xa421dd4 <col:17, col:22> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa421dc8 <col:17> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa421db0 <col:17> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
              (IfStmt 0xa4224d8 <line:251:17, line:264:17>
                <<<NULL>>>
                (BinaryOperator 0xa421ea8 <line:251:21, col:35> '_Bool' '=='
                  (ImplicitCastExpr 0xa421e98 <col:21, col:27> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa421e68 <col:21, col:27> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa421e58 <col:22, col:27> 'const wchar_t *' <LValueToRValue>
                        (MemberExpr 0xa421e34 <col:22, col:27> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa421e28 <col:22> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa421e0c <col:22> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                  (CharacterLiteral 0xa421e80 <col:35> 'wchar_t'0))
                (CompoundStmt 0xa4224c0 <line:252:17, line:264:17>
                  (IfStmt 0xa4224a0 <line:253:21, line:263:21>
                    <<<NULL>>>
                    (ParenExpr 0xa421f30 <line:253:25, col:49> '_Bool'
                      (UnaryOperator 0xa421f18 <col:26, col:32> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa421f08 <col:27, col:32> '_Bool' <LValueToRValue>
                          (MemberExpr 0xa421ee4 <col:27, col:32> '_Bool' lvalue ->accept_unfinished 0xa4168c0
                            (ImplicitCastExpr 0xa421ed8 <col:27> 'struct tokenizer_t *' <LValueToRValue>
                              (DeclRefExpr 0xa421ec0 <col:27> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                    (CompoundStmt 0xa4223c8 <line:254:21, line:257:21>
                      (DoStmt 0xa4223a0 <line:27:33, col:106>
                        (CompoundStmt 0xa422360 <col:36, col:96>
                          (CallExpr 0xa422318 <col:38, col:93> 'void'
                            (ImplicitCastExpr 0xa422308 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                              (DeclRefExpr 0xa4222cc <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
                            (ImplicitCastExpr 0xa422340 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                              (ParenExpr 0xa421f98 <col:53, col:55> 'struct tokenizer_t *' lvalue
                                (DeclRefExpr 0xa421f7c <line:255:40> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                            (ImplicitCastExpr 0xa422350 <line:27:58, col:60> 'int' <IntegralCast>
                              (ParenExpr 0xa421fc8 <col:58, col:60> 'enum tokenizer_error'
                                (DeclRefExpr 0xa421fac <line:255:45> 'enum tokenizer_error' EnumConstant 0xa416530 'TOK_UNTERMINATED_ESCAPE' 'enum tokenizer_error')))
                            (ConditionalOperator 0xa4222b0 <line:27:63, col:92> 'const wchar_t *'
                              (ImplicitCastExpr 0xa422290 <col:63, col:68> '_Bool' <LValueToRValue>
                                (MemberExpr 0xa42201c <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                                  (ImplicitCastExpr 0xa422010 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                                    (ParenExpr 0xa421ff8 <col:63, col:65> 'struct tokenizer_t *' lvalue
                                      (DeclRefExpr 0xa421fdc <line:255:40> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
                              (ImplicitCastExpr 0xa4222a0 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                                (StringLiteral 0xa422080 <col:84> 'const wchar_t [1]' lvalue L""))
                              (ParenExpr 0xa422278 <col:90, col:92> 'const wchar_t *'
                                (CallExpr 0xa422248 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                                  (ImplicitCastExpr 0xa422238 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                                    (DeclRefExpr 0xa422200 <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                                  (ImplicitCastExpr 0xa422268 <../codeBase/fish-shell-master/tokenizer.cpp:32:24> 'const wchar_t *' <ArrayToPointerDecay>
                                    (StringLiteral 0xa422120 <col:24> 'const wchar_t [50]' lvalue L"U\000\000\000n\000\000\000e\000\000\000x\000\000\000p\000\000\000e\000\000\000c\000\000\000t\000\000\000e\000\000\000d\000\000\000 \000\000\000e\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000f\000\000\000 \000\000\000s\000\000\000t\000\000\000r\000\000\000i\000\000\000n\000\000\000g\000\000\000,\000\000\000 \000\000\000q\000\000\000u\000\000\000o\000\000\000t\000\000\000e\000\000\000s\000\000\000 \000\000\000a\000\000\000r\000\000\000e\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000b\000\000\000a\000\000\000l\000\000\000a\000\000\000n\000\000\000c\000\000\000e\000\000\000d\000\000\000")))))))
                        (ImplicitCastExpr 0xa422390 <line:27:105> '_Bool' <IntegralToBoolean>
                          (IntegerLiteral 0xa422378 <col:105> 'int' 0)))
                      (ReturnStmt 0xa4223b8 <line:256:25>))
                    (CompoundStmt 0xa422488 <line:259:21, line:263:21>
                      (UnaryOperator 0xa422428 <line:261:25, col:34> 'const wchar_t *' postfix '--'
                        (MemberExpr 0xa422404 <col:25, col:30> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa4223f8 <col:25> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa4223e0 <col:25> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
                      (BinaryOperator 0xa422470 <line:262:25, col:35> 'int' lvalue '='
                        (DeclRefExpr 0xa42243c <col:25> 'int' lvalue Var 0xa421750 'do_loop' 'int')
                        (IntegerLiteral 0xa422458 <col:35> 'int' 0)))))
                <<<NULL>>>)
              (UnaryOperator 0xa422540 <line:266:17, col:26> 'const wchar_t *' postfix '++'
                (MemberExpr 0xa42251c <col:17, col:22> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa422510 <col:17> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa4224f4 <col:17> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
              (ContinueStmt 0xa422558 <line:267:17>))
            <<<NULL>>>)
          (SwitchStmt 0xa4225d8 <line:270:13, line:385:13>
            <<<NULL>>>
            (ImplicitCastExpr 0xa4225c8 <line:270:21> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa4225b8 <col:21> 'enum tok_mode_t':'enum tok_mode_t' <LValueToRValue>
                (DeclRefExpr 0xa42259c <col:21> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')))
            (CompoundStmt 0xa424620 <line:271:13, line:385:13>
              (CaseStmt 0xa422610 <line:272:17, line:324:17>
                (ImplicitCastExpr 0xa424678 <line:272:22> 'int' <IntegralCast>
                  (DeclRefExpr 0xa4225f4 <col:22> 'enum tok_mode_t' EnumConstant 0xa421990 'mode_regular_text' 'enum tok_mode_t'))
                <<<NULL>>>
                (CompoundStmt 0xa4235a0 <line:273:17, line:324:17>
                  (SwitchStmt 0xa4226b0 <line:274:21, line:322:21>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa4226a0 <line:274:29, col:35> 'wchar_t' <LValueToRValue>
                      (UnaryOperator 0xa422688 <col:29, col:35> 'const wchar_t' lvalue prefix '*'
                        (ImplicitCastExpr 0xa422678 <col:30, col:35> 'const wchar_t *' <LValueToRValue>
                          (MemberExpr 0xa422654 <col:30, col:35> 'const wchar_t *' lvalue ->buff 0xa416720
                            (ImplicitCastExpr 0xa422648 <col:30> 'struct tokenizer_t *' <LValueToRValue>
                              (DeclRefExpr 0xa422630 <col:30> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                    (CompoundStmt 0xa423578 <line:275:21, line:322:21>
                      (CaseStmt 0xa4226e8 <line:276:25, line:281:25>
                        (CharacterLiteral 0xa4226d0 <line:276:30> 'wchar_t'40)
                        <<<NULL>>>
                        (CompoundStmt 0xa4227d8 <line:277:25, line:281:25>
                          (BinaryOperator 0xa422738 <line:278:29, col:41> 'int' lvalue '='
                            (DeclRefExpr 0xa422708 <col:29> 'int' lvalue Var 0xa4217c0 'paran_count' 'int')
                            (IntegerLiteral 0xa422720 <col:41> 'int' 1))
                          (BinaryOperator 0xa4227b8 <line:279:29, col:36> 'enum tok_mode_t':'enum tok_mode_t' lvalue '='
                            (DeclRefExpr 0xa422750 <col:29> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')
                            (DeclRefExpr 0xa422768 <col:36> 'enum tok_mode_t' EnumConstant 0xa4219e0 'mode_subshell' 'enum tok_mode_t'))
                          (BreakStmt 0xa4227d0 <line:280:29>)))
                      (CaseStmt 0xa422810 <line:283:25, line:288:25>
                        (CharacterLiteral 0xa4227f8 <line:283:30> 'wchar_t'91)
                        <<<NULL>>>
                        (CompoundStmt 0xa422938 <line:284:25, line:288:25>
                          (IfStmt 0xa422910 <line:285:29, line:286:40>
                            <<<NULL>>>
                            (BinaryOperator 0xa4228b0 <line:285:33, col:46> '_Bool' '!='
                              (ImplicitCastExpr 0xa422890 <col:33, col:38> 'const wchar_t *' <LValueToRValue>
                                (MemberExpr 0xa422854 <col:33, col:38> 'const wchar_t *' lvalue ->buff 0xa416720
                                  (ImplicitCastExpr 0xa422848 <col:33> 'struct tokenizer_t *' <LValueToRValue>
                                    (DeclRefExpr 0xa422830 <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
                              (ImplicitCastExpr 0xa4228a0 <col:46> 'const wchar_t *' <LValueToRValue>
                                (DeclRefExpr 0xa422874 <col:46> 'const wchar_t *' lvalue Var 0xa421690 'start' 'const wchar_t *')))
                            (BinaryOperator 0xa4228f8 <line:286:33, col:40> 'enum tok_mode_t':'enum tok_mode_t' lvalue '='
                              (DeclRefExpr 0xa4228c8 <col:33> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')
                              (DeclRefExpr 0xa4228e0 <col:40> 'enum tok_mode_t' EnumConstant 0xa421a30 'mode_array_brackets' 'enum tok_mode_t'))
                            <<<NULL>>>)
                          (BreakStmt 0xa422930 <line:287:29>)))
                      (CaseStmt 0xa422968 <line:290:25, line:313:25>
                        (CharacterLiteral 0xa422950 <line:290:30> 'wchar_t'39)
                        <<<NULL>>>
                        (CaseStmt 0xa4229a0 <line:291:25, line:313:25>
                          (CharacterLiteral 0xa422988 <line:291:30> 'wchar_t'34)
                          <<<NULL>>>
                          (CompoundStmt 0xa423330 <line:292:25, line:313:25>
                            (DeclStmt 0xa422b08 <line:294:29, col:70>
                              0xa4229d0 "const wchar_t *end =
                                (ImplicitCastExpr 0xa422af8 <col:50, col:69> 'const wchar_t *' <NoOp>
                                  (CallExpr 0xa422ac8 <col:50, col:69> 'wchar_t *'
                                    (ImplicitCastExpr 0xa422ab8 <col:50> 'wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                                      (DeclRefExpr 0xa422a84 <col:50> 'wchar_t *(const wchar_t *)' lvalue Function 0xa4119b0 'quote_end' 'wchar_t *(const wchar_t *)'))
                                    (ImplicitCastExpr 0xa422ae8 <col:60, col:65> 'const wchar_t *' <LValueToRValue>
                                      (MemberExpr 0xa422a64 <col:60, col:65> 'const wchar_t *' lvalue ->buff 0xa416720
                                        (ImplicitCastExpr 0xa422a58 <col:60> 'struct tokenizer_t *' <LValueToRValue>
                                          (DeclRefExpr 0xa422a3c <col:60> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))")
                            (BinaryOperator 0xa422be0 <line:295:29, col:53> 'wchar_t' lvalue '='
                              (MemberExpr 0xa422b3c <col:29, col:34> 'wchar_t' lvalue ->last_quote 0xa416940
                                (ImplicitCastExpr 0xa422b30 <col:29> 'struct tokenizer_t *' <LValueToRValue>
                                  (DeclRefExpr 0xa422b18 <col:29> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                              (ImplicitCastExpr 0xa422bd0 <col:47, col:53> 'wchar_t' <LValueToRValue>
                                (UnaryOperator 0xa422bb8 <col:47, col:53> 'const wchar_t' lvalue prefix '*'
                                  (ImplicitCastExpr 0xa422ba8 <col:48, col:53> 'const wchar_t *' <LValueToRValue>
                                    (MemberExpr 0xa422b84 <col:48, col:53> 'const wchar_t *' lvalue ->buff 0xa416720
                                      (ImplicitCastExpr 0xa422b78 <col:48> 'struct tokenizer_t *' <LValueToRValue>
                                        (DeclRefExpr 0xa422b5c <col:48> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))))
                            (IfStmt 0xa423308 <line:296:29, line:311:29>
                              <<<NULL>>>
                              (ImplicitCastExpr 0xa422c20 <line:296:33> '_Bool' <PointerToBoolean>
                                (ImplicitCastExpr 0xa422c10 <col:33> 'const wchar_t *' <LValueToRValue>
                                  (DeclRefExpr 0xa422bf8 <col:33> 'const wchar_t *' lvalue Var 0xa4229d0 'end' 'const wchar_t *')))
                              (CompoundStmt 0xa422cf0 <line:297:29, line:299:29>
                                (BinaryOperator 0xa422cd8 <line:298:33, col:54> 'const wchar_t *' lvalue '='
                                  (MemberExpr 0xa422c54 <col:33, col:38> 'const wchar_t *' lvalue ->buff 0xa416720
                                    (ImplicitCastExpr 0xa422c48 <col:33> 'struct tokenizer_t *' <LValueToRValue>
                                      (DeclRefExpr 0xa422c2c <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                                  (ImplicitCastExpr 0xa422cc8 <col:43, col:54> 'const wchar_t *' <NoOp>
                                    (CStyleCastExpr 0xa422cb0 <col:43, col:54> 'wchar_t *' <NoOp>
                                      (ImplicitCastExpr 0xa422ca0 <col:54> 'const wchar_t *' <LValueToRValue>
                                        (DeclRefExpr 0xa422c74 <col:54> 'const wchar_t *' lvalue Var 0xa4229d0 'end' 'const wchar_t *'))))))
                              (CompoundStmt 0xa4232e8 <line:301:29, line:311:29>
                                (CompoundAssignOperator 0xa422e28 <line:302:33, col:62> 'const wchar_t *' lvalue '+=' ComputeLHSTy='const wchar_t *' ComputeResultTy='const wchar_t *'
                                  (MemberExpr 0xa422d2c <col:33, col:38> 'const wchar_t *' lvalue ->buff 0xa416720
                                    (ImplicitCastExpr 0xa422d20 <col:33> 'struct tokenizer_t *' <LValueToRValue>
                                      (DeclRefExpr 0xa422d04 <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                                  (CallExpr 0xa422df8 <col:46, col:62> 'size_t':'unsigned int'
                                    (ImplicitCastExpr 0xa422de8 <col:46> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                                      (DeclRefExpr 0xa422dcc <col:46> 'size_t (const wchar_t *) throw()' lvalue Function 0x9e8cea0 'wcslen' 'size_t (const wchar_t *) throw()'))
                                    (ImplicitCastExpr 0xa422e18 <col:53, col:58> 'const wchar_t *' <LValueToRValue>
                                      (MemberExpr 0xa422dac <col:53, col:58> 'const wchar_t *' lvalue ->buff 0xa416720
                                        (ImplicitCastExpr 0xa422da0 <col:53> 'struct tokenizer_t *' <LValueToRValue>
                                          (DeclRefExpr 0xa422d84 <col:53> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                                (IfStmt 0xa423280 <line:304:33, line:308:33>
                                  <<<NULL>>>
                                  (UnaryOperator 0xa422ea0 <line:304:37, col:44> '_Bool' prefix '!'
                                    (ImplicitCastExpr 0xa422e90 <col:39, col:44> '_Bool' <LValueToRValue>
                                      (MemberExpr 0xa422e6c <col:39, col:44> '_Bool' lvalue ->accept_unfinished 0xa4168c0
                                        (ImplicitCastExpr 0xa422e60 <col:39> 'struct tokenizer_t *' <LValueToRValue>
                                          (DeclRefExpr 0xa422e48 <col:39> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
                                  (CompoundStmt 0xa423268 <line:305:33, line:308:33>
                                    (DoStmt 0xa423240 <line:27:33, col:106>
                                      (CompoundStmt 0xa423200 <col:36, col:96>
                                        (CallExpr 0xa4231b8 <col:38, col:93> 'void'
                                          (ImplicitCastExpr 0xa4231a8 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                                            (DeclRefExpr 0xa42318c <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
                                          (ImplicitCastExpr 0xa4231e0 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                                            (ParenExpr 0xa422f08 <col:53, col:55> 'struct tokenizer_t *' lvalue
                                              (DeclRefExpr 0xa422eec <line:306:52> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                                          (ImplicitCastExpr 0xa4231f0 <line:27:58, col:60> 'int' <IntegralCast>
                                            (ParenExpr 0xa422f38 <col:58, col:60> 'enum tokenizer_error'
                                              (DeclRefExpr 0xa422f1c <line:306:57> 'enum tokenizer_error' EnumConstant 0xa4164b0 'TOK_UNTERMINATED_QUOTE' 'enum tokenizer_error')))
                                          (ConditionalOperator 0xa423170 <line:27:63, col:92> 'const wchar_t *'
                                            (ImplicitCastExpr 0xa423150 <col:63, col:68> '_Bool' <LValueToRValue>
                                              (MemberExpr 0xa422f8c <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                                                (ImplicitCastExpr 0xa422f80 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                                                  (ParenExpr 0xa422f68 <col:63, col:65> 'struct tokenizer_t *' lvalue
                                                    (DeclRefExpr 0xa422f4c <line:306:52> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
                                            (ImplicitCastExpr 0xa423160 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                                              (StringLiteral 0xa422fac <col:84> 'const wchar_t [1]' lvalue L""))
                                            (ParenExpr 0xa423138 <col:90, col:92> 'const wchar_t *'
                                              (CallExpr 0xa423108 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                                                (ImplicitCastExpr 0xa4230f8 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                                                  (DeclRefExpr 0xa4230dc <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                                                (ImplicitCastExpr 0xa423128 <../codeBase/fish-shell-master/tokenizer.cpp:32:24> 'const wchar_t *' <ArrayToPointerDecay>
                                                  (StringLiteral 0xa422ffc <col:24> 'const wchar_t [50]' lvalue L"U\000\000\000n\000\000\000e\000\000\000x\000\000\000p\000\000\000e\000\000\000c\000\000\000t\000\000\000e\000\000\000d\000\000\000 \000\000\000e\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000f\000\000\000 \000\000\000s\000\000\000t\000\000\000r\000\000\000i\000\000\000n\000\000\000g\000\000\000,\000\000\000 \000\000\000q\000\000\000u\000\000\000o\000\000\000t\000\000\000e\000\000\000s\000\000\000 \000\000\000a\000\000\000r\000\000\000e\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000b\000\000\000a\000\000\000l\000\000\000a\000\000\000n\000\000\000c\000\000\000e\000\000\000d\000\000\000")))))))
                                      (ImplicitCastExpr 0xa423230 <line:27:105> '_Bool' <IntegralToBoolean>
                                        (IntegerLiteral 0xa423218 <col:105> 'int' 0)))
                                    (ReturnStmt 0xa423258 <line:307:37>))
                                  <<<NULL>>>)
                                (BinaryOperator 0xa4232d0 <line:309:33, col:43> 'int' lvalue '='
                                  (DeclRefExpr 0xa42329c <col:33> 'int' lvalue Var 0xa421750 'do_loop' 'int')
                                  (IntegerLiteral 0xa4232b8 <col:43> 'int' 0))))
                            (BreakStmt 0xa423328 <line:312:29>))))
                      (DefaultStmt 0xa423560 <line:315:25, line:321:25>
                        (CompoundStmt 0xa423548 <line:316:25, line:321:25>
                          (IfStmt 0xa423528 <line:317:29, line:320:29>
                            <<<NULL>>>
                            (UnaryOperator 0xa4234b0 <line:317:33, col:81> '_Bool' prefix '!'
                              (CallExpr 0xa423468 <col:35, col:81> '_Bool'
                                (ImplicitCastExpr 0xa423458 <col:35> '_Bool (*)(wchar_t, _Bool)' <FunctionToPointerDecay>
                                  (DeclRefExpr 0xa423424 <col:35> '_Bool (wchar_t, _Bool)' lvalue Function 0xa420e90 'tok_is_string_character' '_Bool (wchar_t, _Bool)'))
                                (ImplicitCastExpr 0xa423490 <col:59, col:70> 'wchar_t' <LValueToRValue>
                                  (UnaryOperator 0xa4233f8 <col:59, col:70> 'const wchar_t' lvalue prefix '*'
                                    (ImplicitCastExpr 0xa4233e8 <col:60, col:70> 'const wchar_t *' <LValueToRValue>
                                      (ParenExpr 0xa4233d0 <col:60, col:70> 'const wchar_t *' lvalue
                                        (MemberExpr 0xa4233ac <col:61, col:66> 'const wchar_t *' lvalue ->buff 0xa416720
                                          (ImplicitCastExpr 0xa4233a0 <col:61> 'struct tokenizer_t *' <LValueToRValue>
                                            (DeclRefExpr 0xa423384 <col:61> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))))
                                (ImplicitCastExpr 0xa4234a0 <col:73> '_Bool' <LValueToRValue>
                                  (DeclRefExpr 0xa42340c <col:73> '_Bool' lvalue Var 0xa4218b0 'is_first' '_Bool'))))
                            (CompoundStmt 0xa423510 <line:318:29, line:320:29>
                              (BinaryOperator 0xa4234f8 <line:319:33, col:41> 'int' lvalue '='
                                (DeclRefExpr 0xa4234c4 <col:33> 'int' lvalue Var 0xa421750 'do_loop' 'int')
                                (IntegerLiteral 0xa4234e0 <col:41> 'int' 0)))
                            <<<NULL>>>)))))
                  (BreakStmt 0xa423598 <line:323:21>)))
              (CaseStmt 0xa4235d0 <line:326:17, line:365:21>
                (ImplicitCastExpr 0xa424668 <line:326:22> 'int' <IntegralCast>
                  (DeclRefExpr 0xa4235b8 <col:22> 'enum tok_mode_t' EnumConstant 0xa421a80 'mode_array_brackets_and_subshell' 'enum tok_mode_t'))
                <<<NULL>>>
                (CaseStmt 0xa423608 <line:327:17, line:365:21>
                  (ImplicitCastExpr 0xa424658 <line:327:22> 'int' <IntegralCast>
                    (DeclRefExpr 0xa4235f0 <col:22> 'enum tok_mode_t' EnumConstant 0xa4219e0 'mode_subshell' 'enum tok_mode_t'))
                  <<<NULL>>>
                  (SwitchStmt 0xa4236a8 <line:328:21, line:365:21>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa423698 <line:328:29, col:35> 'wchar_t' <LValueToRValue>
                      (UnaryOperator 0xa423680 <col:29, col:35> 'const wchar_t' lvalue prefix '*'
                        (ImplicitCastExpr 0xa423670 <col:30, col:35> 'const wchar_t *' <LValueToRValue>
                          (MemberExpr 0xa42364c <col:30, col:35> 'const wchar_t *' lvalue ->buff 0xa416720
                            (ImplicitCastExpr 0xa423640 <col:30> 'struct tokenizer_t *' <LValueToRValue>
                              (DeclRefExpr 0xa423628 <col:30> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                    (CompoundStmt 0xa4242f8 <line:329:21, line:365:21>
                      (CaseStmt 0xa4236e0 <line:330:25, line:350:25>
                        (CharacterLiteral 0xa4236c8 <line:330:30> 'wchar_t'39)
                        <<<NULL>>>
                        (CaseStmt 0xa423718 <line:331:25, line:350:25>
                          (CharacterLiteral 0xa423700 <line:331:30> 'wchar_t'34)
                          <<<NULL>>>
                          (CompoundStmt 0xa423fd0 <line:332:25, line:350:25>
                            (DeclStmt 0xa423870 <line:333:29, col:70>
                              0xa423750 "const wchar_t *end =
                                (ImplicitCastExpr 0xa423860 <col:50, col:69> 'const wchar_t *' <NoOp>
                                  (CallExpr 0xa423830 <col:50, col:69> 'wchar_t *'
                                    (ImplicitCastExpr 0xa423820 <col:50> 'wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                                      (DeclRefExpr 0xa423804 <col:50> 'wchar_t *(const wchar_t *)' lvalue Function 0xa4119b0 'quote_end' 'wchar_t *(const wchar_t *)'))
                                    (ImplicitCastExpr 0xa423850 <col:60, col:65> 'const wchar_t *' <LValueToRValue>
                                      (MemberExpr 0xa4237e4 <col:60, col:65> 'const wchar_t *' lvalue ->buff 0xa416720
                                        (ImplicitCastExpr 0xa4237d8 <col:60> 'struct tokenizer_t *' <LValueToRValue>
                                          (DeclRefExpr 0xa4237bc <col:60> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))")
                            (IfStmt 0xa423fa8 <line:334:29, line:347:29>
                              <<<NULL>>>
                              (ImplicitCastExpr 0xa4238a8 <line:334:33> '_Bool' <PointerToBoolean>
                                (ImplicitCastExpr 0xa423898 <col:33> 'const wchar_t *' <LValueToRValue>
                                  (DeclRefExpr 0xa423880 <col:33> 'const wchar_t *' lvalue Var 0xa423750 'end' 'const wchar_t *')))
                              (CompoundStmt 0xa423978 <line:335:29, line:337:29>
                                (BinaryOperator 0xa423960 <line:336:33, col:54> 'const wchar_t *' lvalue '='
                                  (MemberExpr 0xa4238dc <col:33, col:38> 'const wchar_t *' lvalue ->buff 0xa416720
                                    (ImplicitCastExpr 0xa4238d0 <col:33> 'struct tokenizer_t *' <LValueToRValue>
                                      (DeclRefExpr 0xa4238b4 <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                                  (ImplicitCastExpr 0xa423950 <col:43, col:54> 'const wchar_t *' <NoOp>
                                    (CStyleCastExpr 0xa423938 <col:43, col:54> 'wchar_t *' <NoOp>
                                      (ImplicitCastExpr 0xa423928 <col:54> 'const wchar_t *' <LValueToRValue>
                                        (DeclRefExpr 0xa4238fc <col:54> 'const wchar_t *' lvalue Var 0xa423750 'end' 'const wchar_t *'))))))
                              (CompoundStmt 0xa423f88 <line:339:29, line:347:29>
                                (CompoundAssignOperator 0xa423ab0 <line:340:33, col:62> 'const wchar_t *' lvalue '+=' ComputeLHSTy='const wchar_t *' ComputeResultTy='const wchar_t *'
                                  (MemberExpr 0xa4239b4 <col:33, col:38> 'const wchar_t *' lvalue ->buff 0xa416720
                                    (ImplicitCastExpr 0xa4239a8 <col:33> 'struct tokenizer_t *' <LValueToRValue>
                                      (DeclRefExpr 0xa42398c <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                                  (CallExpr 0xa423a80 <col:46, col:62> 'size_t':'unsigned int'
                                    (ImplicitCastExpr 0xa423a70 <col:46> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                                      (DeclRefExpr 0xa423a54 <col:46> 'size_t (const wchar_t *) throw()' lvalue Function 0x9e8cea0 'wcslen' 'size_t (const wchar_t *) throw()'))
                                    (ImplicitCastExpr 0xa423aa0 <col:53, col:58> 'const wchar_t *' <LValueToRValue>
                                      (MemberExpr 0xa423a34 <col:53, col:58> 'const wchar_t *' lvalue ->buff 0xa416720
                                        (ImplicitCastExpr 0xa423a28 <col:53> 'struct tokenizer_t *' <LValueToRValue>
                                          (DeclRefExpr 0xa423a0c <col:53> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                                (IfStmt 0xa423f20 <line:341:33, line:345:33>
                                  <<<NULL>>>
                                  (ParenExpr 0xa423b40 <line:341:37, col:61> '_Bool'
                                    (UnaryOperator 0xa423b28 <col:38, col:44> '_Bool' prefix '!'
                                      (ImplicitCastExpr 0xa423b18 <col:39, col:44> '_Bool' <LValueToRValue>
                                        (MemberExpr 0xa423af4 <col:39, col:44> '_Bool' lvalue ->accept_unfinished 0xa4168c0
                                          (ImplicitCastExpr 0xa423ae8 <col:39> 'struct tokenizer_t *' <LValueToRValue>
                                            (DeclRefExpr 0xa423ad0 <col:39> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                                  (CompoundStmt 0xa423f08 <line:342:33, line:345:33>
                                    (DoStmt 0xa423ee0 <line:27:33, col:106>
                                      (CompoundStmt 0xa423ea0 <col:36, col:96>
                                        (CallExpr 0xa423e58 <col:38, col:93> 'void'
                                          (ImplicitCastExpr 0xa423e48 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                                            (DeclRefExpr 0xa423e2c <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
                                          (ImplicitCastExpr 0xa423e80 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                                            (ParenExpr 0xa423ba8 <col:53, col:55> 'struct tokenizer_t *' lvalue
                                              (DeclRefExpr 0xa423b8c <line:343:52> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                                          (ImplicitCastExpr 0xa423e90 <line:27:58, col:60> 'int' <IntegralCast>
                                            (ParenExpr 0xa423bd8 <col:58, col:60> 'enum tokenizer_error'
                                              (DeclRefExpr 0xa423bbc <line:343:57> 'enum tokenizer_error' EnumConstant 0xa4164b0 'TOK_UNTERMINATED_QUOTE' 'enum tokenizer_error')))
                                          (ConditionalOperator 0xa423e10 <line:27:63, col:92> 'const wchar_t *'
                                            (ImplicitCastExpr 0xa423df0 <col:63, col:68> '_Bool' <LValueToRValue>
                                              (MemberExpr 0xa423c2c <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                                                (ImplicitCastExpr 0xa423c20 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                                                  (ParenExpr 0xa423c08 <col:63, col:65> 'struct tokenizer_t *' lvalue
                                                    (DeclRefExpr 0xa423bec <line:343:52> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
                                            (ImplicitCastExpr 0xa423e00 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                                              (StringLiteral 0xa423c4c <col:84> 'const wchar_t [1]' lvalue L""))
                                            (ParenExpr 0xa423dd8 <col:90, col:92> 'const wchar_t *'
                                              (CallExpr 0xa423da8 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                                                (ImplicitCastExpr 0xa423d98 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                                                  (DeclRefExpr 0xa423d7c <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                                                (ImplicitCastExpr 0xa423dc8 <../codeBase/fish-shell-master/tokenizer.cpp:32:24> 'const wchar_t *' <ArrayToPointerDecay>
                                                  (StringLiteral 0xa423c9c <col:24> 'const wchar_t [50]' lvalue L"U\000\000\000n\000\000\000e\000\000\000x\000\000\000p\000\000\000e\000\000\000c\000\000\000t\000\000\000e\000\000\000d\000\000\000 \000\000\000e\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000f\000\000\000 \000\000\000s\000\000\000t\000\000\000r\000\000\000i\000\000\000n\000\000\000g\000\000\000,\000\000\000 \000\000\000q\000\000\000u\000\000\000o\000\000\000t\000\000\000e\000\000\000s\000\000\000 \000\000\000a\000\000\000r\000\000\000e\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000b\000\000\000a\000\000\000l\000\000\000a\000\000\000n\000\000\000c\000\000\000e\000\000\000d\000\000\000")))))))
                                      (ImplicitCastExpr 0xa423ed0 <line:27:105> '_Bool' <IntegralToBoolean>
                                        (IntegerLiteral 0xa423eb8 <col:105> 'int' 0)))
                                    (ReturnStmt 0xa423ef8 <line:344:37>))
                                  <<<NULL>>>)
                                (BinaryOperator 0xa423f70 <line:346:33, col:43> 'int' lvalue '='
                                  (DeclRefExpr 0xa423f3c <col:33> 'int' lvalue Var 0xa421750 'do_loop' 'int')
                                  (IntegerLiteral 0xa423f58 <col:43> 'int' 0))))
                            (BreakStmt 0xa423fc8 <line:349:29>))))
                      (CaseStmt 0xa424008 <line:352:25, line:353:40>
                        (CharacterLiteral 0xa423ff0 <line:352:30> 'wchar_t'40)
                        <<<NULL>>>
                        (UnaryOperator 0xa424040 <line:353:29, col:40> 'int' postfix '++'
                          (DeclRefExpr 0xa424028 <col:29> 'int' lvalue Var 0xa4217c0 'paran_count' 'int')))
                      (BreakStmt 0xa424058 <line:354:29>)
                      (CaseStmt 0xa424078 <line:355:25, line:356:40>
                        (CharacterLiteral 0xa424060 <line:355:30> 'wchar_t'41)
                        <<<NULL>>>
                        (UnaryOperator 0xa4240b0 <line:356:29, col:40> 'int' postfix '--'
                          (DeclRefExpr 0xa424098 <col:29> 'int' lvalue Var 0xa4217c0 'paran_count' 'int')))
                      (IfStmt 0xa424248 <line:357:29, line:360:29>
                        <<<NULL>>>
                        (BinaryOperator 0xa424108 <line:357:33, col:48> '_Bool' '=='
                          (ImplicitCastExpr 0xa4240f8 <col:33> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa4240c4 <col:33> 'int' lvalue Var 0xa4217c0 'paran_count' 'int'))
                          (IntegerLiteral 0xa4240e0 <col:48> 'int' 0))
                        (CompoundStmt 0xa424230 <line:358:29, line:360:29>
                          (BinaryOperator 0xa424218 <line:359:33, col:123> 'enum tok_mode_t':'enum tok_mode_t' lvalue '='
                            (DeclRefExpr 0xa424120 <col:33> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')
                            (ParenExpr 0xa424200 <col:40, col:123> 'enum tok_mode_t'
                              (ConditionalOperator 0xa4241e0 <col:41, col:106> 'enum tok_mode_t'
                                (BinaryOperator 0xa424198 <col:41, col:49> '_Bool' '=='
                                  (ImplicitCastExpr 0xa424178 <col:41> 'int' <IntegralCast>
                                    (ImplicitCastExpr 0xa424168 <col:41> 'enum tok_mode_t':'enum tok_mode_t' <LValueToRValue>
                                      (DeclRefExpr 0xa424138 <col:41> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')))
                                  (ImplicitCastExpr 0xa424188 <col:49> 'int' <IntegralCast>
                                    (DeclRefExpr 0xa424150 <col:49> 'enum tok_mode_t' EnumConstant 0xa421a80 'mode_array_brackets_and_subshell' 'enum tok_mode_t')))
                                (DeclRefExpr 0xa4241b0 <col:84> 'enum tok_mode_t' EnumConstant 0xa421a30 'mode_array_brackets' 'enum tok_mode_t')
                                (DeclRefExpr 0xa4241c8 <col:106> 'enum tok_mode_t' EnumConstant 0xa421990 'mode_regular_text' 'enum tok_mode_t')))))
                        <<<NULL>>>)
                      (BreakStmt 0xa424268 <line:361:29>)
                      (CaseStmt 0xa424288 <line:362:25, line:363:39>
                        (CharacterLiteral 0xa424270 <line:362:30> 'wchar_t'0)
                        <<<NULL>>>
                        (BinaryOperator 0xa4242d8 <line:363:29, col:39> 'int' lvalue '='
                          (DeclRefExpr 0xa4242a8 <col:29> 'int' lvalue Var 0xa421750 'do_loop' 'int')
                          (IntegerLiteral 0xa4242c0 <col:39> 'int' 0)))
                      (BreakStmt 0xa4242f0 <line:364:29>)))))
              (BreakStmt 0xa424328 <line:366:21>)
              (CaseStmt 0xa424348 <line:368:17, line:383:21>
                (ImplicitCastExpr 0xa424648 <line:368:22> 'int' <IntegralCast>
                  (DeclRefExpr 0xa424330 <col:22> 'enum tok_mode_t' EnumConstant 0xa421a30 'mode_array_brackets' 'enum tok_mode_t'))
                <<<NULL>>>
                (SwitchStmt 0xa4243e8 <line:369:21, line:383:21>
                  <<<NULL>>>
                  (ImplicitCastExpr 0xa4243d8 <line:369:29, col:35> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa4243c0 <col:29, col:35> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa4243b0 <col:30, col:35> 'const wchar_t *' <LValueToRValue>
                        (MemberExpr 0xa42438c <col:30, col:35> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa424380 <col:30> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa424368 <col:30> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
                  (CompoundStmt 0xa4245e8 <line:370:21, line:383:21>
                    (CaseStmt 0xa424420 <line:371:25, line:372:41>
                      (CharacterLiteral 0xa424408 <line:371:30> 'wchar_t'40)
                      <<<NULL>>>
                      (BinaryOperator 0xa424470 <line:372:29, col:41> 'int' lvalue '='
                        (DeclRefExpr 0xa424440 <col:29> 'int' lvalue Var 0xa4217c0 'paran_count' 'int')
                        (IntegerLiteral 0xa424458 <col:41> 'int' 1)))
                    (BinaryOperator 0xa4244b8 <line:373:29, col:36> 'enum tok_mode_t':'enum tok_mode_t' lvalue '='
                      (DeclRefExpr 0xa424488 <col:29> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')
                      (DeclRefExpr 0xa4244a0 <col:36> 'enum tok_mode_t' EnumConstant 0xa421a80 'mode_array_brackets_and_subshell' 'enum tok_mode_t'))
                    (BreakStmt 0xa4244d0 <line:374:29>)
                    (CaseStmt 0xa4244f0 <line:376:25, line:377:36>
                      (CharacterLiteral 0xa4244d8 <line:376:30> 'wchar_t'93)
                      <<<NULL>>>
                      (BinaryOperator 0xa424540 <line:377:29, col:36> 'enum tok_mode_t':'enum tok_mode_t' lvalue '='
                        (DeclRefExpr 0xa424510 <col:29> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')
                        (DeclRefExpr 0xa424528 <col:36> 'enum tok_mode_t' EnumConstant 0xa421990 'mode_regular_text' 'enum tok_mode_t')))
                    (BreakStmt 0xa424558 <line:378:29>)
                    (CaseStmt 0xa424578 <line:380:25, line:381:39>
                      (CharacterLiteral 0xa424560 <line:380:30> 'wchar_t'0)
                      <<<NULL>>>
                      (BinaryOperator 0xa4245c8 <line:381:29, col:39> 'int' lvalue '='
                        (DeclRefExpr 0xa424598 <col:29> 'int' lvalue Var 0xa421750 'do_loop' 'int')
                        (IntegerLiteral 0xa4245b0 <col:39> 'int' 0)))
                    (BreakStmt 0xa4245e0 <line:382:29>))))
              (BreakStmt 0xa424618 <line:384:21>))))
        <<<NULL>>>)
      (IfStmt 0xa424718 <line:389:9, line:390:13>
        <<<NULL>>>
        (UnaryOperator 0xa4246f8 <line:389:13, col:14> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa4246e8 <col:14> '_Bool' <IntegralToBoolean>
            (ImplicitCastExpr 0xa4246d8 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0xa4246bc <col:14> 'int' lvalue Var 0xa421750 'do_loop' 'int'))))
        (BreakStmt 0xa424710 <line:390:13>)
        <<<NULL>>>)
      (UnaryOperator 0xa424780 <line:392:9, col:18> 'const wchar_t *' postfix '++'
        (MemberExpr 0xa42475c <col:9, col:14> 'const wchar_t *' lvalue ->buff 0xa416720
          (ImplicitCastExpr 0xa424750 <col:9> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa424734 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
      (BinaryOperator 0xa4247c0 <line:393:9, col:20> '_Bool' lvalue '='
        (DeclRefExpr 0xa424794 <col:9> '_Bool' lvalue Var 0xa4218b0 'is_first' '_Bool')
        (CXXBoolLiteralExpr 0xa4247b0 <col:20> '_Bool' false))))
  (IfStmt 0xa4262f0 <line:396:5, line:412:5>
    <<<NULL>>>
    (BinaryOperator 0xa424928 <line:396:9, col:64> '_Bool' '&&'
      (ParenExpr 0xa424880 <col:9, col:33> '_Bool'
        (UnaryOperator 0xa424868 <col:10, col:16> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa424858 <col:11, col:16> '_Bool' <LValueToRValue>
            (MemberExpr 0xa424834 <col:11, col:16> '_Bool' lvalue ->accept_unfinished 0xa4168c0
              (ImplicitCastExpr 0xa424828 <col:11> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa42480c <col:11> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))))
      (ParenExpr 0xa424910 <col:38, col:64> '_Bool'
        (BinaryOperator 0xa4248f8 <col:39, col:47> '_Bool' '!='
          (ImplicitCastExpr 0xa4248d8 <col:39> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa4248c8 <col:39> 'enum tok_mode_t':'enum tok_mode_t' <LValueToRValue>
              (DeclRefExpr 0xa424894 <col:39> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')))
          (ImplicitCastExpr 0xa4248e8 <col:47> 'int' <IntegralCast>
            (DeclRefExpr 0xa4248ac <col:47> 'enum tok_mode_t' EnumConstant 0xa421990 'mode_regular_text' 'enum tok_mode_t')))))
    (CompoundStmt 0xa4262d8 <line:397:5, line:412:5>
      (SwitchStmt 0xa424978 <line:398:9, line:410:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa424968 <line:398:17> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa424958 <col:17> 'enum tok_mode_t':'enum tok_mode_t' <LValueToRValue>
            (DeclRefExpr 0xa424940 <col:17> 'enum tok_mode_t':'enum tok_mode_t' lvalue Var 0xa421b30 'mode' 'enum tok_mode_t':'enum tok_mode_t')))
        (CompoundStmt 0xa426270 <line:399:9, line:410:9>
          (CaseStmt 0xa4249b0 <line:400:13, line:27:106>
            (ImplicitCastExpr 0xa4262b8 <line:400:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa424994 <col:18> 'enum tok_mode_t' EnumConstant 0xa4219e0 'mode_subshell' 'enum tok_mode_t'))
            <<<NULL>>>
            (DoStmt 0xa424da8 <line:27:33, col:106>
              (CompoundStmt 0xa424d68 <col:36, col:96>
                (CallExpr 0xa424d20 <col:38, col:93> 'void'
                  (ImplicitCastExpr 0xa424d10 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa424cf4 <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
                  (ImplicitCastExpr 0xa424d48 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                    (ParenExpr 0xa424a20 <col:53, col:55> 'struct tokenizer_t *' lvalue
                      (DeclRefExpr 0xa424a04 <line:401:32> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                  (ImplicitCastExpr 0xa424d58 <line:27:58, col:60> 'int' <IntegralCast>
                    (ParenExpr 0xa424a50 <col:58, col:60> 'enum tokenizer_error'
                      (DeclRefExpr 0xa424a34 <line:401:37> 'enum tokenizer_error' EnumConstant 0xa4164f0 'TOK_UNTERMINATED_SUBSHELL' 'enum tokenizer_error')))
                  (ConditionalOperator 0xa424cd8 <line:27:63, col:92> 'const wchar_t *'
                    (ImplicitCastExpr 0xa424cb8 <col:63, col:68> '_Bool' <LValueToRValue>
                      (MemberExpr 0xa424aa4 <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                        (ImplicitCastExpr 0xa424a98 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                          (ParenExpr 0xa424a80 <col:63, col:65> 'struct tokenizer_t *' lvalue
                            (DeclRefExpr 0xa424a64 <line:401:32> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
                    (ImplicitCastExpr 0xa424cc8 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0xa424ac4 <col:84> 'const wchar_t [1]' lvalue L""))
                    (ParenExpr 0xa424ca0 <col:90, col:92> 'const wchar_t *'
                      (CallExpr 0xa424c70 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                        (ImplicitCastExpr 0xa424c60 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa424c44 <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                        (ImplicitCastExpr 0xa424c90 <../codeBase/fish-shell-master/tokenizer.cpp:37:24> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0xa424b60 <col:24> 'const wchar_t [51]' lvalue L"U\000\000\000n\000\000\000e\000\000\000x\000\000\000p\000\000\000e\000\000\000c\000\000\000t\000\000\000e\000\000\000d\000\000\000 \000\000\000e\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000f\000\000\000 \000\000\000s\000\000\000t\000\000\000r\000\000\000i\000\000\000n\000\000\000g\000\000\000,\000\000\000 \000\000\000p\000\000\000a\000\000\000r\000\000\000e\000\000\000n\000\000\000t\000\000\000h\000\000\000e\000\000\000s\000\000\000i\000\000\000s\000\000\000 \000\000\000d\000\000\000o\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000m\000\000\000a\000\000\000t\000\000\000c\000\000\000h\000\000\000")))))))
              (ImplicitCastExpr 0xa424d98 <line:27:105> '_Bool' <IntegralToBoolean>
                (IntegerLiteral 0xa424d80 <col:105> 'int' 0))))
          (BreakStmt 0xa424dc0 <line:402:17>)
          (CaseStmt 0xa424de0 <line:403:13, line:27:106>
            (ImplicitCastExpr 0xa4262a8 <line:403:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa424dc8 <col:18> 'enum tok_mode_t' EnumConstant 0xa421a30 'mode_array_brackets' 'enum tok_mode_t'))
            <<<NULL>>>
            (CaseStmt 0xa424e18 <line:404:13, line:27:106>
              (ImplicitCastExpr 0xa426298 <line:404:18> 'int' <IntegralCast>
                (DeclRefExpr 0xa424e00 <col:18> 'enum tok_mode_t' EnumConstant 0xa421a80 'mode_array_brackets_and_subshell' 'enum tok_mode_t'))
              <<<NULL>>>
              (DoStmt 0xa425218 <line:27:33, col:106>
                (CompoundStmt 0xa4251d8 <col:36, col:96>
                  (CallExpr 0xa425190 <col:38, col:93> 'void'
                    (ImplicitCastExpr 0xa425180 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa425164 <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
                    (ImplicitCastExpr 0xa4251b8 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                      (ParenExpr 0xa424e88 <col:53, col:55> 'struct tokenizer_t *' lvalue
                        (DeclRefExpr 0xa424e6c <line:405:32> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
                    (ImplicitCastExpr 0xa4251c8 <line:27:58, col:60> 'int' <IntegralCast>
                      (ParenExpr 0xa424eb8 <col:58, col:60> 'enum tokenizer_error'
                        (DeclRefExpr 0xa424e9c <line:405:37> 'enum tokenizer_error' EnumConstant 0xa4164f0 'TOK_UNTERMINATED_SUBSHELL' 'enum tokenizer_error')))
                    (ConditionalOperator 0xa425148 <line:27:63, col:92> 'const wchar_t *'
                      (ImplicitCastExpr 0xa425128 <col:63, col:68> '_Bool' <LValueToRValue>
                        (MemberExpr 0xa424f0c <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                          (ImplicitCastExpr 0xa424f00 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                            (ParenExpr 0xa424ee8 <col:63, col:65> 'struct tokenizer_t *' lvalue
                              (DeclRefExpr 0xa424ecc <line:405:32> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))))
                      (ImplicitCastExpr 0xa425138 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0xa424f2c <col:84> 'const wchar_t [1]' lvalue L""))
                      (ParenExpr 0xa425110 <col:90, col:92> 'const wchar_t *'
                        (CallExpr 0xa4250e0 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                          (ImplicitCastExpr 0xa4250d0 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                            (DeclRefExpr 0xa4250b4 <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                          (ImplicitCastExpr 0xa425100 <../codeBase/fish-shell-master/tokenizer.cpp:42:33> 'const wchar_t *' <ArrayToPointerDecay>
                            (StringLiteral 0xa424fc0 <col:33> 'const wchar_t [55]' lvalue L"U\000\000\000n\000\000\000e\000\000\000x\000\000\000p\000\000\000e\000\000\000c\000\000\000t\000\000\000e\000\000\000d\000\000\000 \000\000\000e\000\000\000n\000\000\000d\000\000\000 \000\000\000o\000\000\000f\000\000\000 \000\000\000s\000\000\000t\000\000\000r\000\000\000i\000\000\000n\000\000\000g\000\000\000,\000\000\000 \000\000\000s\000\000\000q\000\000\000u\000\000\000a\000\000\000r\000\000\000e\000\000\000 \000\000\000b\000\000\000r\000\000\000a\000\000\000c\000\000\000k\000\000\000e\000\000\000t\000\000\000s\000\000\000 \000\000\000d\000\000\000o\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000m\000\000\000a\000\000\000t\000\000\000c\000\000\000h\000\000\000")))))))
                (ImplicitCastExpr 0xa425208 <line:27:105> '_Bool' <IntegralToBoolean>
                  (IntegerLiteral 0xa4251f0 <col:105> 'int' 0)))))
          (BreakStmt 0xa425230 <line:406:17>)
          (DefaultStmt 0xa426250 <line:407:13, /usr/include/assert.h:94:75>
            (ParenExpr 0xa426238 <line:92:3, line:94:75> 'void'
              (ConditionalOperator 0xa426218 <line:92:4, line:94:74> 'void'
                (ParenExpr 0xa425318 <line:92:4, col:9> '_Bool'
                  (BinaryOperator 0xa425300 <../codeBase/fish-shell-master/tokenizer.cpp:408:24, col:29> '_Bool' '&&'
                    (ImplicitCastExpr 0xa4252d0 <col:24> '_Bool' <IntegralToBoolean>
                      (IntegerLiteral 0xa425238 <col:24> 'int' 0))
                    (ImplicitCastExpr 0xa4252f0 <col:29> '_Bool' <PointerToBoolean>
                      (ImplicitCastExpr 0xa4252e0 <col:29> 'const char *' <ArrayToPointerDecay>
                        (StringLiteral 0xa425290 <col:29> 'const char [31]' lvalue "Unexpected mode in read_string")))))
                (CXXStaticCastExpr 0xa425350 </usr/include/assert.h:40:29, line:93:27> 'void' static_cast<void> <ToVoid>
                  (IntegerLiteral 0xa425330 <col:26> 'int' 0))
                (CallExpr 0xa4261a8 <line:94:6, col:74> 'void'
                  (ImplicitCastExpr 0xa426198 <col:6> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa426140 <col:6> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0xa3f5020 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'))
                  (ImplicitCastExpr 0xa4261d8 <<scratch space>:156:1> 'const char *' <ArrayToPointerDecay>
                    (StringLiteral 0xa4253e0 <col:1> 'const char [38]' lvalue "0 && \"Unexpected mode in read_string\""))
                  (ImplicitCastExpr 0xa4261e8 <line:157:1> 'const char *' <ArrayToPointerDecay>
                    (StringLiteral 0xa4260b0 <col:1> 'const char [44]' lvalue "../codeBase/fish-shell-master/tokenizer.cpp"))
                  (ImplicitCastExpr 0xa4261f8 <line:158:1> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa4260f8 <col:1> 'int' 408))
                  (ImplicitCastExpr 0xa426208 </usr/include/assert.h:109:30> 'const char *' <ArrayToPointerDecay>
                    (PredefinedExpr 0xa426130 <col:30> 'const char [32]' lvalue __PRETTY_FUNCTION__))))))
          (BreakStmt 0xa426268 <../codeBase/fish-shell-master/tokenizer.cpp:409:17>)))
      (ReturnStmt 0xa4262c8 <line:411:9>))
    <<<NULL>>>)
  (BinaryOperator 0xa4263d0 <line:415:5, col:23> 'long' lvalue '='
    (DeclRefExpr 0xa42630c <col:5> 'long' lvalue Var 0xa4216f0 'len' 'long')
    (ImplicitCastExpr 0xa4263c0 <col:11, col:23> 'long' <IntegralCast>
      (BinaryOperator 0xa4263a8 <col:11, col:23> 'int' '-'
        (ImplicitCastExpr 0xa426388 <col:11, col:16> 'const wchar_t *' <LValueToRValue>
          (MemberExpr 0xa42634c <col:11, col:16> 'const wchar_t *' lvalue ->buff 0xa416720
            (ImplicitCastExpr 0xa426340 <col:11> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa426324 <col:11> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
        (ImplicitCastExpr 0xa426398 <col:23> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa42636c <col:23> 'const wchar_t *' lvalue Var 0xa421690 'start' 'const wchar_t *')))))
  (CXXMemberCallExpr 0xa426508 <line:417:5, col:38> 'class std::basic_string<wchar_t>' lvalue
    (MemberExpr 0xa4264e4 <col:5, col:21> '<bound member function type>' .assign 0xa17ce00
      (MemberExpr 0xa42640c <col:5, col:10> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
        (ImplicitCastExpr 0xa426400 <col:5> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa4263e8 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *'))))
    (ImplicitCastExpr 0xa426530 <col:28> 'const wchar_t *' <LValueToRValue>
      (DeclRefExpr 0xa42647c <col:28> 'const wchar_t *' lvalue Var 0xa421690 'start' 'const wchar_t *'))
    (ImplicitCastExpr 0xa426550 <col:35> 'size_type':'unsigned int' <IntegralCast>
      (ImplicitCastExpr 0xa426540 <col:35> 'long' <LValueToRValue>
        (DeclRefExpr 0xa426494 <col:35> 'long' lvalue Var 0xa4216f0 'len' 'long'))))
  (BinaryOperator 0xa4265c0 <line:418:5, col:22> 'enum token_type':'enum token_type' lvalue '='
    (MemberExpr 0xa426584 <col:5, col:10> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
      (ImplicitCastExpr 0xa426578 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa42655c <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa4215c0 'tok' 'struct tokenizer_t *')))
    (DeclRefExpr 0xa4265a4 <col:22> 'enum token_type' EnumConstant 0xa4161d0 'TOK_STRING' 'enum token_type')))


static void read_comment(tokenizer_t *tok) (CompoundStmt 0xa426cd8 <../codeBase/fish-shell-master/tokenizer.cpp:425:1, line:436:1>
  (DeclStmt 0xa426738 <line:426:5, col:25>
    0xa426700 "const wchar_t *start")
  (BinaryOperator 0xa4267b8 <line:428:5, col:18> 'const wchar_t *' lvalue '='
    (DeclRefExpr 0xa426748 <col:5> 'const wchar_t *' lvalue Var 0xa426700 'start' 'const wchar_t *')
    (ImplicitCastExpr 0xa4267a8 <col:13, col:18> 'const wchar_t *' <LValueToRValue>
      (MemberExpr 0xa426784 <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
        (ImplicitCastExpr 0xa426778 <col:13> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa426760 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *')))))
  (WhileStmt 0xa4269d8 <line:429:5, line:430:18>
    <<<NULL>>>
    (BinaryOperator 0xa426960 <line:429:12, col:51> '_Bool' '&&'
      (BinaryOperator 0xa426880 <col:12, col:27> '_Bool' '!='
        (ImplicitCastExpr 0xa426870 <col:12, col:23> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa426840 <col:12, col:23> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa426830 <col:13, col:23> 'const wchar_t *' <LValueToRValue>
              (ParenExpr 0xa426818 <col:13, col:23> 'const wchar_t *' lvalue
                (MemberExpr 0xa4267f4 <col:14, col:19> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa4267e8 <col:14> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa4267d0 <col:14> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *')))))))
        (CharacterLiteral 0xa426858 <col:27> 'wchar_t'10))
      (BinaryOperator 0xa426948 <col:36, col:51> '_Bool' '!='
        (ImplicitCastExpr 0xa426938 <col:36, col:47> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa426908 <col:36, col:47> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa4268f8 <col:37, col:47> 'const wchar_t *' <LValueToRValue>
              (ParenExpr 0xa4268e0 <col:37, col:47> 'const wchar_t *' lvalue
                (MemberExpr 0xa4268bc <col:38, col:43> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa4268b0 <col:38> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa426898 <col:38> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *')))))))
        (CharacterLiteral 0xa426920 <col:51> 'wchar_t'0)))
    (UnaryOperator 0xa4269c0 <line:430:9, col:18> 'const wchar_t *' postfix '++'
      (MemberExpr 0xa42699c <col:9, col:14> 'const wchar_t *' lvalue ->buff 0xa416720
        (ImplicitCastExpr 0xa426990 <col:9> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa426978 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *')))))
  (DeclStmt 0xa426ae0 <line:433:5, col:35>
    0xa426a00 "size_t len =
      (ImplicitCastExpr 0xa426ad0 <col:18, col:30> 'size_t':'unsigned int' <IntegralCast>
        (BinaryOperator 0xa426ab8 <col:18, col:30> 'int' '-'
          (ImplicitCastExpr 0xa426a98 <col:18, col:23> 'const wchar_t *' <LValueToRValue>
            (MemberExpr 0xa426a5c <col:18, col:23> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa426a50 <col:18> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa426a34 <col:18> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *'))))
          (ImplicitCastExpr 0xa426aa8 <col:30> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa426a7c <col:30> 'const wchar_t *' lvalue Var 0xa426700 'start' 'const wchar_t *'))))")
  (CXXMemberCallExpr 0xa426c18 <line:434:5, col:38> 'class std::basic_string<wchar_t>' lvalue
    (MemberExpr 0xa426bf4 <col:5, col:21> '<bound member function type>' .assign 0xa17ce00
      (MemberExpr 0xa426b14 <col:5, col:10> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
        (ImplicitCastExpr 0xa426b08 <col:5> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa426af0 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *'))))
    (ImplicitCastExpr 0xa426c40 <col:28> 'const wchar_t *' <LValueToRValue>
      (DeclRefExpr 0xa426b84 <col:28> 'const wchar_t *' lvalue Var 0xa426700 'start' 'const wchar_t *'))
    (ImplicitCastExpr 0xa426c50 <col:35> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa426b9c <col:35> 'size_t':'unsigned int' lvalue Var 0xa426a00 'len' 'size_t':'unsigned int')))
  (BinaryOperator 0xa426cc0 <line:435:5, col:22> 'enum token_type':'enum token_type' lvalue '='
    (MemberExpr 0xa426c84 <col:5, col:10> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
      (ImplicitCastExpr 0xa426c78 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa426c5c <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa426630 'tok' 'struct tokenizer_t *')))
    (DeclRefExpr 0xa426ca4 <col:22> 'enum token_type' EnumConstant 0xa416410 'TOK_COMMENT' 'enum token_type')))


static void read_redirect(tokenizer_t *tok, int fd) (CompoundStmt 0xa4287e8 <../codeBase/fish-shell-master/tokenizer.cpp:442:1, line:498:1>
  (DeclStmt 0xa426e90 <line:443:5, col:48>
    0xa426e40 "enum token_type redirection_mode =
      (DeclRefExpr 0xa426e74 <col:40> 'enum token_type' EnumConstant 0xa416110 'TOK_NONE' 'enum token_type')")
  (IfStmt 0xa4281d0 <line:445:5, line:480:5>
    <<<NULL>>>
    (BinaryOperator 0xa427030 <line:445:9, line:446:32> '_Bool' '||'
      (ParenExpr 0xa426f50 <line:445:9, col:28> '_Bool'
        (BinaryOperator 0xa426f38 <col:10, col:24> '_Bool' '=='
          (ImplicitCastExpr 0xa426f28 <col:10, col:16> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa426ef8 <col:10, col:16> 'const wchar_t' lvalue prefix '*'
              (ImplicitCastExpr 0xa426ee8 <col:11, col:16> 'const wchar_t *' <LValueToRValue>
                (MemberExpr 0xa426ec4 <col:11, col:16> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa426eb8 <col:11> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa426ea0 <col:11> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
          (CharacterLiteral 0xa426f10 <col:24> 'wchar_t'62)))
      (ParenExpr 0xa427018 <line:446:13, col:32> '_Bool'
        (BinaryOperator 0xa427000 <col:14, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa426ff0 <col:14, col:20> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa426fc0 <col:14, col:20> 'const wchar_t' lvalue prefix '*'
              (ImplicitCastExpr 0xa426fb0 <col:15, col:20> 'const wchar_t *' <LValueToRValue>
                (MemberExpr 0xa426f8c <col:15, col:20> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa426f80 <col:15> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa426f64 <col:15> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
          (CharacterLiteral 0xa426fd8 <col:28> 'wchar_t'94))))
    (CompoundStmt 0xa427c60 <line:447:5, line:471:5>
      (UnaryOperator 0xa427090 <line:448:9, col:18> 'const wchar_t *' postfix '++'
        (MemberExpr 0xa42706c <col:9, col:14> 'const wchar_t *' lvalue ->buff 0xa416720
          (ImplicitCastExpr 0xa427060 <col:9> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa427048 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
      (IfStmt 0xa427328 <line:449:9, line:457:9>
        <<<NULL>>>
        (BinaryOperator 0xa4271f0 <line:449:13, col:40> '_Bool' '=='
          (ImplicitCastExpr 0xa4271d0 <col:13, col:19> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa427100 <col:13, col:19> 'const wchar_t' lvalue prefix '*'
              (ImplicitCastExpr 0xa4270f0 <col:14, col:19> 'const wchar_t *' <LValueToRValue>
                (MemberExpr 0xa4270cc <col:14, col:19> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa4270c0 <col:14> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa4270a4 <col:14> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
          (ImplicitCastExpr 0xa4271e0 <col:27, col:40> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa4271b8 <col:27, col:40> 'const wchar_t' lvalue prefix '*'
              (ParenExpr 0xa4271a0 <col:28, col:40> 'const wchar_t *'
                (BinaryOperator 0xa427188 <col:29, col:39> 'const wchar_t *' '-'
                  (ImplicitCastExpr 0xa427178 <col:29, col:34> 'const wchar_t *' <LValueToRValue>
                    (MemberExpr 0xa42713c <col:29, col:34> 'const wchar_t *' lvalue ->buff 0xa416720
                      (ImplicitCastExpr 0xa427130 <col:29> 'struct tokenizer_t *' <LValueToRValue>
                        (DeclRefExpr 0xa427114 <col:29> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
                  (IntegerLiteral 0xa427160 <col:39> 'int' 1))))))
        (CompoundStmt 0xa4272b0 <line:450:9, line:453:9>
          (UnaryOperator 0xa427250 <line:451:13, col:22> 'const wchar_t *' postfix '++'
            (MemberExpr 0xa42722c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa427220 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa427208 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
          (BinaryOperator 0xa427298 <line:452:13, col:32> 'enum token_type':'enum token_type' lvalue '='
            (DeclRefExpr 0xa427264 <col:13> 'enum token_type':'enum token_type' lvalue Var 0xa426e40 'redirection_mode' 'enum token_type':'enum token_type')
            (DeclRefExpr 0xa42727c <col:32> 'enum token_type' EnumConstant 0xa4162d0 'TOK_REDIRECT_APPEND' 'enum token_type')))
        (CompoundStmt 0xa427310 <line:455:9, line:457:9>
          (BinaryOperator 0xa4272f8 <line:456:13, col:32> 'enum token_type':'enum token_type' lvalue '='
            (DeclRefExpr 0xa4272c8 <col:13> 'enum token_type':'enum token_type' lvalue Var 0xa426e40 'redirection_mode' 'enum token_type':'enum token_type')
            (DeclRefExpr 0xa4272e0 <col:32> 'enum token_type' EnumConstant 0xa416290 'TOK_REDIRECT_OUT' 'enum token_type'))))
      (IfStmt 0xa427c40 <line:459:9, line:470:9>
        <<<NULL>>>
        (BinaryOperator 0xa4273e0 <line:459:13, col:27> '_Bool' '=='
          (ImplicitCastExpr 0xa4273d0 <col:13, col:19> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa4273a0 <col:13, col:19> 'const wchar_t' lvalue prefix '*'
              (ImplicitCastExpr 0xa427390 <col:14, col:19> 'const wchar_t *' <LValueToRValue>
                (MemberExpr 0xa42736c <col:14, col:19> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa427360 <col:14> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa427344 <col:14> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
          (CharacterLiteral 0xa4273b8 <col:27> 'wchar_t'124))
        (CompoundStmt 0xa427c18 <line:460:9, line:470:9>
          (IfStmt 0xa427818 <line:461:13, line:465:13>
            <<<NULL>>>
            (BinaryOperator 0xa427438 <line:461:17, col:23> '_Bool' '=='
              (ImplicitCastExpr 0xa427428 <col:17> 'int' <LValueToRValue>
                (DeclRefExpr 0xa4273f8 <col:17> 'int' lvalue ParmVar 0xa426d60 'fd' 'int'))
              (IntegerLiteral 0xa427410 <col:23> 'int' 0))
            (CompoundStmt 0xa427800 <line:462:13, line:465:13>
              (DoStmt 0xa4277d8 <line:27:33, col:106>
                (CompoundStmt 0xa427798 <col:36, col:96>
                  (CallExpr 0xa427750 <col:38, col:93> 'void'
                    (ImplicitCastExpr 0xa427740 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa427724 <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
                    (ImplicitCastExpr 0xa427778 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                      (ParenExpr 0xa4274a0 <col:53, col:55> 'struct tokenizer_t *' lvalue
                        (DeclRefExpr 0xa427484 <line:463:32> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
                    (ImplicitCastExpr 0xa427788 <line:27:58, col:60> 'int' <IntegralCast>
                      (ParenExpr 0xa4274d0 <col:58, col:60> 'enum tokenizer_error'
                        (DeclRefExpr 0xa4274b4 <line:463:37> 'enum tokenizer_error' EnumConstant 0xa416570 'TOK_OTHER' 'enum tokenizer_error')))
                    (ConditionalOperator 0xa427708 <line:27:63, col:92> 'const wchar_t *'
                      (ImplicitCastExpr 0xa4276e8 <col:63, col:68> '_Bool' <LValueToRValue>
                        (MemberExpr 0xa427524 <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                          (ImplicitCastExpr 0xa427518 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                            (ParenExpr 0xa427500 <col:63, col:65> 'struct tokenizer_t *' lvalue
                              (DeclRefExpr 0xa4274e4 <line:463:32> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))))
                      (ImplicitCastExpr 0xa4276f8 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0xa427544 <col:84> 'const wchar_t [1]' lvalue L""))
                      (ParenExpr 0xa4276d0 <col:90, col:92> 'const wchar_t *'
                        (CallExpr 0xa4276a0 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                          (ImplicitCastExpr 0xa427690 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                            (DeclRefExpr 0xa427678 <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                          (ImplicitCastExpr 0xa4276c0 <../codeBase/fish-shell-master/tokenizer.cpp:53:23> 'const wchar_t *' <ArrayToPointerDecay>
                            (StringLiteral 0xa4275e0 <col:23> 'const wchar_t [32]' lvalue L"C\000\000\000a\000\000\000n\000\000\000 \000\000\000n\000\000\000o\000\000\000t\000\000\000 \000\000\000u\000\000\000s\000\000\000e\000\000\000 \000\000\000f\000\000\000d\000\000\000 \000\000\0000\000\000\000 \000\000\000a\000\000\000s\000\000\000 \000\000\000p\000\000\000i\000\000\000p\000\000\000e\000\000\000 \000\000\000o\000\000\000u\000\000\000t\000\000\000p\000\000\000u\000\000\000t\000\000\000")))))))
                (ImplicitCastExpr 0xa4277c8 <line:27:105> '_Bool' <IntegralToBoolean>
                  (IntegerLiteral 0xa4277b0 <col:105> 'int' 0)))
              (ReturnStmt 0xa4277f0 <line:464:17>))
            <<<NULL>>>)
          (UnaryOperator 0xa427880 <line:466:13, col:22> 'const wchar_t *' postfix '++'
            (MemberExpr 0xa42785c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa427850 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa427834 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
          (ExprWithCleanups 0xa427b70 <line:467:13, col:48> 'class std::basic_string<wchar_t>' lvalue
            (CXXTemporary 0xa427ad0)
            (CXXOperatorCallExpr 0xa427b48 <col:13, col:48> 'class std::basic_string<wchar_t>' lvalue
              (ImplicitCastExpr 0xa427b38 <col:29, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa427b08 <col:29, <invalid sloc>> 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)' lvalue CXXMethod 0xa177780 'operator=' 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)'))
              (MemberExpr 0xa4278bc <col:13, col:18> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
                (ImplicitCastExpr 0xa4278b0 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa427894 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
              (MaterializeTemporaryExpr 0xa427af8 <col:31, col:48> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa427ae8 <col:31, col:48> 'const class std::basic_string<wchar_t>' <NoOp>
                  (CXXBindTemporaryExpr 0xa427ad8 <col:31, col:48> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa427ad0)
                    (CallExpr 0xa427a98 <col:31, col:48> 'wcstring':'class std::basic_string<wchar_t>'
                      (ImplicitCastExpr 0xa427a88 <col:31, col:44> 'wcstring (*)(const int &)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa4279f8 <col:31, col:44> 'wcstring (const int &)' lvalue Function 0xa408ef0 'to_string' 'wcstring (const int &)' (FunctionTemplate 0xa4076f0 'to_string')))
                      (ImplicitCastExpr 0xa427ab8 <col:46> 'const int' lvalue <NoOp>
                        (DeclRefExpr 0xa427958 <col:46> 'int' lvalue ParmVar 0xa426d60 'fd' 'int'))))))))
          (BinaryOperator 0xa427bf0 <line:468:13, col:30> 'enum token_type':'enum token_type' lvalue '='
            (MemberExpr 0xa427bb4 <col:13, col:18> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
              (ImplicitCastExpr 0xa427ba8 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa427b8c <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
            (DeclRefExpr 0xa427bd4 <col:30> 'enum token_type' EnumConstant 0xa416210 'TOK_PIPE' 'enum token_type'))
          (ReturnStmt 0xa427c08 <line:469:13>))
        <<<NULL>>>))
    (IfStmt 0xa4281b0 <line:472:10, line:480:5>
      <<<NULL>>>
      (BinaryOperator 0xa427d18 <line:472:14, col:28> '_Bool' '=='
        (ImplicitCastExpr 0xa427d08 <col:14, col:20> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa427cd8 <col:14, col:20> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa427cc8 <col:15, col:20> 'const wchar_t *' <LValueToRValue>
              (MemberExpr 0xa427ca4 <col:15, col:20> 'const wchar_t *' lvalue ->buff 0xa416720
                (ImplicitCastExpr 0xa427c98 <col:15> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa427c7c <col:15> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
        (CharacterLiteral 0xa427cf0 <col:28> 'wchar_t'60))
      (CompoundStmt 0xa427dd8 <line:473:5, line:476:5>
        (UnaryOperator 0xa427d78 <line:474:9, col:18> 'const wchar_t *' postfix '++'
          (MemberExpr 0xa427d54 <col:9, col:14> 'const wchar_t *' lvalue ->buff 0xa416720
            (ImplicitCastExpr 0xa427d48 <col:9> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa427d30 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
        (BinaryOperator 0xa427dc0 <line:475:9, col:28> 'enum token_type':'enum token_type' lvalue '='
          (DeclRefExpr 0xa427d8c <col:9> 'enum token_type':'enum token_type' lvalue Var 0xa426e40 'redirection_mode' 'enum token_type':'enum token_type')
          (DeclRefExpr 0xa427da4 <col:28> 'enum token_type' EnumConstant 0xa416310 'TOK_REDIRECT_IN' 'enum token_type')))
      (CompoundStmt 0xa428198 <line:478:5, line:480:5>
        (DoStmt 0xa428180 <line:27:33, col:106>
          (CompoundStmt 0xa428140 <col:36, col:96>
            (CallExpr 0xa4280f8 <col:38, col:93> 'void'
              (ImplicitCastExpr 0xa4280e8 <col:38> 'void (*)(struct tokenizer_t *, int, const wchar_t *)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4280cc <col:38> 'void (struct tokenizer_t *, int, const wchar_t *)' lvalue Function 0xa41d5b0 'tok_call_error' 'void (struct tokenizer_t *, int, const wchar_t *)'))
              (ImplicitCastExpr 0xa428120 <col:53, col:55> 'struct tokenizer_t *' <LValueToRValue>
                (ParenExpr 0xa427e40 <col:53, col:55> 'struct tokenizer_t *' lvalue
                  (DeclRefExpr 0xa427e24 <line:479:24> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
              (ImplicitCastExpr 0xa428130 <line:27:58, col:60> 'int' <IntegralCast>
                (ParenExpr 0xa427e70 <col:58, col:60> 'enum tokenizer_error'
                  (DeclRefExpr 0xa427e54 <line:479:29> 'enum tokenizer_error' EnumConstant 0xa416570 'TOK_OTHER' 'enum tokenizer_error')))
              (ConditionalOperator 0xa4280b0 <line:27:63, col:92> 'const wchar_t *'
                (ImplicitCastExpr 0xa428090 <col:63, col:68> '_Bool' <LValueToRValue>
                  (MemberExpr 0xa427ec4 <col:63, col:68> '_Bool' lvalue ->squash_errors 0xa4169c0
                    (ImplicitCastExpr 0xa427eb8 <col:63, col:65> 'struct tokenizer_t *' <LValueToRValue>
                      (ParenExpr 0xa427ea0 <col:63, col:65> 'struct tokenizer_t *' lvalue
                        (DeclRefExpr 0xa427e84 <line:479:24> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))))
                (ImplicitCastExpr 0xa4280a0 <line:27:84> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0xa427ee4 <col:84> 'const wchar_t [1]' lvalue L""))
                (ParenExpr 0xa428078 <col:90, col:92> 'const wchar_t *'
                  (CallExpr 0xa428048 <../codeBase/fish-shell-master/common.h:185:17, col:30> 'const wchar_t *'
                    (ImplicitCastExpr 0xa428038 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa42801c <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
                    (ImplicitCastExpr 0xa428068 <../codeBase/fish-shell-master/tokenizer.cpp:48:27> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0xa427f80 <col:27> 'const wchar_t [33]' lvalue L"I\000\000\000n\000\000\000v\000\000\000a\000\000\000l\000\000\000i\000\000\000d\000\000\000 \000\000\000i\000\000\000n\000\000\000p\000\000\000u\000\000\000t\000\000\000/\000\000\000o\000\000\000u\000\000\000t\000\000\000p\000\000\000u\000\000\000t\000\000\000 \000\000\000r\000\000\000e\000\000\000d\000\000\000i\000\000\000r\000\000\000e\000\000\000c\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000")))))))
          (ImplicitCastExpr 0xa428170 <line:27:105> '_Bool' <IntegralToBoolean>
            (IntegerLiteral 0xa428158 <col:105> 'int' 0))))))
  (ExprWithCleanups 0xa4283a8 <line:482:5, col:35> 'class std::basic_string<wchar_t>' lvalue
    (CXXTemporary 0xa428320)
    (CXXOperatorCallExpr 0xa428380 <col:5, col:35> 'class std::basic_string<wchar_t>' lvalue
      (ImplicitCastExpr 0xa428370 <col:21, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa428358 <col:21, <invalid sloc>> 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)' lvalue CXXMethod 0xa177780 'operator=' 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)'))
      (MemberExpr 0xa428214 <col:5, col:10> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
        (ImplicitCastExpr 0xa428208 <col:5> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa4281ec <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
      (MaterializeTemporaryExpr 0xa428348 <col:23, col:35> 'const class std::basic_string<wchar_t>' lvalue
        (ImplicitCastExpr 0xa428338 <col:23, col:35> 'const class std::basic_string<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa428328 <col:23, col:35> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa428320)
            (CallExpr 0xa4282e8 <col:23, col:35> 'wcstring':'class std::basic_string<wchar_t>'
              (ImplicitCastExpr 0xa4282d8 <col:23> 'wcstring (*)(const int &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4282b8 <col:23> 'wcstring (const int &)' lvalue Function 0xa408ef0 'to_string' 'wcstring (const int &)' (FunctionTemplate 0xa4076f0 'to_string')))
              (ImplicitCastExpr 0xa428308 <col:33> 'const int' lvalue <NoOp>
                (DeclRefExpr 0xa42826c <col:33> 'int' lvalue ParmVar 0xa426d60 'fd' 'int'))))))))
  (IfStmt 0xa4287c8 <line:484:5, line:497:5>
    <<<NULL>>>
    (BinaryOperator 0xa428460 <line:484:9, col:23> '_Bool' '=='
      (ImplicitCastExpr 0xa428450 <col:9, col:15> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa428420 <col:9, col:15> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa428410 <col:10, col:15> 'const wchar_t *' <LValueToRValue>
            (MemberExpr 0xa4283ec <col:10, col:15> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa4283e0 <col:10> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa4283c4 <col:10> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
      (CharacterLiteral 0xa428438 <col:23> 'wchar_t'38))
    (CompoundStmt 0xa428550 <line:485:5, line:488:5>
      (UnaryOperator 0xa4284c0 <line:486:9, col:18> 'const wchar_t *' postfix '++'
        (MemberExpr 0xa42849c <col:9, col:14> 'const wchar_t *' lvalue ->buff 0xa416720
          (ImplicitCastExpr 0xa428490 <col:9> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa428478 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
      (BinaryOperator 0xa428538 <line:487:9, col:26> 'enum token_type':'enum token_type' lvalue '='
        (MemberExpr 0xa4284fc <col:9, col:14> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
          (ImplicitCastExpr 0xa4284f0 <col:9> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa4284d4 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
        (DeclRefExpr 0xa42851c <col:26> 'enum token_type' EnumConstant 0xa416350 'TOK_REDIRECT_FD' 'enum token_type')))
    (IfStmt 0xa4287a8 <line:489:10, line:497:5>
      <<<NULL>>>
      (BinaryOperator 0xa428600 <line:489:14, col:28> '_Bool' '=='
        (ImplicitCastExpr 0xa4285f0 <col:14, col:20> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa4285c0 <col:14, col:20> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa4285b0 <col:15, col:20> 'const wchar_t *' <LValueToRValue>
              (MemberExpr 0xa42858c <col:15, col:20> 'const wchar_t *' lvalue ->buff 0xa416720
                (ImplicitCastExpr 0xa428580 <col:15> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa428568 <col:15> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))))
        (CharacterLiteral 0xa4285d8 <col:28> 'wchar_t'63))
      (CompoundStmt 0xa4286f0 <line:490:5, line:493:5>
        (UnaryOperator 0xa428660 <line:491:9, col:18> 'const wchar_t *' postfix '++'
          (MemberExpr 0xa42863c <col:9, col:14> 'const wchar_t *' lvalue ->buff 0xa416720
            (ImplicitCastExpr 0xa428630 <col:9> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa428618 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *'))))
        (BinaryOperator 0xa4286d8 <line:492:9, col:26> 'enum token_type':'enum token_type' lvalue '='
          (MemberExpr 0xa42869c <col:9, col:14> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
            (ImplicitCastExpr 0xa428690 <col:9> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa428674 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
          (DeclRefExpr 0xa4286bc <col:26> 'enum token_type' EnumConstant 0xa416390 'TOK_REDIRECT_NOCLOB' 'enum token_type')))
      (CompoundStmt 0xa428790 <line:495:5, line:497:5>
        (BinaryOperator 0xa428778 <line:496:9, col:26> 'enum token_type':'enum token_type' lvalue '='
          (MemberExpr 0xa42872c <col:9, col:14> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
            (ImplicitCastExpr 0xa428720 <col:9> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa428708 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa426d10 'tok' 'struct tokenizer_t *')))
          (ImplicitCastExpr 0xa428768 <col:26> 'enum token_type':'enum token_type' <LValueToRValue>
            (DeclRefExpr 0xa42874c <col:26> 'enum token_type':'enum token_type' lvalue Var 0xa426e40 'redirection_mode' 'enum token_type':'enum token_type')))))))


wchar_t tok_last_quote(tokenizer_t *tok) (CompoundStmt 0xa428c88 <../codeBase/fish-shell-master/tokenizer.cpp:501:1, line:505:1>
  (IfStmt 0xa428bf0 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa428928 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa428918 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa428908 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa4288f0 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa4288d4 <../codeBase/fish-shell-master/tokenizer.cpp:502:11> 'struct tokenizer_t *' lvalue ParmVar 0xa428820 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa428bd0 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa428a38 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa428a28 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa428a10 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa428978 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa428a68 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa428990 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa428a78 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa4289e0 <col:20> 'const char [15]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa428a88 <<scratch space>:159:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa4289f0 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa428af8 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa428ae8 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa428acc <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa428b78 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa428b68 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa428b4c <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa428bc0 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:502:16>
        (ImplicitCastExpr 0xa428bb0 <col:16> 'wchar_t' <IntegralCast>
          (IntegerLiteral 0xa428b98 <col:16> 'int' 0))))
    <<<NULL>>>)
  (NullStmt 0xa428c10 <col:18>)
  (ReturnStmt 0xa428c78 <line:504:5, col:17>
    (ImplicitCastExpr 0xa428c68 <col:12, col:17> 'wchar_t' <LValueToRValue>
      (MemberExpr 0xa428c44 <col:12, col:17> 'wchar_t' lvalue ->last_quote 0xa416940
        (ImplicitCastExpr 0xa428c38 <col:12> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa428c1c <col:12> 'struct tokenizer_t *' lvalue ParmVar 0xa428820 'tok' 'struct tokenizer_t *'))))))


static bool my_iswspace(wchar_t c) (CompoundStmt 0xa428ed0 <../codeBase/fish-shell-master/tokenizer.cpp:512:1, line:514:1>
  (ReturnStmt 0xa428ec0 <line:513:5, col:36>
    (BinaryOperator 0xa428ea8 <col:12, col:36> '_Bool' '&&'
      (BinaryOperator 0xa428da8 <col:12, col:17> '_Bool' '!='
        (ImplicitCastExpr 0xa428d98 <col:12> 'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa428d64 <col:12> 'wchar_t' lvalue ParmVar 0xa428cb0 'c' 'wchar_t'))
        (CharacterLiteral 0xa428d80 <col:17> 'wchar_t'10))
      (ImplicitCastExpr 0xa428e98 <col:26, col:36> '_Bool' <IntegralToBoolean>
        (CallExpr 0xa428e58 <col:26, col:36> 'int'
          (ImplicitCastExpr 0xa428e48 <col:26> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa428e0c <col:26> 'int (wint_t) throw()' lvalue Function 0x9e9e580 'iswspace' 'int (wint_t) throw()'))
          (ImplicitCastExpr 0xa428e88 <col:35> 'wint_t':'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa428e78 <col:35> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0xa428df4 <col:35> 'wchar_t' lvalue ParmVar 0xa428cb0 'c' 'wchar_t'))))))))


const wchar_t *tok_get_desc(int type) (CompoundStmt 0xa429380 <../codeBase/fish-shell-master/tokenizer.cpp:518:1, line:524:1>
  (IfStmt 0xa429258 <line:519:5, line:522:5>
    <<<NULL>>>
    (BinaryOperator 0xa4290d8 <line:519:9, col:52> '_Bool' '||'
      (BinaryOperator 0xa429008 <col:9, col:16> '_Bool' '<'
        (ImplicitCastExpr 0xa428ff8 <col:9> 'int' <LValueToRValue>
          (DeclRefExpr 0xa428fc4 <col:9> 'int' lvalue ParmVar 0xa428f00 'type' 'int'))
        (IntegerLiteral 0xa428fe0 <col:16> 'int' 0))
      (BinaryOperator 0xa4290c0 <col:21, col:52> '_Bool' '>='
        (CStyleCastExpr 0xa429060 <col:21, col:29> 'size_t':'unsigned int' <NoOp>
          (ImplicitCastExpr 0xa429050 <col:29> 'size_t':'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa429040 <col:29> 'int' <LValueToRValue>
              (DeclRefExpr 0xa429020 <col:29> 'int' lvalue ParmVar 0xa428f00 'type' 'int'))))
        (UnaryExprOrTypeTraitExpr 0xa4290a8 <col:37, col:52> 'unsigned int' sizeof 
          (ParenExpr 0xa429090 <col:43, col:52> 'const wchar_t *[13]' lvalue
            (DeclRefExpr 0xa429078 <col:44> 'const wchar_t *[13]' lvalue Var 0xa418300 'tok_desc' 'const wchar_t *[13]')))))
    (CompoundStmt 0xa429240 <line:520:5, line:522:5>
      (ReturnStmt 0xa429230 <line:521:9, ../codeBase/fish-shell-master/common.h:185:30>
        (CallExpr 0xa429200 <col:17, col:30> 'const wchar_t *'
          (ImplicitCastExpr 0xa4291f0 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa4291d4 <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
          (ImplicitCastExpr 0xa429220 <../codeBase/fish-shell-master/tokenizer.cpp:521:18> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa429170 <col:18> 'const wchar_t [19]' lvalue L"I\000\000\000n\000\000\000v\000\000\000a\000\000\000l\000\000\000i\000\000\000d\000\000\000 \000\000\000t\000\000\000o\000\000\000k\000\000\000e\000\000\000n\000\000\000 \000\000\000t\000\000\000y\000\000\000p\000\000\000e\000\000\000")))))
    <<<NULL>>>)
  (ReturnStmt 0xa429370 <line:523:5, ../codeBase/fish-shell-master/common.h:185:30>
    (CallExpr 0xa429340 <col:17, col:30> 'const wchar_t *'
      (ImplicitCastExpr 0xa429330 <col:17> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa429314 <col:17> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa4158a0 'wgettext' 'const wchar_t *(const wchar_t *)'))
      (ImplicitCastExpr 0xa429360 <../codeBase/fish-shell-master/tokenizer.cpp:523:14, col:27> 'const wchar_t *' <LValueToRValue>
        (ArraySubscriptExpr 0xa429300 <col:14, col:27> 'const wchar_t *' lvalue
          (ImplicitCastExpr 0xa4292e0 <col:14> 'const wchar_t **' <ArrayToPointerDecay>
            (DeclRefExpr 0xa4292ac <col:14> 'const wchar_t *[13]' lvalue Var 0xa418300 'tok_desc' 'const wchar_t *[13]'))
          (ImplicitCastExpr 0xa4292f0 <col:23> 'int' <LValueToRValue>
            (DeclRefExpr 0xa4292c4 <col:23> 'int' lvalue ParmVar 0xa428f00 'type' 'int')))))))


void tok_next(tokenizer_t *tok) (CompoundStmt 0xa42be90 <../codeBase/fish-shell-master/tokenizer.cpp:528:1, line:642:1>
  (IfStmt 0xa429758 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa4294b8 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa4294a8 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa429498 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa429480 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa429464 <../codeBase/fish-shell-master/tokenizer.cpp:530:11> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa429738 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa4295c8 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa4295b8 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4295a0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa429508 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa4295f8 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa429520 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa429608 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa429570 <col:20> 'const char [9]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa429618 <<scratch space>:160:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa429580 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa429688 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa429678 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42965c <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa429708 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa4296f8 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4296dc <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa429728 <line:140:3>))
    <<<NULL>>>)
  (NullStmt 0xa429778 <../codeBase/fish-shell-master/tokenizer.cpp:530:16>)
  (IfStmt 0xa429ab0 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa429808 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa4297f8 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa4297e8 <col:7, col:11> 'const wchar_t *' <LValueToRValue>
          (ParenExpr 0xa4297d0 <col:7, col:11> 'const wchar_t *' lvalue
            (MemberExpr 0xa4297ac <../codeBase/fish-shell-master/tokenizer.cpp:531:11, col:16> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa4297a0 <col:11> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa429784 <col:11> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
    (CompoundStmt 0xa429a90 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa429920 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa429910 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4298f8 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa429858 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa429950 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa429870 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa429960 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa4298c0 <col:20> 'const char [9]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa429970 <<scratch space>:161:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa4298d0 <col:1> 'const char [10]' lvalue "tok->buff")))
      (CallExpr 0xa4299e0 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa4299d0 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4299b4 <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa429a60 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa429a50 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa429a34 <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa429a80 <line:140:3>))
    <<<NULL>>>)
  (NullStmt 0xa429ad0 <../codeBase/fish-shell-master/tokenizer.cpp:531:22>)
  (IfStmt 0xa429cb0 <line:533:5, line:537:5>
    <<<NULL>>>
    (BinaryOperator 0xa429c00 <line:533:9, col:31> '_Bool' '=='
      (ImplicitCastExpr 0xa429be0 <col:9, col:26> 'int' <IntegralCast>
        (CallExpr 0xa429b98 <col:9, col:26> 'enum token_type':'enum token_type'
          (ImplicitCastExpr 0xa429b88 <col:9> 'enum token_type (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa429b2c <col:9> 'enum token_type (struct tokenizer_t *)' lvalue Function 0xa41ecf0 'tok_last_type' 'enum token_type (struct tokenizer_t *)'))
          (ImplicitCastExpr 0xa429bb8 <col:23> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa429b14 <col:23> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
      (ImplicitCastExpr 0xa429bf0 <col:31> 'int' <IntegralCast>
        (DeclRefExpr 0xa429bc4 <col:31> 'enum token_type' EnumConstant 0xa416150 'TOK_ERROR' 'enum token_type')))
    (CompoundStmt 0xa429c98 <line:534:5, line:537:5>
      (BinaryOperator 0xa429c70 <line:535:9, col:23> '_Bool' lvalue '='
        (MemberExpr 0xa429c3c <col:9, col:14> '_Bool' lvalue ->has_next 0xa416880
          (ImplicitCastExpr 0xa429c30 <col:9> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa429c18 <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
        (CXXBoolLiteralExpr 0xa429c60 <col:23> '_Bool' false))
      (ReturnStmt 0xa429c88 <line:536:9>))
    <<<NULL>>>)
  (IfStmt 0xa429de0 <line:539:5, line:544:5>
    <<<NULL>>>
    (UnaryOperator 0xa429d28 <line:539:9, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa429d18 <col:10, col:15> '_Bool' <LValueToRValue>
        (MemberExpr 0xa429cf4 <col:10, col:15> '_Bool' lvalue ->has_next 0xa416880
          (ImplicitCastExpr 0xa429ce8 <col:10> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa429ccc <col:10> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa429dc8 <line:540:5, line:544:5>
      (BinaryOperator 0xa429da0 <line:542:9, col:26> 'enum token_type':'enum token_type' lvalue '='
        (MemberExpr 0xa429d64 <col:9, col:14> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
          (ImplicitCastExpr 0xa429d58 <col:9> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa429d3c <col:9> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
        (DeclRefExpr 0xa429d84 <col:26> 'enum token_type' EnumConstant 0xa416250 'TOK_END' 'enum token_type'))
      (ReturnStmt 0xa429db8 <line:543:9>))
    <<<NULL>>>)
  (WhileStmt 0xa42a288 <line:546:5, line:560:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa429e18 <line:546:12> '_Bool' <IntegralToBoolean>
      (IntegerLiteral 0xa429e00 <col:12> 'int' 1))
    (CompoundStmt 0xa42a270 <line:547:5, line:560:5>
      (IfStmt 0xa42a250 <line:548:9, line:559:9>
        <<<NULL>>>
        (BinaryOperator 0xa429fb8 <line:548:13, col:54> '_Bool' '&&'
          (BinaryOperator 0xa429ed8 <col:13, col:29> '_Bool' '=='
            (ImplicitCastExpr 0xa429ec8 <col:13, col:24> 'wchar_t' <LValueToRValue>
              (ArraySubscriptExpr 0xa429e98 <col:13, col:24> 'const wchar_t' lvalue
                (ImplicitCastExpr 0xa429e88 <col:13, col:18> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa429e4c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
                    (ImplicitCastExpr 0xa429e40 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                      (DeclRefExpr 0xa429e24 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
                (IntegerLiteral 0xa429e70 <col:23> 'int' 0)))
            (CharacterLiteral 0xa429eb0 <col:29> 'wchar_t'92))
          (BinaryOperator 0xa429fa0 <col:38, col:54> '_Bool' '=='
            (ImplicitCastExpr 0xa429f90 <col:38, col:49> 'wchar_t' <LValueToRValue>
              (ArraySubscriptExpr 0xa429f60 <col:38, col:49> 'const wchar_t' lvalue
                (ImplicitCastExpr 0xa429f50 <col:38, col:43> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa429f14 <col:38, col:43> 'const wchar_t *' lvalue ->buff 0xa416720
                    (ImplicitCastExpr 0xa429f08 <col:38> 'struct tokenizer_t *' <LValueToRValue>
                      (DeclRefExpr 0xa429ef0 <col:38> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
                (IntegerLiteral 0xa429f38 <col:48> 'int' 1)))
            (CharacterLiteral 0xa429f78 <col:54> 'wchar_t'10)))
        (CompoundStmt 0xa42a050 <line:549:9, line:551:9>
          (CompoundAssignOperator 0xa42a030 <line:550:13, col:26> 'const wchar_t *' lvalue '+=' ComputeLHSTy='const wchar_t *' ComputeResultTy='const wchar_t *'
            (MemberExpr 0xa429ff4 <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa429fe8 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa429fd0 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
            (IntegerLiteral 0xa42a018 <col:26> 'int' 2)))
        (IfStmt 0xa42a230 <line:552:14, line:559:9>
          <<<NULL>>>
          (CallExpr 0xa42a168 <line:552:18, col:42> '_Bool'
            (ImplicitCastExpr 0xa42a158 <col:18> '_Bool (*)(wchar_t)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa42a124 <col:18> '_Bool (wchar_t)' lvalue Function 0xa428d00 'my_iswspace' '_Bool (wchar_t)'))
            (ImplicitCastExpr 0xa42a188 <col:30, col:41> 'wchar_t' <LValueToRValue>
              (ArraySubscriptExpr 0xa42a110 <col:30, col:41> 'const wchar_t' lvalue
                (ImplicitCastExpr 0xa42a100 <col:30, col:35> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa42a0c4 <col:30, col:35> 'const wchar_t *' lvalue ->buff 0xa416720
                    (ImplicitCastExpr 0xa42a0b8 <col:30> 'struct tokenizer_t *' <LValueToRValue>
                      (DeclRefExpr 0xa42a09c <col:30> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
                (IntegerLiteral 0xa42a0e8 <col:40> 'int' 0))))
          (CompoundStmt 0xa42a1f8 <line:553:9, line:555:9>
            (UnaryOperator 0xa42a1e0 <line:554:13, col:22> 'const wchar_t *' postfix '++'
              (MemberExpr 0xa42a1bc <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
                (ImplicitCastExpr 0xa42a1b0 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa42a194 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))
          (CompoundStmt 0xa42a218 <line:557:9, line:559:9>
            (BreakStmt 0xa42a210 <line:558:13>))))))
  (IfStmt 0xa42a9b8 <line:563:5, line:579:5>
    <<<NULL>>>
    (BinaryOperator 0xa42a338 <line:563:9, col:23> '_Bool' '=='
      (ImplicitCastExpr 0xa42a328 <col:9, col:15> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa42a2f8 <col:9, col:15> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa42a2e8 <col:10, col:15> 'const wchar_t *' <LValueToRValue>
            (MemberExpr 0xa42a2c4 <col:10, col:15> 'const wchar_t *' lvalue ->buff 0xa416720
              (ImplicitCastExpr 0xa42a2b8 <col:10> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa42a29c <col:10> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))))
      (CharacterLiteral 0xa42a310 <col:23> 'wchar_t'35))
    (CompoundStmt 0xa42a9a0 <line:564:5, line:579:5>
      (IfStmt 0xa42a7f0 <line:565:9, line:575:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa42a398 <line:565:13, col:18> '_Bool' <LValueToRValue>
          (MemberExpr 0xa42a374 <col:13, col:18> '_Bool' lvalue ->show_comments 0xa416900
            (ImplicitCastExpr 0xa42a368 <col:13> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42a350 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
        (CompoundStmt 0xa42a598 <line:566:9, line:570:9>
          (BinaryOperator 0xa42a4c8 <line:567:13, col:46> 'size_t':'unsigned int' lvalue '='
            (MemberExpr 0xa42a3cc <col:13, col:18> 'size_t':'unsigned int' lvalue ->last_pos 0xa416840
              (ImplicitCastExpr 0xa42a3c0 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                (DeclRefExpr 0xa42a3a4 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
            (ImplicitCastExpr 0xa42a4b8 <col:29, col:46> 'size_t':'unsigned int' <IntegralCast>
              (BinaryOperator 0xa42a4a0 <col:29, col:46> 'int' '-'
                (ImplicitCastExpr 0xa42a480 <col:29, col:34> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa42a414 <col:29, col:34> 'const wchar_t *' lvalue ->buff 0xa416720
                    (ImplicitCastExpr 0xa42a408 <col:29> 'struct tokenizer_t *' <LValueToRValue>
                      (DeclRefExpr 0xa42a3ec <col:29> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
                (ImplicitCastExpr 0xa42a490 <col:41, col:46> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa42a45c <col:41, col:46> 'const wchar_t *' lvalue ->orig_buff 0xa416760
                    (ImplicitCastExpr 0xa42a450 <col:41> 'struct tokenizer_t *' <LValueToRValue>
                      (DeclRefExpr 0xa42a434 <col:41> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
          (CallExpr 0xa42a558 <line:568:13, col:29> 'void'
            (ImplicitCastExpr 0xa42a548 <col:13> 'void (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa42a52c <col:13> 'void (struct tokenizer_t *)' lvalue Function 0xa426680 'read_comment' 'void (struct tokenizer_t *)'))
            (ImplicitCastExpr 0xa42a578 <col:26> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42a514 <col:26> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
          (ReturnStmt 0xa42a588 <line:569:13>))
        (CompoundStmt 0xa42a7d8 <line:572:9, line:575:9>
          (WhileStmt 0xa42a7c0 <line:573:13, line:574:26>
            <<<NULL>>>
            (BinaryOperator 0xa42a748 <line:573:20, col:59> '_Bool' '&&'
              (BinaryOperator 0xa42a668 <col:20, col:35> '_Bool' '!='
                (ImplicitCastExpr 0xa42a658 <col:20, col:31> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa42a628 <col:20, col:31> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa42a618 <col:21, col:31> 'const wchar_t *' <LValueToRValue>
                      (ParenExpr 0xa42a600 <col:21, col:31> 'const wchar_t *' lvalue
                        (MemberExpr 0xa42a5dc <col:22, col:27> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa42a5d0 <col:22> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa42a5b4 <col:22> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
                (CharacterLiteral 0xa42a640 <col:35> 'wchar_t'10))
              (BinaryOperator 0xa42a730 <col:44, col:59> '_Bool' '!='
                (ImplicitCastExpr 0xa42a720 <col:44, col:55> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa42a6f0 <col:44, col:55> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa42a6e0 <col:45, col:55> 'const wchar_t *' <LValueToRValue>
                      (ParenExpr 0xa42a6c8 <col:45, col:55> 'const wchar_t *' lvalue
                        (MemberExpr 0xa42a6a4 <col:46, col:51> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa42a698 <col:46> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa42a680 <col:46> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
                (CharacterLiteral 0xa42a708 <col:59> 'wchar_t'0)))
            (UnaryOperator 0xa42a7a8 <line:574:17, col:26> 'const wchar_t *' postfix '++'
              (MemberExpr 0xa42a784 <col:17, col:22> 'const wchar_t *' lvalue ->buff 0xa416720
                (ImplicitCastExpr 0xa42a778 <col:17> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa42a760 <col:17> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
      (WhileStmt 0xa42a988 <line:577:9, line:578:22>
        <<<NULL>>>
        (CallExpr 0xa42a8f8 <line:577:16, col:40> '_Bool'
          (ImplicitCastExpr 0xa42a8e8 <col:16> '_Bool (*)(wchar_t)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa42a8cc <col:16> '_Bool (wchar_t)' lvalue Function 0xa428d00 'my_iswspace' '_Bool (wchar_t)'))
          (ImplicitCastExpr 0xa42a918 <col:28, col:39> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa42a8b8 <col:28, col:39> 'const wchar_t' lvalue prefix '*'
              (ImplicitCastExpr 0xa42a8a8 <col:29, col:39> 'const wchar_t *' <LValueToRValue>
                (ParenExpr 0xa42a890 <col:29, col:39> 'const wchar_t *' lvalue
                  (MemberExpr 0xa42a86c <col:30, col:35> 'const wchar_t *' lvalue ->buff 0xa416720
                    (ImplicitCastExpr 0xa42a860 <col:30> 'struct tokenizer_t *' <LValueToRValue>
                      (DeclRefExpr 0xa42a844 <col:30> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))))))
        (UnaryOperator 0xa42a970 <line:578:13, col:22> 'const wchar_t *' postfix '++'
          (MemberExpr 0xa42a94c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
            (ImplicitCastExpr 0xa42a940 <col:13> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42a924 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))))
    <<<NULL>>>)
  (BinaryOperator 0xa42aaf8 <line:581:5, col:38> 'size_t':'unsigned int' lvalue '='
    (MemberExpr 0xa42a9fc <col:5, col:10> 'size_t':'unsigned int' lvalue ->last_pos 0xa416840
      (ImplicitCastExpr 0xa42a9f0 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa42a9d4 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
    (ImplicitCastExpr 0xa42aae8 <col:21, col:38> 'size_t':'unsigned int' <IntegralCast>
      (BinaryOperator 0xa42aad0 <col:21, col:38> 'int' '-'
        (ImplicitCastExpr 0xa42aab0 <col:21, col:26> 'const wchar_t *' <LValueToRValue>
          (MemberExpr 0xa42aa44 <col:21, col:26> 'const wchar_t *' lvalue ->buff 0xa416720
            (ImplicitCastExpr 0xa42aa38 <col:21> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42aa1c <col:21> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
        (ImplicitCastExpr 0xa42aac0 <col:33, col:38> 'const wchar_t *' <LValueToRValue>
          (MemberExpr 0xa42aa8c <col:33, col:38> 'const wchar_t *' lvalue ->orig_buff 0xa416760
            (ImplicitCastExpr 0xa42aa80 <col:33> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42aa64 <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
  (SwitchStmt 0xa42ab90 <line:583:5, line:640:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa42ab80 <line:583:13, col:19> 'wchar_t' <LValueToRValue>
      (UnaryOperator 0xa42ab68 <col:13, col:19> 'const wchar_t' lvalue prefix '*'
        (ImplicitCastExpr 0xa42ab58 <col:14, col:19> 'const wchar_t *' <LValueToRValue>
          (MemberExpr 0xa42ab34 <col:14, col:19> 'const wchar_t *' lvalue ->buff 0xa416720
            (ImplicitCastExpr 0xa42ab28 <col:14> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42ab10 <col:14> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))))
    (CompoundStmt 0xa42be20 <line:584:5, line:640:5>
      (CaseStmt 0xa42abc8 <line:586:9, line:587:30>
        (CharacterLiteral 0xa42abb0 <line:586:14> 'wchar_t'0)
        <<<NULL>>>
        (BinaryOperator 0xa42ac48 <line:587:13, col:30> 'enum token_type':'enum token_type' lvalue '='
          (MemberExpr 0xa42ac0c <col:13, col:18> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
            (ImplicitCastExpr 0xa42ac00 <col:13> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42abe8 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
          (DeclRefExpr 0xa42ac2c <col:30> 'enum token_type' EnumConstant 0xa416250 'TOK_END' 'enum token_type')))
      (BinaryOperator 0xa42acb8 <line:589:13, col:29> '_Bool' lvalue '='
        (MemberExpr 0xa42ac84 <col:13, col:18> '_Bool' lvalue ->has_next 0xa416880
          (ImplicitCastExpr 0xa42ac78 <col:13> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42ac60 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
        (CXXBoolLiteralExpr 0xa42aca8 <col:29> '_Bool' false))
      (BreakStmt 0xa42acd0 <line:590:13>)
      (CaseStmt 0xa42acf0 <line:591:9, line:594:30>
        (ImplicitCastExpr 0xa42be80 <line:591:14> 'wchar_t' <IntegralCast>
          (IntegerLiteral 0xa42acd8 <col:14> 'int' 13))
        <<<NULL>>>
        (CaseStmt 0xa42ad28 <line:592:9, line:594:30>
          (CharacterLiteral 0xa42ad10 <line:592:14> 'wchar_t'10)
          <<<NULL>>>
          (CaseStmt 0xa42ad60 <line:593:9, line:594:30>
            (CharacterLiteral 0xa42ad48 <line:593:14> 'wchar_t'59)
            <<<NULL>>>
            (BinaryOperator 0xa42ade0 <line:594:13, col:30> 'enum token_type':'enum token_type' lvalue '='
              (MemberExpr 0xa42ada4 <col:13, col:18> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
                (ImplicitCastExpr 0xa42ad98 <col:13> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa42ad80 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
              (DeclRefExpr 0xa42adc4 <col:30> 'enum token_type' EnumConstant 0xa416250 'TOK_END' 'enum token_type')))))
      (UnaryOperator 0xa42ae40 <line:595:13, col:22> 'const wchar_t *' postfix '++'
        (MemberExpr 0xa42ae1c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
          (ImplicitCastExpr 0xa42ae10 <col:13> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42adf8 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
      (BreakStmt 0xa42ae58 <line:596:13>)
      (CaseStmt 0xa42ae78 <line:597:9, line:598:30>
        (CharacterLiteral 0xa42ae60 <line:597:14> 'wchar_t'38)
        <<<NULL>>>
        (BinaryOperator 0xa42aef8 <line:598:13, col:30> 'enum token_type':'enum token_type' lvalue '='
          (MemberExpr 0xa42aebc <col:13, col:18> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
            (ImplicitCastExpr 0xa42aeb0 <col:13> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42ae98 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
          (DeclRefExpr 0xa42aedc <col:30> 'enum token_type' EnumConstant 0xa4163d0 'TOK_BACKGROUND' 'enum token_type')))
      (UnaryOperator 0xa42af58 <line:599:13, col:22> 'const wchar_t *' postfix '++'
        (MemberExpr 0xa42af34 <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
          (ImplicitCastExpr 0xa42af28 <col:13> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42af10 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
      (BreakStmt 0xa42af70 <line:600:13>)
      (CaseStmt 0xa42af90 <line:602:9, line:603:31>
        (CharacterLiteral 0xa42af78 <line:602:14> 'wchar_t'124)
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa42b098 <line:603:13, col:31> 'class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa42b088 <col:29, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const wchar_t *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa42b070 <col:29, <invalid sloc>> 'class std::basic_string<wchar_t> &(const wchar_t *)' lvalue CXXMethod 0xa1779b0 'operator=' 'class std::basic_string<wchar_t> &(const wchar_t *)'))
          (MemberExpr 0xa42afd4 <col:13, col:18> 'wcstring':'class std::basic_string<wchar_t>' lvalue ->last_token 0xa4167a0
            (ImplicitCastExpr 0xa42afc8 <col:13> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42afb0 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
          (ImplicitCastExpr 0xa42b060 <col:31> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa42b040 <col:31> 'const wchar_t [2]' lvalue L"1\000\000\000"))))
      (BinaryOperator 0xa42b120 <line:604:13, col:30> 'enum token_type':'enum token_type' lvalue '='
        (MemberExpr 0xa42b0e4 <col:13, col:18> 'enum token_type':'enum token_type' lvalue ->last_type 0xa416800
          (ImplicitCastExpr 0xa42b0d8 <col:13> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42b0bc <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
        (DeclRefExpr 0xa42b104 <col:30> 'enum token_type' EnumConstant 0xa416210 'TOK_PIPE' 'enum token_type'))
      (UnaryOperator 0xa42b180 <line:605:13, col:22> 'const wchar_t *' postfix '++'
        (MemberExpr 0xa42b15c <col:13, col:18> 'const wchar_t *' lvalue ->buff 0xa416720
          (ImplicitCastExpr 0xa42b150 <col:13> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42b138 <col:13> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))
      (BreakStmt 0xa42b198 <line:606:13>)
      (CaseStmt 0xa42b1b8 <line:608:9, line:609:33>
        (CharacterLiteral 0xa42b1a0 <line:608:14> 'wchar_t'62)
        <<<NULL>>>
        (CallExpr 0xa42b288 <line:609:13, col:33> 'void'
          (ImplicitCastExpr 0xa42b278 <col:13> 'void (*)(struct tokenizer_t *, int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa42b240 <col:13> 'void (struct tokenizer_t *, int)' lvalue Function 0xa426dc0 'read_redirect' 'void (struct tokenizer_t *, int)'))
          (ImplicitCastExpr 0xa42b2b0 <col:27> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42b20c <col:27> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))
          (IntegerLiteral 0xa42b228 <col:32> 'int' 1)))
      (ReturnStmt 0xa42b2c0 <line:610:13>)
      (CaseStmt 0xa42b2e8 <line:611:9, line:612:33>
        (CharacterLiteral 0xa42b2d0 <line:611:14> 'wchar_t'60)
        <<<NULL>>>
        (CallExpr 0xa42b398 <line:612:13, col:33> 'void'
          (ImplicitCastExpr 0xa42b388 <col:13> 'void (*)(struct tokenizer_t *, int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa42b370 <col:13> 'void (struct tokenizer_t *, int)' lvalue Function 0xa426dc0 'read_redirect' 'void (struct tokenizer_t *, int)'))
          (ImplicitCastExpr 0xa42b3c0 <col:27> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42b33c <col:27> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))
          (IntegerLiteral 0xa42b358 <col:32> 'int' 0)))
      (ReturnStmt 0xa42b3d0 <line:613:13>)
      (CaseStmt 0xa42b3f8 <line:614:9, line:615:33>
        (CharacterLiteral 0xa42b3e0 <line:614:14> 'wchar_t'94)
        <<<NULL>>>
        (CallExpr 0xa42b4a8 <line:615:13, col:33> 'void'
          (ImplicitCastExpr 0xa42b498 <col:13> 'void (*)(struct tokenizer_t *, int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa42b480 <col:13> 'void (struct tokenizer_t *, int)' lvalue Function 0xa426dc0 'read_redirect' 'void (struct tokenizer_t *, int)'))
          (ImplicitCastExpr 0xa42b4d0 <col:27> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42b44c <col:27> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))
          (IntegerLiteral 0xa42b468 <col:32> 'int' 2)))
      (ReturnStmt 0xa42b4e0 <line:616:13>)
      (DefaultStmt 0xa42be08 <line:618:9, line:638:9>
        (CompoundStmt 0xa42bdf0 <line:619:9, line:638:9>
          (IfStmt 0xa42bd28 <line:620:13, line:636:13>
            <<<NULL>>>
            (ImplicitCastExpr 0xa42b600 <line:620:17, col:36> '_Bool' <IntegralToBoolean>
              (CallExpr 0xa42b5c0 <col:17, col:36> 'int'
                (ImplicitCastExpr 0xa42b5b0 <col:17> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa42b594 <col:17> 'int (wint_t) throw()' lvalue Function 0x9e9e170 'iswdigit' 'int (wint_t) throw()'))
                (ImplicitCastExpr 0xa42b5f0 <col:26, col:32> 'wint_t':'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa42b5e0 <col:26, col:32> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa42b580 <col:26, col:32> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa42b570 <col:27, col:32> 'const wchar_t *' <LValueToRValue>
                        (MemberExpr 0xa42b54c <col:27, col:32> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa42b540 <col:27> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa42b524 <col:27> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))))
            (CompoundStmt 0xa42bd00 <line:621:13, line:636:13>
              (DeclStmt 0xa42b6b0 <line:622:17, col:48>
                0xa42b620 "const wchar_t *orig =
                  (ImplicitCastExpr 0xa42b6a0 <col:39, col:44> 'const wchar_t *' <LValueToRValue>
                    (MemberExpr 0xa42b67c <col:39, col:44> 'const wchar_t *' lvalue ->buff 0xa416720
                      (ImplicitCastExpr 0xa42b670 <col:39> 'struct tokenizer_t *' <LValueToRValue>
                        (DeclRefExpr 0xa42b654 <col:39> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))")
              (DeclStmt 0xa42b720 <line:623:17, col:27>
                0xa42b6d0 "int fd =
                  (IntegerLiteral 0xa42b708 <col:26> 'int' 0)")
              (WhileStmt 0xa42ba00 <line:624:17, line:625:58>
                <<<NULL>>>
                (ImplicitCastExpr 0xa42b840 <line:624:24, col:43> '_Bool' <IntegralToBoolean>
                  (CallExpr 0xa42b800 <col:24, col:43> 'int'
                    (ImplicitCastExpr 0xa42b7f0 <col:24> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa42b7d4 <col:24> 'int (wint_t) throw()' lvalue Function 0x9e9e170 'iswdigit' 'int (wint_t) throw()'))
                    (ImplicitCastExpr 0xa42b830 <col:33, col:39> 'wint_t':'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0xa42b820 <col:33, col:39> 'wchar_t' <LValueToRValue>
                        (UnaryOperator 0xa42b7c0 <col:33, col:39> 'const wchar_t' lvalue prefix '*'
                          (ImplicitCastExpr 0xa42b7b0 <col:34, col:39> 'const wchar_t *' <LValueToRValue>
                            (MemberExpr 0xa42b78c <col:34, col:39> 'const wchar_t *' lvalue ->buff 0xa416720
                              (ImplicitCastExpr 0xa42b780 <col:34> 'struct tokenizer_t *' <LValueToRValue>
                                (DeclRefExpr 0xa42b764 <col:34> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))))
                (BinaryOperator 0xa42b9e8 <line:625:21, col:58> 'int' lvalue '='
                  (DeclRefExpr 0xa42b84c <col:21> 'int' lvalue Var 0xa42b6d0 'fd' 'int')
                  (BinaryOperator 0xa42b9d0 <col:26, col:58> 'int' '+'
                    (ParenExpr 0xa42b8c0 <col:26, col:32> 'int'
                      (BinaryOperator 0xa42b8a8 <col:27, col:30> 'int' '*'
                        (ImplicitCastExpr 0xa42b898 <col:27> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa42b864 <col:27> 'int' lvalue Var 0xa42b6d0 'fd' 'int'))
                        (IntegerLiteral 0xa42b880 <col:30> 'int' 10)))
                    (ImplicitCastExpr 0xa42b9c0 <col:36, col:58> 'int' <IntegralCast>
                      (ParenExpr 0xa42b9a8 <col:36, col:58> 'wchar_t'
                        (BinaryOperator 0xa42b990 <col:37, col:54> 'wchar_t' '-'
                          (ImplicitCastExpr 0xa42b980 <col:37, col:50> 'wchar_t' <LValueToRValue>
                            (UnaryOperator 0xa42b950 <col:37, col:50> 'const wchar_t' lvalue prefix '*'
                              (ParenExpr 0xa42b938 <col:38, col:50> 'const wchar_t *'
                                (UnaryOperator 0xa42b920 <col:39, col:48> 'const wchar_t *' postfix '++'
                                  (MemberExpr 0xa42b8fc <col:39, col:44> 'const wchar_t *' lvalue ->buff 0xa416720
                                    (ImplicitCastExpr 0xa42b8f0 <col:39> 'struct tokenizer_t *' <LValueToRValue>
                                      (DeclRefExpr 0xa42b8d4 <col:39> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
                          (CharacterLiteral 0xa42b968 <col:54> 'wchar_t'48)))))))
              (SwitchStmt 0xa42bab0 <line:627:17, line:634:17>
                <<<NULL>>>
                (ImplicitCastExpr 0xa42baa0 <line:627:25, col:36> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa42ba88 <col:25, col:36> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa42ba78 <col:26, col:36> 'const wchar_t *' <LValueToRValue>
                      (ParenExpr 0xa42ba60 <col:26, col:36> 'const wchar_t *' lvalue
                        (MemberExpr 0xa42ba3c <col:27, col:32> 'const wchar_t *' lvalue ->buff 0xa416720
                          (ImplicitCastExpr 0xa42ba30 <col:27> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa42ba14 <col:27> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))))))
                (CompoundStmt 0xa42bc60 <line:628:17, line:634:17>
                  (CaseStmt 0xa42bae8 <line:629:21, line:632:46>
                    (CharacterLiteral 0xa42bad0 <line:629:26> 'wchar_t'94)
                    <<<NULL>>>
                    (CaseStmt 0xa42bb20 <line:630:21, line:632:46>
                      (CharacterLiteral 0xa42bb08 <line:630:26> 'wchar_t'62)
                      <<<NULL>>>
                      (CaseStmt 0xa42bb58 <line:631:21, line:632:46>
                        (CharacterLiteral 0xa42bb40 <line:631:26> 'wchar_t'60)
                        <<<NULL>>>
                        (CallExpr 0xa42bc08 <line:632:25, col:46> 'void'
                          (ImplicitCastExpr 0xa42bbf8 <col:25> 'void (*)(struct tokenizer_t *, int)' <FunctionToPointerDecay>
                            (DeclRefExpr 0xa42bbdc <col:25> 'void (struct tokenizer_t *, int)' lvalue Function 0xa426dc0 'read_redirect' 'void (struct tokenizer_t *, int)'))
                          (ImplicitCastExpr 0xa42bc30 <col:39> 'struct tokenizer_t *' <LValueToRValue>
                            (DeclRefExpr 0xa42bbac <col:39> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))
                          (ImplicitCastExpr 0xa42bc40 <col:44> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa42bbc4 <col:44> 'int' lvalue Var 0xa42b6d0 'fd' 'int'))))))
                  (ReturnStmt 0xa42bc50 <line:633:25>)))
              (BinaryOperator 0xa42bce8 <line:635:17, col:29> 'const wchar_t *' lvalue '='
                (MemberExpr 0xa42bc9c <col:17, col:22> 'const wchar_t *' lvalue ->buff 0xa416720
                  (ImplicitCastExpr 0xa42bc90 <col:17> 'struct tokenizer_t *' <LValueToRValue>
                    (DeclRefExpr 0xa42bc78 <col:17> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *')))
                (ImplicitCastExpr 0xa42bcd8 <col:29> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa42bcbc <col:29> 'const wchar_t *' lvalue Var 0xa42b620 'orig' 'const wchar_t *'))))
            <<<NULL>>>)
          (CallExpr 0xa42bdc0 <line:637:13, col:28> 'void'
            (ImplicitCastExpr 0xa42bdb0 <col:13> 'void (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa42bd94 <col:13> 'void (struct tokenizer_t *)' lvalue Function 0xa421610 'read_string' 'void (struct tokenizer_t *)'))
            (ImplicitCastExpr 0xa42bde0 <col:25> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42bd7c <col:25> 'struct tokenizer_t *' lvalue ParmVar 0xa4293b0 'tok' 'struct tokenizer_t *'))))))))


enum token_type tok_peek_next(tokenizer_t *tok, wcstring *out_next_string) (CompoundStmt 0xa42c948 <../codeBase/fish-shell-master/tokenizer.cpp:645:1, line:667:1>
  (IfStmt 0xa42c0e0 <line:646:5, line:649:5>
    <<<NULL>>>
    (BinaryOperator 0xa42c048 <line:646:9, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
      (ImplicitCastExpr 0xa42c028 <../codeBase/fish-shell-master/tokenizer.cpp:646:9> 'wcstring *' <LValueToRValue>
        (DeclRefExpr 0xa42bff8 <col:9> 'wcstring *' lvalue ParmVar 0xa42bf30 'out_next_string' 'wcstring *'))
      (ImplicitCastExpr 0xa42c038 </usr/include/linux/stddef.h:8:14> 'wcstring *' <NullToPointer>
        (IntegerLiteral 0xa42c010 <col:14> 'int' 0)))
    (CompoundStmt 0xa42c0c8 <../codeBase/fish-shell-master/tokenizer.cpp:647:5, line:649:5>
      (CXXMemberCallExpr 0xa42c0a8 <line:648:9, col:32> 'void'
        (MemberExpr 0xa42c084 <col:9, col:26> '<bound member function type>' ->clear 0xa179760
          (ImplicitCastExpr 0xa42c078 <col:9> 'wcstring *' <LValueToRValue>
            (DeclRefExpr 0xa42c060 <col:9> 'wcstring *' lvalue ParmVar 0xa42bf30 'out_next_string' 'wcstring *')))))
    <<<NULL>>>)
  (DeclStmt 0xa42c160 <line:651:5, col:37>
    0xa42c110 "enum token_type result =
      (DeclRefExpr 0xa42c144 <col:30> 'enum token_type' EnumConstant 0xa416250 'TOK_END' 'enum token_type')")
  (IfStmt 0xa42c8f0 <line:652:5, line:665:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa42c238 <line:652:9, col:25> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa42c208 <col:9, col:25> 'int'
        (ImplicitCastExpr 0xa42c1f8 <col:9> 'int (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42c1bc <col:9> 'int (struct tokenizer_t *)' lvalue Function 0xa41faa0 'tok_has_next' 'int (struct tokenizer_t *)'))
        (ImplicitCastExpr 0xa42c228 <col:22> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa42c1a4 <col:22> 'struct tokenizer_t *' lvalue ParmVar 0xa42bee0 'tok' 'struct tokenizer_t *'))))
    (CompoundStmt 0xa42c8c8 <line:653:5, line:665:5>
      (DeclStmt 0xa42c340 <line:654:9, col:37>
        0xa42c260 "int saved =
          (CallExpr 0xa42c310 <col:21, col:36> 'int'
            (ImplicitCastExpr 0xa42c300 <col:21> 'int (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa42c2e4 <col:21> 'int (struct tokenizer_t *)' lvalue Function 0xa4172b0 'tok_get_pos' 'int (struct tokenizer_t *)'))
            (ImplicitCastExpr 0xa42c330 <col:33> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42c2cc <col:33> 'struct tokenizer_t *' lvalue ParmVar 0xa42bee0 'tok' 'struct tokenizer_t *')))")
      (CallExpr 0xa42c3c8 <line:655:9, col:21> 'void'
        (ImplicitCastExpr 0xa42c3b8 <col:9> 'void (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42c39c <col:9> 'void (struct tokenizer_t *)' lvalue Function 0xa429400 'tok_next' 'void (struct tokenizer_t *)'))
        (ImplicitCastExpr 0xa42c3e8 <col:18> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa42c384 <col:18> 'struct tokenizer_t *' lvalue ParmVar 0xa42bee0 'tok' 'struct tokenizer_t *')))
      (BinaryOperator 0xa42c4b8 <line:656:9, col:35> 'enum token_type':'enum token_type' lvalue '='
        (DeclRefExpr 0xa42c3f4 <col:9> 'enum token_type':'enum token_type' lvalue Var 0xa42c110 'result' 'enum token_type':'enum token_type')
        (CallExpr 0xa42c488 <col:18, col:35> 'enum token_type':'enum token_type'
          (ImplicitCastExpr 0xa42c478 <col:18> 'enum token_type (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa42c45c <col:18> 'enum token_type (struct tokenizer_t *)' lvalue Function 0xa41ecf0 'tok_last_type' 'enum token_type (struct tokenizer_t *)'))
          (ImplicitCastExpr 0xa42c4a8 <col:32> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42c444 <col:32> 'struct tokenizer_t *' lvalue ParmVar 0xa42bee0 'tok' 'struct tokenizer_t *'))))
      (IfStmt 0xa42c7d0 <line:658:9, line:662:9>
        <<<NULL>>>
        (BinaryOperator 0xa42c520 <line:658:13, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
          (ImplicitCastExpr 0xa42c500 <../codeBase/fish-shell-master/tokenizer.cpp:658:13> 'wcstring *' <LValueToRValue>
            (DeclRefExpr 0xa42c4d0 <col:13> 'wcstring *' lvalue ParmVar 0xa42bf30 'out_next_string' 'wcstring *'))
          (ImplicitCastExpr 0xa42c510 </usr/include/linux/stddef.h:8:14> 'wcstring *' <NullToPointer>
            (IntegerLiteral 0xa42c4e8 <col:14> 'int' 0)))
        (CompoundStmt 0xa42c7b8 <../codeBase/fish-shell-master/tokenizer.cpp:659:9, line:662:9>
          (DeclStmt 0xa42c648 <line:660:13, col:48>
            0xa42c550 "const wchar_t *last =
              (CallExpr 0xa42c618 <col:35, col:47> 'const wchar_t *'
                (ImplicitCastExpr 0xa42c608 <col:35> 'const wchar_t *(*)(struct tokenizer_t *)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa42c5d4 <col:35> 'const wchar_t *(struct tokenizer_t *)' lvalue Function 0xa41f570 'tok_last' 'const wchar_t *(struct tokenizer_t *)'))
                (ImplicitCastExpr 0xa42c638 <col:44> 'struct tokenizer_t *' <LValueToRValue>
                  (DeclRefExpr 0xa42c5bc <col:44> 'struct tokenizer_t *' lvalue ParmVar 0xa42bee0 'tok' 'struct tokenizer_t *')))")
          (CXXMemberCallExpr 0xa42c798 <line:661:13, col:54> 'class std::basic_string<wchar_t>' lvalue
            (MemberExpr 0xa42c774 <col:13, col:30> '<bound member function type>' ->assign 0xa17cff0
              (ImplicitCastExpr 0xa42c670 <col:13> 'wcstring *' <LValueToRValue>
                (DeclRefExpr 0xa42c658 <col:13> 'wcstring *' lvalue ParmVar 0xa42bf30 'out_next_string' 'wcstring *')))
            (ConditionalOperator 0xa42c758 <col:37, col:51> 'const wchar_t *'
              (ImplicitCastExpr 0xa42c728 <col:37> '_Bool' <PointerToBoolean>
                (ImplicitCastExpr 0xa42c718 <col:37> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa42c6cc <col:37> 'const wchar_t *' lvalue Var 0xa42c550 'last' 'const wchar_t *')))
              (ImplicitCastExpr 0xa42c738 <col:44> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0xa42c6e4 <col:44> 'const wchar_t *' lvalue Var 0xa42c550 'last' 'const wchar_t *'))
              (ImplicitCastExpr 0xa42c748 <col:51> 'const wchar_t *' <ArrayToPointerDecay>
                (StringLiteral 0xa42c6fc <col:51> 'const wchar_t [1]' lvalue L"")))))
        <<<NULL>>>)
      (CallExpr 0xa42c880 <line:664:9, col:31> 'void'
        (ImplicitCastExpr 0xa42c870 <col:9> 'void (*)(struct tokenizer_t *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42c854 <col:9> 'void (struct tokenizer_t *, int)' lvalue Function 0xa4178b0 'tok_set_pos' 'void (struct tokenizer_t *, int)'))
        (ImplicitCastExpr 0xa42c8a8 <col:21> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa42c824 <col:21> 'struct tokenizer_t *' lvalue ParmVar 0xa42bee0 'tok' 'struct tokenizer_t *'))
        (ImplicitCastExpr 0xa42c8b8 <col:26> 'int' <LValueToRValue>
          (DeclRefExpr 0xa42c83c <col:26> 'int' lvalue Var 0xa42c260 'saved' 'int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa42c938 <line:666:5, col:12>
    (ImplicitCastExpr 0xa42c928 <col:12> 'enum token_type':'enum token_type' <LValueToRValue>
      (DeclRefExpr 0xa42c90c <col:12> 'enum token_type':'enum token_type' lvalue Var 0xa42c110 'result' 'enum token_type':'enum token_type'))))


const wchar_t *tok_string(tokenizer_t *tok) (CompoundStmt 0xa42cb30 <../codeBase/fish-shell-master/tokenizer.cpp:670:1, line:672:1>
  (ReturnStmt 0xa42cb20 <line:671:5, col:31>
    (ConditionalOperator 0xa42cb00 <col:12, col:31> 'const wchar_t *'
      (ImplicitCastExpr 0xa42cad0 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa42cac0 <col:12> 'struct tokenizer_t *' <LValueToRValue>
          (DeclRefExpr 0xa42ca44 <col:12> 'struct tokenizer_t *' lvalue ParmVar 0xa42c980 'tok' 'struct tokenizer_t *')))
      (ImplicitCastExpr 0xa42cae0 <col:16, col:21> 'const wchar_t *' <LValueToRValue>
        (MemberExpr 0xa42ca84 <col:16, col:21> 'const wchar_t *' lvalue ->orig_buff 0xa416760
          (ImplicitCastExpr 0xa42ca78 <col:16> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42ca5c <col:16> 'struct tokenizer_t *' lvalue ParmVar 0xa42c980 'tok' 'struct tokenizer_t *'))))
      (ImplicitCastExpr 0xa42caf0 <col:31> 'const wchar_t *' <NullToPointer>
        (IntegerLiteral 0xa42caa8 <col:31> 'int' 0)))))


wcstring tok_first(const wchar_t *str) (CompoundStmt 0xa42d278 <../codeBase/fish-shell-master/tokenizer.cpp:675:1, line:694:1>
  (DeclStmt 0xa42cc78 <line:676:5, col:20>
    0xa42cc20 "wcstring result =
      (CXXConstructExpr 0xa42cc58 <col:14> 'wcstring':'class std::basic_string<wchar_t>''void (void)')")
  (IfStmt 0xa42d1f8 <line:677:5, line:692:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa42ccb0 <line:677:9> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa42cca0 <col:9> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa42cc88 <col:9> 'const wchar_t *' lvalue ParmVar 0xa42cb60 'str' 'const wchar_t *')))
    (CompoundStmt 0xa42d1e0 <line:678:5, line:692:5>
      (DeclStmt 0xa42ce20 <line:679:9, col:46>
        0xa42ccd0 "tokenizer_t t =
          (CXXConstructExpr 0xa42cd58 <col:21, col:45> 'struct tokenizer_t''void (const wchar_t *, tok_flags_t)'
            (ImplicitCastExpr 0xa42cd38 <col:23> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa42cd04 <col:23> 'const wchar_t *' lvalue ParmVar 0xa42cb60 'str' 'const wchar_t *'))
            (ImplicitCastExpr 0xa42cd48 <../codeBase/fish-shell-master/tokenizer.h:63:27> 'tok_flags_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa42cd20 <col:27> 'int' 4)))")
      (SwitchStmt 0xa42cef0 <../codeBase/fish-shell-master/tokenizer.cpp:680:9, line:691:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa42cee0 <line:680:17, col:33> 'int' <IntegralCast>
          (CallExpr 0xa42cec0 <col:17, col:33> 'enum token_type':'enum token_type'
            (ImplicitCastExpr 0xa42ceb0 <col:17> 'enum token_type (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa42ce94 <col:17> 'enum token_type (struct tokenizer_t *)' lvalue Function 0xa41ecf0 'tok_last_type' 'enum token_type (struct tokenizer_t *)'))
            (UnaryOperator 0xa42ce80 <col:31, col:32> 'struct tokenizer_t *' prefix '&'
              (DeclRefExpr 0xa42ce64 <col:32> 'struct tokenizer_t' lvalue Var 0xa42ccd0 't' 'struct tokenizer_t'))))
        (CompoundStmt 0xa42d1b8 <line:681:9, line:691:9>
          (CaseStmt 0xa42cf28 <line:682:13, line:688:13>
            (ImplicitCastExpr 0xa42d1d0 <line:682:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa42cf0c <col:18> 'enum token_type' EnumConstant 0xa4161d0 'TOK_STRING' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0xa42d178 <line:683:13, line:688:13>
              (DeclStmt 0xa42d048 <line:684:17, col:50>
                0xa42cf60 "const wchar_t *tmp =
                  (CallExpr 0xa42d028 <col:38, col:49> 'const wchar_t *'
                    (ImplicitCastExpr 0xa42d018 <col:38> 'const wchar_t *(*)(struct tokenizer_t *)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa42cffc <col:38> 'const wchar_t *(struct tokenizer_t *)' lvalue Function 0xa41f570 'tok_last' 'const wchar_t *(struct tokenizer_t *)'))
                    (UnaryOperator 0xa42cfe8 <col:47, col:48> 'struct tokenizer_t *' prefix '&'
                      (DeclRefExpr 0xa42cfcc <col:48> 'struct tokenizer_t' lvalue Var 0xa42ccd0 't' 'struct tokenizer_t')))")
              (IfStmt 0xa42d150 <line:685:17, line:686:30>
                <<<NULL>>>
                (BinaryOperator 0xa42d0a8 <line:685:21, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
                  (ImplicitCastExpr 0xa42d088 <../codeBase/fish-shell-master/tokenizer.cpp:685:21> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa42d058 <col:21> 'const wchar_t *' lvalue Var 0xa42cf60 'tmp' 'const wchar_t *'))
                  (ImplicitCastExpr 0xa42d098 </usr/include/linux/stddef.h:8:14> 'const wchar_t *' <NullToPointer>
                    (IntegerLiteral 0xa42d070 <col:14> 'int' 0)))
                (CXXOperatorCallExpr 0xa42d128 <../codeBase/fish-shell-master/tokenizer.cpp:686:21, col:30> 'class std::basic_string<wchar_t>' lvalue
                  (ImplicitCastExpr 0xa42d118 <col:28, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const wchar_t *)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa42d100 <col:28, <invalid sloc>> 'class std::basic_string<wchar_t> &(const wchar_t *)' lvalue CXXMethod 0xa1779b0 'operator=' 'class std::basic_string<wchar_t> &(const wchar_t *)'))
                  (DeclRefExpr 0xa42d0c0 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa42cc20 'result' 'wcstring':'class std::basic_string<wchar_t>')
                  (ImplicitCastExpr 0xa42d0f0 <col:30> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa42d0d8 <col:30> 'const wchar_t *' lvalue Var 0xa42cf60 'tmp' 'const wchar_t *')))
                <<<NULL>>>)
              (BreakStmt 0xa42d170 <line:687:17>)))
          (DefaultStmt 0xa42d1a0 <line:689:13, line:690:17>
            (BreakStmt 0xa42d198 <col:17>)))))
    <<<NULL>>>)
  (ReturnStmt 0xa42d268 <line:693:5, col:12>
    (CXXConstructExpr 0xa42d240 <col:12> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
      (ImplicitCastExpr 0xa42d230 <col:12> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
        (DeclRefExpr 0xa42d214 <col:12> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa42cc20 'result' 'wcstring':'class std::basic_string<wchar_t>')))))


int tok_get_pos(tokenizer_t *tok) (CompoundStmt 0xa42d750 <../codeBase/fish-shell-master/tokenizer.cpp:697:1, line:701:1>
  (IfStmt 0xa42d680 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa42d3c8 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa42d3b8 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa42d3a8 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa42d390 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa42d374 <../codeBase/fish-shell-master/tokenizer.cpp:698:11> 'struct tokenizer_t *' lvalue ParmVar 0xa42d2b0 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa42d660 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa42d4d8 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa42d4c8 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42d4b0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa42d418 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa42d508 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa42d430 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa42d518 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa42d480 <col:20> 'const char [12]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa42d528 <<scratch space>:162:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa42d490 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa42d598 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa42d588 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42d56c <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa42d618 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa42d608 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42d5ec <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa42d650 <line:140:3, ../codeBase/fish-shell-master/tokenizer.cpp:698:16>
        (IntegerLiteral 0xa42d638 <col:16> 'int' 0)))
    <<<NULL>>>)
  (NullStmt 0xa42d6a0 <col:18>)
  (ReturnStmt 0xa42d740 <line:700:5, col:22>
    (CStyleCastExpr 0xa42d728 <col:12, col:22> 'int' <NoOp>
      (ImplicitCastExpr 0xa42d718 <col:17, col:22> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa42d708 <col:17, col:22> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0xa42d6d4 <col:17, col:22> 'size_t':'unsigned int' lvalue ->last_pos 0xa416840
            (ImplicitCastExpr 0xa42d6c8 <col:17> 'struct tokenizer_t *' <LValueToRValue>
              (DeclRefExpr 0xa42d6ac <col:17> 'struct tokenizer_t *' lvalue ParmVar 0xa42d2b0 'tok' 'struct tokenizer_t *'))))))))


void tok_set_pos(tokenizer_t *tok, int pos) (CompoundStmt 0xa42ddc8 <../codeBase/fish-shell-master/tokenizer.cpp:705:1, line:711:1>
  (IfStmt 0xa42db88 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa42d8e8 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa42d8d8 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa42d8c8 <col:7, col:11> 'struct tokenizer_t *' <LValueToRValue>
          (ParenExpr 0xa42d8b0 <col:7, col:11> 'struct tokenizer_t *' lvalue
            (DeclRefExpr 0xa42d898 <../codeBase/fish-shell-master/tokenizer.cpp:706:11> 'struct tokenizer_t *' lvalue ParmVar 0xa42d780 'tok' 'struct tokenizer_t *')))))
    (CompoundStmt 0xa42db68 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa42d9f8 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa42d9e8 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42d9d0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa412460 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa42d938 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa42da28 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa42d950 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa42da38 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa42d9a0 <col:20> 'const char [12]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa42da48 <<scratch space>:163:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa42d9b0 <col:1> 'const char [4]' lvalue "tok")))
      (CallExpr 0xa42dab8 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa42daa8 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42da8c <col:3> 'void (void)' lvalue Function 0xa4131b0 'bugreport' 'void (void)')))
      (CallExpr 0xa42db38 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa42db28 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa42db0c <col:3> 'void (void)' lvalue Function 0xa3f5e50 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa42db58 <line:140:3>))
    <<<NULL>>>)
  (NullStmt 0xa42dba8 <../codeBase/fish-shell-master/tokenizer.cpp:706:16>)
  (BinaryOperator 0xa42dc98 <line:708:5, col:34> 'const wchar_t *' lvalue '='
    (MemberExpr 0xa42dbdc <col:5, col:10> 'const wchar_t *' lvalue ->buff 0xa416720
      (ImplicitCastExpr 0xa42dbd0 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa42dbb4 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa42d780 'tok' 'struct tokenizer_t *')))
    (BinaryOperator 0xa42dc80 <col:17, col:34> 'const wchar_t *' '+'
      (ImplicitCastExpr 0xa42dc60 <col:17, col:22> 'const wchar_t *' <LValueToRValue>
        (MemberExpr 0xa42dc24 <col:17, col:22> 'const wchar_t *' lvalue ->orig_buff 0xa416760
          (ImplicitCastExpr 0xa42dc18 <col:17> 'struct tokenizer_t *' <LValueToRValue>
            (DeclRefExpr 0xa42dbfc <col:17> 'struct tokenizer_t *' lvalue ParmVar 0xa42d780 'tok' 'struct tokenizer_t *'))))
      (ImplicitCastExpr 0xa42dc70 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0xa42dc44 <col:34> 'int' lvalue ParmVar 0xa42d7d0 'pos' 'int'))))
  (BinaryOperator 0xa42dd08 <line:709:5, col:21> '_Bool' lvalue '='
    (MemberExpr 0xa42dcd4 <col:5, col:10> '_Bool' lvalue ->has_next 0xa416880
      (ImplicitCastExpr 0xa42dcc8 <col:5> 'struct tokenizer_t *' <LValueToRValue>
        (DeclRefExpr 0xa42dcb0 <col:5> 'struct tokenizer_t *' lvalue ParmVar 0xa42d780 'tok' 'struct tokenizer_t *')))
    (CXXBoolLiteralExpr 0xa42dcf8 <col:21> '_Bool' true))
  (CallExpr 0xa42dd98 <line:710:5, col:17> 'void'
    (ImplicitCastExpr 0xa42dd88 <col:5> 'void (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa42dd6c <col:5> 'void (struct tokenizer_t *)' lvalue Function 0xa429400 'tok_next' 'void (struct tokenizer_t *)'))
    (ImplicitCastExpr 0xa42ddb8 <col:14> 'struct tokenizer_t *' <LValueToRValue>
      (DeclRefExpr 0xa42dd54 <col:14> 'struct tokenizer_t *' lvalue ParmVar 0xa42d780 'tok' 'struct tokenizer_t *'))))


bool consume_char_punctuation(wchar_t c) (CompoundStmt 0xa431210 <../codeBase/fish-shell-master/tokenizer.cpp:714:1, line:764:1>
  (DeclStmt 0xa4308f8 <line:715:5, <invalid sloc>>
    0xa42df00 "enum <anonymous>;")
  (DeclStmt 0xa430958 <line:723:5, col:26>
    0xa430910 "bool consumed =
      (CXXBoolLiteralExpr 0xa430948 <col:21> '_Bool' false)")
  (WhileStmt 0xa4311c0 <line:724:5, line:762:5>
    <<<NULL>>>
    (BinaryOperator 0xa430a48 <line:724:12, col:32> '_Bool' '&&'
      (BinaryOperator 0xa4309f0 <col:12, col:21> '_Bool' '!='
        (ImplicitCastExpr 0xa4309d0 <col:12> 'int' <LValueToRValue>
          (MemberExpr 0xa430998 <col:12> 'int' lvalue ->state 0xa417fd0
            (CXXThisExpr 0xa430988 <col:12> 'class move_word_state_machine_t *' this)))
        (ImplicitCastExpr 0xa4309e0 <col:21> 'int' <IntegralCast>
          (DeclRefExpr 0xa4309b8 <col:21> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa4308b0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>')))
      (UnaryOperator 0xa430a30 <col:30, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa430a20 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa430a08 <col:32> '_Bool' lvalue Var 0xa430910 'consumed' '_Bool'))))
    (CompoundStmt 0xa4311a8 <line:725:5, line:762:5>
      (SwitchStmt 0xa430aa0 <line:726:9, line:761:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa430a90 <line:726:17> 'int' <LValueToRValue>
          (MemberExpr 0xa430a70 <col:17> 'int' lvalue ->state 0xa417fd0
            (CXXThisExpr 0xa430a60 <col:17> 'class move_word_state_machine_t *' this)))
        (CompoundStmt 0xa431138 <line:727:9, line:761:9>
          (CaseStmt 0xa430ad8 <line:728:13, line:730:28>
            (ImplicitCastExpr 0xa431198 <line:728:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa430abc <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa42df80 's_always_one' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>'))
            <<<NULL>>>
            (BinaryOperator 0xa430b20 <line:730:17, col:28> '_Bool' lvalue '='
              (DeclRefExpr 0xa430af8 <col:17> '_Bool' lvalue Var 0xa430910 'consumed' '_Bool')
              (CXXBoolLiteralExpr 0xa430b10 <col:28> '_Bool' true)))
          (BinaryOperator 0xa430cb0 <line:731:17, col:25> 'int' lvalue '='
            (MemberExpr 0xa430b48 <col:17> 'int' lvalue ->state 0xa417fd0
              (CXXThisExpr 0xa430b38 <col:17> 'class move_word_state_machine_t *' this))
            (ImplicitCastExpr 0xa430ca0 <col:25> 'int' <IntegralCast>
              (DeclRefExpr 0xa430b68 <col:25> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa42dfc0 's_whitespace' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>')))
          (BreakStmt 0xa430cc8 <line:732:17>)
          (CaseStmt 0xa430ce8 <line:734:13, line:743:17>
            (ImplicitCastExpr 0xa431188 <line:734:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa430cd0 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa42dfc0 's_whitespace' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>'))
            <<<NULL>>>
            (IfStmt 0xa430eb0 <line:735:17, line:743:17>
              <<<NULL>>>
              (ImplicitCastExpr 0xa430dc0 <line:735:21, col:31> '_Bool' <IntegralToBoolean>
                (CallExpr 0xa430d80 <col:21, col:31> 'int'
                  (ImplicitCastExpr 0xa430d70 <col:21> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa430d54 <col:21> 'int (wint_t) throw()' lvalue Function 0x9e9e580 'iswspace' 'int (wint_t) throw()'))
                  (ImplicitCastExpr 0xa430db0 <col:30> 'wint_t':'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa430da0 <col:30> 'wchar_t' <LValueToRValue>
                      (DeclRefExpr 0xa430d3c <col:30> 'wchar_t' lvalue ParmVar 0xa42de20 'c' 'wchar_t')))))
              (CompoundStmt 0xa430e10 <line:736:17, line:739:17>
                (BinaryOperator 0xa430df8 <line:738:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa430dcc <col:21> '_Bool' lvalue Var 0xa430910 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa430de8 <col:32> '_Bool' true)))
              (CompoundStmt 0xa430e98 <line:741:17, line:743:17>
                (BinaryOperator 0xa430e80 <line:742:21, col:29> 'int' lvalue '='
                  (MemberExpr 0xa430e38 <col:21> 'int' lvalue ->state 0xa417fd0
                    (CXXThisExpr 0xa430e28 <col:21> 'class move_word_state_machine_t *' this))
                  (ImplicitCastExpr 0xa430e70 <col:29> 'int' <IntegralCast>
                    (DeclRefExpr 0xa430e58 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa42e000 's_alphanumeric' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>'))))))
          (BreakStmt 0xa430ed0 <line:744:17>)
          (CaseStmt 0xa430ef0 <line:746:13, line:755:17>
            (ImplicitCastExpr 0xa431178 <line:746:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa430ed8 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa42e000 's_alphanumeric' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>'))
            <<<NULL>>>
            (IfStmt 0xa4310b8 <line:747:17, line:755:17>
              <<<NULL>>>
              (ImplicitCastExpr 0xa430fc8 <line:747:21, col:31> '_Bool' <IntegralToBoolean>
                (CallExpr 0xa430f88 <col:21, col:31> 'int'
                  (ImplicitCastExpr 0xa430f78 <col:21> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa430f5c <col:21> 'int (wint_t) throw()' lvalue Function 0x9e9df00 'iswalnum' 'int (wint_t) throw()'))
                  (ImplicitCastExpr 0xa430fb8 <col:30> 'wint_t':'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa430fa8 <col:30> 'wchar_t' <LValueToRValue>
                      (DeclRefExpr 0xa430f44 <col:30> 'wchar_t' lvalue ParmVar 0xa42de20 'c' 'wchar_t')))))
              (CompoundStmt 0xa431018 <line:748:17, line:751:17>
                (BinaryOperator 0xa431000 <line:750:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa430fd4 <col:21> '_Bool' lvalue Var 0xa430910 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa430ff0 <col:32> '_Bool' true)))
              (CompoundStmt 0xa4310a0 <line:753:17, line:755:17>
                (BinaryOperator 0xa431088 <line:754:21, col:29> 'int' lvalue '='
                  (MemberExpr 0xa431040 <col:21> 'int' lvalue ->state 0xa417fd0
                    (CXXThisExpr 0xa431030 <col:21> 'class move_word_state_machine_t *' this))
                  (ImplicitCastExpr 0xa431078 <col:29> 'int' <IntegralCast>
                    (DeclRefExpr 0xa431060 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa4308b0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>'))))))
          (BreakStmt 0xa4310d8 <line:756:17>)
          (CaseStmt 0xa4310f8 <line:758:13, line:760:17>
            (ImplicitCastExpr 0xa431168 <line:758:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa4310e0 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>' EnumConstant 0xa4308b0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:715:5>'))
            <<<NULL>>>
            (DefaultStmt 0xa431120 <line:759:13, line:760:17>
              (BreakStmt 0xa431118 <col:17>)))))))
  (ReturnStmt 0xa431200 <line:763:5, col:12>
    (ImplicitCastExpr 0xa4311f0 <col:12> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa4311d4 <col:12> '_Bool' lvalue Var 0xa430910 'consumed' '_Bool'))))


bool is_path_component_character(wchar_t c) (CompoundStmt 0xa431538 <../codeBase/fish-shell-master/tokenizer.cpp:767:1, line:770:1>
  (ReturnStmt 0xa431528 <line:769:5, col:71>
    (BinaryOperator 0xa431510 <col:12, col:71> '_Bool' '&&'
      (CallExpr 0xa4313b8 <col:12, col:43> '_Bool'
        (ImplicitCastExpr 0xa4313a8 <col:12> '_Bool (*)(wchar_t, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa431390 <col:12> '_Bool (wchar_t, _Bool)' lvalue Function 0xa420e90 'tok_is_string_character' '_Bool (wchar_t, _Bool)'))
        (ImplicitCastExpr 0xa4313e0 <col:36> 'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa431364 <col:36> 'wchar_t' lvalue ParmVar 0xa431250 'c' 'wchar_t'))
        (CXXBoolLiteralExpr 0xa431380 <col:39> '_Bool' true))
      (UnaryOperator 0xa4314f8 <col:48, col:71> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa4314e8 <col:50, col:71> '_Bool' <PointerToBoolean>
          (CallExpr 0xa4314a0 <col:50, col:71> 'wchar_t *'
            (ImplicitCastExpr 0xa431490 <col:50> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa431474 <col:50> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9e8c220 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
            (ImplicitCastExpr 0xa4314c8 <col:57> 'const wchar_t *' <ArrayToPointerDecay>
              (StringLiteral 0xa431424 <col:57> 'const wchar_t [8]' lvalue L"/\000\000\000=\000\000\000{\000\000\000,\000\000\000}\000\000\000'\000\000\000\"\000\000\000"))
            (ImplicitCastExpr 0xa4314d8 <col:70> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0xa43145c <col:70> 'wchar_t' lvalue ParmVar 0xa431250 'c' 'wchar_t'))))))))


bool consume_char_path_components(wchar_t c) (CompoundStmt 0xa432698 <../codeBase/fish-shell-master/tokenizer.cpp:773:1, line:859:1>
  (DeclStmt 0xa431828 <line:774:5, <invalid sloc>>
    0xa431650 "enum <anonymous>;")
  (DeclStmt 0xa431888 <line:785:5, col:26>
    0xa431840 "bool consumed =
      (CXXBoolLiteralExpr 0xa431878 <col:21> '_Bool' false)")
  (WhileStmt 0xa432648 <line:786:5, line:857:5>
    <<<NULL>>>
    (BinaryOperator 0xa431958 <line:786:12, col:32> '_Bool' '&&'
      (BinaryOperator 0xa431900 <col:12, col:21> '_Bool' '!='
        (ImplicitCastExpr 0xa4318e0 <col:12> 'int' <LValueToRValue>
          (MemberExpr 0xa4318a8 <col:12> 'int' lvalue ->state 0xa417fd0
            (CXXThisExpr 0xa431898 <col:12> 'class move_word_state_machine_t *' this)))
        (ImplicitCastExpr 0xa4318f0 <col:21> 'int' <IntegralCast>
          (DeclRefExpr 0xa4318c8 <col:21> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4317f0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>')))
      (UnaryOperator 0xa431940 <col:30, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa431930 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa431918 <col:32> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool'))))
    (CompoundStmt 0xa432630 <line:787:5, line:857:5>
      (SwitchStmt 0xa4319b0 <line:788:9, line:856:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa4319a0 <line:788:17> 'int' <LValueToRValue>
          (MemberExpr 0xa431980 <col:17> 'int' lvalue ->state 0xa417fd0
            (CXXThisExpr 0xa431970 <col:17> 'class move_word_state_machine_t *' this)))
        (CompoundStmt 0xa432590 <line:789:9, line:856:9>
          (CaseStmt 0xa4319e8 <line:790:13, line:794:17>
            (ImplicitCastExpr 0xa432620 <line:790:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa4319cc <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4316b0 's_initial_punctuation' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))
            <<<NULL>>>
            (IfStmt 0xa431af0 <line:791:17, line:794:17>
              <<<NULL>>>
              (UnaryOperator 0xa431a80 <line:791:21, col:52> '_Bool' prefix '!'
                (CXXMemberCallExpr 0xa431a50 <col:23, col:52> '_Bool'
                  (MemberExpr 0xa431a18 <col:23> '<bound member function type>' ->is_path_component_character 0xa4312a0
                    (CXXThisExpr 0xa431a08 <col:23> 'class move_word_state_machine_t *' this))
                  (ImplicitCastExpr 0xa431a70 <col:51> 'wchar_t' <LValueToRValue>
                    (DeclRefExpr 0xa431a38 <col:51> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t'))))
              (CompoundStmt 0xa431ad8 <line:792:17, line:794:17>
                (BinaryOperator 0xa431ac0 <line:793:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa431a94 <col:21> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa431ab0 <col:32> '_Bool' true)))
              <<<NULL>>>))
          (BinaryOperator 0xa431b68 <line:795:17, col:25> 'int' lvalue '='
            (MemberExpr 0xa431b20 <col:17> 'int' lvalue ->state 0xa417fd0
              (CXXThisExpr 0xa431b10 <col:17> 'class move_word_state_machine_t *' this))
            (ImplicitCastExpr 0xa431b58 <col:25> 'int' <IntegralCast>
              (DeclRefExpr 0xa431b40 <col:25> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4316f0 's_whitespace' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>')))
          (BreakStmt 0xa431b80 <line:796:17>)
          (CaseStmt 0xa431ba0 <line:798:13, line:813:17>
            (ImplicitCastExpr 0xa432610 <line:798:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa431b88 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4316f0 's_whitespace' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))
            <<<NULL>>>
            (IfStmt 0xa431ef8 <line:799:17, line:813:17>
              <<<NULL>>>
              (ImplicitCastExpr 0xa431c78 <line:799:21, col:31> '_Bool' <IntegralToBoolean>
                (CallExpr 0xa431c38 <col:21, col:31> 'int'
                  (ImplicitCastExpr 0xa431c28 <col:21> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa431c0c <col:21> 'int (wint_t) throw()' lvalue Function 0x9e9e580 'iswspace' 'int (wint_t) throw()'))
                  (ImplicitCastExpr 0xa431c68 <col:30> 'wint_t':'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa431c58 <col:30> 'wchar_t' <LValueToRValue>
                      (DeclRefExpr 0xa431bf4 <col:30> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t')))))
              (CompoundStmt 0xa431cc8 <line:800:17, line:803:17>
                (BinaryOperator 0xa431cb0 <line:802:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa431c84 <col:21> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa431ca0 <col:32> '_Bool' true)))
              (IfStmt 0xa431ed8 <line:804:22, line:813:17>
                <<<NULL>>>
                (BinaryOperator 0xa431db0 <line:804:26, col:68> '_Bool' '||'
                  (BinaryOperator 0xa431d20 <col:26, col:31> '_Bool' '=='
                    (ImplicitCastExpr 0xa431d10 <col:26> 'wchar_t' <LValueToRValue>
                      (DeclRefExpr 0xa431cdc <col:26> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t'))
                    (CharacterLiteral 0xa431cf8 <col:31> 'wchar_t'47))
                  (CXXMemberCallExpr 0xa431d80 <col:39, col:68> '_Bool'
                    (MemberExpr 0xa431d48 <col:39> '<bound member function type>' ->is_path_component_character 0xa4312a0
                      (CXXThisExpr 0xa431d38 <col:39> 'class move_word_state_machine_t *' this))
                    (ImplicitCastExpr 0xa431da0 <col:67> 'wchar_t' <LValueToRValue>
                      (DeclRefExpr 0xa431d68 <col:67> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t'))))
                (CompoundStmt 0xa431e38 <line:805:17, line:808:17>
                  (BinaryOperator 0xa431e20 <line:807:21, col:29> 'int' lvalue '='
                    (MemberExpr 0xa431dd8 <col:21> 'int' lvalue ->state 0xa417fd0
                      (CXXThisExpr 0xa431dc8 <col:21> 'class move_word_state_machine_t *' this))
                    (ImplicitCastExpr 0xa431e10 <col:29> 'int' <IntegralCast>
                      (DeclRefExpr 0xa431df8 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa431770 's_slash' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))))
                (CompoundStmt 0xa431ec0 <line:810:17, line:813:17>
                  (BinaryOperator 0xa431ea8 <line:812:21, col:29> 'int' lvalue '='
                    (MemberExpr 0xa431e60 <col:21> 'int' lvalue ->state 0xa417fd0
                      (CXXThisExpr 0xa431e50 <col:21> 'class move_word_state_machine_t *' this))
                    (ImplicitCastExpr 0xa431e98 <col:29> 'int' <IntegralCast>
                      (DeclRefExpr 0xa431e80 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa431730 's_separator' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>')))))))
          (BreakStmt 0xa431f18 <line:814:17>)
          (CaseStmt 0xa431f38 <line:816:13, line:825:17>
            (ImplicitCastExpr 0xa432600 <line:816:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa431f20 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa431730 's_separator' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))
            <<<NULL>>>
            (IfStmt 0xa4321c0 <line:817:17, line:825:17>
              <<<NULL>>>
              (BinaryOperator 0xa4320c8 <line:817:21, col:69> '_Bool' '&&'
                (UnaryOperator 0xa432020 <col:21, col:33> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa432010 <col:23, col:33> '_Bool' <IntegralToBoolean>
                    (CallExpr 0xa431fd0 <col:23, col:33> 'int'
                      (ImplicitCastExpr 0xa431fc0 <col:23> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa431fa4 <col:23> 'int (wint_t) throw()' lvalue Function 0x9e9e580 'iswspace' 'int (wint_t) throw()'))
                      (ImplicitCastExpr 0xa432000 <col:32> 'wint_t':'unsigned int' <IntegralCast>
                        (ImplicitCastExpr 0xa431ff0 <col:32> 'wchar_t' <LValueToRValue>
                          (DeclRefExpr 0xa431f8c <col:32> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t'))))))
                (UnaryOperator 0xa4320b0 <col:38, col:69> '_Bool' prefix '!'
                  (CXXMemberCallExpr 0xa432080 <col:40, col:69> '_Bool'
                    (MemberExpr 0xa432048 <col:40> '<bound member function type>' ->is_path_component_character 0xa4312a0
                      (CXXThisExpr 0xa432038 <col:40> 'class move_word_state_machine_t *' this))
                    (ImplicitCastExpr 0xa4320a0 <col:68> 'wchar_t' <LValueToRValue>
                      (DeclRefExpr 0xa432068 <col:68> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t')))))
              (CompoundStmt 0xa432120 <line:818:17, line:821:17>
                (BinaryOperator 0xa432108 <line:820:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa4320e0 <col:21> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa4320f8 <col:32> '_Bool' true)))
              (CompoundStmt 0xa4321a8 <line:823:17, line:825:17>
                (BinaryOperator 0xa432190 <line:824:21, col:29> 'int' lvalue '='
                  (MemberExpr 0xa432148 <col:21> 'int' lvalue ->state 0xa417fd0
                    (CXXThisExpr 0xa432138 <col:21> 'class move_word_state_machine_t *' this))
                  (ImplicitCastExpr 0xa432180 <col:29> 'int' <IntegralCast>
                    (DeclRefExpr 0xa432168 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4317f0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))))))
          (BreakStmt 0xa4321e0 <line:826:17>)
          (CaseStmt 0xa432200 <line:828:13, line:837:17>
            (ImplicitCastExpr 0xa4325f0 <line:828:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa4321e8 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa431770 's_slash' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))
            <<<NULL>>>
            (IfStmt 0xa432358 <line:829:17, line:837:17>
              <<<NULL>>>
              (BinaryOperator 0xa432260 <line:829:21, col:26> '_Bool' '=='
                (ImplicitCastExpr 0xa432250 <col:21> 'wchar_t' <LValueToRValue>
                  (DeclRefExpr 0xa432220 <col:21> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t'))
                (CharacterLiteral 0xa432238 <col:26> 'wchar_t'47))
              (CompoundStmt 0xa4322b8 <line:830:17, line:833:17>
                (BinaryOperator 0xa4322a0 <line:832:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa432278 <col:21> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa432290 <col:32> '_Bool' true)))
              (CompoundStmt 0xa432340 <line:835:17, line:837:17>
                (BinaryOperator 0xa432328 <line:836:21, col:29> 'int' lvalue '='
                  (MemberExpr 0xa4322e0 <col:21> 'int' lvalue ->state 0xa417fd0
                    (CXXThisExpr 0xa4322d0 <col:21> 'class move_word_state_machine_t *' this))
                  (ImplicitCastExpr 0xa432318 <col:29> 'int' <IntegralCast>
                    (DeclRefExpr 0xa432300 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4317b0 's_path_component_characters' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))))))
          (BreakStmt 0xa432378 <line:838:17>)
          (CaseStmt 0xa432398 <line:840:13, line:849:17>
            (ImplicitCastExpr 0xa4325e0 <line:840:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa432380 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4317b0 's_path_component_characters' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))
            <<<NULL>>>
            (IfStmt 0xa432510 <line:841:17, line:849:17>
              <<<NULL>>>
              (CXXMemberCallExpr 0xa432400 <line:841:21, col:50> '_Bool'
                (MemberExpr 0xa4323c8 <col:21> '<bound member function type>' ->is_path_component_character 0xa4312a0
                  (CXXThisExpr 0xa4323b8 <col:21> 'class move_word_state_machine_t *' this))
                (ImplicitCastExpr 0xa432420 <col:49> 'wchar_t' <LValueToRValue>
                  (DeclRefExpr 0xa4323e8 <col:49> 'wchar_t' lvalue ParmVar 0xa431570 'c' 'wchar_t')))
              (CompoundStmt 0xa432470 <line:842:17, line:845:17>
                (BinaryOperator 0xa432458 <line:844:21, col:32> '_Bool' lvalue '='
                  (DeclRefExpr 0xa43242c <col:21> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool')
                  (CXXBoolLiteralExpr 0xa432448 <col:32> '_Bool' true)))
              (CompoundStmt 0xa4324f8 <line:847:17, line:849:17>
                (BinaryOperator 0xa4324e0 <line:848:21, col:29> 'int' lvalue '='
                  (MemberExpr 0xa432498 <col:21> 'int' lvalue ->state 0xa417fd0
                    (CXXThisExpr 0xa432488 <col:21> 'class move_word_state_machine_t *' this))
                  (ImplicitCastExpr 0xa4324d0 <col:29> 'int' <IntegralCast>
                    (DeclRefExpr 0xa4324b8 <col:29> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4317f0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))))))
          (BreakStmt 0xa432530 <line:850:17>)
          (CaseStmt 0xa432550 <line:853:13, line:855:17>
            (ImplicitCastExpr 0xa4325d0 <line:853:18> 'int' <IntegralCast>
              (DeclRefExpr 0xa432538 <col:18> 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>' EnumConstant 0xa4317f0 's_end' 'enum move_word_state_machine_t::<anonymous at ../codeBase/fish-shell-master/tokenizer.cpp:774:5>'))
            <<<NULL>>>
            (DefaultStmt 0xa432578 <line:854:13, line:855:17>
              (BreakStmt 0xa432570 <col:17>)))))))
  (ReturnStmt 0xa432688 <line:858:5, col:12>
    (ImplicitCastExpr 0xa432678 <col:12> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa43265c <col:12> '_Bool' lvalue Var 0xa431840 'consumed' '_Bool'))))


bool consume_char(wchar_t c) (CompoundStmt 0xa432a18 <../codeBase/fish-shell-master/tokenizer.cpp:862:1, line:872:1>
  (SwitchStmt 0xa432800 <line:863:5, line:871:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4327f0 <line:863:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa4327e0 <col:13> 'enum move_word_style_t' <LValueToRValue>
        (MemberExpr 0xa4327c0 <col:13> 'enum move_word_style_t' lvalue ->style 0xa418010
          (CXXThisExpr 0xa4327b0 <col:13> 'class move_word_state_machine_t *' this))))
    (CompoundStmt 0xa4329d8 <line:864:5, line:871:5>
      (CaseStmt 0xa432838 <line:865:9, line:866:46>
        (ImplicitCastExpr 0xa432a08 <line:865:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa43281c <col:14> 'enum move_word_style_t' EnumConstant 0xa417b60 'move_word_style_punctuation' 'enum move_word_style_t'))
        <<<NULL>>>
        (ReturnStmt 0xa4328d0 <line:866:13, col:46>
          (CXXMemberCallExpr 0xa4328a0 <col:20, col:46> '_Bool'
            (MemberExpr 0xa432868 <col:20> '<bound member function type>' ->consume_char_punctuation 0xa42de70
              (CXXThisExpr 0xa432858 <col:20> 'class move_word_state_machine_t *' this))
            (ImplicitCastExpr 0xa4328c0 <col:45> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0xa432888 <col:45> 'wchar_t' lvalue ParmVar 0xa4326d0 'c' 'wchar_t')))))
      (CaseStmt 0xa4328f8 <line:867:9, line:868:50>
        (ImplicitCastExpr 0xa4329f8 <line:867:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa4328e0 <col:14> 'enum move_word_style_t' EnumConstant 0xa417ba0 'move_word_style_path_components' 'enum move_word_style_t'))
        <<<NULL>>>
        (ReturnStmt 0xa432990 <line:868:13, col:50>
          (CXXMemberCallExpr 0xa432960 <col:20, col:50> '_Bool'
            (MemberExpr 0xa432928 <col:20> '<bound member function type>' ->consume_char_path_components 0xa4315c0
              (CXXThisExpr 0xa432918 <col:20> 'class move_word_state_machine_t *' this))
            (ImplicitCastExpr 0xa432980 <col:49> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0xa432948 <col:49> 'wchar_t' lvalue ParmVar 0xa4326d0 'c' 'wchar_t')))))
      (DefaultStmt 0xa4329c0 <line:869:9, line:870:20>
        (ReturnStmt 0xa4329b0 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa4329a0 <col:20> '_Bool' false))))))


class move_word_state_machine_t::move_word_state_machine_t(move_word_style_t syl) : state((IntegerLiteral 0xa432c50 <../codeBase/fish-shell-master/tokenizer.cpp:874:85> 'int' 0)
), style((ImplicitCastExpr 0xa432ca0 <../codeBase/fish-shell-master/tokenizer.cpp:874:95> 'enum move_word_style_t' <LValueToRValue>
  (DeclRefExpr 0xa432c88 <col:95> 'enum move_word_style_t' lvalue ParmVar 0xa432a70 'syl' 'enum move_word_style_t'))
) (CompoundStmt 0xa432cd0 <../codeBase/fish-shell-master/tokenizer.cpp:875:1, line:876:1>)


void reset() (CompoundStmt 0xa432df8 <../codeBase/fish-shell-master/tokenizer.cpp:879:1, line:881:1>
  (BinaryOperator 0xa432de0 <line:880:5, col:13> 'int' lvalue '='
    (MemberExpr 0xa432da8 <col:5> 'int' lvalue ->state 0xa417fd0
      (CXXThisExpr 0xa432d98 <col:5> 'class move_word_state_machine_t *' this))
    (IntegerLiteral 0xa432dc8 <col:13> 'int' 0)))



typedef char *__builtin_va_list;
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x90e4280 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x90e42e0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x90e4340 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x90e43a0 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x90e4540 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x90e45a0 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x90e4600 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
            inline __pthread_internal_slist() throw();
            inline __pthread_internal_slist(const __pthread_internal_slist &) throw();
            inline __pthread_internal_slist &operator=(const __pthread_internal_slist &) throw() (CompoundStmt 0x93e2c50 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:46:16>
  (BinaryOperator 0x93e2c10 <col:16> 'struct __pthread_internal_slist *' lvalue '='
    (MemberExpr 0x93e2be0 <col:16> 'struct __pthread_internal_slist *' lvalue ->__next 0x9149cc0
      (CXXThisExpr 0x93e2bb0 <col:16> 'struct __pthread_internal_slist *' this))
    (ImplicitCastExpr 0x93e2c00 <col:16> 'struct __pthread_internal_slist *' <LValueToRValue>
      (MemberExpr 0x93e2bc0 <col:16> 'struct __pthread_internal_slist *const' lvalue .__next 0x9149cc0
        (DeclRefExpr 0x93e2b98 <col:16> 'const struct __pthread_internal_slist' lvalue ParmVar 0x93e23d0 '' 'const struct __pthread_internal_slist &'))))
  (ReturnStmt 0x93e2c40 <col:16>
    (UnaryOperator 0x93e2c28 <col:16> 'struct __pthread_internal_slist' lvalue prefix '*'
      (CXXThisExpr 0x93e2bb0 <col:16> 'struct __pthread_internal_slist *' this))))


        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                    inline () throw();
                    inline (const pthread_mutex_t::__pthread_mutex_s::<anonymous union at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> &) throw();
                    inline pthread_mutex_t::__pthread_mutex_s::<anonymous union at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> &operator=(const pthread_mutex_t::__pthread_mutex_s::<anonymous union at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> &) throw() (CompoundStmt 0x93e2ce8 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>
  (BinaryOperator 0x93e2b28 <col:19> 'int' lvalue '='
    (MemberExpr 0x93e2af8 <col:19> 'int' lvalue ->__spins 0x914c7e0
      (CXXThisExpr 0x93e2ac8 <col:19> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> *' this))
    (ImplicitCastExpr 0x93e2b18 <col:19> 'int' <LValueToRValue>
      (MemberExpr 0x93e2ad8 <col:19> 'const int' lvalue .__spins 0x914c7e0
        (DeclRefExpr 0x93e2a98 <col:19> 'const union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>' lvalue ParmVar 0x93e24f0 '' 'const union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> &'))))
  (CXXMemberCallExpr 0x93e2ca0 <col:19> 'struct __pthread_internal_slist' lvalue
    (MemberExpr 0x93e2c70 <col:19, <invalid sloc>> '<bound member function type>' .operator= 0x93e2370
      (MemberExpr 0x93e2b60 <col:19> '__pthread_slist_t':'struct __pthread_internal_slist' lvalue ->__list 0x914c830
        (CXXThisExpr 0x93e2ac8 <col:19> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> *' this)))
    (MemberExpr 0x93e2b40 <col:19> 'const __pthread_slist_t':'const struct __pthread_internal_slist' lvalue .__list 0x914c830
      (DeclRefExpr 0x93e2a98 <col:19> 'const union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>' lvalue ParmVar 0x93e24f0 '' 'const union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> &')))
  (ReturnStmt 0x93e2cd8 <col:19>
    (UnaryOperator 0x93e2cc0 <col:19> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>' lvalue prefix '*'
      (CXXThisExpr 0x93e2ac8 <col:19> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19> *' this))))


                } ;
                ;
                ;
                inline __pthread_mutex_s() throw();
                inline __pthread_mutex_s(const pthread_mutex_t::__pthread_mutex_s &) throw();
                inline pthread_mutex_t::__pthread_mutex_s &operator=(const pthread_mutex_t::__pthread_mutex_s &) throw() (CompoundStmt 0x93e2d80 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:56:10>
  (BinaryOperator 0x93e2888 <col:10> 'int' lvalue '='
    (MemberExpr 0x93e2858 <col:10> 'int' lvalue ->__lock 0x9149f50
      (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this))
    (ImplicitCastExpr 0x93e2878 <col:10> 'int' <LValueToRValue>
      (MemberExpr 0x93e2838 <col:10> 'const int' lvalue .__lock 0x9149f50
        (DeclRefExpr 0x93e27f8 <col:10> 'const struct pthread_mutex_t::__pthread_mutex_s' lvalue ParmVar 0x93e2610 '' 'const struct pthread_mutex_t::__pthread_mutex_s &'))))
  (BinaryOperator 0x93e28f0 <col:10> 'unsigned int' lvalue '='
    (MemberExpr 0x93e28c0 <col:10> 'unsigned int' lvalue ->__count 0x914c610
      (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this))
    (ImplicitCastExpr 0x93e28e0 <col:10> 'unsigned int' <LValueToRValue>
      (MemberExpr 0x93e28a0 <col:10> 'const unsigned int' lvalue .__count 0x914c610
        (DeclRefExpr 0x93e27f8 <col:10> 'const struct pthread_mutex_t::__pthread_mutex_s' lvalue ParmVar 0x93e2610 '' 'const struct pthread_mutex_t::__pthread_mutex_s &'))))
  (BinaryOperator 0x93e2958 <col:10> 'int' lvalue '='
    (MemberExpr 0x93e2928 <col:10> 'int' lvalue ->__owner 0x914c650
      (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this))
    (ImplicitCastExpr 0x93e2948 <col:10> 'int' <LValueToRValue>
      (MemberExpr 0x93e2908 <col:10> 'const int' lvalue .__owner 0x914c650
        (DeclRefExpr 0x93e27f8 <col:10> 'const struct pthread_mutex_t::__pthread_mutex_s' lvalue ParmVar 0x93e2610 '' 'const struct pthread_mutex_t::__pthread_mutex_s &'))))
  (BinaryOperator 0x93e29c0 <col:10> 'int' lvalue '='
    (MemberExpr 0x93e2990 <col:10> 'int' lvalue ->__kind 0x914c690
      (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this))
    (ImplicitCastExpr 0x93e29b0 <col:10> 'int' <LValueToRValue>
      (MemberExpr 0x93e2970 <col:10> 'const int' lvalue .__kind 0x914c690
        (DeclRefExpr 0x93e27f8 <col:10> 'const struct pthread_mutex_t::__pthread_mutex_s' lvalue ParmVar 0x93e2610 '' 'const struct pthread_mutex_t::__pthread_mutex_s &'))))
  (BinaryOperator 0x93e2a28 <col:10> 'unsigned int' lvalue '='
    (MemberExpr 0x93e29f8 <col:10> 'unsigned int' lvalue ->__nusers 0x914c6d0
      (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this))
    (ImplicitCastExpr 0x93e2a18 <col:10> 'unsigned int' <LValueToRValue>
      (MemberExpr 0x93e29d8 <col:10> 'const unsigned int' lvalue .__nusers 0x914c6d0
        (DeclRefExpr 0x93e27f8 <col:10> 'const struct pthread_mutex_t::__pthread_mutex_s' lvalue ParmVar 0x93e2610 '' 'const struct pthread_mutex_t::__pthread_mutex_s &'))))
  (CXXMemberCallExpr 0x93e2d38 <col:10> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>' lvalue
    (MemberExpr 0x93e2d0c <col:10, <invalid sloc>> '<bound member function type>' .operator= 0x93e2490
      (MemberExpr 0x93e2a60 <col:10> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>' lvalue -> 0x914c890
        (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this)))
    (MemberExpr 0x93e2a40 <col:10> 'const union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>' lvalue . 0x914c890
      (DeclRefExpr 0x93e27f8 <col:10> 'const struct pthread_mutex_t::__pthread_mutex_s' lvalue ParmVar 0x93e2610 '' 'const struct pthread_mutex_t::__pthread_mutex_s &')))
  (ReturnStmt 0x93e2d70 <col:10>
    (UnaryOperator 0x93e2d58 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s' lvalue prefix '*'
      (CXXThisExpr 0x93e2828 <col:10> 'struct pthread_mutex_t::__pthread_mutex_s *' this))))


            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
            inline () throw() (CompoundStmt 0x93e1f80 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:54:9>)


            inline (const pthread_mutex_t &) throw();
            inline pthread_mutex_t &operator=(const pthread_mutex_t &) throw() (CompoundStmt 0x93e3140 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:54:9>
  (CXXMemberCallExpr 0x93e2de0 <col:9> 'struct pthread_mutex_t::__pthread_mutex_s' lvalue
    (MemberExpr 0x93e2db4 <col:9, <invalid sloc>> '<bound member function type>' .operator= 0x93e25b0
      (MemberExpr 0x93e27b8 <col:9> 'struct __pthread_mutex_s':'struct pthread_mutex_t::__pthread_mutex_s' lvalue ->__data 0x914c960
        (CXXThisExpr 0x93e2788 <col:9> 'pthread_mutex_t *' this)))
    (MemberExpr 0x93e2798 <col:9> 'const struct __pthread_mutex_s':'const struct pthread_mutex_t::__pthread_mutex_s' lvalue .__data 0x914c960
      (DeclRefExpr 0x93e276c <col:9> 'const pthread_mutex_t' lvalue ParmVar 0x93e2730 '' 'const pthread_mutex_t &')))
  (CallExpr 0x93e3068 <col:9> 'void *'
    (ImplicitCastExpr 0x93e3058 <col:9> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x93e3004 <col:9> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x93e3090 <col:9> 'void *' <BitCast>
      (UnaryOperator 0x93e2e88 <col:9> 'char (*)[24]' prefix '&'
        (MemberExpr 0x93e2e20 <col:9> 'char [24]' lvalue ->__size 0x914ca00
          (CXXThisExpr 0x93e2788 <col:9> 'pthread_mutex_t *' this))))
    (ImplicitCastExpr 0x93e30a0 <col:9> 'const void *' <BitCast>
      (UnaryOperator 0x93e2e58 <col:9> 'char const (*)[24]' prefix '&'
        (MemberExpr 0x93e2e00 <col:9> 'char const[24]' lvalue .__size 0x914ca00
          (DeclRefExpr 0x93e276c <col:9> 'const pthread_mutex_t' lvalue ParmVar 0x93e2730 '' 'const pthread_mutex_t &'))))
    (IntegerLiteral 0x93e3020 <col:9> 'unsigned int' 24))
  (BinaryOperator 0x93e3100 <col:9> 'long' lvalue '='
    (MemberExpr 0x93e30cc <col:9> 'long' lvalue ->__align 0x914ca40
      (CXXThisExpr 0x93e2788 <col:9> 'pthread_mutex_t *' this))
    (ImplicitCastExpr 0x93e30f0 <col:9> 'long' <LValueToRValue>
      (MemberExpr 0x93e30ac <col:9> 'const long' lvalue .__align 0x914ca40
        (DeclRefExpr 0x93e276c <col:9> 'const pthread_mutex_t' lvalue ParmVar 0x93e2730 '' 'const pthread_mutex_t &'))))
  (ReturnStmt 0x93e3130 <col:9>
    (UnaryOperator 0x93e3118 <col:9> 'pthread_mutex_t' lvalue prefix '*'
      (CXXThisExpr 0x93e2788 <col:9> 'pthread_mutex_t *' this))))


        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
                inline () throw();
                inline (const pthread_cond_t::<anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &) throw();
                inline pthread_cond_t::<anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &operator=(const pthread_cond_t::<anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &) throw() (CompoundStmt 0x93ea060 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>
  (BinaryOperator 0x93e9d48 <col:3> 'int' lvalue '='
    (MemberExpr 0x93e9d18 <col:3> 'int' lvalue ->__lock 0x914cec0
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9d38 <col:3> 'int' <LValueToRValue>
      (MemberExpr 0x93e9cf8 <col:3> 'const int' lvalue .__lock 0x914cec0
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93e9db0 <col:3> 'unsigned int' lvalue '='
    (MemberExpr 0x93e9d80 <col:3> 'unsigned int' lvalue ->__futex 0x914cf00
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9da0 <col:3> 'unsigned int' <LValueToRValue>
      (MemberExpr 0x93e9d60 <col:3> 'const unsigned int' lvalue .__futex 0x914cf00
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93e9e18 <col:3> 'unsigned long long' lvalue '='
    (MemberExpr 0x93e9de8 <col:3> 'unsigned long long' lvalue ->__total_seq 0x914cf40
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9e08 <col:3> 'unsigned long long' <LValueToRValue>
      (MemberExpr 0x93e9dc8 <col:3> 'const unsigned long long' lvalue .__total_seq 0x914cf40
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93e9e80 <col:3> 'unsigned long long' lvalue '='
    (MemberExpr 0x93e9e50 <col:3> 'unsigned long long' lvalue ->__wakeup_seq 0x914cf80
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9e70 <col:3> 'unsigned long long' <LValueToRValue>
      (MemberExpr 0x93e9e30 <col:3> 'const unsigned long long' lvalue .__wakeup_seq 0x914cf80
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93e9ee8 <col:3> 'unsigned long long' lvalue '='
    (MemberExpr 0x93e9eb8 <col:3> 'unsigned long long' lvalue ->__woken_seq 0x914cfc0
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9ed8 <col:3> 'unsigned long long' <LValueToRValue>
      (MemberExpr 0x93e9e98 <col:3> 'const unsigned long long' lvalue .__woken_seq 0x914cfc0
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93e9f50 <col:3> 'void *' lvalue '='
    (MemberExpr 0x93e9f20 <col:3> 'void *' lvalue ->__mutex 0x914d000
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9f40 <col:3> 'void *' <LValueToRValue>
      (MemberExpr 0x93e9f00 <col:3> 'void *const' lvalue .__mutex 0x914d000
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93e9fb8 <col:3> 'unsigned int' lvalue '='
    (MemberExpr 0x93e9f88 <col:3> 'unsigned int' lvalue ->__nwaiters 0x914d040
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93e9fa8 <col:3> 'unsigned int' <LValueToRValue>
      (MemberExpr 0x93e9f68 <col:3> 'const unsigned int' lvalue .__nwaiters 0x914d040
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (BinaryOperator 0x93ea020 <col:3> 'unsigned int' lvalue '='
    (MemberExpr 0x93e9ff0 <col:3> 'unsigned int' lvalue ->__broadcast_seq 0x914d080
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))
    (ImplicitCastExpr 0x93ea010 <col:3> 'unsigned int' <LValueToRValue>
      (MemberExpr 0x93e9fd0 <col:3> 'const unsigned int' lvalue .__broadcast_seq 0x914d080
        (DeclRefExpr 0x93e9cb8 <col:3> 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ParmVar 0x93e9ad0 '' 'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> &'))))
  (ReturnStmt 0x93ea050 <col:3>
    (UnaryOperator 0x93ea038 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue prefix '*'
      (CXXThisExpr 0x93e9ce8 <col:3> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> *' this))))


            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
            inline () throw() (CompoundStmt 0x93e9630 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:84:9>)


            inline (const pthread_cond_t &) throw();
            inline pthread_cond_t &operator=(const pthread_cond_t &) throw() (CompoundStmt 0x93ea2a8 </usr/include/i386-linux-gnu/bits/pthreadtypes.h:84:9>
  (CXXMemberCallExpr 0x93ea0c8 <col:9> 'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue
    (MemberExpr 0x93ea09c <col:9, <invalid sloc>> '<bound member function type>' .operator= 0x93e9a70
      (MemberExpr 0x93e9c78 <col:9> 'struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>':'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue ->__data 0x914d0e0
        (CXXThisExpr 0x93e9c48 <col:9> 'pthread_cond_t *' this)))
    (MemberExpr 0x93e9c58 <col:9> 'const struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>':'const struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>' lvalue .__data 0x914d0e0
      (DeclRefExpr 0x93e9c2c <col:9> 'const pthread_cond_t' lvalue ParmVar 0x93e9bf0 '' 'const pthread_cond_t &')))
  (CallExpr 0x93ea1d0 <col:9> 'void *'
    (ImplicitCastExpr 0x93ea1c0 <col:9> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x93ea18c <col:9> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x93ea1f8 <col:9> 'void *' <BitCast>
      (UnaryOperator 0x93ea178 <col:9> 'char (*)[48]' prefix '&'
        (MemberExpr 0x93ea108 <col:9> 'char [48]' lvalue ->__size 0x914d180
          (CXXThisExpr 0x93e9c48 <col:9> 'pthread_cond_t *' this))))
    (ImplicitCastExpr 0x93ea208 <col:9> 'const void *' <BitCast>
      (UnaryOperator 0x93ea148 <col:9> 'char const (*)[48]' prefix '&'
        (MemberExpr 0x93ea0e8 <col:9> 'char const[48]' lvalue .__size 0x914d180
          (DeclRefExpr 0x93e9c2c <col:9> 'const pthread_cond_t' lvalue ParmVar 0x93e9bf0 '' 'const pthread_cond_t &'))))
    (IntegerLiteral 0x93ea1a8 <col:9> 'unsigned int' 48))
  (BinaryOperator 0x93ea268 <col:9> 'long long' lvalue '='
    (MemberExpr 0x93ea234 <col:9> 'long long' lvalue ->__align 0x914d1c0
      (CXXThisExpr 0x93e9c48 <col:9> 'pthread_cond_t *' this))
    (ImplicitCastExpr 0x93ea258 <col:9> 'long long' <LValueToRValue>
      (MemberExpr 0x93ea214 <col:9> 'const long long' lvalue .__align 0x914d1c0
        (DeclRefExpr 0x93e9c2c <col:9> 'const pthread_cond_t' lvalue ParmVar 0x93e9bf0 '' 'const pthread_cond_t &'))))
  (ReturnStmt 0x93ea298 <col:9>
    (UnaryOperator 0x93ea280 <col:9> 'pthread_cond_t' lvalue prefix '*'
      (CXXThisExpr 0x93e9c48 <col:9> 'pthread_cond_t *' this))))


        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x918dde0 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x918de38 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x918de88 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x918ded8 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x918df28 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x918df78 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x918dfc8 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x918e018 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x918e068 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x918e0b8 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x918e108 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x918e158 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9192988 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9192968 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x918e1f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x918e1c0 <col:3, col:7> 'int'
        (DeclRefExpr 0x918e1a4 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x918e1d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x918e2e8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x918e2d8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x918e2b0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x918e298 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x918e268 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x918e250 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x918e208 <col:23> 'unsigned long' 1)
                (ParenExpr 0x918e238 <col:30, col:34> 'int'
                  (DeclRefExpr 0x918e220 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x918e280 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9192950 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9192930 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x918e348 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x918e318 <col:6, col:10> 'int'
            (DeclRefExpr 0x918e300 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x918e330 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x918e440 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x918e430 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x918e408 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x918e3f0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x918e3c0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x918e3a8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x918e360 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x918e390 <col:34, col:38> 'int'
                      (DeclRefExpr 0x918e378 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x918e3d8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9192918 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x91928f8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x918e4a0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x918e470 <col:9, col:13> 'int'
                (DeclRefExpr 0x918e458 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x918e488 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x91927e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x918e588 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x918e560 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x918e548 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x918e518 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x918e500 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x918e4b8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x918e4e8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x918e4d0 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x918e530 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x91928e0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x91928d0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x91928a8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9192890 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9192860 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9192848 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9192800 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9192830 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9192818 <line:87:24> 'int' EnumConstant 0x918de00 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9192878 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9192f68 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9192f48 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9192a20 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x91929f0 <col:3, col:7> 'int'
        (DeclRefExpr 0x91929d4 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9192a08 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9192b18 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9192b08 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9192ae0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9192ac8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9192a98 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9192a80 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9192a38 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9192a68 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9192a50 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9192ab0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9192f30 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9192f10 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9192b78 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9192b48 <col:6, col:10> 'int'
            (DeclRefExpr 0x9192b30 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9192b60 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9192c70 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9192c60 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9192c38 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9192c20 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9192bf0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9192bd8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9192b90 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9192bc0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9192ba8 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9192c08 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9192ef8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9192ed8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9192cd0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9192ca0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9192c88 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9192cb8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9192dc8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9192db8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9192d90 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9192d78 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9192d48 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9192d30 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9192ce8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9192d18 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9192d00 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9192d60 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9192ec0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9192eb0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9192e88 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9192e70 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9192e40 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9192e28 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9192de0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9192e10 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9192df8 <line:88:24> 'int' EnumConstant 0x918de50 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9192e58 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9193548 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9193528 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9193000 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9192fd0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9192fb4 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9192fe8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x91930f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x91930e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x91930c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x91930a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9193078 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9193060 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9193018 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9193048 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9193030 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9193090 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9193510 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x91934f0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9193158 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9193128 <col:6, col:10> 'int'
            (DeclRefExpr 0x9193110 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9193140 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9193250 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9193240 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9193218 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9193200 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x91931d0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x91931b8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9193170 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x91931a0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9193188 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x91931e8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x91934d8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x91934b8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x91932b0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9193280 <col:9, col:13> 'int'
                (DeclRefExpr 0x9193268 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9193298 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x91933a8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9193398 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9193370 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9193358 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9193328 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9193310 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x91932c8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x91932f8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x91932e0 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9193340 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x91934a0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9193490 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9193468 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9193450 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9193420 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9193408 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x91933c0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x91933f0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x91933d8 <line:89:24> 'int' EnumConstant 0x918dea0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9193438 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9193b38 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9193b18 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x91935e0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x91935b0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9193594 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x91935c8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x91936d8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x91936c8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x91936a0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9193688 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9193658 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9193640 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x91935f8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9193628 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9193610 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9193670 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9193b00 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9193ae0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9193738 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9193708 <col:6, col:10> 'int'
            (DeclRefExpr 0x91936f0 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9193720 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9193840 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9193830 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9193808 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x91937f0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x91937b0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9193798 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9193750 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9193780 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9193768 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x91937c8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9193ac8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9193aa8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x91938a0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9193870 <col:9, col:13> 'int'
                (DeclRefExpr 0x9193858 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9193888 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9193998 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9193988 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9193960 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9193948 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9193918 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9193900 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x91938b8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x91938e8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x91938d0 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9193930 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9193a90 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9193a80 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9193a58 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9193a40 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9193a10 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x91939f8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x91939b0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x91939e0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x91939c8 <line:90:24> 'int' EnumConstant 0x918def0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9193a28 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9194118 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x91940f8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9193bd0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9193ba0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9193b84 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9193bb8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9193cc8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9193cb8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9193c90 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9193c78 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9193c48 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9193c30 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9193be8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9193c18 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9193c00 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9193c60 <line:66:40> 'int' 24)))))
    (ParenExpr 0x91940e0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x91940c0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9193d28 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9193cf8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9193ce0 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9193d10 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9193e20 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9193e10 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9193de8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9193dd0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9193da0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9193d88 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9193d40 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9193d70 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9193d58 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9193db8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x91940a8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9194088 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9193e80 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9193e50 <col:9, col:13> 'int'
                (DeclRefExpr 0x9193e38 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9193e68 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9193f78 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9193f68 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9193f40 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9193f28 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9193ef8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9193ee0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9193e98 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9193ec8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9193eb0 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9193f10 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9194070 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9194060 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9194038 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9194020 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9193ff0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9193fd8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9193f90 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9193fc0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9193fa8 <line:91:25> 'int' EnumConstant 0x918df40 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9194008 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x91946f8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x91946d8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x91941b0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9194180 <col:3, col:7> 'int'
        (DeclRefExpr 0x9194164 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9194198 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x91942a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9194298 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9194270 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9194258 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9194228 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9194210 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x91941c8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x91941f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x91941e0 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9194240 <line:66:40> 'int' 24)))))
    (ParenExpr 0x91946c0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x91946a0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9194308 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x91942d8 <col:6, col:10> 'int'
            (DeclRefExpr 0x91942c0 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x91942f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9194400 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x91943f0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x91943c8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x91943b0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9194380 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9194368 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9194320 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9194350 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9194338 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9194398 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9194688 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9194668 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9194460 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9194430 <col:9, col:13> 'int'
                (DeclRefExpr 0x9194418 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9194448 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9194558 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9194548 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9194520 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9194508 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x91944d8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x91944c0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9194478 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x91944a8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9194490 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x91944f0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9194650 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9194640 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9194618 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9194600 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x91945d0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x91945b8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9194570 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x91945a0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9194588 <line:92:24> 'int' EnumConstant 0x918df90 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x91945e8 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9194cf8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9194cd8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9194790 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9194760 <col:3, col:7> 'int'
        (DeclRefExpr 0x9194744 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9194778 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x91948a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9194898 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9194870 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9194858 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9194828 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9194810 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x91947a8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x91947f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x91947c0 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9194840 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9194cc0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9194ca0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9194908 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x91948d8 <col:6, col:10> 'int'
            (DeclRefExpr 0x91948c0 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x91948f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9194a00 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x91949f0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x91949c8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x91949b0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9194980 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9194968 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9194920 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9194950 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9194938 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9194998 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9194c88 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9194c68 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9194a60 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9194a30 <col:9, col:13> 'int'
                (DeclRefExpr 0x9194a18 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9194a48 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9194b58 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9194b48 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9194b20 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9194b08 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9194ad8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9194ac0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9194a78 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9194aa8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9194a90 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9194af0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9194c50 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9194c40 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9194c18 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9194c00 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9194bd0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9194bb8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9194b70 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9194ba0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9194b88 <line:93:24> 'int' EnumConstant 0x918dfe0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9194be8 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x91952d8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x91952b8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9194d90 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9194d60 <col:3, col:7> 'int'
        (DeclRefExpr 0x9194d44 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9194d78 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9194e88 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9194e78 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9194e50 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9194e38 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9194e08 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9194df0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9194da8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9194dd8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9194dc0 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9194e20 <line:66:40> 'int' 24)))))
    (ParenExpr 0x91952a0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9195280 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9194ee8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9194eb8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9194ea0 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9194ed0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9194fe0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9194fd0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9194fa8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9194f90 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9194f60 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9194f48 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9194f00 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9194f30 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9194f18 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9194f78 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9195268 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9195248 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9195040 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9195010 <col:9, col:13> 'int'
                (DeclRefExpr 0x9194ff8 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9195028 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9195138 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9195128 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9195100 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x91950e8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x91950b8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x91950a0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9195058 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9195088 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9195070 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x91950d0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9195230 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9195220 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x91951f8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x91951e0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x91951b0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9195198 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9195150 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9195180 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9195168 <line:94:24> 'int' EnumConstant 0x918e030 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x91951c8 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x91958c8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x91958a8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9195370 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9195340 <col:3, col:7> 'int'
        (DeclRefExpr 0x9195324 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9195358 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9195468 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9195458 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9195430 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9195418 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x91953e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x91953d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9195388 <col:23> 'unsigned long' 1)
                (ParenExpr 0x91953b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x91953a0 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9195400 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9195890 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9195870 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x91954c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9195498 <col:6, col:10> 'int'
            (DeclRefExpr 0x9195480 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x91954b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x91955c0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x91955b0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9195588 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9195570 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9195540 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9195528 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x91954e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9195510 <col:34, col:38> 'int'
                      (DeclRefExpr 0x91954f8 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9195558 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9195858 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9195838 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9195620 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x91955f0 <col:9, col:13> 'int'
                (DeclRefExpr 0x91955d8 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9195608 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9195718 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9195708 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x91956e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x91956c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9195698 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9195680 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9195638 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9195668 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9195650 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x91956b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9195820 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9195810 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x91957d8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x91957c0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9195790 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9195778 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9195730 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9195760 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9195748 <line:95:24> 'int' EnumConstant 0x918e080 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x91957a8 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9195ea8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9195e88 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9195960 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9195930 <col:3, col:7> 'int'
        (DeclRefExpr 0x9195914 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9195948 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9195a58 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9195a48 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9195a20 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9195a08 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x91959d8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x91959c0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9195978 <col:23> 'unsigned long' 1)
                (ParenExpr 0x91959a8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9195990 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x91959f0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9195e70 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9195e50 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9195ab8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9195a88 <col:6, col:10> 'int'
            (DeclRefExpr 0x9195a70 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9195aa0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9195bb0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9195ba0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9195b78 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9195b60 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9195b30 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9195b18 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9195ad0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9195b00 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9195ae8 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9195b48 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9195e38 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9195e18 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9195c10 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9195be0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9195bc8 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9195bf8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9195d08 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9195cf8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9195cd0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9195cb8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9195c88 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9195c70 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9195c28 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9195c58 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9195c40 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9195ca0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9195e00 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9195df0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9195dc8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9195db0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9195d80 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9195d68 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9195d20 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9195d50 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9195d38 <line:96:24> 'int' EnumConstant 0x918e0d0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9195d98 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9196488 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9196468 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9195f40 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9195f10 <col:3, col:7> 'int'
        (DeclRefExpr 0x9195ef4 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9195f28 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9196038 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9196028 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9196000 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9195fe8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9195fb8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9195fa0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9195f58 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9195f88 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9195f70 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9195fd0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9196450 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9196430 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9196098 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9196068 <col:6, col:10> 'int'
            (DeclRefExpr 0x9196050 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9196080 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9196190 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9196180 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9196158 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9196140 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9196110 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x91960f8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x91960b0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x91960e0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x91960c8 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9196128 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9196418 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x91963f8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x91961f0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x91961c0 <col:9, col:13> 'int'
                (DeclRefExpr 0x91961a8 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x91961d8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x91962e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x91962d8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x91962b0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9196298 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9196268 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9196250 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9196208 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9196238 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9196220 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9196280 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x91963e0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x91963d0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x91963a8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9196390 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9196360 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9196348 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9196300 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9196330 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9196318 <line:97:24> 'int' EnumConstant 0x918e120 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9196378 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9196a88 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9196a68 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9196520 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x91964f0 <col:3, col:7> 'int'
        (DeclRefExpr 0x91964d4 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9196508 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9196618 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9196608 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x91965e0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x91965c8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9196598 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9196580 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9196538 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9196568 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9196550 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x91965b0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9196a50 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9196a30 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9196678 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9196648 <col:6, col:10> 'int'
            (DeclRefExpr 0x9196630 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9196660 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9196770 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9196760 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9196738 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9196720 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x91966f0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x91966d8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9196690 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x91966c0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x91966a8 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9196708 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9196a18 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x91969f8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x91967d0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x91967a0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9196788 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x91967b8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x91968e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x91968d8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x91968b0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9196898 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9196868 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9196850 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9196808 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9196838 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9196820 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9196880 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x91969e0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x91969d0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x91969a8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9196990 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9196960 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9196948 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9196900 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9196930 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9196918 <line:98:24> 'int' EnumConstant 0x918e170 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9196978 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0x919b908 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919b810 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0x919b918 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919b868 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0x919b928 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919b8b8 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
enum __rlimit_resource {
    RLIMIT_CPU = (ImplicitCastExpr 0x919e1f8 </usr/include/i386-linux-gnu/bits/resource.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dc00 <col:16> 'int' 0))
,
    RLIMIT_FSIZE = (ImplicitCastExpr 0x919e208 </usr/include/i386-linux-gnu/bits/resource.h:40:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dc58 <col:18> 'int' 1))
,
    RLIMIT_DATA = (ImplicitCastExpr 0x919e218 </usr/include/i386-linux-gnu/bits/resource.h:44:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dca8 <col:17> 'int' 2))
,
    RLIMIT_STACK = (ImplicitCastExpr 0x919e228 </usr/include/i386-linux-gnu/bits/resource.h:48:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dcf8 <col:18> 'int' 3))
,
    RLIMIT_CORE = (ImplicitCastExpr 0x919e238 </usr/include/i386-linux-gnu/bits/resource.h:52:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dd48 <col:17> 'int' 4))
,
    __RLIMIT_RSS = (ImplicitCastExpr 0x919e248 </usr/include/i386-linux-gnu/bits/resource.h:59:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dd98 <col:18> 'int' 5))
,
    RLIMIT_NOFILE = (ImplicitCastExpr 0x919e258 </usr/include/i386-linux-gnu/bits/resource.h:63:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dde8 <col:19> 'int' 7))
,
    __RLIMIT_OFILE = (ImplicitCastExpr 0x919e268 </usr/include/i386-linux-gnu/bits/resource.h:64:20> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x919de34 <col:20> 'int' EnumConstant 0x919de00 'RLIMIT_NOFILE' 'enum __rlimit_resource'))
,
    RLIMIT_AS = (ImplicitCastExpr 0x919e278 </usr/include/i386-linux-gnu/bits/resource.h:69:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919de88 <col:15> 'int' 9))
,
    __RLIMIT_NPROC = (ImplicitCastExpr 0x919e288 </usr/include/i386-linux-gnu/bits/resource.h:73:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919ded8 <col:20> 'int' 6))
,
    __RLIMIT_MEMLOCK = (ImplicitCastExpr 0x919e298 </usr/include/i386-linux-gnu/bits/resource.h:77:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919df28 <col:22> 'int' 8))
,
    __RLIMIT_LOCKS = (ImplicitCastExpr 0x919e2a8 </usr/include/i386-linux-gnu/bits/resource.h:81:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919df78 <col:20> 'int' 10))
,
    __RLIMIT_SIGPENDING = (ImplicitCastExpr 0x919e2b8 </usr/include/i386-linux-gnu/bits/resource.h:85:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919dfc8 <col:25> 'int' 11))
,
    __RLIMIT_MSGQUEUE = (ImplicitCastExpr 0x919e2c8 </usr/include/i386-linux-gnu/bits/resource.h:89:23> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919e018 <col:23> 'int' 12))
,
    __RLIMIT_NICE = (ImplicitCastExpr 0x919e2d8 </usr/include/i386-linux-gnu/bits/resource.h:95:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919e068 <col:19> 'int' 13))
,
    __RLIMIT_RTPRIO = (ImplicitCastExpr 0x919e2e8 </usr/include/i386-linux-gnu/bits/resource.h:100:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919e0b8 <col:21> 'int' 14))
,
    __RLIMIT_RTTIME = (ImplicitCastExpr 0x919e2f8 </usr/include/i386-linux-gnu/bits/resource.h:106:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919e108 <col:21> 'int' 15))
,
    __RLIMIT_NLIMITS = (ImplicitCastExpr 0x919e308 </usr/include/i386-linux-gnu/bits/resource.h:109:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x919e158 <col:22> 'int' 16))
,
    __RLIM_NLIMITS = (ImplicitCastExpr 0x919e318 </usr/include/i386-linux-gnu/bits/resource.h:110:20> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x919e1a4 <col:20> 'int' EnumConstant 0x919e170 '__RLIMIT_NLIMITS' 'enum __rlimit_resource'))

};
typedef __rlim_t rlim_t;
typedef __rlim64_t rlim64_t;
struct rlimit {
    struct rlimit;
    rlim_t rlim_cur;
    rlim_t rlim_max;
    inline rlimit() throw() (CompoundStmt 0x97e18c0 </usr/include/i386-linux-gnu/bits/resource.h:141:8>)


    inline rlimit(const rlimit &) throw();
};
struct rlimit64 {
    struct rlimit64;
    rlim64_t rlim_cur;
    rlim64_t rlim_max;
};
enum __rusage_who {
    RUSAGE_SELF = (IntegerLiteral 0x919e7b0 </usr/include/i386-linux-gnu/bits/resource.h:163:17> 'int' 0)
,
    RUSAGE_CHILDREN = (UnaryOperator 0x919e820 </usr/include/i386-linux-gnu/bits/resource.h:167:21, col:22> 'int' prefix '-'
  (IntegerLiteral 0x919e808 <col:22> 'int' 1))
,
    RUSAGE_THREAD = (IntegerLiteral 0x919e878 </usr/include/i386-linux-gnu/bits/resource.h:173:19> 'int' 1)

};
struct rusage {
    struct rusage;
    struct timeval ru_utime;
    struct timeval ru_stime;
    long ru_maxrss;
    long ru_ixrss;
    long ru_idrss;
    long ru_isrss;
    long ru_minflt;
    long ru_majflt;
    long ru_nswap;
    long ru_inblock;
    long ru_oublock;
    long ru_msgsnd;
    long ru_msgrcv;
    long ru_nsignals;
    long ru_nvcsw;
    long ru_nivcsw;
};
enum __priority_which {
    PRIO_PROCESS = (ImplicitCastExpr 0x91a5488 </usr/include/i386-linux-gnu/bits/resource.h:234:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91a5390 <col:18> 'int' 0))
,
    PRIO_PGRP = (ImplicitCastExpr 0x91a5498 </usr/include/i386-linux-gnu/bits/resource.h:236:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91a53e8 <col:15> 'int' 1))
,
    PRIO_USER = (ImplicitCastExpr 0x91a54a8 </usr/include/i386-linux-gnu/bits/resource.h:238:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91a5438 <col:15> 'int' 2))

};
extern "C" {
    extern int prlimit(__pid_t __pid, enum __rlimit_resource __resource, const struct rlimit *__new_limit, struct rlimit *__old_limit) throw();
    extern int prlimit64(__pid_t __pid, enum __rlimit_resource __resource, const struct rlimit64 *__new_limit, struct rlimit64 *__old_limit) throw();
}
extern "C" {
    typedef int __rlimit_resource_t;
    typedef int __rusage_who_t;
    typedef int __priority_which_t;
    extern int getrlimit(__rlimit_resource_t __resource, struct rlimit *__rlimits) throw();
    extern int getrlimit64(__rlimit_resource_t __resource, struct rlimit64 *__rlimits) throw();
    extern int setrlimit(__rlimit_resource_t __resource, const struct rlimit *__rlimits) throw();
    extern int setrlimit64(__rlimit_resource_t __resource, const struct rlimit64 *__rlimits) throw();
    extern int getrusage(__rusage_who_t __who, struct rusage *__usage) throw();
    extern int getpriority(__priority_which_t __which, id_t __who) throw();
    extern int setpriority(__priority_which_t __which, id_t __who, int __prio) throw();
}
extern "C" {
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x91cf778 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x91c1814 <col:26> 'int' EnumConstant 0x91c17e0 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x91cf788 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x91cf3e8 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x91cf3b4 <line:468:33> 'int' EnumConstant 0x91cf000 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x91cf3d0 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x91d5868 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91cf978 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x91d5878 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91cfb88 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0x9204bd8 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0x9204bc0 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0x9204c40 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0x9204c28 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0x9204e18 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0x9207930 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9204ed0 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0x9207bb8 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92079a0 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0x9207cc8 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9207c30 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0x9207e18 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9207d40 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0x9207f28 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9207e90 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0x9208138 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9207fa0 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0x9208348 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92081b0 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0x920a338 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x920a210 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0x920a348 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x920a2e8 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0x92207b8 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9220720 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0x9223db8 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92238e0 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
template <typename T = int> static inline int maxi(int a, int b) (CompoundStmt 0x987f730 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x987f720 <line:18:5, col:18>
    (ImplicitCastExpr 0x987f710 <col:12, col:18> 'int':'int' <LValueToRValue>
      (ConditionalOperator 0x987f6f0 <col:12, col:18> 'int':'int' lvalue
        (BinaryOperator 0x987f6a8 <col:12, col:14> '_Bool' '>'
          (ImplicitCastExpr 0x987f688 <col:12> 'int':'int' <LValueToRValue>
            (DeclRefExpr 0x987f654 <col:12> 'int':'int' lvalue ParmVar 0x97e2800 'a' 'int':'int'))
          (ImplicitCastExpr 0x987f698 <col:14> 'int':'int' <LValueToRValue>
            (DeclRefExpr 0x987f66c <col:14> 'int':'int' lvalue ParmVar 0x97e2840 'b' 'int':'int')))
        (DeclRefExpr 0x987f6c0 <col:16> 'int':'int' lvalue ParmVar 0x97e2800 'a' 'int':'int')
        (DeclRefExpr 0x987f6d8 <col:18> 'int':'int' lvalue ParmVar 0x97e2840 'b' 'int':'int')))))

template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0x922aa30 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x922aa20 <line:18:5, col:18>
    (ConditionalOperator 0x922aa00 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9229790 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0x9229760 <col:12> 'T' lvalue ParmVar 0x92295f0 'a' 'T')
        (DeclRefExpr 0x9229778 <col:14> 'T' lvalue ParmVar 0x9229630 'b' 'T'))
      (DeclRefExpr 0x92297a8 <col:16> 'T' lvalue ParmVar 0x92295f0 'a' 'T')
      (DeclRefExpr 0x922a9e8 <col:18> 'T' lvalue ParmVar 0x9229630 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0x922aca8 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0x922ac98 <line:27:5, col:18>
    (ConditionalOperator 0x922ac78 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x922ac30 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0x922ac00 <col:12> 'T' lvalue ParmVar 0x922aab0 'a' 'T')
        (DeclRefExpr 0x922ac18 <col:14> 'T' lvalue ParmVar 0x922aaf0 'b' 'T'))
      (DeclRefExpr 0x922ac48 <col:16> 'T' lvalue ParmVar 0x922aab0 'a' 'T')
      (DeclRefExpr 0x922ac60 <col:18> 'T' lvalue ParmVar 0x922aaf0 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const std::tr1::shared_ptr<io_data_t> *, typename _Container = std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > >> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::vector<char, std::allocator<char> >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        const char *_M_current;
        typedef iterator_traits<const char *> __traits_type;
    public:
    public:
        typedef const char *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(const char *const &__i) : _M_current((ImplicitCastExpr 0x98207d8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const char *':'const char *' <LValueToRValue>
  (DeclRefExpr 0x98206ec <col:60> 'const char *const':'const char *const' lvalue ParmVar 0x981ccf0 '__i' 'const char *const &'))
) (CompoundStmt 0x929a690 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<char, allocator<char> >::pointer>::__value), vector<char, allocator<char> > >::__type> &__i);
        reference operator*() const;
        pointer operator->() const;
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator++();
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator++(int);
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator--();
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator-(const difference_type &__n) const;
        const char *const &base() const (CompoundStmt 0x9821018 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9821008 <col:9, col:16>
    (MemberExpr 0x9820fe4 <col:16> 'const char *const':'const char *const' lvalue ->_M_current 0x981c370
      (CXXThisExpr 0x9820ef0 <col:16> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &) throw() : _M_current((ImplicitCastExpr 0x9820660 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'const char *':'const char *' <LValueToRValue>
  (MemberExpr 0x9820634 <col:11> 'const char *const':'const char *const' lvalue ._M_current 0x981c370
    (DeclRefExpr 0x982061c <col:11> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x981f840 '' 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &')))
) (CompoundStmt 0x9820690 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::vector<char, std::allocator<char> >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        char *_M_current;
        typedef iterator_traits<char *> __traits_type;
    public:
    public:
        typedef char *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(char *const &__i) : _M_current((ImplicitCastExpr 0x9808ef8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'char *':'char *' <LValueToRValue>
  (DeclRefExpr 0x9808e0c <col:60> 'char *const':'char *const' lvalue ParmVar 0x949cde0 '__i' 'char *const &'))
) (CompoundStmt 0x929a690 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter = char *> __normal_iterator(const __normal_iterator<char *, typename __enable_if<(std::__are_same<char *, typename vector<char, allocator<char> >::pointer>::__value), vector<char, allocator<char> > >::__type> &__i)template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<char, allocator<char> >::pointer>::__value), vector<char, allocator<char> > >::__type> &__i);
        reference operator*() const;
        pointer operator->() const;
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator++();
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator++(int);
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator--();
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator-(const difference_type &__n) const;
        char *const &base() const (CompoundStmt 0x97f4528 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x97f4518 <col:9, col:16>
    (MemberExpr 0x97f44f4 <col:16> 'char *const':'char *const' lvalue ->_M_current 0x949c0c0
      (CXXThisExpr 0x97f4400 <col:16> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &) throw() : _M_current((ImplicitCastExpr 0x949fca0 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'char *':'char *' <LValueToRValue>
  (MemberExpr 0x949fc74 <col:11> 'char *const':'char *const' lvalue ._M_current 0x949c0c0
    (DeclRefExpr 0x949fc5c <col:11> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x949f2f0 '' 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &')))
) (CompoundStmt 0x949fcd0 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = std::tr1::shared_ptr<io_data_t> *, typename _Container = std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > >> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
        inline __true_type() throw();
        inline __true_type(const std::__true_type &) throw();
    };
    struct __false_type {
        struct __false_type;
        inline __false_type() throw();
        inline __false_type(const std::__false_type &) throw() (CompoundStmt 0x980a018 </usr/include/c++/4.6/bits/cpp_type_traits.h:83:10>)


    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0x9805588 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9805538 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0x98377f0 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x98377e0 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x98377c0 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0x9837520 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0x9805520 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x9805510 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x98054ec <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0x9805470 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0x9837558 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9837508 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0x98372c8 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x98372b8 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x9837294 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x924d510 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0x98374f0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x98374e0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x98374bc <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0x9837440 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x9249120 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x9249088 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x9249060 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x9249100 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x92490d8 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename  = const char *, typename  = char *> struct __are_same {
        struct __are_same;
        enum  {
            __value = (ImplicitCastExpr 0x981fb98 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9249650 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename  = char, typename  = char> struct __are_same {
        struct __are_same;
        enum  {
            __value = (ImplicitCastExpr 0x97f3538 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9249ae0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename  = char *, typename  = char *> struct __are_same {
        struct __are_same;
        enum  {
            __value = (ImplicitCastExpr 0x949f6b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9249ae0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9249650 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9249ae0 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x924ad28 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924acd0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x924a9d0 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x924ad28 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924acd0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924cf28 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924ced0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924b388 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9262888 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b030 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924d238 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924d1e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924b698 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b640 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9262318 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b030 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924d548 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924d4f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924e838 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924e7e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924ee58 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924ee00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924cc18 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924cbc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924e528 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924e4d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9261da8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b030 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924c5f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924c5a8 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924c908 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924c8b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = const char *> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x98091e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b030 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924f168 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924f110 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924eb48 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924eaf0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x924b030 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924b388 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924b698 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924b640 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924c5f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924c5a8 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924c908 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924c8b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924cc18 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924cbc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924cf28 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924ced0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924d238 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924d1e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924d548 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924d4f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924e528 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924e4d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924e838 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924e7e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924eb48 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924eaf0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924ee58 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924ee00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x924f168 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924f110 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92502c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250270 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9837478 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x924ff70 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92505d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250580 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92508e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250890 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x924ff70 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92502c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250270 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92505d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250580 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92508e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250890 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = char *> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0x97f30a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9251ed0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0x98054a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9250bf0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = const char *> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0x9816e68 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9251ed0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9250bf0 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9251ed0 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x9815768 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92527a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x97f1fa8 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9252220 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x9835ec8 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9252220 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = const char *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x9814d28 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9252220 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9252220 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x92527a0 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9255a88 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9255a30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9255d98 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9255d40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x9254890 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9255a88 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9255a30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9255d98 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9255d40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x92563f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92563a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9256708 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92566b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9257668 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9257610 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x92560a0 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x92563f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92563a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9256708 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92566b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9257668 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9257610 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = char *> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x983f4e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9257970 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = const char *> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x97f6b38 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9257970 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x9257970 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = true, typename  = std::vector<char, std::allocator<char> >> struct __enable_if {
        struct __enable_if;
        typedef std::vector<char, std::allocator<char> > __type;
    }
template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool = false, typename  = std::vector<char, std::allocator<char> >> struct __enable_if {
        struct __enable_if;
    }
template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x92605b8 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x92605a8 <col:7, col:23>
    (BinaryOperator 0x9260590 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x926055c <col:14> '_Type *' lvalue ParmVar 0x9260430 '__ptr' '_Type *')
      (IntegerLiteral 0x9260578 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x9260780 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x9260770 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9260760 <col:14> '_Bool' false)))

;
    template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x92608a0 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0x9766fe0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x9766fc8 <col:3, col:68> 'int'
    (ConditionalOperator 0x9766fa8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x9766e00 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9766de8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9766dd8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9766dc0 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x9766db0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9266c08 <col:37, col:40> 'int'
                  (UnaryOperator 0x9266bf0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9266bd8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9266c40 <col:44> 'int' 0)))
      (BinaryOperator 0x9766f50 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x9766f40 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x9766e30 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x9766e20 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9266c88 <col:33> 'int' 1))))
        (ParenExpr 0x9766f28 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x9766f10 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9766e78 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9766e50 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0x9766e68 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9266ce0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x9766f00 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9766ee8 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9766ed0 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9766ec0 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9766ea8 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0x9766e98 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x9266d50 <col:37, col:40> 'int'
                          (UnaryOperator 0x9266d38 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9266d20 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9266d88 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9766f98 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9766f80 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0x9766f70 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x9266e18 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0x9767380 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x9767368 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x9767348 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x97670a0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9767088 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9767078 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9767060 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x9767050 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9266ef8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9266ee0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9266ec8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9266f30 <col:44> 'int' 0)))
      (ParenExpr 0x97672d8 <line:51:4, col:61> 'int'
        (BinaryOperator 0x97672c0 <col:5, col:60> 'int' '+'
          (ParenExpr 0x97672a8 <col:5, col:56> 'int'
            (BinaryOperator 0x9767290 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9767278 <col:6, col:50> 'int'
                (BinaryOperator 0x9767260 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x9767248 <col:7, col:45> 'int'
                    (BinaryOperator 0x9767230 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x9767220 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x97670d0 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0x97670c0 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x9266f78 <col:13> 'int' 1))))
                      (ParenExpr 0x9767208 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x97671f0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x97671c8 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x97671b0 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x9767118 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x97670f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0x9767108 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9266fd0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x97671a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9767188 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9767170 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9767160 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x9767148 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0x9767138 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x9267040 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9267028 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9267010 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9267078 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x97671e0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x92670f0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9267168 <col:49> 'int' 1)))
              (IntegerLiteral 0x92671b0 <col:55> 'int' 1)))
          (IntegerLiteral 0x92671f8 <col:60> 'int' 1)))
      (UnaryOperator 0x9767330 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x9767320 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x9767308 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x97672f8 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9267240 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x9767430 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9767418 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x9767408 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x97673f0 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0x97673e0 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x926a698 <col:37, col:40> 'int'
            (UnaryOperator 0x926a680 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x926a668 <col:39> 'int' 1))))))
    (IntegerLiteral 0x926a6d0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9767590 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9767578 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9767560 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x97674c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x97674a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0x97674b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x926a788 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9767550 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9767538 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9767520 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x9767510 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x97674f8 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0x97674e8 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x926a7f8 <col:37, col:40> 'int'
                    (UnaryOperator 0x926a7e0 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x926a7c8 <col:39> 'int' 1))))))
            (IntegerLiteral 0x926a830 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0x969fd40 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x969fd28 <col:3, col:68> 'int'
    (ConditionalOperator 0x969fd08 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x969fb60 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x969fb48 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x969fb38 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x969fb20 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x969fb10 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9266c08 <col:37, col:40> 'int'
                  (UnaryOperator 0x9266bf0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9266bd8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9266c40 <col:44> 'int' 0)))
      (BinaryOperator 0x969fcb0 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x969fca0 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x969fb90 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x969fb80 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9266c88 <col:33> 'int' 1))))
        (ParenExpr 0x969fc88 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x969fc70 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x969fbd8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x969fbb0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0x969fbc8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9266ce0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x969fc60 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x969fc48 <col:31, col:45> '_Bool'
                (BinaryOperator 0x969fc30 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x969fc20 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x969fc08 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0x969fbf8 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x9266d50 <col:37, col:40> 'int'
                          (UnaryOperator 0x9266d38 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9266d20 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9266d88 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x969fcf8 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x969fce0 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0x969fcd0 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x9266e18 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0x96a00e0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x96a00c8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x96a00a8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x969fe00 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x969fde8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x969fdd8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x969fdc0 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x969fdb0 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9266ef8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9266ee0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9266ec8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9266f30 <col:44> 'int' 0)))
      (ParenExpr 0x96a0038 <line:51:4, col:61> 'int'
        (BinaryOperator 0x96a0020 <col:5, col:60> 'int' '+'
          (ParenExpr 0x96a0008 <col:5, col:56> 'int'
            (BinaryOperator 0x969fff0 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x969ffd8 <col:6, col:50> 'int'
                (BinaryOperator 0x969ffc0 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x969ffa8 <col:7, col:45> 'int'
                    (BinaryOperator 0x969ff90 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x969ff80 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x969fe30 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0x969fe20 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x9266f78 <col:13> 'int' 1))))
                      (ParenExpr 0x969ff68 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x969ff50 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x969ff28 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x969ff10 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x969fe78 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x969fe50 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0x969fe68 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9266fd0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x969ff00 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x969fee8 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x969fed0 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x969fec0 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x969fea8 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0x969fe98 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x9267040 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9267028 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9267010 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9267078 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x969ff40 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x92670f0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9267168 <col:49> 'int' 1)))
              (IntegerLiteral 0x92671b0 <col:55> 'int' 1)))
          (IntegerLiteral 0x92671f8 <col:60> 'int' 1)))
      (UnaryOperator 0x96a0090 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x96a0080 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x96a0068 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x96a0058 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9267240 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x96a0190 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x96a0178 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x96a0168 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x96a0150 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0x96a0140 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x926a698 <col:37, col:40> 'int'
            (UnaryOperator 0x926a680 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x926a668 <col:39> 'int' 1))))))
    (IntegerLiteral 0x926a6d0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x96a02f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x96a02d8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x96a02c0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x96a0228 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x96a0200 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x96a0218 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x926a788 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x96a02b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x96a0298 <col:31, col:45> '_Bool'
          (BinaryOperator 0x96a0280 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x96a0270 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x96a0258 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0x96a0248 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x926a7f8 <col:37, col:40> 'int'
                    (UnaryOperator 0x926a7e0 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x926a7c8 <col:39> 'int' 1))))))
            (IntegerLiteral 0x926a830 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0x9343ee8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0x9343ec8 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0x9343d80 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9343d68 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9343d50 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9266c08 <col:37, col:40> 'int'
            (UnaryOperator 0x9266bf0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9266bd8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9266c40 <col:44> 'int' 0)))
    (BinaryOperator 0x9343e90 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0x9343da0 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x9266c88 <col:33> 'int' 1))
      (ParenExpr 0x9343e78 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9343e60 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9343de8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9343dc0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0x9343dd8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9266ce0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9343e50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9343e38 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9343e20 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9343e08 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x9266d50 <col:37, col:40> 'int'
                    (UnaryOperator 0x9266d38 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9266d20 <col:39> 'int' 1))))
                (IntegerLiteral 0x9266d88 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0x9343eb0 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x9266e18 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0x93441f8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0x93441d8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0x9343f90 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9343f78 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9343f60 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9266ef8 <col:37, col:40> 'int'
            (UnaryOperator 0x9266ee0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9266ec8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9266f30 <col:44> 'int' 0)))
    (ParenExpr 0x9344188 <line:51:4, col:61> 'int'
      (BinaryOperator 0x9344170 <col:5, col:60> 'int' '+'
        (ParenExpr 0x9344158 <col:5, col:56> 'int'
          (BinaryOperator 0x9344140 <col:6, col:55> 'int' '<<'
            (ParenExpr 0x9344128 <col:6, col:50> 'int'
              (BinaryOperator 0x9344110 <col:7, col:49> 'int' '-'
                (ParenExpr 0x93440f8 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0x93440e0 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0x9343fb0 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x9266f78 <col:13> 'int' 1))
                    (ParenExpr 0x93440c8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x93440b0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9344088 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9344070 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9343ff8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9343fd0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0x9343fe8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9266fd0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9344060 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9344048 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9344030 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9344018 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x9267040 <col:37, col:40> 'int'
                                      (UnaryOperator 0x9267028 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x9267010 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x9267078 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0x93440a0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x92670f0 <col:43> 'int' 1))))))
                (IntegerLiteral 0x9267168 <col:49> 'int' 1)))
            (IntegerLiteral 0x92671b0 <col:55> 'int' 1)))
        (IntegerLiteral 0x92671f8 <col:60> 'int' 1)))
    (UnaryOperator 0x93441c0 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0x93441a8 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x9267240 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9344290 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9344278 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9344260 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x926a698 <col:37, col:40> 'int'
        (UnaryOperator 0x926a680 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x926a668 <col:39> 'int' 1))))
    (IntegerLiteral 0x926a6d0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x93443d0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x93443b8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x93443a0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9344328 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9344300 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0x9344318 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x926a788 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9344390 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9344378 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9344360 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9344348 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x926a7f8 <col:37, col:40> 'int'
                (UnaryOperator 0x926a7e0 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x926a7c8 <col:39> 'int' 1))))
            (IntegerLiteral 0x926a830 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0x95fbac8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0x95fbaa8 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0x95fb920 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x95fb908 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x95fb8e0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x95fb8d0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9266c08 <col:37, col:40> 'int'
              (UnaryOperator 0x9266bf0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9266bd8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x95fb8f8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9266c40 <col:44> 'int' 0))))
    (BinaryOperator 0x95fba60 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0x95fb950 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x95fb940 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9266c88 <col:33> 'int' 1)))
      (ParenExpr 0x95fba48 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x95fba30 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x95fb998 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x95fb970 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0x95fb988 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9266ce0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x95fba20 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x95fba08 <col:31, col:45> '_Bool'
              (BinaryOperator 0x95fb9f0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x95fb9c8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0x95fb9b8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x9266d50 <col:37, col:40> 'int'
                      (UnaryOperator 0x9266d38 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x9266d20 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0x95fb9e0 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9266d88 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0x95fba90 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x95fba80 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9266e18 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0x95fbe58 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0x95fbe38 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0x95fbb90 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x95fbb78 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x95fbb50 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x95fbb40 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9266ef8 <col:37, col:40> 'int'
              (UnaryOperator 0x9266ee0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9266ec8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x95fbb68 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9266f30 <col:44> 'int' 0))))
    (ParenExpr 0x95fbdd8 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0x95fbdc0 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0x95fbd98 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0x95fbd80 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0x95fbd68 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0x95fbd50 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0x95fbd28 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0x95fbd10 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0x95fbbc0 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0x95fbbb0 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x9266f78 <col:13> 'int' 1)))
                    (ParenExpr 0x95fbcf8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x95fbce0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x95fbcb8 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x95fbca0 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x95fbc08 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x95fbbe0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0x95fbbf8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9266fd0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x95fbc90 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x95fbc78 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x95fbc60 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x95fbc38 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0x95fbc28 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x9267040 <col:37, col:40> 'int'
                                        (UnaryOperator 0x9267028 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x9267010 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0x95fbc50 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x9267078 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0x95fbcd0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x92670f0 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0x95fbd40 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9267168 <col:49> 'int' 1))))
            (IntegerLiteral 0x92671b0 <col:55> 'int' 1)))
        (ImplicitCastExpr 0x95fbdb0 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x92671f8 <col:60> 'int' 1))))
    (UnaryOperator 0x95fbe20 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0x95fbe08 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x95fbdf8 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9267240 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0x95fbf10 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x95fbef8 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x95fbed0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x95fbec0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x926a698 <col:37, col:40> 'int'
          (UnaryOperator 0x926a680 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x926a668 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0x95fbee8 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x926a6d0 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0x95fc070 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x95fc058 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x95fc040 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x95fbfa8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x95fbf80 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0x95fbf98 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x926a788 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x95fc030 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x95fc018 <col:31, col:45> '_Bool'
          (BinaryOperator 0x95fc000 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x95fbfd8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0x95fbfc8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x926a7f8 <col:37, col:40> 'int'
                  (UnaryOperator 0x926a7e0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x926a7c8 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0x95fbff0 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x926a830 <col:44> 'int' 0))))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x9266e70 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x9266e50 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x9266c70 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9266c58 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9266c28 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9266c08 <col:37, col:40> 'int'
            (UnaryOperator 0x9266bf0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9266bd8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9266c40 <col:44> 'int' 0)))
    (BinaryOperator 0x9266e00 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x9266ca8 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x9266c88 <col:33> 'int' 1))
      (ParenExpr 0x9266de8 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x9266dd0 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x9266d08 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9266cc8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x9266cf8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9266ce0 <col:22> 'int' 8)))
          (ParenExpr 0x9266db8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x9266da0 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x9266d70 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x9266d50 <col:37, col:40> 'int'
                  (UnaryOperator 0x9266d38 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9266d20 <col:39> 'int' 1))))
              (IntegerLiteral 0x9266d88 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x9266e38 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x9266e18 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x926a608 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x926a5e8 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x9266f60 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9266f48 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9266f18 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9266ef8 <col:37, col:40> 'int'
            (UnaryOperator 0x9266ee0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9266ec8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9266f30 <col:44> 'int' 0)))
    (ParenExpr 0x9267228 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x9267210 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x92671e0 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x92671c8 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x9267198 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x9267180 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x9267150 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x9267138 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x9266f98 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x9266f78 <col:13> 'int' 1))
                    (ParenExpr 0x9267120 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x9267108 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x92670d8 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x92670c0 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x9266ff8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9266fb8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x9266fe8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9266fd0 <col:22> 'int' 8)))
                            (ParenExpr 0x92670a8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x9267090 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x9267060 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x9267040 <col:37, col:40> 'int'
                                    (UnaryOperator 0x9267028 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x9267010 <col:39> 'int' 1))))
                                (IntegerLiteral 0x9267078 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x92670f0 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x9267168 <col:49> 'int' 1)))
            (IntegerLiteral 0x92671b0 <col:55> 'int' 1)))
        (IntegerLiteral 0x92671f8 <col:60> 'int' 1)))
    (UnaryOperator 0x926a5d0 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x926a5b8 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x9267240 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x926a700 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x926a6e8 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x926a6b8 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x926a698 <col:37, col:40> 'int'
        (UnaryOperator 0x926a680 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x926a668 <col:39> 'int' 1))))
    (IntegerLiteral 0x926a6d0 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x926a890 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x926a878 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x926a7b0 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x926a770 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x926a7a0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x926a788 <col:22> 'int' 8)))
    (ParenExpr 0x926a860 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x926a848 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x926a818 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x926a7f8 <col:37, col:40> 'int'
            (UnaryOperator 0x926a7e0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x926a7c8 <col:39> 'int' 1))))
        (IntegerLiteral 0x926a830 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x926bb38 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x926bb20 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x926bb08 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x926baf8 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x926b3c8 <col:4> 'int' 2))
      (BinaryOperator 0x926bae0 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x926baa0 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x926ba90 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x926ba60 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x926ba40 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x926b570 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x926b850 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x926ba20 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x926b9c8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x926b9f0 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x926ba08 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x926ba78 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x926bad0 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x926bab8 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x926bb88 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x926bf00 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x926bee0 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x926bd10 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x926bd38 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x926bec0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x926be68 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x926be90 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x926bea8 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x926c280 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x926c260 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x926c090 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x926c0b8 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x926c240 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x926c1e8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x926c210 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x926c228 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x926d7d0 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x926d7c0 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x926d7a8 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x926d780 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x926d768 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x926d708 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x926d6bc <col:61> '_Tp' lvalue ParmVar 0x926d570 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x92723b8 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x92722e8 <line:127:7, col:37>
    0x9272280 "_Tp __tmp =
      (ParenExpr 0x92722d0 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x92722b4 <line:127:33> '_Tp' lvalue ParmVar 0x926d930 '__a' '_Tp &'))")
  (BinaryOperator 0x9272340 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x92722f8 <line:128:7> '_Tp' lvalue ParmVar 0x926d930 '__a' '_Tp &')
    (ParenExpr 0x9272328 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9272310 <line:128:27> '_Tp' lvalue ParmVar 0x926d980 '__b' '_Tp &')))
  (BinaryOperator 0x92723a0 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9272358 <line:129:7> '_Tp' lvalue ParmVar 0x926d980 '__b' '_Tp &')
    (ParenExpr 0x9272388 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9272370 <line:129:27> '_Tp' lvalue Var 0x9272280 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x92729d0 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x92729a8 <line:138:7, line:139:25>
    (DeclStmt 0x9272820 <line:138:12, col:26>
      0x92727c0 "size_t __n =
        (ImplicitCastExpr 0x9272810 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x92727f8 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9272870 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x9272860 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9272830 <col:28> 'size_t':'unsigned int' lvalue Var 0x92727c0 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x9272848 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x9272450 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x92728a0 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9272888 <col:41> 'size_t':'unsigned int' lvalue Var 0x92727c0 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x9272980 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x92728b8 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9272780 0x9272240)
      (ArraySubscriptExpr 0x9272920 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x92728f0 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x92725a0 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9272908 <col:11> 'size_t':'unsigned int' lvalue Var 0x92727c0 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x9272968 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x9272934 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9272680 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x927294c <col:21> 'size_t':'unsigned int' lvalue Var 0x92727c0 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x9273af0 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x9273b00 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x9272f70 '__a' 'const _T1 &')
), second((DeclRefExpr 0x9273b58 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x9273000 '__b' 'const _T2 &')
) (CompoundStmt 0x9273bb0 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x9273bd8 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x9273bc0 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x9273940 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x9273c60 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x9273c48 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x9273940 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x9273ce0 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x92743b8 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x92743a8 <col:7, col:58>
    (BinaryOperator 0x9274390 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9274268 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x9274230 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160)
        (CXXDependentScopeMemberExpr 0x92741a8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9274190 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9273ef0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x92741f8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x92741dc <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274060 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x9274368 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9274330 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160)
        (CXXDependentScopeMemberExpr 0x92742a8 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x927428c <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x9273ef0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x92742f8 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x92742dc <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274060 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9274bc8 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x9274bb8 <line:208:7, line:209:62>
    (BinaryOperator 0x9274ba0 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9274918 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x92748e0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810)
        (CXXDependentScopeMemberExpr 0x9274858 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9274840 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x92745b0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x92748a8 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x927488c <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274720 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x9274b88 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x9274b70 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x9274a58 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x9274a40 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x9274a18 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x92749e0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810)
                (CXXDependentScopeMemberExpr 0x9274958 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x927493c <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274720 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x92749a8 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x927498c <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x92745b0 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x9274b48 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9274b10 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810)
            (CXXDependentScopeMemberExpr 0x9274a88 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x9274a6c <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x92745b0 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x9274ad8 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x9274abc <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274720 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9275110 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x9275100 <col:7, col:26>
    (UnaryOperator 0x92750e8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x92750d0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x92750a8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9275070 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160)
          (DeclRefExpr 0x9275040 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274dc0 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9275058 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x9274f30 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9275630 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x9275620 <col:7, col:20>
    (CXXOperatorCallExpr 0x92755f8 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x92755c0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810)
      (DeclRefExpr 0x9275590 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9275480 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x92755a8 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x9275310 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x92761b0 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x92761a0 <col:7, col:25>
    (UnaryOperator 0x9276188 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9276170 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9276148 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9276110 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810)
          (DeclRefExpr 0x92760e0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9275fd0 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x92760f8 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9275e60 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9276700 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x92766f0 <col:7, col:25>
    (UnaryOperator 0x92766d8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x92766c0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9276698 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9276660 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810)
          (DeclRefExpr 0x9276630 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x92763b0 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9276648 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9276520 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x9276bb8 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x9276ba8 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x9276b88 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x9276b58 <col:29> '_T1' lvalue ParmVar 0x92768b0 '__x' '_T1')
      (DeclRefExpr 0x9276b70 <col:34> '_T2' lvalue ParmVar 0x92768f0 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
        inline input_iterator_tag() throw();
        inline input_iterator_tag(const std::input_iterator_tag &) throw() (CompoundStmt 0x980b700 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:89:10>)


    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
        inline forward_iterator_tag() throw();
        inline forward_iterator_tag(const std::forward_iterator_tag &) throw() : std::input_iterator_tag((ImplicitCastExpr 0x980b6f0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:95:10> 'const struct std::input_iterator_tag' lvalue <UncheckedDerivedToBase (input_iterator_tag)>
  (DeclRefExpr 0x980b6d4 <col:10> 'const struct std::forward_iterator_tag' lvalue ParmVar 0x980ade0 '' 'const struct std::forward_iterator_tag &'))
) (CompoundStmt 0x980b760 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:95:10>)


    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
        inline bidirectional_iterator_tag() throw();
        inline bidirectional_iterator_tag(const std::bidirectional_iterator_tag &) throw() : std::forward_iterator_tag((ImplicitCastExpr 0x983d810 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:99:10> 'const struct std::forward_iterator_tag' lvalue <UncheckedDerivedToBase (forward_iterator_tag)>
  (DeclRefExpr 0x983d7f8 <col:10> 'const struct std::bidirectional_iterator_tag' lvalue ParmVar 0x980af10 '' 'const struct std::bidirectional_iterator_tag &'))
) (CompoundStmt 0x983d870 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:99:10>)


    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
        inline random_access_iterator_tag() throw();
        inline random_access_iterator_tag(const std::random_access_iterator_tag &) throw() : std::bidirectional_iterator_tag((ImplicitCastExpr 0x983d7e8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:103:10> 'const struct std::bidirectional_iterator_tag' lvalue <UncheckedDerivedToBase (bidirectional_iterator_tag)>
  (DeclRefExpr 0x983d7cc <col:10> 'const struct std::random_access_iterator_tag' lvalue ParmVar 0x980b040 '' 'const struct std::random_access_iterator_tag &'))
) (CompoundStmt 0x983d8d0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:103:10>)


    };
    template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0x931f080 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0x93219f0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator = char *> struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef char value_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef char &reference;
    }
template <typename _Iterator = const char *> struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef char value_type;
        typedef ptrdiff_t difference_type;
        typedef const char *pointer;
        typedef const char &reference;
    }
template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter = const char *> inline typename iterator_traits<const char *>::iterator_category __iterator_category(const char *const &) (CompoundStmt 0x983da58 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x983da48 <col:7, col:65>
    (CXXConstructExpr 0x983da20 <col:14, col:65> 'typename iterator_traits<const char *>::iterator_category':'struct std::random_access_iterator_tag''void (const struct std::random_access_iterator_tag &) throw()' elidable
      (MaterializeTemporaryExpr 0x983da10 <col:14, col:65> 'const struct std::random_access_iterator_tag' lvalue
        (ImplicitCastExpr 0x983da00 <col:14, col:65> 'const struct std::random_access_iterator_tag' <NoOp>
          (CXXTemporaryObjectExpr 0x983d9d8 <col:14, col:65> 'typename iterator_traits<const char *>::iterator_category':'struct std::random_access_iterator_tag''void (void) throw()' zeroing))))))

template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x927e890 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x927e880 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x927e868 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >, bool _HasBase = true> struct _Iter_base {
        struct _Iter_base;
        typedef typename __normal_iterator<char *, vector<char, allocator<char> > >::iterator_type iterator_type;
        static iterator_type _S_base(__gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > __it) (CompoundStmt 0x9816800 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x98167f0 <col:9, col:26>
    (ImplicitCastExpr 0x98167e0 <col:16, col:26> 'char *':'char *' <LValueToRValue>
      (CXXMemberCallExpr 0x98167b0 <col:16, col:26> 'char *const':'char *const' lvalue
        (MemberExpr 0x981678c <col:16, col:21> '<bound member function type>' .base 0x949ee80
          (ImplicitCastExpr 0x98167d0 <col:16> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
            (DeclRefExpr 0x9816774 <col:16> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x9815bc0 '__it' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))))


    }
template <typename _Iterator = char *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef char *iterator_type;
        static iterator_type _S_base(char *__it) (CompoundStmt 0x97f1a18 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x97f1a08 <col:9, col:16>
    (ImplicitCastExpr 0x97f19f8 <col:16> 'char *':'char *' <LValueToRValue>
      (DeclRefExpr 0x97f19dc <col:16> 'char *':'char *' lvalue ParmVar 0x97f0700 '__it' 'char *':'char *'))))


    }
template <typename _Iterator = const char *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef const char *iterator_type;
        static iterator_type _S_base(const char *__it) (CompoundStmt 0x9814798 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9814788 <col:9, col:16>
    (ImplicitCastExpr 0x9814778 <col:16> 'const char *':'const char *' <LValueToRValue>
      (DeclRefExpr 0x981475c <col:16> 'const char *':'const char *' lvalue ParmVar 0x97f7280 '__it' 'const char *':'const char *'))))


    }
template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0x98062d8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x98062c8 <col:9, col:16>
    (ImplicitCastExpr 0x98062b8 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0x980629c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x98362a0 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9280238 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9280228 <col:9, col:16>
    (DeclRefExpr 0x9280210 <col:16> '_Iterator' lvalue ParmVar 0x92800f0 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9280860 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x9280850 <col:9, col:26>
    (CallExpr 0x9280830 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92807f8 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x92807e0 <col:16> '_Iterator' lvalue ParmVar 0x92806c0 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator = const char *> inline typename iterator_traits<const char *>::difference_type __distance(const char *__first, const char *__last, std::input_iterator_tag)template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9283400 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x9280da0 <line:78:7, col:72>
    0x9280d50 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x9280d88 <col:71> 'int' 0)")
  (WhileStmt 0x92833c0 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9280e18 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9280de0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010)
      (DeclRefExpr 0x9280db0 <col:14> '_InputIterator' lvalue ParmVar 0x9280a80 '__first' '_InputIterator')
      (DeclRefExpr 0x9280dc8 <col:25> '_InputIterator' lvalue ParmVar 0x9280ac0 '__last' '_InputIterator'))
    (CompoundStmt 0x92833a8 <line:80:2, line:83:2>
      (UnaryOperator 0x9283360 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9283344 <col:6> '_InputIterator' lvalue ParmVar 0x9280a80 '__first' '_InputIterator'))
      (UnaryOperator 0x9283390 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9283374 <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9280d50 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x92833f0 <line:84:7, col:14>
    (DeclRefExpr 0x92833d4 <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9280d50 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator = const char *> inline typename iterator_traits<const char *>::difference_type __distance(const char *__first, const char *__last, std::random_access_iterator_tag) (CompoundStmt 0x983dae8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x983dad8 <line:95:7, col:23>
    (BinaryOperator 0x983dac0 <col:14, col:23> 'int' '-'
      (ImplicitCastExpr 0x983daa0 <col:14> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x983da6c <col:14> 'const char *':'const char *' lvalue ParmVar 0x983d550 '__last' 'const char *':'const char *'))
      (ImplicitCastExpr 0x983dab0 <col:23> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x983da84 <col:23> 'const char *':'const char *' lvalue ParmVar 0x983d510 '__first' 'const char *':'const char *')))))

template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x9283790 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x9283780 <line:95:7, col:23>
    (BinaryOperator 0x9283768 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x9283734 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x9283590 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x928374c <col:23> '_RandomAccessIterator' lvalue ParmVar 0x9283550 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator = const char *> inline typename iterator_traits<const char *>::difference_type distance(const char *__first, const char *__last) (CompoundStmt 0x983d918 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x983d908 <line:115:7, line:116:42>
    (CallExpr 0x983d768 <line:115:14, line:116:42> 'typename iterator_traits<const char *>::difference_type':'int'
      (ImplicitCastExpr 0x983d758 <line:115:14, col:19> 'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *, struct std::random_access_iterator_tag)' <FunctionToPointerDecay>
        (DeclRefExpr 0x983d6f8 <col:14, col:19> 'typename iterator_traits<const char *>::difference_type (const char *, const char *, struct std::random_access_iterator_tag)' lvalue Function 0x983d650 '__distance' 'typename iterator_traits<const char *>::difference_type (const char *, const char *, struct std::random_access_iterator_tag)' (FunctionTemplate 0x9283700 '__distance')))
      (ImplicitCastExpr 0x983d790 <col:30> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x983cd58 <col:30> 'const char *':'const char *' lvalue ParmVar 0x980ba10 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x983d7a0 <col:39> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x983cd70 <col:39> 'const char *':'const char *' lvalue ParmVar 0x980ba50 '__last' 'const char *':'const char *'))
      (CXXConstructExpr 0x983d8e0 <line:116:9, col:41> 'struct std::random_access_iterator_tag''void (const struct std::random_access_iterator_tag &) throw()' elidable
        (MaterializeTemporaryExpr 0x983d7c0 <col:9, col:41> 'const struct std::random_access_iterator_tag' lvalue
          (ImplicitCastExpr 0x983d7b0 <col:9, col:41> 'const struct std::random_access_iterator_tag' <NoOp>
            (CallExpr 0x983d0e8 <col:9, col:41> 'typename iterator_traits<const char *>::iterator_category':'struct std::random_access_iterator_tag'
              (ImplicitCastExpr 0x983d0d8 <col:9, col:14> 'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)' <FunctionToPointerDecay>
                (DeclRefExpr 0x983d078 <col:9, col:14> 'typename iterator_traits<const char *>::iterator_category (const char *const &)' lvalue Function 0x983cfd0 '__iterator_category' 'typename iterator_traits<const char *>::iterator_category (const char *const &)' (FunctionTemplate 0x927e750 '__iterator_category')))
              (ImplicitCastExpr 0x983d108 <col:34> 'const char *const':'const char *const' lvalue <NoOp>
                (DeclRefExpr 0x983cdbc <col:34> 'const char *':'const char *' lvalue ParmVar 0x980ba10 '__first' 'const char *':'const char *')))))))))

template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9283bb0 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x9283ba0 <line:115:7, line:116:42>
    (CallExpr 0x9283b78 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x9283a88 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9280c30 0x9283700)
      (DeclRefExpr 0x9283ac0 <col:30> '_InputIterator' lvalue ParmVar 0x92838e0 '__first' '_InputIterator')
      (DeclRefExpr 0x9283ad8 <col:39> '_InputIterator' lvalue ParmVar 0x9283920 '__last' '_InputIterator')
      (CallExpr 0x9283b58 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9283b08 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x927e750)
        (DeclRefExpr 0x9283b3c <col:34> '_InputIterator' lvalue ParmVar 0x92838e0 '__first' '_InputIterator')))))

;
    template <typename _InputIterator = const char *, typename _Distance = int> inline void __advance(const char *&__i, int __n, std::input_iterator_tag)template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x9283f18 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x9283f00 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x9283eb8 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x9283e84 <col:14> '_Distance' lvalue ParmVar 0x9283cf0 '__n' '_Distance'))
    (UnaryOperator 0x9283ee8 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9283ecc <col:4> '_InputIterator' lvalue ParmVar 0x9283cb0 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator = const char *, typename _Distance = int> inline void __advance(const char *&__i, int __n, std::bidirectional_iterator_tag)template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x9284de8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x9284dc8 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9284250 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9284218 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560)
      (DeclRefExpr 0x92841e4 <col:11> '_Distance' lvalue ParmVar 0x9284050 '__n' '_Distance')
      (IntegerLiteral 0x9284200 <col:17> 'int' 0))
    (WhileStmt 0x92842f0 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x92842a8 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x9284274 <col:16> '_Distance' lvalue ParmVar 0x9284050 '__n' '_Distance'))
      (UnaryOperator 0x92842d8 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92842bc <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9284010 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x9284db0 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x9284d68 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9284304 <col:16> '_Distance' lvalue ParmVar 0x9284050 '__n' '_Distance'))
      (UnaryOperator 0x9284d98 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9284d7c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9284010 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator = const char *, typename _Distance = int> inline void __advance(const char *&__i, int __n, std::random_access_iterator_tag) (CompoundStmt 0x9818060 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x9818040 <line:153:7, col:14> 'const char *':'const char *' lvalue '+=' ComputeLHSTy='const char *':'const char *' ComputeResultTy='const char *':'const char *'
    (DeclRefExpr 0x9818000 <col:7> 'const char *':'const char *' lvalue ParmVar 0x9817cd0 '__i' 'const char *&')
    (ImplicitCastExpr 0x9818030 <col:14> 'int':'int' <LValueToRValue>
      (DeclRefExpr 0x9818018 <col:14> 'int':'int' lvalue ParmVar 0x9817d30 '__n' 'int':'int'))))

template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x9285108 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x92850e8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x92850b4 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x9284ee0 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x92850cc <col:14> '_Distance' lvalue ParmVar 0x9284f20 '__n' '_Distance')))

;
    template <typename _InputIterator = const char *, typename _Distance = unsigned int> inline void advance(const char *&__i, unsigned int __n) (CompoundStmt 0x9817fe8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x98174c0 <line:173:7, col:74>
    0x9817450 "typename iterator_traits<const char *>::difference_type __d =
      (ImplicitCastExpr 0x98174b0 <col:71> 'typename iterator_traits<const char *>::difference_type':'int' <IntegralCast>
        (ImplicitCastExpr 0x98174a0 <col:71> 'unsigned int':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9817484 <col:71> 'unsigned int':'unsigned int' lvalue ParmVar 0x9838a20 '__n' 'unsigned int':'unsigned int')))")
  (CallExpr 0x9817f68 <line:174:7, col:61> 'void'
    (ImplicitCastExpr 0x9817f58 <col:7, col:12> 'void (*)(const char *&, int, struct std::random_access_iterator_tag)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9817ef8 <col:7, col:12> 'void (const char *&, int, struct std::random_access_iterator_tag)' lvalue Function 0x9817e30 '__advance' 'void (const char *&, int, struct std::random_access_iterator_tag)' (FunctionTemplate 0x9285080 '__advance')))
    (DeclRefExpr 0x981750c <col:22> 'const char *':'const char *' lvalue ParmVar 0x98389c0 '__i' 'const char *&')
    (ImplicitCastExpr 0x9817f90 <col:27> 'typename iterator_traits<const char *>::difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9817524 <col:27> 'typename iterator_traits<const char *>::difference_type':'int' lvalue Var 0x9817450 '__d' 'typename iterator_traits<const char *>::difference_type':'int'))
    (CXXConstructExpr 0x9817fc0 <col:32, col:60> 'struct std::random_access_iterator_tag''void (const struct std::random_access_iterator_tag &) throw()' elidable
      (MaterializeTemporaryExpr 0x9817fb0 <col:32, col:60> 'const struct std::random_access_iterator_tag' lvalue
        (ImplicitCastExpr 0x9817fa0 <col:32, col:60> 'const struct std::random_access_iterator_tag' <NoOp>
          (CallExpr 0x98175f8 <col:32, col:60> 'typename iterator_traits<const char *>::iterator_category':'struct std::random_access_iterator_tag'
            (ImplicitCastExpr 0x98175e8 <col:32, col:37> 'typename iterator_traits<const char *>::iterator_category (*)(const char *const &)' <FunctionToPointerDecay>
              (DeclRefExpr 0x98175c0 <col:32, col:37> 'typename iterator_traits<const char *>::iterator_category (const char *const &)' lvalue Function 0x983cfd0 '__iterator_category' 'typename iterator_traits<const char *>::iterator_category (const char *const &)' (FunctionTemplate 0x927e750 '__iterator_category')))
            (ImplicitCastExpr 0x9817618 <col:57> 'const char *const':'const char *const' lvalue <NoOp>
              (DeclRefExpr 0x9817574 <col:57> 'const char *':'const char *' lvalue ParmVar 0x98389c0 '__i' 'const char *&'))))))))

template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x9285608 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x92854b0 <line:173:7, col:74>
    0x9285460 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x9285494 <col:71> '_Distance' lvalue ParmVar 0x9285240 '__n' '_Distance')")
  (CallExpr 0x92855e0 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x92854e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283e50 0x92841b0 0x9285080)
    (DeclRefExpr 0x9285524 <col:22> '_InputIterator' lvalue ParmVar 0x9285200 '__i' '_InputIterator &')
    (DeclRefExpr 0x928553c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9285460 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x92855c0 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9285570 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x927e750)
      (DeclRefExpr 0x92855a4 <col:57> '_InputIterator' lvalue ParmVar 0x9285200 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<const std::tr1::shared_ptr<io_data_t> *, std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<std::tr1::shared_ptr<io_data_t> *, std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > >> class reverse_iterator
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x9288b70 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x9288b80 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x9286de0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x9288be0 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x9288c08 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x9288bf0 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9286f20 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x9288c80 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x9288ce0 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9288ca8 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x9288c90 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x9287180 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x9288d40 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x9288dc8 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x9288db8 <col:9, col:16>
    (MemberExpr 0x9288d94 <col:16> 'const _Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x9288d68 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x9288ec0 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x9288e58 <line:158:2, col:27>
    0x9288df0 "_Iterator __tmp =
      (MemberExpr 0x9288e38 <col:20> 'const _Iterator' lvalue ->current 0x92869c0
        (CXXThisExpr 0x9288e28 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x9288eb0 <line:159:2, col:12>
    (UnaryOperator 0x9288e98 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x9288e80 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9288e68 <col:12> '_Iterator' lvalue Var 0x9288df0 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x9288f68 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x9288f58 <col:9, col:29>
    (UnaryOperator 0x9288f40 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x9288f28 <col:17, col:29> '<dependent type>'
        (CallExpr 0x9288f08 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x9288ee8 <col:18, col:26> '<bound member function type>' ->operator* 0x92873d0
            (CXXThisExpr 0x9288ed8 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x9289000 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x9288fb0 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9288f90 <col:4> '_Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x9288f80 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9288ff0 <line:180:2, col:10>
    (UnaryOperator 0x9288fd8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9288fc8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x9289100 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x9289080 <line:191:2, col:32>
    0x9289020 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9289068 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9289058 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x92890c0 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x92890a0 <col:4> '_Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x9289090 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x92890f0 <line:193:2, col:9>
    (DeclRefExpr 0x92890d4 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9289020 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x92891a0 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x9289150 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9289130 <col:4> '_Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x9289120 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9289190 <line:205:2, col:10>
    (UnaryOperator 0x9289178 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9289168 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x92892a0 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x9289220 <line:216:2, col:32>
    0x92891c0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9289208 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x92891f8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9289260 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9289240 <col:4> '_Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x9289230 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9289290 <line:218:2, col:9>
    (DeclRefExpr 0x9289274 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x92891c0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x9289358 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x9289348 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9289328 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9289310 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x92892d8 <col:33> 'const _Iterator' lvalue ->current 0x92869c0
          (CXXThisExpr 0x92892c8 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x92892f8 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9288680 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x9289410 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x92893b8 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9289380 <col:2> '_Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x9289370 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x92893a0 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9288790 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9289400 <line:239:2, col:10>
    (UnaryOperator 0x92893e8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92893d8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x928b520 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x928b510 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x928b4f0 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9289478 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x9289440 <col:33> 'const _Iterator' lvalue ->current 0x92869c0
          (CXXThisExpr 0x9289430 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9289460 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x92888a0 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x928b5d8 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x928b580 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x928b548 <col:2> '_Iterator' lvalue ->current 0x92869c0
      (CXXThisExpr 0x928b538 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x928b568 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9288960 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x928b5c8 <line:260:2, col:10>
    (UnaryOperator 0x928b5b0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x928b5a0 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x928b688 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x928b678 <col:9, col:29>
    (UnaryOperator 0x928b660 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x928b648 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x928b630 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x928b600 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x928b5f0 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x928b614 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9288a30 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928bb60 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x928bb50 <col:7, col:37>
    (CXXOperatorCallExpr 0x928bb28 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x928baf0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928b9e0 0x9274160)
      (CallExpr 0x928ba60 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928ba28 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x928ba10 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928b7e0 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x928bad0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928ba98 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x928ba7c <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928b8e0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928c000 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x928bff0 <col:7, col:36>
    (CXXOperatorCallExpr 0x928bfc8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x928bf90 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928be80 0x9274810)
      (CallExpr 0x928bf00 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928bec8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x928beb0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928bda0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x928bf70 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928bf38 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x928bf1c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928bca0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928c420 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x928c410 <col:7, col:26>
    (UnaryOperator 0x928c3f8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x928c3e0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x928c3b8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x928c380 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928b9e0 0x9274160)
          (DeclRefExpr 0x928c350 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928c140 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x928c368 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928c240 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928cc80 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x928cc70 <col:7, col:20>
    (CXXOperatorCallExpr 0x928cc48 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x928cc10 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928be80 0x9274810)
      (DeclRefExpr 0x928cbe0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928cad0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x928cbf8 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928c9d0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928d0a0 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x928d090 <col:7, col:25>
    (UnaryOperator 0x928d078 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x928d060 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x928d038 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x928d000 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928be80 0x9274810)
          (DeclRefExpr 0x928cfd0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928cec0 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x928cfe8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928cdc0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928d4c0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x928d4b0 <col:7, col:25>
    (UnaryOperator 0x928d498 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x928d480 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x928d458 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x928d420 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928be80 0x9274810)
          (DeclRefExpr 0x928d3f0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928d1e0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x928d408 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928d2e0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x928daa0 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x928da90 <col:7, col:36>
    (CXXOperatorCallExpr 0x928da68 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x928da30 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910)
      (CallExpr 0x928d9a0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928d968 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x928d950 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928d800 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x928da10 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928d9d8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x928d9bc <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928d700 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x928e0a8 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x928e098 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x928e078 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x928e050 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x928e018 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910)
        (CallExpr 0x928dfe0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x928dfa8 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x928df90 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x928dd90 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x928dffc <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x928dc90 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x928e618 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x928e608 <col:7, col:37>
    (CXXOperatorCallExpr 0x928e5e0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x928e5a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928e490 0x928b9e0 0x9274160)
      (CallExpr 0x928e510 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928e4d8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x928e4c0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x928e240 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x928e580 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928e548 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x928e52c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x928e390 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x928eb38 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x928eb28 <col:7, col:36>
    (CXXOperatorCallExpr 0x928eb00 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x928eac0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928e9b0 0x928be80 0x9274810)
      (CallExpr 0x928ea30 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928e9f8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x928e9e0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x928e8b0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x928eaa0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x928ea68 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x928ea4c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x928e7b0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x928efb8 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x928efa8 <col:7, col:26>
    (UnaryOperator 0x928ef90 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x928ef78 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x928ef50 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x928ef10 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928e490 0x928b9e0 0x9274160)
          (DeclRefExpr 0x928eee0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x928ecd0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x928eef8 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x928edd0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x928f408 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x928f3f8 <col:7, col:20>
    (CXXOperatorCallExpr 0x928f3d0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x928f390 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928e9b0 0x928be80 0x9274810)
      (DeclRefExpr 0x928f360 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x928f250 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x928f378 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x928f150 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x928f888 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x928f878 <col:7, col:25>
    (UnaryOperator 0x928f860 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x928f848 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x928f820 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x928f7e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928e9b0 0x928be80 0x9274810)
          (DeclRefExpr 0x928f7b0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x928f6a0 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x928f7c8 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x928f5a0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x920db98 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x920db88 <col:7, col:25>
    (UnaryOperator 0x920db70 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x920db58 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x920db30 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x920daf0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928e9b0 0x928be80 0x9274810)
          (DeclRefExpr 0x920dac0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x920d8b0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x920dad8 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x920d9b0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x920e190 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x920e180 <col:7, col:36>
    (CXXOperatorCallExpr 0x920e158 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x920e120 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x920e010 0x928d910)
      (CallExpr 0x920e090 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x920e058 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x920e040 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x920df00 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x920e100 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x920e0c8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x920e0ac <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x920de00 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x92942c0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x92942a4 <col:58> '_Container' lvalue ParmVar 0x9293dc0 '__x' '_Container &'))
) (CompoundStmt 0x9294320 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9294420 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x92943c8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9294378 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9294358 <col:2> '_Container *' lvalue ->container 0x9293ce0
        (CXXThisExpr 0x9294348 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x92943ac <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x9293f70 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9294410 <line:426:2, col:10>
    (UnaryOperator 0x92943f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92943e8 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x9294470 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x9294460 <col:9, col:17>
    (UnaryOperator 0x9294448 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9294438 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x92944c0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x92944b0 <col:9, col:17>
    (UnaryOperator 0x9294498 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9294488 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9294510 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x9294500 <col:9, col:17>
    (UnaryOperator 0x92944e8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92944d8 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x9294878 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x9294868 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x9294848 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x9294830 <col:47> '_Container' lvalue ParmVar 0x9294640 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9295910 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x92958f4 <col:68> '_Container' lvalue ParmVar 0x9295450 '__x' '_Container &'))
) (CompoundStmt 0x9295970 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9295a70 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x9295a18 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92959c8 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x92959a8 <col:2> '_Container *' lvalue ->container 0x9295370
        (CXXThisExpr 0x9295998 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x92959fc <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x92955c0 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9295a60 <line:516:2, col:10>
    (UnaryOperator 0x9295a48 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9295a38 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x9295ac0 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x9295ab0 <col:9, col:17>
    (UnaryOperator 0x9295a98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9295a88 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x9295b10 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x9295b00 <col:9, col:17>
    (UnaryOperator 0x9295ae8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9295ad8 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9295b60 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x9295b50 <col:9, col:17>
    (UnaryOperator 0x9295b38 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9295b28 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x9295ec8 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x9295eb8 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9295e98 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x9295e80 <col:48> '_Container' lvalue ParmVar 0x9295c90 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x92975a0 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9297584 <col:20> '_Container' lvalue ParmVar 0x9297050 '__x' '_Container &'))
), iter((DeclRefExpr 0x92975f8 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x92970d0 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x9297650 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9297818 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x9297780 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x9297688 <col:2> 'typename _Container::iterator' lvalue ->iter 0x9296f70
      (CXXThisExpr 0x9297678 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x9297758 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92976d8 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x92976b8 <col:9> '_Container *' lvalue ->container 0x9296eb0
          (CXXThisExpr 0x92976a8 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x9297720 <col:27> 'typename _Container::iterator' lvalue ->iter 0x9296f70
        (CXXThisExpr 0x9297710 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x9297740 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x9297250 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x92977c8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x92977a8 <col:4> 'typename _Container::iterator' lvalue ->iter 0x9296f70
      (CXXThisExpr 0x9297798 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x9297808 <line:628:2, col:10>
    (UnaryOperator 0x92977f0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92977e0 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x9297870 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x9297860 <col:9, col:17>
    (UnaryOperator 0x9297848 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9297838 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x92978c0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x92978b0 <col:9, col:17>
    (UnaryOperator 0x9297898 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9297888 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x9297910 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x9297900 <col:9, col:17>
    (UnaryOperator 0x92978e8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92978d8 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x92988a0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x9297db0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x9297d90 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x9297ce0 <line:679:42> '_Container' lvalue ParmVar 0x9297aa0 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x9297d70 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x9297d54 <col:37> '_Iterator' lvalue ParmVar 0x9297ae0 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const std::tr1::shared_ptr<io_data_t> *, typename _Container = std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > >> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::vector<char, std::allocator<char> >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        const char *_M_current;
        typedef iterator_traits<const char *> __traits_type;
    public:
    public:
        typedef const char *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(const char *const &__i) : _M_current((ImplicitCastExpr 0x98207d8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const char *':'const char *' <LValueToRValue>
  (DeclRefExpr 0x98206ec <col:60> 'const char *const':'const char *const' lvalue ParmVar 0x981ccf0 '__i' 'const char *const &'))
) (CompoundStmt 0x929a690 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<char, allocator<char> >::pointer>::__value), vector<char, allocator<char> > >::__type> &__i);
        reference operator*() const;
        pointer operator->() const;
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator++();
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator++(int);
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator--();
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > operator-(const difference_type &__n) const;
        const char *const &base() const (CompoundStmt 0x9821018 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9821008 <col:9, col:16>
    (MemberExpr 0x9820fe4 <col:16> 'const char *const':'const char *const' lvalue ->_M_current 0x981c370
      (CXXThisExpr 0x9820ef0 <col:16> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<const char *, std::vector<char, std::allocator<char> > > &) throw() : _M_current((ImplicitCastExpr 0x9820660 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'const char *':'const char *' <LValueToRValue>
  (MemberExpr 0x9820634 <col:11> 'const char *const':'const char *const' lvalue ._M_current 0x981c370
    (DeclRefExpr 0x982061c <col:11> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x981f840 '' 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &')))
) (CompoundStmt 0x9820690 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::vector<char, std::allocator<char> >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        char *_M_current;
        typedef iterator_traits<char *> __traits_type;
    public:
    public:
        typedef char *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(char *const &__i) : _M_current((ImplicitCastExpr 0x9808ef8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'char *':'char *' <LValueToRValue>
  (DeclRefExpr 0x9808e0c <col:60> 'char *const':'char *const' lvalue ParmVar 0x949cde0 '__i' 'char *const &'))
) (CompoundStmt 0x929a690 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter = char *> __normal_iterator(const __normal_iterator<char *, typename __enable_if<(std::__are_same<char *, typename vector<char, allocator<char> >::pointer>::__value), vector<char, allocator<char> > >::__type> &__i)template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<char, allocator<char> >::pointer>::__value), vector<char, allocator<char> > >::__type> &__i);
        reference operator*() const;
        pointer operator->() const;
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator++();
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator++(int);
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator--();
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > operator-(const difference_type &__n) const;
        char *const &base() const (CompoundStmt 0x97f4528 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x97f4518 <col:9, col:16>
    (MemberExpr 0x97f44f4 <col:16> 'char *const':'char *const' lvalue ->_M_current 0x949c0c0
      (CXXThisExpr 0x97f4400 <col:16> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > &) throw() : _M_current((ImplicitCastExpr 0x949fca0 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'char *':'char *' <LValueToRValue>
  (MemberExpr 0x949fc74 <col:11> 'char *const':'char *const' lvalue ._M_current 0x949c0c0
    (DeclRefExpr 0x949fc5c <col:11> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x949f2f0 '' 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &')))
) (CompoundStmt 0x949fcd0 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = std::tr1::shared_ptr<io_data_t> *, typename _Container = std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > >> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x929a5c8 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x929a620 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x929a630 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x92991f0 '__i' 'const _Iterator &')
) (CompoundStmt 0x929a690 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x929a6f0 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x929a6b8 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x929a6a0 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x9299a40 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x929a750 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x929a7f0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x929a7e0 <col:9, col:17>
    (UnaryOperator 0x929a7c8 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x929a7a4 <col:17> 'const _Iterator' lvalue ->_M_current 0x9298ca0
        (CXXThisExpr 0x929a778 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x929a848 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x929a838 <col:9, col:16>
    (MemberExpr 0x929a818 <col:16> 'const _Iterator' lvalue ->_M_current 0x9298ca0
      (CXXThisExpr 0x929a808 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x929a8e0 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x929a890 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x929a870 <col:4> '_Iterator' lvalue ->_M_current 0x9298ca0
      (CXXThisExpr 0x929a860 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x929a8d0 <line:743:2, col:10>
    (UnaryOperator 0x929a8b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x929a8a8 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x929a990 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x929a980 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x929a960 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x929a948 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x929a910 <col:34> '_Iterator' lvalue ->_M_current 0x9298ca0
          (CXXThisExpr 0x929a900 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x929bf70 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x929bf20 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x929bf00 <col:4> '_Iterator' lvalue ->_M_current 0x9298ca0
      (CXXThisExpr 0x929a9a8 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x929bf60 <line:755:2, col:10>
    (UnaryOperator 0x929bf48 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x929bf38 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x929c020 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x929c010 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x929bff0 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x929bfd8 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x929bfa0 <col:34> '_Iterator' lvalue ->_M_current 0x9298ca0
          (CXXThisExpr 0x929bf90 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x929c0a8 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x929c098 <col:9, col:30>
    (ArraySubscriptExpr 0x929c080 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x929c048 <col:16> 'const _Iterator' lvalue ->_M_current 0x9298ca0
        (CXXThisExpr 0x929c038 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x929c068 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x929a010 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x929c160 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x929c108 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x929c0d0 <col:9> '_Iterator' lvalue ->_M_current 0x9298ca0
      (CXXThisExpr 0x929c0c0 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x929c0f0 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x929a130 '__n' 'const difference_type &'))
  (ReturnStmt 0x929c150 <col:28, col:36>
    (UnaryOperator 0x929c138 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x929c128 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x929c210 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x929c200 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x929c1e0 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x929c1c8 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x929c190 <col:34> 'const _Iterator' lvalue ->_M_current 0x9298ca0
          (CXXThisExpr 0x929c180 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x929c1b0 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x929a250 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x929c2c8 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x929c270 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x929c238 <col:9> '_Iterator' lvalue ->_M_current 0x9298ca0
      (CXXThisExpr 0x929c228 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x929c258 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x929a370 '__n' 'const difference_type &'))
  (ReturnStmt 0x929c2b8 <col:28, col:36>
    (UnaryOperator 0x929c2a0 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x929c290 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x929c378 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x929c368 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x929c348 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x929c330 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x929c2f8 <col:34> 'const _Iterator' lvalue ->_M_current 0x9298ca0
          (CXXThisExpr 0x929c2e8 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x929c318 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x929a450 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x929c3d0 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x929c3c0 <col:9, col:16>
    (MemberExpr 0x929c3a0 <col:16> 'const _Iterator' lvalue ->_M_current 0x9298ca0
      (CXXThisExpr 0x929c390 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL = const char *, typename _IteratorR = const char *, typename _Container = std::vector<char, std::allocator<char> >> inline bool operator==(const __normal_iterator<const char *, std::vector<char, std::allocator<char> > > &__lhs, const __normal_iterator<const char *, std::vector<char, std::allocator<char> > > &__rhs)template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x929caf0 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x929cae0 <col:7, col:41>
    (CXXOperatorCallExpr 0x929cab8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x929ca80 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929c970)
      (CallExpr 0x929c9f0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929c9b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929c9a0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x929c690 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x929ca60 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929ca28 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x929ca0c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x929c870 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator = const char *, typename _Container = std::vector<char, std::allocator<char> >> inline bool operator==(const __normal_iterator<const char *, std::vector<char, std::allocator<char> > > &__lhs, const __normal_iterator<const char *, std::vector<char, std::allocator<char> > > &__rhs) (CompoundStmt 0x9820ed8 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x9820ec8 <col:7, col:41>
    (BinaryOperator 0x9820eb0 <col:14, col:41> '_Bool' '=='
      (ImplicitCastExpr 0x9820e90 <col:14, col:25> 'const char *':'const char *' <LValueToRValue>
        (CXXMemberCallExpr 0x9820e00 <col:14, col:25> 'const char *const':'const char *const' lvalue
          (MemberExpr 0x9820de0 <col:14, col:20> '<bound member function type>' .base 0x981eb90
            (DeclRefExpr 0x9820dc8 <col:14> 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x981f560 '__lhs' 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &'))))
      (ImplicitCastExpr 0x9820ea0 <col:30, col:41> 'const char *':'const char *' <LValueToRValue>
        (CXXMemberCallExpr 0x9820e70 <col:30, col:41> 'const char *const':'const char *const' lvalue
          (MemberExpr 0x9820e4c <col:30, col:36> '<bound member function type>' .base 0x981eb90
            (DeclRefExpr 0x9820e34 <col:30> 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x981f650 '__rhs' 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &')))))))

template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x929da80 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x929da70 <col:7, col:41>
    (CXXOperatorCallExpr 0x929da48 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x929da10 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929d900 0x929c970)
      (CallExpr 0x929d980 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929d948 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929d930 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929cd10 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x929d9f0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929d9b8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x929d99c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929ce80 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x929e0a0 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x929e090 <col:7, col:41>
    (CXXOperatorCallExpr 0x929e068 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x929e030 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929df20)
      (CallExpr 0x929dfa0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929df68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929df50 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x929dcd0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x929e010 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929dfd8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x929dfbc <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x929de40 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x929e670 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x929e660 <col:7, col:41>
    (CXXOperatorCallExpr 0x929e638 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x929e600 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929e4f0 0x929df20)
      (CallExpr 0x929e570 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929e538 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929e520 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929e2a0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x929e5e0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929e5a8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x929e58c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929e410 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x929ecc0 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x929ecb0 <col:7, col:40>
    (CXXOperatorCallExpr 0x929ec88 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x929ec50 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929eb40)
      (CallExpr 0x929ebc0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929eb88 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929eb70 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x929e8f0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x929ec30 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929ebf8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x929ebdc <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x929ea60 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x929f290 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x929f280 <col:7, col:40>
    (CXXOperatorCallExpr 0x929f258 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x929f220 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929f110 0x929eb40)
      (CallExpr 0x929f190 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929f158 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929f140 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929eec0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x929f200 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929f1c8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x929f1ac <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929f030 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x929f8e0 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x929f8d0 <col:7, col:40>
    (CXXOperatorCallExpr 0x929f8a8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x929f870 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929f730)
      (CallExpr 0x929f7b0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929f778 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929f760 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x929f4e0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x929f820 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929f7e8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x929f7cc <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x929f650 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x929feb0 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x929fea0 <col:7, col:40>
    (CXXOperatorCallExpr 0x929fe78 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x929fe40 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929fd30 0x929f730)
      (CallExpr 0x929fdb0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929fd78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x929fd60 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929fae0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x929fe20 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x929fde8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x929fdcc <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x929fc50 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x92a04d0 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x92a04c0 <col:7, col:41>
    (CXXOperatorCallExpr 0x92a0498 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x92a0460 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a0350)
      (CallExpr 0x92a03d0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a0398 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x92a0380 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x92a0100 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x92a0440 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a0408 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x92a03ec <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x92a0270 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x92a1cf0 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x92a1ce0 <col:7, col:41>
    (CXXOperatorCallExpr 0x92a1cb8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x92a1c80 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a1b70 0x92a0350)
      (CallExpr 0x92a1bf0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a1bb8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x92a1ba0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a06d0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x92a1c60 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a1c28 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x92a1c0c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a1a90 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x92a2310 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x92a2300 <col:7, col:41>
    (CXXOperatorCallExpr 0x92a22d8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x92a22a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a2190)
      (CallExpr 0x92a2210 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a21d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x92a21c0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x92a1f40 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x92a2280 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a2248 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x92a222c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x92a20b0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x92a28e0 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x92a28d0 <col:7, col:41>
    (CXXOperatorCallExpr 0x92a28a8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x92a2870 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a2760 0x92a2190)
      (CallExpr 0x92a27e0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a27a8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x92a2790 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a2510 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x92a2850 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a2818 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x92a27fc <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a2680 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL = char *, typename _IteratorR = char *, typename _Container = std::vector<char, std::allocator<char> >> inline typename __normal_iterator<char *, vector<char, allocator<char> > >::difference_type operator-(const __normal_iterator<char *, std::vector<char, std::allocator<char> > > &__lhs, const __normal_iterator<char *, std::vector<char, std::allocator<char> > > &__rhs)template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x92a36d0 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x92a36c0 <col:7, col:40>
    (CXXOperatorCallExpr 0x92a3698 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x92a3660 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a3550)
      (CallExpr 0x92a35d0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a3598 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x92a3580 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x92a32d0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x92a3640 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a3608 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x92a35ec <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x92a3440 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator = char *, typename _Container = std::vector<char, std::allocator<char> >> inline typename __normal_iterator<char *, vector<char, allocator<char> > >::difference_type operator-(const __normal_iterator<char *, std::vector<char, std::allocator<char> > > &__lhs, const __normal_iterator<char *, std::vector<char, std::allocator<char> > > &__rhs) (CompoundStmt 0x983dc30 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x983dc20 <col:7, col:40>
    (BinaryOperator 0x983dc08 <col:14, col:40> 'int' '-'
      (ImplicitCastExpr 0x983dbe8 <col:14, col:25> 'char *':'char *' <LValueToRValue>
        (CXXMemberCallExpr 0x983db70 <col:14, col:25> 'char *const':'char *const' lvalue
          (MemberExpr 0x983db50 <col:14, col:20> '<bound member function type>' .base 0x949ee80
            (DeclRefExpr 0x983db38 <col:14> 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980c9a0 '__lhs' 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &'))))
      (ImplicitCastExpr 0x983dbf8 <col:29, col:40> 'char *':'char *' <LValueToRValue>
        (CXXMemberCallExpr 0x983dbc8 <col:29, col:40> 'char *const':'char *const' lvalue
          (MemberExpr 0x983dba4 <col:29, col:35> '<bound member function type>' .base 0x949ee80
            (DeclRefExpr 0x983db8c <col:29> 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980ca90 '__rhs' 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &')))))))

template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x92a3e20 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x92a3e10 <col:7, col:40>
    (CXXOperatorCallExpr 0x92a3de8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x92a3db0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a3ca0 0x92a3550)
      (CallExpr 0x92a3d20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a3ce8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x92a3cd0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a3a20 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x92a3d90 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a3d58 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x92a3d3c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a3b90 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x92a4a40 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x92a4a30 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x92a4a10 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x92a49e8 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x92a49b0 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a47f0)
        (CallExpr 0x92a4978 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92a4940 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x92a4928 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x92a46c0 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x92a4994 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x92a4550 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x92a86e0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x92a86b8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x92a8620 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9272240 0x9272780)
    (UnaryOperator 0x92a8670 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92a8658 <col:17> '_ForwardIterator1' lvalue ParmVar 0x92a84a0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x92a86a0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92a8684 <col:23> '_ForwardIterator2' lvalue ParmVar 0x92a84e0 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x92a5448 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x92a5280 <line:87:11, line:88:24>
    0x92a5250 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x92a5330 <line:89:11, col:50>
    0x92a52b0 "_ValueType1 __tmp =
      (ParenExpr 0x92a5318 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x92a5300 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92a52e4 <col:46> '_ForwardIterator1' lvalue ParmVar 0x92a4f80 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x92a53b8 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x92a5358 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92a5340 <col:12> '_ForwardIterator1' lvalue ParmVar 0x92a4f80 '__a' '_ForwardIterator1'))
    (ParenExpr 0x92a53a0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x92a5388 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92a536c <col:33> '_ForwardIterator2' lvalue ParmVar 0x92a4fc0 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x92a5430 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x92a53e8 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92a53d0 <col:12> '_ForwardIterator2' lvalue ParmVar 0x92a4fc0 '__b' '_ForwardIterator2'))
    (ParenExpr 0x92a5418 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x92a53fc </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x92a52b0 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x92a86e0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x92a86b8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x92a8620 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9272240 0x9272780)
    (UnaryOperator 0x92a8670 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92a8658 <col:17> '_ForwardIterator1' lvalue ParmVar 0x92a84a0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x92a86a0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92a8684 <col:23> '_ForwardIterator2' lvalue ParmVar 0x92a84e0 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x92a99b8 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x92a8a30 <line:120:7, line:121:13>
    0x92a8a00 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x92a8bc0 <line:122:7, line:123:13>
    0x92a8b90 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x92a8cf0 <line:135:7, line:136:17>
    0x92a8cc0 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x92a8e40 <line:137:7, line:138:17>
    0x92a8e10 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x92a9990 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x92a9938 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x92a995c <col:12> '_ForwardIterator1' lvalue ParmVar 0x92a87c0 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x92a9974 <col:17> '_ForwardIterator2' lvalue ParmVar 0x92a8800 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x92a9ea0 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x92a9c78 <line:167:56>)
  (ForStmt 0x92a9e50 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92a9cf8 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x92a9cb8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92a9c84 <col:14> '_ForwardIterator1' lvalue ParmVar 0x92a9aa0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x92a9c9c <col:26> '_ForwardIterator1' lvalue ParmVar 0x92a9ae0 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x92a9d80 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x92a9d38 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92a9d1c <col:37> '_ForwardIterator1' lvalue ParmVar 0x92a9aa0 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x92a9d68 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92a9d4c <col:49> '_ForwardIterator2' lvalue ParmVar 0x92a9b20 '__first2' '_ForwardIterator2')))
    (CallExpr 0x92a9e28 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x92a9dc0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92a88e0)
      (DeclRefExpr 0x92a9df4 <col:17> '_ForwardIterator1' lvalue ParmVar 0x92a9aa0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x92a9e0c <col:27> '_ForwardIterator2' lvalue ParmVar 0x92a9b20 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x92a9e90 <line:171:7, col:14>
    (DeclRefExpr 0x92a9e74 <col:14> '_ForwardIterator2' lvalue ParmVar 0x92a9b20 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x92aa1d8 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x92aa190 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92aa140 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x92aa100 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
      (DeclRefExpr 0x92aa0d0 <col:11> 'const _Tp' lvalue ParmVar 0x92a9fa0 '__b' 'const _Tp &')
      (DeclRefExpr 0x92aa0e8 <col:17> 'const _Tp' lvalue ParmVar 0x92a9f50 '__a' 'const _Tp &'))
    (ReturnStmt 0x92aa180 <line:193:2, col:9>
      (DeclRefExpr 0x92aa164 <col:9> 'const _Tp' lvalue ParmVar 0x92a9fa0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x92aa1c8 <line:194:7, col:14>
    (DeclRefExpr 0x92aa1ac <col:14> 'const _Tp' lvalue ParmVar 0x92a9f50 '__a' 'const _Tp &')))

;
    template <typename _Tp = unsigned int> inline const unsigned int &max(const unsigned int &__a, const unsigned int &__b) (CompoundStmt 0x981b988 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x981b940 <line:215:7, line:216:9>
    <<<NULL>>>
    (BinaryOperator 0x981b900 <line:215:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0x981b8e0 <col:11> 'unsigned int':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x981b8ac <col:11> 'const unsigned int':'const unsigned int' lvalue ParmVar 0x981aaa0 '__a' 'const unsigned int &'))
      (ImplicitCastExpr 0x981b8f0 <col:17> 'unsigned int':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x981b8c4 <col:17> 'const unsigned int':'const unsigned int' lvalue ParmVar 0x981aaf0 '__b' 'const unsigned int &')))
    (ReturnStmt 0x981b930 <line:216:2, col:9>
      (DeclRefExpr 0x981b918 <col:9> 'const unsigned int':'const unsigned int' lvalue ParmVar 0x981aaf0 '__b' 'const unsigned int &'))
    <<<NULL>>>)
  (ReturnStmt 0x981b978 <line:217:7, col:14>
    (DeclRefExpr 0x981b95c <col:14> 'const unsigned int':'const unsigned int' lvalue ParmVar 0x981aaa0 '__a' 'const unsigned int &')))

template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x92aa4e8 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x92aa4a0 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92aa450 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x92aa410 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
      (DeclRefExpr 0x92aa3e0 <col:11> 'const _Tp' lvalue ParmVar 0x92aa280 '__a' 'const _Tp &')
      (DeclRefExpr 0x92aa3f8 <col:17> 'const _Tp' lvalue ParmVar 0x92aa2d0 '__b' 'const _Tp &'))
    (ReturnStmt 0x92aa490 <line:216:2, col:9>
      (DeclRefExpr 0x92aa474 <col:9> 'const _Tp' lvalue ParmVar 0x92aa2d0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x92aa4d8 <line:217:7, col:14>
    (DeclRefExpr 0x92aa4bc <col:14> 'const _Tp' lvalue ParmVar 0x92aa280 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x92aaf08 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x92aaec0 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x92aae70 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x92aae24 <col:11> '_Compare' lvalue ParmVar 0x92aacd0 '__comp' '_Compare')
      (DeclRefExpr 0x92aae3c <col:18> 'const _Tp' lvalue ParmVar 0x92aac90 '__b' 'const _Tp &')
      (DeclRefExpr 0x92aae54 <col:23> 'const _Tp' lvalue ParmVar 0x92aac40 '__a' 'const _Tp &'))
    (ReturnStmt 0x92aaeb0 <line:237:2, col:9>
      (DeclRefExpr 0x92aae94 <col:9> 'const _Tp' lvalue ParmVar 0x92aac90 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x92aaef8 <line:238:7, col:14>
    (DeclRefExpr 0x92aaedc <col:14> 'const _Tp' lvalue ParmVar 0x92aac40 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x92ab298 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x92ab250 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x92ab200 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x92ab1b4 <col:11> '_Compare' lvalue ParmVar 0x92ab090 '__comp' '_Compare')
      (DeclRefExpr 0x92ab1cc <col:18> 'const _Tp' lvalue ParmVar 0x92ab000 '__a' 'const _Tp &')
      (DeclRefExpr 0x92ab1e4 <col:23> 'const _Tp' lvalue ParmVar 0x92ab050 '__b' 'const _Tp &'))
    (ReturnStmt 0x92ab240 <line:258:2, col:9>
      (DeclRefExpr 0x92ab224 <col:9> 'const _Tp' lvalue ParmVar 0x92ab050 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x92ab288 <line:259:7, col:14>
    (DeclRefExpr 0x92ab26c <col:14> 'const _Tp' lvalue ParmVar 0x92ab000 '__a' 'const _Tp &')))

;
    template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >> struct _Niter_base :  _Iter_base<__gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >, __is_normal_iterator<__normal_iterator<char *, vector<char, allocator<char> > > >::__value> {
        struct _Niter_base;
    }
template <typename _Iterator = char *> struct _Niter_base :  _Iter_base<char *, __is_normal_iterator<char *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator = const char *> struct _Niter_base :  _Iter_base<const char *, __is_normal_iterator<const char *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >> inline typename _Niter_base<__normal_iterator<char *, vector<char, allocator<char> > > >::iterator_type __niter_base(__gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > __it) (CompoundStmt 0x9816760 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9816750 <col:7, col:55>
    (CallExpr 0x98166c8 <col:14, col:55> 'iterator_type':'char *'
      (ImplicitCastExpr 0x98166b8 <col:14, col:43> 'iterator_type (*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' <FunctionToPointerDecay>
        (DeclRefExpr 0x981665c <col:14, col:43> 'iterator_type (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' lvalue CXXMethod 0x9815c60 '_S_base' 'iterator_type (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)'))
      (CXXConstructExpr 0x9816728 <col:51> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
        (ImplicitCastExpr 0x9816718 <col:51> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
          (DeclRefExpr 0x981667c <col:51> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x9815d70 '__it' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'))))))

template <typename _Iterator = char *> inline typename _Niter_base<char *>::iterator_type __niter_base(char *__it) (CompoundStmt 0x97f2a48 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x97f2a38 <col:7, col:55>
    (CallExpr 0x97f2a08 <col:14, col:55> 'iterator_type':'char *'
      (ImplicitCastExpr 0x97f29f8 <col:14, col:43> 'iterator_type (*)(char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x97f29bc <col:14, col:43> 'iterator_type (char *)' lvalue CXXMethod 0x97f0780 '_S_base' 'iterator_type (char *)'))
      (ImplicitCastExpr 0x97f2a28 <col:51> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x97f29dc <col:51> 'char *':'char *' lvalue ParmVar 0x97f2140 '__it' 'char *':'char *')))))

template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0x9806288 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9806278 <col:7, col:55>
    (CallExpr 0x9806248 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x9806238 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x98061dc <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0x9836340 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0x9806268 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x98061fc <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9836450 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator = const char *> inline typename _Niter_base<const char *>::iterator_type __niter_base(const char *__it) (CompoundStmt 0x98165c8 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x98165b8 <col:7, col:55>
    (CallExpr 0x9816588 <col:14, col:55> 'iterator_type':'const char *'
      (ImplicitCastExpr 0x9816578 <col:14, col:43> 'iterator_type (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x981653c <col:14, col:43> 'iterator_type (const char *)' lvalue CXXMethod 0x97f7320 '_S_base' 'iterator_type (const char *)'))
      (ImplicitCastExpr 0x98165a8 <col:51> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x981655c <col:51> 'const char *':'const char *' lvalue ParmVar 0x9814ec0 '__it' 'const char *':'const char *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x92abb20 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x92abb10 <col:7, col:55>
    (CallExpr 0x92abaf0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92abab0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x92abad4 <col:51> '_Iterator' lvalue ParmVar 0x92ab8b0 '__it' '_Iterator'))))

;
    template <typename _Iterator = char *> struct _Miter_base :  _Iter_base<char *, __is_move_iterator<char *>::__value> {
        struct _Miter_base;
    }
template <typename _Iterator = const char *> struct _Miter_base :  _Iter_base<const char *, __is_move_iterator<const char *>::__value> {
        struct _Miter_base;
    }
template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator = char *> inline typename _Miter_base<char *>::iterator_type __miter_base(char *__it) (CompoundStmt 0x97f19c8 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x97f19b8 <col:7, col:55>
    (CallExpr 0x97f1988 <col:14, col:55> 'iterator_type':'char *'
      (ImplicitCastExpr 0x97f1978 <col:14, col:43> 'iterator_type (*)(char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x97f191c <col:14, col:43> 'iterator_type (char *)' lvalue CXXMethod 0x97f0780 '_S_base' 'iterator_type (char *)'))
      (ImplicitCastExpr 0x97f19a8 <col:51> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x97f193c <col:51> 'char *':'char *' lvalue ParmVar 0x97f0890 '__it' 'char *':'char *')))))

template <typename _Iterator = const char *> inline typename _Miter_base<const char *>::iterator_type __miter_base(const char *__it) (CompoundStmt 0x9814748 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x9814738 <col:7, col:55>
    (CallExpr 0x9814708 <col:14, col:55> 'iterator_type':'const char *'
      (ImplicitCastExpr 0x98146f8 <col:14, col:43> 'iterator_type (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x981469c <col:14, col:43> 'iterator_type (const char *)' lvalue CXXMethod 0x97f7320 '_S_base' 'iterator_type (const char *)'))
      (ImplicitCastExpr 0x9814728 <col:51> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x98146bc <col:51> 'const char *':'const char *' lvalue ParmVar 0x97f7430 '__it' 'const char *':'const char *')))))

template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x92ac870 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x92ac860 <col:7, col:55>
    (CallExpr 0x92ac840 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92ac800 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x92ac824 <col:51> '_Iterator' lvalue ParmVar 0x92ac600 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x92aead8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x92ae6a0 <line:326:4, col:68>
    0x92ae670 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x92aea88 <line:327:4, line:332:6>
    (DeclStmt 0x92ae798 <line:327:8, col:40>
      0x92ae6d0 "_Distance __n =
        (CXXOperatorCallExpr 0x92ae770 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x92ae738 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
          (DeclRefExpr 0x92ae704 <col:24> '_II' lvalue ParmVar 0x92ae400 '__last' '_II')
          (DeclRefExpr 0x92ae71c <col:33> '_II' lvalue ParmVar 0x92ae3c0 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ae818 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x92ae7d8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92ae7a8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x92ae6d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x92ae7c0 <col:48> 'int' 0))
    (UnaryOperator 0x92ae858 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x92ae83c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x92ae6d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x92aea68 <line:328:6, line:332:6>
      (BinaryOperator 0x92ae9f0 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x92ae888 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92ae86c <col:9> '_OI' lvalue ParmVar 0x92ae440 '__result' '_OI'))
        (UnaryOperator 0x92ae8b8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92ae89c <col:21> '_II' lvalue ParmVar 0x92ae3c0 '__first' '_II')))
      (UnaryOperator 0x92aea20 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92aea08 <col:10> '_II' lvalue ParmVar 0x92ae3c0 '__first' '_II'))
      (UnaryOperator 0x92aea50 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92aea34 <col:10> '_OI' lvalue ParmVar 0x92ae440 '__result' '_OI'))))
  (ReturnStmt 0x92aeac8 <line:333:4, col:11>
    (DeclRefExpr 0x92aeaac <col:11> '_OI' lvalue ParmVar 0x92ae440 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool = false, bool = true, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _Tp = char> static char *__copy_m(const char *__first, const char *__last, char *__result) (CompoundStmt 0x97f43e0 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x97f4168 <line:364:4, col:43>
    0x97f4090 "const ptrdiff_t _Num =
      (BinaryOperator 0x97f4150 <col:27, col:36> 'int' '-'
        (ImplicitCastExpr 0x97f4130 <col:27> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97f4100 <col:27> 'const char *' lvalue ParmVar 0x97f3d90 '__last' 'const char *'))
        (ImplicitCastExpr 0x97f4140 <col:36> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97f4118 <col:36> 'const char *' lvalue ParmVar 0x97f3d40 '__first' 'const char *')))")
  (IfStmt 0x97f4310 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x97f41a0 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x97f4190 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x97f4178 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x97f4090 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x97f4278 <line:366:6, col:61> 'void *'
      (ImplicitCastExpr 0x97f4268 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92afde4 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x97f42b0 <col:24> 'void *' <BitCast>
        (ImplicitCastExpr 0x97f42a0 <col:24> 'char *' <LValueToRValue>
          (DeclRefExpr 0x97f41ac <col:24> 'char *' lvalue ParmVar 0x97f3de0 '__result' 'char *')))
      (ImplicitCastExpr 0x97f42d0 <col:34> 'const void *' <BitCast>
        (ImplicitCastExpr 0x97f42c0 <col:34> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97f41c4 <col:34> 'const char *' lvalue ParmVar 0x97f3d40 '__first' 'const char *')))
      (BinaryOperator 0x97f4250 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x97f4200 <col:43, col:53> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x97f4240 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x97f4230 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x97f4218 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x97f4090 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x97f43d0 <line:367:4, col:22>
    (BinaryOperator 0x97f43b8 <col:11, col:22> 'char *' '+'
      (ImplicitCastExpr 0x97f4398 <col:11> 'char *' <LValueToRValue>
        (DeclRefExpr 0x97f4364 <col:11> 'char *' lvalue ParmVar 0x97f3de0 '__result' 'char *'))
      (ImplicitCastExpr 0x97f43a8 <col:22> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x97f437c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x97f4090 '_Num' 'const ptrdiff_t':'const int')))))

template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result);
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x92ad088 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x92ad038 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92acf20 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92acee0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92aceb0 <col:11> '_II' lvalue ParmVar 0x92accc0 '__first' '_II')
      (DeclRefExpr 0x92acec8 <col:22> '_II' lvalue ParmVar 0x92acd00 '__last' '_II'))
    (BinaryOperator 0x92acfa8 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x92acf60 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92acf44 <col:32> '_OI' lvalue ParmVar 0x92acd40 '__result' '_OI'))
      (UnaryOperator 0x92acf90 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92acf74 <col:44> '_II' lvalue ParmVar 0x92accc0 '__first' '_II')))
    (BinaryOperator 0x92ad020 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x92acfd8 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92acfc0 <col:7> '_OI' lvalue ParmVar 0x92acd40 '__result' '_OI'))
      (UnaryOperator 0x92ad008 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92acfec <col:19> '_II' lvalue ParmVar 0x92accc0 '__first' '_II'))))
  (ReturnStmt 0x92ad078 <line:300:4, col:11>
    (DeclRefExpr 0x92ad05c <col:11> '_OI' lvalue ParmVar 0x92acd40 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x92aead8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x92ae6a0 <line:326:4, col:68>
    0x92ae670 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x92aea88 <line:327:4, line:332:6>
    (DeclStmt 0x92ae798 <line:327:8, col:40>
      0x92ae6d0 "_Distance __n =
        (CXXOperatorCallExpr 0x92ae770 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x92ae738 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
          (DeclRefExpr 0x92ae704 <col:24> '_II' lvalue ParmVar 0x92ae400 '__last' '_II')
          (DeclRefExpr 0x92ae71c <col:33> '_II' lvalue ParmVar 0x92ae3c0 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ae818 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x92ae7d8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92ae7a8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x92ae6d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x92ae7c0 <col:48> 'int' 0))
    (UnaryOperator 0x92ae858 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x92ae83c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x92ae6d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x92aea68 <line:328:6, line:332:6>
      (BinaryOperator 0x92ae9f0 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x92ae888 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92ae86c <col:9> '_OI' lvalue ParmVar 0x92ae440 '__result' '_OI'))
        (UnaryOperator 0x92ae8b8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92ae89c <col:21> '_II' lvalue ParmVar 0x92ae3c0 '__first' '_II')))
      (UnaryOperator 0x92aea20 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92aea08 <col:10> '_II' lvalue ParmVar 0x92ae3c0 '__first' '_II'))
      (UnaryOperator 0x92aea50 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92aea34 <col:10> '_OI' lvalue ParmVar 0x92ae440 '__result' '_OI'))))
  (ReturnStmt 0x92aeac8 <line:333:4, col:11>
    (DeclRefExpr 0x92aeaac <col:11> '_OI' lvalue ParmVar 0x92ae440 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x92aff88 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x92afc08 <line:364:4, col:43>
    0x92afb40 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x92afbe0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92afba8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92afb74 <col:27> 'const _Tp *' lvalue ParmVar 0x92af020 '__last' 'const _Tp *')
        (DeclRefExpr 0x92afb8c <col:36> 'const _Tp *' lvalue ParmVar 0x92aefd0 '__first' 'const _Tp *'))")
  (IfStmt 0x92afec8 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x92afc40 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x92afc30 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x92afc18 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x92afb40 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x92afea0 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x92afde4 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x92afdfc <col:24> '_Tp *' lvalue ParmVar 0x92af9c0 '__result' '_Tp *')
      (DeclRefExpr 0x92afe14 <col:34> 'const _Tp *' lvalue ParmVar 0x92aefd0 '__first' 'const _Tp *')
      (BinaryOperator 0x92afe88 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x92afe38 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x92afe78 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x92afe68 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x92afe50 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x92afb40 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x92aff78 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x92aff50 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92aff18 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (DeclRefExpr 0x92afee4 <col:11> '_Tp *' lvalue ParmVar 0x92af9c0 '__result' '_Tp *')
      (DeclRefExpr 0x92afefc <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x92afb40 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove = false, typename _II = char *, typename _OI = char *> inline char *__copy_move_a(char *__first, char *__last, char *__result) (CompoundStmt 0x97f4040 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x97f2b40 <line:375:7, col:68>
    0x97f2b10 "typedef typename iterator_traits<char *>::value_type _ValueTypeI")
  (DeclStmt 0x97f2c30 <line:376:7, col:68>
    0x97f2c00 "typedef typename iterator_traits<char *>::value_type _ValueTypeO")
  (DeclStmt 0x97f2d20 <line:377:7, col:73>
    0x97f2cf0 "typedef typename iterator_traits<char *>::iterator_category _Category")
  (DeclStmt 0x97f35e0 <line:378:7, line:381:58>
    0x97f2d30 "const bool __simple =
      (ParenExpr 0x97f35c8 <line:378:29, line:381:57> '_Bool'
        (BinaryOperator 0x97f35b0 <line:378:30, line:381:50> '_Bool' '&&'
          (BinaryOperator 0x97f31d8 <line:378:30, line:380:45> '_Bool' '&&'
            (BinaryOperator 0x97f3120 <line:378:30, line:379:45> '_Bool' '&&'
              (UnaryTypeTraitExpr 0x97f2d88 <line:378:30, col:54> '_Bool')
              (ImplicitCastExpr 0x97f3110 <line:379:26, col:45> '_Bool' <IntegralToBoolean>
                (DeclRefExpr 0x97f30ec <col:26, col:45> 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0x97f3070 '__value' 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
            (ImplicitCastExpr 0x97f31c8 <line:380:26, col:45> '_Bool' <IntegralToBoolean>
              (DeclRefExpr 0x97f31a4 <col:26, col:45> 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0x97f3070 '__value' 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
          (ImplicitCastExpr 0x97f35a0 <line:381:12, col:50> '_Bool' <IntegralToBoolean>
            (DeclRefExpr 0x97f357c <col:12, col:50> 'enum std::__are_same<char, char>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>' EnumConstant 0x97f3500 '__value' 'enum std::__are_same<char, char>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>'))))")
  (ReturnStmt 0x97f4030 <line:383:7, line:384:70>
    (CallExpr 0x97f3fb8 <line:383:14, line:384:70> 'char *'
      (ImplicitCastExpr 0x97f3fa8 <line:383:14, line:384:36> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x97f3f44 <line:383:14, line:384:36> 'char *(const char *, const char *, char *)' lvalue CXXMethod 0x97f3ea0 '__copy_m' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x97f3bc0 '__copy_m')))
      (ImplicitCastExpr 0x97f3ff0 <col:45> 'const char *' <NoOp>
        (ImplicitCastExpr 0x97f3fe0 <col:45> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x97f3c54 <col:45> 'char *':'char *' lvalue ParmVar 0x97f2670 '__first' 'char *':'char *')))
      (ImplicitCastExpr 0x97f4010 <col:54> 'const char *' <NoOp>
        (ImplicitCastExpr 0x97f4000 <col:54> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x97f3c6c <col:54> 'char *':'char *' lvalue ParmVar 0x97f26b0 '__last' 'char *':'char *')))
      (ImplicitCastExpr 0x97f4020 <col:62> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x97f3c84 <col:62> 'char *':'char *' lvalue ParmVar 0x97f26f0 '__result' 'char *':'char *')))))

template <bool _IsMove = false, typename _II = const char *, typename _OI = char *> inline char *__copy_move_a(const char *__first, const char *__last, char *__result) (CompoundStmt 0x9817378 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x9816900 <line:375:7, col:68>
    0x98168d0 "typedef typename iterator_traits<const char *>::value_type _ValueTypeI")
  (DeclStmt 0x98169f0 <line:376:7, col:68>
    0x98169c0 "typedef typename iterator_traits<char *>::value_type _ValueTypeO")
  (DeclStmt 0x9816ae0 <line:377:7, col:73>
    0x9816ab0 "typedef typename iterator_traits<const char *>::iterator_category _Category")
  (DeclStmt 0x98170d0 <line:378:7, line:381:58>
    0x9816af0 "const bool __simple =
      (ParenExpr 0x98170b8 <line:378:29, line:381:57> '_Bool'
        (BinaryOperator 0x98170a0 <line:378:30, line:381:50> '_Bool' '&&'
          (BinaryOperator 0x9816f98 <line:378:30, line:380:45> '_Bool' '&&'
            (BinaryOperator 0x9816ee0 <line:378:30, line:379:45> '_Bool' '&&'
              (UnaryTypeTraitExpr 0x9816b48 <line:378:30, col:54> '_Bool')
              (ImplicitCastExpr 0x9816ed0 <line:379:26, col:45> '_Bool' <IntegralToBoolean>
                (DeclRefExpr 0x9816eac <col:26, col:45> 'enum std::__is_pointer<const char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0x9816e30 '__value' 'enum std::__is_pointer<const char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
            (ImplicitCastExpr 0x9816f88 <line:380:26, col:45> '_Bool' <IntegralToBoolean>
              (DeclRefExpr 0x9816f64 <col:26, col:45> 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0x97f3070 '__value' 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
          (ImplicitCastExpr 0x9817090 <line:381:12, col:50> '_Bool' <IntegralToBoolean>
            (DeclRefExpr 0x981706c <col:12, col:50> 'enum std::__are_same<char, char>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>' EnumConstant 0x97f3500 '__value' 'enum std::__are_same<char, char>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>'))))")
  (ReturnStmt 0x9817368 <line:383:7, line:384:70>
    (CallExpr 0x9817310 <line:383:14, line:384:70> 'char *'
      (ImplicitCastExpr 0x9817300 <line:383:14, line:384:36> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x98172d8 <line:383:14, line:384:36> 'char *(const char *, const char *, char *)' lvalue CXXMethod 0x97f3ea0 '__copy_m' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x97f3bc0 '__copy_m')))
      (ImplicitCastExpr 0x9817338 <col:45> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x9817264 <col:45> 'const char *':'const char *' lvalue ParmVar 0x9816110 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9817348 <col:54> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x981727c <col:54> 'const char *':'const char *' lvalue ParmVar 0x9816150 '__last' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9817358 <col:62> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x9817294 <col:62> 'char *':'char *' lvalue ParmVar 0x9816190 '__result' 'char *':'char *')))))

template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x92b0ff8 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x92b03a0 <line:375:7, col:68>
    0x92b0370 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x92b0530 <line:376:7, col:68>
    0x92b0500 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x92b0680 <line:377:7, col:73>
    0x92b0650 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x92b0d50 <line:378:7, line:381:58>
    0x92b06a0 "const bool __simple =
      (ParenExpr 0x92b0d38 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x92b0d20 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x92b0938 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x92b0818 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x92b06f8 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x92b07f0 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x92b0910 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x92b0cf8 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x92b0fe8 <line:383:7, line:384:70>
    (CallExpr 0x92b0fc0 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92b0f50 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x92b0f74 <col:45> '_II' lvalue ParmVar 0x92b00b0 '__first' '_II')
      (DeclRefExpr 0x92b0f8c <col:54> '_II' lvalue ParmVar 0x92b00f0 '__last' '_II')
      (DeclRefExpr 0x92b0fa4 <col:62> '_OI' lvalue ParmVar 0x92b0130 '__result' '_OI'))))

;
    template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8dd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x94f8dc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x94f8d80 <col:9> 'char_type':'char' lvalue ParmVar 0x90d1dc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94f8db0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x94f8d98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1e30 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8e88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x94f8e78 <col:9, col:24>
    (BinaryOperator 0x94f8e60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f8e30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8dec <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1f50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8e50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x90d1fa0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8f38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x94f8f28 <col:9, col:23>
    (BinaryOperator 0x94f8f10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94f8ee0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ed0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d20c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8f00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ef0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8eb4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x90d2110 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9060 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x94f9050 <col:9, col:48>
    (CallExpr 0x94f8fd8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x94f8fc8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f8f4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x94f9010 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9000 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f64 <col:33> 'const char_type *' lvalue ParmVar 0x90d2210 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x94f9030 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9020 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f7c <col:39> 'const char_type *' lvalue ParmVar 0x90d2260 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x94f9040 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94f8f94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x90d22a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94f91f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x94f91e8 <col:9, col:36>
    (CallExpr 0x94f91b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x94f91a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f9154 <col:16> 'unsigned int (const char *)' lvalue Function 0x94f9080 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x94f91d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94f916c <col:33> 'const char_type *' lvalue ParmVar 0x90d23e0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94f94e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x94f94d8 <col:9, col:77>
    (CXXStaticCastExpr 0x94f94c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x94f9438 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x94f9428 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f93a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x94f9240 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9470 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f9460 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f93bc <col:63> 'const char_type *' lvalue ParmVar 0x90d2500 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x94f9490 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9480 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f93d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x90d2590 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x94f94a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f93ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x90d2540 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9620 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x94f9610 <col:9, col:74>
    (CXXStaticCastExpr 0x94f95f8 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f9570 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x94f9560 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f94fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f95a8 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9598 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9514 <col:58> 'char_type *' lvalue ParmVar 0x90d26f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f95c8 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f95b8 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f952c <col:64> 'const char_type *' lvalue ParmVar 0x90d2740 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f95d8 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f9544 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x90d2780 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9758 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x94f9748 <col:9, col:73>
    (CXXStaticCastExpr 0x94f9730 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f96a8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x94f9698 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f9634 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f96e0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f96d0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f964c <col:57> 'char_type *' lvalue ParmVar 0x90d28c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f9700 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f96f0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9664 <col:63> 'const char_type *' lvalue ParmVar 0x90d2910 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f9710 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f967c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x90d2950 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94f98a8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x94f9898 <col:9, col:71>
    (CXXStaticCastExpr 0x94f9880 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f97f8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x94f97e8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f976c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x92bb4c0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9830 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9820 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9784 <col:57> 'char_type *' lvalue ParmVar 0x90d2a30 '__s' 'char_type *')))
        (ImplicitCastExpr 0x94f9850 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9840 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f979c <col:62> 'char_type':'char' lvalue ParmVar 0x90d2ab0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x94f9860 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f97b4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x90d2a70 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94f9928 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x94f9918 <col:9, col:42>
    (CXXStaticCastExpr 0x94f9900 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x94f98f0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x94f98e0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x94f98bc <col:39> 'const int_type':'const int' lvalue ParmVar 0x90d2c20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94f99e0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x94f99d0 <col:9, col:69>
    (CXXStaticCastExpr 0x94f99b8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x94f99a8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x94f9988 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x94f9978 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x94f9968 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x94f993c <col:65> 'const char_type':'const char' lvalue ParmVar 0x90d2d40 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94f9a70 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x94f9a60 <col:9, col:24>
    (BinaryOperator 0x94f9a48 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f9a28 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f99f4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x90d2e60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94f9a38 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9a0c <col:24> 'const int_type':'const int' lvalue ParmVar 0x90d2eb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94f9ae8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x94f9ad8 <col:9, col:56>
    (CXXStaticCastExpr 0x94f9ac0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x94f9aa0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x94f9a88 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94f9c28 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x94f9c18 <col:9, col:37>
    (ConditionalOperator 0x94f9bf8 <col:16, col:37> 'int'
      (ParenExpr 0x94f9ba0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x94f9b88 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x94f9b78 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x94f9afc <col:17> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &'))
          (CallExpr 0x94f9b58 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x94f9b48 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94f9b14 <col:24> 'int_type (void)' lvalue CXXMethod 0x94f8bf0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x94f9bb8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x94f9be8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9bd0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &')))))


    }
template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb358 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x94fb340 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x94fb300 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x94f9fc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94fb330 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x94fb318 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa030 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb3e8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x94fb3d8 <col:9, col:24>
    (BinaryOperator 0x94fb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fb3a0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb36c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa150 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb3b0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb384 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa1a0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb478 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x94fb468 <col:9, col:23>
    (BinaryOperator 0x94fb450 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94fb430 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb3fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa2c0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb440 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb414 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa310 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb5e0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x94fb5d0 <col:9, col:39>
    (CallExpr 0x94fb578 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x94fb568 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb50c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x91861e0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f7d0 'wmemcmp')))
      (ImplicitCastExpr 0x94fb5a0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4c4 <col:24> 'const char_type *' lvalue ParmVar 0x94fa410 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4dc <col:30> 'const char_type *' lvalue ParmVar 0x94fa460 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb4f4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94fa4a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94fb6e8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x94fb6d8 <col:9, col:26>
    (CallExpr 0x94fb6a8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x94fb698 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb644 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9185b20 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x937f220 'wcslen')))
      (ImplicitCastExpr 0x94fb6c8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb62c <col:23> 'const char_type *' lvalue ParmVar 0x94fa5b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94fb828 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x94fb818 <col:9, col:37>
    (ImplicitCastExpr 0x94fb808 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x94fb7b0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x94fb7a0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fb780 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186030 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9385f20 'wmemchr')))
        (ImplicitCastExpr 0x94fb7d8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94fb738 <col:24> 'const char_type *' lvalue ParmVar 0x94fa6b0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x94fb7e8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fb750 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa740 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x94fb7f8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fb768 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fa6f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb990 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x94fb980 <col:9, col:40>
    (CallExpr 0x94fb928 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x94fb918 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb8bc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9186570 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f8b0 'wmemmove')))
      (ImplicitCastExpr 0x94fb950 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb874 <col:25> 'char_type *' lvalue ParmVar 0x94fa8a0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fb960 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb88c <col:31> 'const char_type *' lvalue ParmVar 0x94fa8f0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb970 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb8a4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x94fa930 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fbad0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x94fbac0 <col:9, col:39>
    (CallExpr 0x94fba68 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x94fba58 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fba24 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9186390 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x937f840 'wmemcpy')))
      (ImplicitCastExpr 0x94fba90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9dc <col:24> 'char_type *' lvalue ParmVar 0x94faa40 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fbaa0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9f4 <col:30> 'const char_type *' lvalue ParmVar 0x94faa90 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fbab0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fba0c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94faad0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94fbc30 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x94fbc20 <col:9, col:37>
    (CallExpr 0x94fbbc8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x94fbbb8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fbb64 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186730 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x937f920 'wmemset')))
      (ImplicitCastExpr 0x94fbbf0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fbb1c <col:24> 'char_type *' lvalue ParmVar 0x94fabb0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x94fbc00 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fbb34 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x94fac30 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x94fbc10 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbb4c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fabf0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94fbcb0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x94fbca0 <col:9, col:29>
    (CXXFunctionalCastExpr 0x94fbc88 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x94fbc78 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x94fbc68 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fbc50 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fada0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94fbd30 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x94fbd20 <col:9, col:28>
    (CXXFunctionalCastExpr 0x94fbd08 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x94fbcf8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x94fbce8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fbcd0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x94faec0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94fbdc0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x94fbdb0 <col:9, col:24>
    (BinaryOperator 0x94fbd98 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fbd78 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd44 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fafe0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94fbd88 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd5c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb030 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94fbe38 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x94fbe28 <col:9, col:42>
    (CXXStaticCastExpr 0x94fbe10 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x94fbdf0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x94fbdd8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94fc010 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x94fc000 <col:9, col:46>
    (ConditionalOperator 0x94fbfe0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x94fbf58 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x94fbf48 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fbe4c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x94fb0d0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x94fbe64 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x94fbf80 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x94fbee8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x94fbed8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94fbe7c <col:33> 'int_type (void)' lvalue CXXMethod 0x94fb170 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x94fbfd0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x94fbf90 <col:42> 'int' 0))
      (ImplicitCastExpr 0x94fbfc0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbfa8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove = false, typename _II = const char *, typename _OI = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >> inline __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > __copy_move_a2(const char *__first, const char *__last, __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > __result) (CompoundStmt 0x98164a8 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x9816498 <line:420:7, line:422:39>
    (CXXConstructExpr 0x9816470 <line:420:14, line:422:39> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x9816460 <line:420:14, line:422:39> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x9816450 <line:420:14, line:422:39> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXFunctionalCastExpr 0x98163d8 <line:420:14, line:422:39> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' functional cast to class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > <ConstructorConversion>
            (CXXConstructExpr 0x98163b0 <line:420:14, line:422:38> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (char *const &)'
              (MaterializeTemporaryExpr 0x98163a0 <line:420:18, line:422:38> 'char *const':'char *const' lvalue
                (CallExpr 0x9816378 <line:420:18, line:422:38> 'char *':'char *'
                  (ImplicitCastExpr 0x9816368 <line:420:18, col:44> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x98162f8 <col:18, col:44> 'char *(const char *, const char *, char *)' lvalue Function 0x9816220 '__copy_move_a' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92b0250 '__copy_move_a')))
                  (CallExpr 0x9815038 <col:46, col:71> 'typename _Niter_base<const char *>::iterator_type':'const char *'
                    (ImplicitCastExpr 0x9815028 <col:46, col:51> 'typename _Niter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9814fe8 <col:46, col:51> 'typename _Niter_base<const char *>::iterator_type (const char *)' lvalue Function 0x9814f40 '__niter_base' 'typename _Niter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
                    (ImplicitCastExpr 0x9815058 <col:64> 'const char *':'const char *' <LValueToRValue>
                      (DeclRefExpr 0x981487c <col:64> 'const char *':'const char *' lvalue ParmVar 0x97f8130 '__first' 'const char *':'const char *')))
                  (CallExpr 0x9815120 <line:421:11, col:35> 'typename _Niter_base<const char *>::iterator_type':'const char *'
                    (ImplicitCastExpr 0x9815110 <col:11, col:16> 'typename _Niter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x98150e8 <col:11, col:16> 'typename _Niter_base<const char *>::iterator_type (const char *)' lvalue Function 0x9814f40 '__niter_base' 'typename _Niter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
                    (ImplicitCastExpr 0x9815140 <col:29> 'const char *':'const char *' <LValueToRValue>
                      (DeclRefExpr 0x981509c <col:29> 'const char *':'const char *' lvalue ParmVar 0x97f8170 '__last' 'const char *':'const char *')))
                  (CallExpr 0x9815f08 <line:422:11, col:37> 'typename _Niter_base<class __normal_iterator<char *, class vector<char, class allocator<char> > > >::iterator_type':'char *'
                    (ImplicitCastExpr 0x9815ef8 <col:11, col:16> 'typename _Niter_base<class __normal_iterator<char *, class vector<char, class allocator<char> > > >::iterator_type (*)(class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9815e98 <col:11, col:16> 'typename _Niter_base<class __normal_iterator<char *, class vector<char, class allocator<char> > > >::iterator_type (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' lvalue Function 0x9815df0 '__niter_base' 'typename _Niter_base<class __normal_iterator<char *, class vector<char, class allocator<char> > > >::iterator_type (class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
                    (CXXConstructExpr 0x9815f68 <col:29> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
                      (ImplicitCastExpr 0x9815f58 <col:29> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                        (DeclRefExpr 0x9815184 <col:29> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x97f81b0 '__result' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))))))))))

template <bool _IsMove = false, typename _II = char *, typename _OI = char *> inline char *__copy_move_a2(char *__first, char *__last, char *__result) (CompoundStmt 0x97f2928 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x97f2918 <line:420:7, line:422:39>
    (CXXFunctionalCastExpr 0x97f2900 <line:420:14, line:422:39> 'char *':'char *' functional cast to char * <NoOp>
      (CallExpr 0x97f28d8 <line:420:18, line:422:38> 'char *':'char *'
        (ImplicitCastExpr 0x97f28c8 <line:420:18, col:44> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x97f2858 <col:18, col:44> 'char *(char *, char *, char *)' lvalue Function 0x97f2780 '__copy_move_a' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b0250 '__copy_move_a')))
        (CallExpr 0x97f22b8 <col:46, col:71> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f22a8 <col:46, col:51> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f2268 <col:46, col:51> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x97f22d8 <col:64> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f1afc <col:64> 'char *':'char *' lvalue ParmVar 0x97f15c0 '__first' 'char *':'char *')))
        (CallExpr 0x97f23a0 <line:421:11, col:35> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f2390 <col:11, col:16> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f2368 <col:11, col:16> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x97f23c0 <col:29> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f231c <col:29> 'char *':'char *' lvalue ParmVar 0x97f1600 '__last' 'char *':'char *')))
        (CallExpr 0x97f2488 <line:422:11, col:37> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f2478 <col:11, col:16> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f2450 <col:11, col:16> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x97f24a8 <col:29> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f2404 <col:29> 'char *':'char *' lvalue ParmVar 0x97f1640 '__result' 'char *':'char *')))))))

template <bool _IsMove = false, typename _II = const char *, typename _OI = char *> inline char *__copy_move_a2(const char *__first, const char *__last, char *__result) (CompoundStmt 0x981a360 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x981a350 <line:420:7, line:422:39>
    (CXXFunctionalCastExpr 0x981a338 <line:420:14, line:422:39> 'char *':'char *' functional cast to char * <NoOp>
      (CallExpr 0x981a310 <line:420:18, line:422:38> 'char *':'char *'
        (ImplicitCastExpr 0x981a300 <line:420:18, col:44> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x981a2a8 <col:18, col:44> 'char *(const char *, const char *, char *)' lvalue Function 0x9816220 '__copy_move_a' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92b0250 '__copy_move_a')))
        (CallExpr 0x9819f50 <col:46, col:71> 'typename _Niter_base<const char *>::iterator_type':'const char *'
          (ImplicitCastExpr 0x9819f40 <col:46, col:51> 'typename _Niter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9819f18 <col:46, col:51> 'typename _Niter_base<const char *>::iterator_type (const char *)' lvalue Function 0x9814f40 '__niter_base' 'typename _Niter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x9819f70 <col:64> 'const char *':'const char *' <LValueToRValue>
            (DeclRefExpr 0x9819ecc <col:64> 'const char *':'const char *' lvalue ParmVar 0x9819b20 '__first' 'const char *':'const char *')))
        (CallExpr 0x981a038 <line:421:11, col:35> 'typename _Niter_base<const char *>::iterator_type':'const char *'
          (ImplicitCastExpr 0x981a028 <col:11, col:16> 'typename _Niter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x981a000 <col:11, col:16> 'typename _Niter_base<const char *>::iterator_type (const char *)' lvalue Function 0x9814f40 '__niter_base' 'typename _Niter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x981a058 <col:29> 'const char *':'const char *' <LValueToRValue>
            (DeclRefExpr 0x9819fb4 <col:29> 'const char *':'const char *' lvalue ParmVar 0x9819b60 '__last' 'const char *':'const char *')))
        (CallExpr 0x981a120 <line:422:11, col:37> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x981a110 <col:11, col:16> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x981a0e8 <col:11, col:16> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x981a140 <col:29> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x981a09c <col:29> 'char *':'char *' lvalue ParmVar 0x9819ba0 '__result' 'char *':'char *')))))))

template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x92b4b68 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x92b4b58 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x92b4b38 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x92b4b10 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x92b4910 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x92b0250)
        (CallExpr 0x92b49e0 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x92b4990 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92b49c4 <col:64> '_II' lvalue ParmVar 0x92b4720 '__first' '_II'))
        (CallExpr 0x92b4a68 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x92b4a18 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92b4a4c <col:29> '_II' lvalue ParmVar 0x92b4760 '__last' '_II'))
        (CallExpr 0x92b4af0 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x92b4aa0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92b4ad4 <col:29> '_OI' lvalue ParmVar 0x92b47a0 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II = const char *, typename _OI = __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > >> inline __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > copy(const char *__first, const char *__last, __gnu_cxx::__normal_iterator<char *, std::vector<char, std::allocator<char> > > __result) (CompoundStmt 0x9814608 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x92b4de8 <line:450:54>)
  (ReturnStmt 0x98145f8 <line:452:7, line:454:18>
    (CXXConstructExpr 0x98145d0 <line:452:14, line:454:18> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x98145c0 <line:452:14, line:454:18> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x98145b0 <line:452:14, line:454:18> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (ParenExpr 0x9814538 <line:452:14, line:454:18> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'
            (CallExpr 0x98144a8 <line:452:15, line:454:17> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'
              (ImplicitCastExpr 0x9814498 <line:452:15, col:67> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (*)(const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9814428 <col:15, col:67> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' lvalue Function 0x9814350 '__copy_move_a2' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' (FunctionTemplate 0x92b4890 '__copy_move_a2')))
              (CallExpr 0x97f75c8 <line:453:9, col:34> 'typename _Miter_base<const char *>::iterator_type':'const char *'
                (ImplicitCastExpr 0x97f75b8 <col:9, col:14> 'typename _Miter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x97f7558 <col:9, col:14> 'typename _Miter_base<const char *>::iterator_type (const char *)' lvalue Function 0x97f74b0 '__miter_base' 'typename _Miter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
                (ImplicitCastExpr 0x97f75e8 <col:27> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x97f6c4c <col:27> 'const char *':'const char *' lvalue ParmVar 0x9838490 '__first' 'const char *':'const char *')))
              (CallExpr 0x97f76b0 <col:37, col:61> 'typename _Miter_base<const char *>::iterator_type':'const char *'
                (ImplicitCastExpr 0x97f76a0 <col:37, col:42> 'typename _Miter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x97f7678 <col:37, col:42> 'typename _Miter_base<const char *>::iterator_type (const char *)' lvalue Function 0x97f74b0 '__miter_base' 'typename _Miter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
                (ImplicitCastExpr 0x97f76d0 <col:55> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x97f762c <col:55> 'const char *':'const char *' lvalue ParmVar 0x98384d0 '__last' 'const char *':'const char *')))
              (CXXConstructExpr 0x9814510 <line:454:9> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
                (ImplicitCastExpr 0x9814500 <col:9> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                  (DeclRefExpr 0x97f76dc <col:9> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x9838510 '__result' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'))))))))))

template <typename _II = const char *, typename _OI = char *> inline char *copy(const char *__first, const char *__last, char *__result) (CompoundStmt 0x9819de8 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x92b4de8 <line:450:54>)
  (ReturnStmt 0x9819dd8 <line:452:7, line:454:18>
    (ParenExpr 0x9819dc0 <line:452:14, line:454:18> 'char *':'char *'
      (CallExpr 0x9819d88 <line:452:15, line:454:17> 'char *':'char *'
        (ImplicitCastExpr 0x9819d78 <line:452:15, col:67> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9819d08 <col:15, col:67> 'char *(const char *, const char *, char *)' lvalue Function 0x9819c30 '__copy_move_a2' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92b4890 '__copy_move_a2')))
        (CallExpr 0x9818fe8 <line:453:9, col:34> 'typename _Miter_base<const char *>::iterator_type':'const char *'
          (ImplicitCastExpr 0x9818fd8 <col:9, col:14> 'typename _Miter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9818fb0 <col:9, col:14> 'typename _Miter_base<const char *>::iterator_type (const char *)' lvalue Function 0x97f74b0 '__miter_base' 'typename _Miter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
          (ImplicitCastExpr 0x9819008 <col:27> 'const char *':'const char *' <LValueToRValue>
            (DeclRefExpr 0x9818f64 <col:27> 'const char *':'const char *' lvalue ParmVar 0x9818b80 '__first' 'const char *':'const char *')))
        (CallExpr 0x98190d0 <col:37, col:61> 'typename _Miter_base<const char *>::iterator_type':'const char *'
          (ImplicitCastExpr 0x98190c0 <col:37, col:42> 'typename _Miter_base<const char *>::iterator_type (*)(const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9819098 <col:37, col:42> 'typename _Miter_base<const char *>::iterator_type (const char *)' lvalue Function 0x97f74b0 '__miter_base' 'typename _Miter_base<const char *>::iterator_type (const char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
          (ImplicitCastExpr 0x98190f0 <col:55> 'const char *':'const char *' <LValueToRValue>
            (DeclRefExpr 0x981904c <col:55> 'const char *':'const char *' lvalue ParmVar 0x9818bc0 '__last' 'const char *':'const char *')))
        (ImplicitCastExpr 0x9819db0 <line:454:9> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x98190fc <col:9> 'char *':'char *' lvalue ParmVar 0x9818c00 '__result' 'char *':'char *'))))))

template <typename _II = char *, typename _OI = char *> inline char *copy(char *__first, char *__last, char *__result) (CompoundStmt 0x97f1888 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x92b4de8 <line:450:54>)
  (ReturnStmt 0x97f1878 <line:452:7, line:454:18>
    (ParenExpr 0x97f1860 <line:452:14, line:454:18> 'char *':'char *'
      (CallExpr 0x97f1828 <line:452:15, line:454:17> 'char *':'char *'
        (ImplicitCastExpr 0x97f1818 <line:452:15, col:67> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x97f17a8 <col:15, col:67> 'char *(char *, char *, char *)' lvalue Function 0x97f16d0 '__copy_move_a2' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b4890 '__copy_move_a2')))
        (CallExpr 0x97f0a28 <line:453:9, col:34> 'typename _Miter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f0a18 <col:9, col:14> 'typename _Miter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f09b8 <col:9, col:14> 'typename _Miter_base<char *>::iterator_type (char *)' lvalue Function 0x97f0910 '__miter_base' 'typename _Miter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
          (ImplicitCastExpr 0x97f0a48 <col:27> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x983f5fc <col:27> 'char *':'char *' lvalue ParmVar 0x983efc0 '__first' 'char *':'char *')))
        (CallExpr 0x97f0b10 <col:37, col:61> 'typename _Miter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f0b00 <col:37, col:42> 'typename _Miter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f0ad8 <col:37, col:42> 'typename _Miter_base<char *>::iterator_type (char *)' lvalue Function 0x97f0910 '__miter_base' 'typename _Miter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
          (ImplicitCastExpr 0x97f0b30 <col:55> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f0a8c <col:55> 'char *':'char *' lvalue ParmVar 0x983f000 '__last' 'char *':'char *')))
        (ImplicitCastExpr 0x97f1850 <line:454:9> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x97f0b3c <col:9> 'char *':'char *' lvalue ParmVar 0x983f040 '__result' 'char *':'char *'))))))

template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x92b5620 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x92b4de8 <line:450:54>)
  (ReturnStmt 0x92b5610 <line:452:7, line:454:18>
    (ParenExpr 0x92b50e0 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x92b50b8 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x92b4f18 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x92b3470 0x92b3cc0 0x92b45e0 0x92b4890)
        (CallExpr 0x92b4ff8 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x92b4fa8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ac710)
          (DeclRefExpr 0x92b4fdc <col:27> '_II' lvalue ParmVar 0x92b4c40 '__first' '_II'))
        (CallExpr 0x92b5080 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x92b5030 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ac710)
          (DeclRefExpr 0x92b5064 <col:55> '_II' lvalue ParmVar 0x92b4c80 '__last' '_II'))
        (DeclRefExpr 0x92b50a0 <line:454:9> '_OI' lvalue ParmVar 0x92b4cc0 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x92b7810 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x92b6408 <line:529:4, col:55>
    0x92b63d0 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x92b77c0 <line:530:4, line:531:23>
    (BinaryOperator 0x92b65e0 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x92b6418 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x92b63d0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x92b6498 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x92b6460 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92b6430 <col:15> '_BI1' lvalue ParmVar 0x92b6160 '__last' '_BI1')
        (DeclRefExpr 0x92b6448 <col:24> '_BI1' lvalue ParmVar 0x92b6120 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b76c0 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x92b7680 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92b7650 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x92b63d0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x92b7668 <col:39> 'int' 0))
    (UnaryOperator 0x92b7700 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x92b76e4 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x92b63d0 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x92b77a8 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x92b7748 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x92b7730 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x92b7714 <col:9> '_BI2' lvalue ParmVar 0x92b61a0 '__result' '_BI2')))
      (UnaryOperator 0x92b7790 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x92b7778 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x92b775c <col:23> '_BI1' lvalue ParmVar 0x92b6160 '__last' '_BI1')))))
  (ReturnStmt 0x92b7800 <line:532:4, col:11>
    (DeclRefExpr 0x92b77e4 <col:11> '_BI2' lvalue ParmVar 0x92b61a0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool = false, bool = true, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp = char> static char *__copy_move_b(const char *__first, const char *__last, char *__result) (CompoundStmt 0x97f6890 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x97f6598 <line:559:4, col:43>
    0x97f64c0 "const ptrdiff_t _Num =
      (BinaryOperator 0x97f6580 <col:27, col:36> 'int' '-'
        (ImplicitCastExpr 0x97f6560 <col:27> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97f6530 <col:27> 'const char *' lvalue ParmVar 0x97f6210 '__last' 'const char *'))
        (ImplicitCastExpr 0x97f6570 <col:36> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97f6548 <col:36> 'const char *' lvalue ParmVar 0x97f61c0 '__first' 'const char *')))")
  (IfStmt 0x97f67c0 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x97f65d0 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x97f65c0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x97f65a8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x97f64c0 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x97f6738 <line:561:6, col:68> 'void *'
      (ImplicitCastExpr 0x97f6728 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92b800c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x97f6760 <col:24, col:35> 'void *' <BitCast>
        (BinaryOperator 0x97f6668 <col:24, col:35> 'char *' '-'
          (ImplicitCastExpr 0x97f6648 <col:24> 'char *' <LValueToRValue>
            (DeclRefExpr 0x97f6618 <col:24> 'char *' lvalue ParmVar 0x97f6260 '__result' 'char *'))
          (ImplicitCastExpr 0x97f6658 <col:35> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x97f6630 <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x97f64c0 '_Num' 'const ptrdiff_t':'const int'))))
      (ImplicitCastExpr 0x97f6780 <col:41> 'const void *' <BitCast>
        (ImplicitCastExpr 0x97f6770 <col:41> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97f6680 <col:41> 'const char *' lvalue ParmVar 0x97f61c0 '__first' 'const char *')))
      (BinaryOperator 0x97f6710 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x97f66c0 <col:50, col:60> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x97f6700 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x97f66f0 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x97f66d8 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x97f64c0 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x97f6880 <line:562:4, col:22>
    (BinaryOperator 0x97f6868 <col:11, col:22> 'char *' '-'
      (ImplicitCastExpr 0x97f6848 <col:11> 'char *' <LValueToRValue>
        (DeclRefExpr 0x97f6818 <col:11> 'char *' lvalue ParmVar 0x97f6260 '__result' 'char *'))
      (ImplicitCastExpr 0x97f6858 <col:22> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x97f6830 <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x97f64c0 '_Num' 'const ptrdiff_t':'const int')))))

template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result);
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x92b5db0 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x92b5d70 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b5ca0 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92b5c60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92b5c30 <col:11> '_BI1' lvalue ParmVar 0x92b5a70 '__first' '_BI1')
      (DeclRefExpr 0x92b5c48 <col:22> '_BI1' lvalue ParmVar 0x92b5ab0 '__last' '_BI1'))
    (BinaryOperator 0x92b5d58 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x92b5cf8 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x92b5ce0 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x92b5cc4 <col:9> '_BI2' lvalue ParmVar 0x92b5af0 '__result' '_BI2')))
      (UnaryOperator 0x92b5d40 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x92b5d28 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x92b5d0c <col:23> '_BI1' lvalue ParmVar 0x92b5ab0 '__last' '_BI1')))))
  (ReturnStmt 0x92b5da0 <line:503:4, col:11>
    (DeclRefExpr 0x92b5d84 <col:11> '_BI2' lvalue ParmVar 0x92b5af0 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x92b7810 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x92b6408 <line:529:4, col:55>
    0x92b63d0 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x92b77c0 <line:530:4, line:531:23>
    (BinaryOperator 0x92b65e0 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x92b6418 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x92b63d0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x92b6498 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x92b6460 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92b6430 <col:15> '_BI1' lvalue ParmVar 0x92b6160 '__last' '_BI1')
        (DeclRefExpr 0x92b6448 <col:24> '_BI1' lvalue ParmVar 0x92b6120 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b76c0 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x92b7680 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92b7650 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x92b63d0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x92b7668 <col:39> 'int' 0))
    (UnaryOperator 0x92b7700 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x92b76e4 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x92b63d0 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x92b77a8 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x92b7748 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x92b7730 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x92b7714 <col:9> '_BI2' lvalue ParmVar 0x92b61a0 '__result' '_BI2')))
      (UnaryOperator 0x92b7790 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x92b7778 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x92b775c <col:23> '_BI1' lvalue ParmVar 0x92b6160 '__last' '_BI1')))))
  (ReturnStmt 0x92b7800 <line:532:4, col:11>
    (DeclRefExpr 0x92b77e4 <col:11> '_BI2' lvalue ParmVar 0x92b61a0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x92b8228 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x92b7fc8 <line:559:4, col:43>
    0x92b7f00 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x92b7fa0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92b7f68 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92b7f34 <col:27> 'const _Tp *' lvalue ParmVar 0x92b7d40 '__last' 'const _Tp *')
        (DeclRefExpr 0x92b7f4c <col:36> 'const _Tp *' lvalue ParmVar 0x92b7cf0 '__first' 'const _Tp *'))")
  (IfStmt 0x92b8168 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x92b8000 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x92b7ff0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x92b7fd8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x92b7f00 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x92b8140 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x92b800c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x92b8090 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x92b8058 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92b8024 <col:24> '_Tp *' lvalue ParmVar 0x92b7db0 '__result' '_Tp *')
        (DeclRefExpr 0x92b803c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x92b7f00 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x92b80b4 <col:41> 'const _Tp *' lvalue ParmVar 0x92b7cf0 '__first' 'const _Tp *')
      (BinaryOperator 0x92b8128 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x92b80d8 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x92b8118 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x92b8108 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x92b80f0 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x92b7f00 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x92b8218 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x92b81f0 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92b81b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
      (DeclRefExpr 0x92b8184 <col:11> '_Tp *' lvalue ParmVar 0x92b7db0 '__result' '_Tp *')
      (DeclRefExpr 0x92b819c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x92b7f00 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove = false, typename _BI1 = char *, typename _BI2 = char *> inline char *__copy_move_backward_a(char *__first, char *__last, char *__result) (CompoundStmt 0x97f6470 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x97f5590 <line:570:7, col:69>
    0x97f5560 "typedef typename iterator_traits<char *>::value_type _ValueType1")
  (DeclStmt 0x97f5680 <line:571:7, col:69>
    0x97f5650 "typedef typename iterator_traits<char *>::value_type _ValueType2")
  (DeclStmt 0x97f5770 <line:572:7, col:74>
    0x97f5740 "typedef typename iterator_traits<char *>::iterator_category _Category")
  (DeclStmt 0x97f5a90 <line:573:7, line:576:58>
    0x97f5780 "const bool __simple =
      (ParenExpr 0x97f5a78 <line:573:29, line:576:57> '_Bool'
        (BinaryOperator 0x97f5a60 <line:573:30, line:576:50> '_Bool' '&&'
          (BinaryOperator 0x97f5958 <line:573:30, line:575:46> '_Bool' '&&'
            (BinaryOperator 0x97f5898 <line:573:30, line:574:46> '_Bool' '&&'
              (UnaryTypeTraitExpr 0x97f57d8 <line:573:30, col:54> '_Bool')
              (ImplicitCastExpr 0x97f5888 <line:574:26, col:46> '_Bool' <IntegralToBoolean>
                (DeclRefExpr 0x97f5864 <col:26, col:46> 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0x97f3070 '__value' 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
            (ImplicitCastExpr 0x97f5948 <line:575:26, col:46> '_Bool' <IntegralToBoolean>
              (DeclRefExpr 0x97f5924 <col:26, col:46> 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0x97f3070 '__value' 'enum std::__is_pointer<char *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
          (ImplicitCastExpr 0x97f5a50 <line:576:12, col:50> '_Bool' <IntegralToBoolean>
            (DeclRefExpr 0x97f5a2c <col:12, col:50> 'enum std::__are_same<char, char>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>' EnumConstant 0x97f3500 '__value' 'enum std::__are_same<char, char>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>'))))")
  (ReturnStmt 0x97f6460 <line:578:7, line:581:18>
    (CallExpr 0x97f63e8 <line:578:14, line:581:18> 'char *'
      (ImplicitCastExpr 0x97f63d8 <line:578:14, line:579:45> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x97f6394 <line:578:14, line:579:45> 'char *(const char *, const char *, char *)' lvalue CXXMethod 0x97f62f0 '__copy_move_b' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x97f6040 '__copy_move_b')))
      (ImplicitCastExpr 0x97f6420 <col:59> 'const char *' <NoOp>
        (ImplicitCastExpr 0x97f6410 <col:59> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x97f60d4 <col:59> 'char *':'char *' lvalue ParmVar 0x97f51e0 '__first' 'char *':'char *')))
      (ImplicitCastExpr 0x97f6440 <line:580:10> 'const char *' <NoOp>
        (ImplicitCastExpr 0x97f6430 <col:10> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x97f60ec <col:10> 'char *':'char *' lvalue ParmVar 0x97f5220 '__last' 'char *':'char *')))
      (ImplicitCastExpr 0x97f6450 <line:581:10> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x97f6104 <col:10> 'char *':'char *' lvalue ParmVar 0x97f5260 '__result' 'char *':'char *')))))

template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x92b8ef8 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x92b8610 <line:570:7, col:69>
    0x92b85e0 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x92b8740 <line:571:7, col:69>
    0x92b8710 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x92b8870 <line:572:7, col:74>
    0x92b8840 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x92b8c50 <line:573:7, line:576:58>
    0x92b8890 "const bool __simple =
      (ParenExpr 0x92b8c38 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x92b8c20 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x92b8ac8 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x92b89d8 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x92b88e8 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x92b89b0 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x92b8aa0 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x92b8bf8 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x92b8ee8 <line:578:7, line:581:18>
    (CallExpr 0x92b8ec0 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92b8e50 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x92b8e74 <col:59> '_BI1' lvalue ParmVar 0x92b8350 '__first' '_BI1')
      (DeclRefExpr 0x92b8e8c <line:580:10> '_BI1' lvalue ParmVar 0x92b8390 '__last' '_BI1')
      (DeclRefExpr 0x92b8ea4 <line:581:10> '_BI2' lvalue ParmVar 0x92b83d0 '__result' '_BI2'))))

;
    template <bool _IsMove = false, typename _BI1 = char *, typename _BI2 = char *> inline char *__copy_move_backward_a2(char *__first, char *__last, char *__result) (CompoundStmt 0x97f5498 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x97f5488 <line:588:7, line:590:34>
    (CXXFunctionalCastExpr 0x97f5470 <line:588:14, line:590:34> 'char *':'char *' functional cast to char * <NoOp>
      (CallExpr 0x97f5448 <line:588:19, line:590:33> 'char *':'char *'
        (ImplicitCastExpr 0x97f5438 <line:588:19, col:54> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x97f53c8 <col:19, col:54> 'char *(char *, char *, char *)' lvalue Function 0x97f52f0 '__copy_move_backward_a' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b84c0 '__copy_move_backward_a')))
        (CallExpr 0x97f4e20 <line:589:6, col:31> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f4e10 <col:6, col:11> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f4de8 <col:6, col:11> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x97f4e40 <col:24> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f4d9c <col:24> 'char *':'char *' lvalue ParmVar 0x97f49f0 '__first' 'char *':'char *')))
        (CallExpr 0x97f4f08 <col:34, col:58> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f4ef8 <col:34, col:39> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f4ed0 <col:34, col:39> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x97f4f28 <col:52> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f4e84 <col:52> 'char *':'char *' lvalue ParmVar 0x97f4a30 '__last' 'char *':'char *')))
        (CallExpr 0x97f4ff0 <line:590:6, col:32> 'typename _Niter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f4fe0 <col:6, col:11> 'typename _Niter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f4fb8 <col:6, col:11> 'typename _Niter_base<char *>::iterator_type (char *)' lvalue Function 0x97f21c0 '__niter_base' 'typename _Niter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
          (ImplicitCastExpr 0x97f5010 <col:24> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f4f6c <col:24> 'char *':'char *' lvalue ParmVar 0x97f4a70 '__result' 'char *':'char *')))))))

template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x92b9478 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x92b9468 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x92b9448 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x92b9420 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x92b9220 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x92b84c0)
        (CallExpr 0x92b92f0 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x92b92a0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92b92d4 <col:24> '_BI1' lvalue ParmVar 0x92b9030 '__first' '_BI1'))
        (CallExpr 0x92b9378 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x92b9328 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92b935c <col:52> '_BI1' lvalue ParmVar 0x92b9070 '__last' '_BI1'))
        (CallExpr 0x92b9400 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x92b93b0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92b93e4 <col:24> '_BI2' lvalue ParmVar 0x92b90b0 '__result' '_BI2'))))))

;
    template <typename _BI1 = char *, typename _BI2 = char *> inline char *copy_backward(char *__first, char *__last, char *__result) (CompoundStmt 0x97f4cb8 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x92b9d98 <line:621:54>)
  (ReturnStmt 0x97f4ca8 <line:623:7, line:625:18>
    (ParenExpr 0x97f4c90 <line:623:14, line:625:18> 'char *':'char *'
      (CallExpr 0x97f4c58 <line:623:15, line:625:17> 'char *':'char *'
        (ImplicitCastExpr 0x97f4c48 <line:623:15, col:77> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x97f4bd8 <col:15, col:77> 'char *(char *, char *, char *)' lvalue Function 0x97f4b00 '__copy_move_backward_a2' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b91a0 '__copy_move_backward_a2')))
        (CallExpr 0x97f46f8 <line:624:9, col:34> 'typename _Miter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f46e8 <col:9, col:14> 'typename _Miter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f46c0 <col:9, col:14> 'typename _Miter_base<char *>::iterator_type (char *)' lvalue Function 0x97f0910 '__miter_base' 'typename _Miter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
          (ImplicitCastExpr 0x97f4718 <col:27> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f4674 <col:27> 'char *':'char *' lvalue ParmVar 0x98380c0 '__first' 'char *':'char *')))
        (CallExpr 0x97f47e0 <col:37, col:61> 'typename _Miter_base<char *>::iterator_type':'char *'
          (ImplicitCastExpr 0x97f47d0 <col:37, col:42> 'typename _Miter_base<char *>::iterator_type (*)(char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x97f47a8 <col:37, col:42> 'typename _Miter_base<char *>::iterator_type (char *)' lvalue Function 0x97f0910 '__miter_base' 'typename _Miter_base<char *>::iterator_type (char *)' (FunctionTemplate 0x92ac710 '__miter_base')))
          (ImplicitCastExpr 0x97f4800 <col:55> 'char *':'char *' <LValueToRValue>
            (DeclRefExpr 0x97f475c <col:55> 'char *':'char *' lvalue ParmVar 0x9838100 '__last' 'char *':'char *')))
        (ImplicitCastExpr 0x97f4c80 <line:625:9> 'char *':'char *' <LValueToRValue>
          (DeclRefExpr 0x97f480c <col:9> 'char *':'char *' lvalue ParmVar 0x9838140 '__result' 'char *':'char *'))))))

template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x92ba098 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x92b9d98 <line:621:54>)
  (ReturnStmt 0x92ba088 <line:623:7, line:625:18>
    (ParenExpr 0x92ba070 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x92ba048 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x92b9eb8 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x92b91a0)
        (CallExpr 0x92b9f88 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x92b9f38 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ac710)
          (DeclRefExpr 0x92b9f6c <col:27> '_BI1' lvalue ParmVar 0x92b9550 '__first' '_BI1'))
        (CallExpr 0x92ba010 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x92b9fc0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ac710)
          (DeclRefExpr 0x92b9ff4 <col:55> '_BI1' lvalue ParmVar 0x92b9590 '__last' '_BI1'))
        (DeclRefExpr 0x92ba030 <line:625:9> '_BI2' lvalue ParmVar 0x92b95d0 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x92ba7a8 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x92ba780 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ba6c8 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x92ba688 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92ba654 <col:14> '_ForwardIterator' lvalue ParmVar 0x92ba440 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92ba66c <col:25> '_ForwardIterator' lvalue ParmVar 0x92ba480 '__last' '_ForwardIterator'))
    (UnaryOperator 0x92ba708 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92ba6ec <col:35> '_ForwardIterator' lvalue ParmVar 0x92ba440 '__first' '_ForwardIterator'))
    (BinaryOperator 0x92ba768 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x92ba738 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92ba71c <col:3> '_ForwardIterator' lvalue ParmVar 0x92ba440 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x92ba74c <col:13> 'const _Tp' lvalue ParmVar 0x92ba4f0 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0x9806538 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9806360 <line:685:7, col:32>
    0x9806300 "const int __tmp =
      (ImplicitCastExpr 0x9806350 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9806334 <col:25> 'const int':'const int' lvalue ParmVar 0x9805f40 '__value' 'const int &'))")
  (ForStmt 0x9806510 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9806400 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0x98063e0 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x98063ac <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9805e90 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0x98063f0 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x98063c4 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9805ed0 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0x9806430 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0x9806418 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9805e90 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0x98064c0 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0x9806470 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9806460 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0x9806444 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9805e90 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0x98064b0 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0x98064a0 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9806484 <col:13> 'const int':'const int' lvalue Var 0x9806300 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x92baed0 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x92bad70 <line:685:7, col:32>
    0x92bad20 "const _Tp __tmp =
      (DeclRefExpr 0x92bad54 <col:25> 'const _Tp' lvalue ParmVar 0x92babb0 '__value' 'const _Tp &')")
  (ForStmt 0x92baea8 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92badf0 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x92badb0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92bad80 <col:14> '_ForwardIterator' lvalue ParmVar 0x92bab00 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92bad98 <col:25> '_ForwardIterator' lvalue ParmVar 0x92bab40 '__last' '_ForwardIterator'))
    (UnaryOperator 0x92bae30 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92bae14 <col:35> '_ForwardIterator' lvalue ParmVar 0x92bab00 '__first' '_ForwardIterator'))
    (BinaryOperator 0x92bae90 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x92bae60 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92bae44 <col:3> '_ForwardIterator' lvalue ParmVar 0x92bab00 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x92bae74 <col:13> 'const _Tp' lvalue Var 0x92bad20 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x92bb750 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x92bb480 <line:696:7, col:28>
    0x92bb430 "const _Tp __tmp =
      (DeclRefExpr 0x92bb464 <col:25> 'const _Tp' lvalue ParmVar 0x92bb2c0 '__c' 'const _Tp &')")
  (CallExpr 0x92bb728 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x92bb624 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x92bb4c0 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x92bb63c <col:24> '_Tp *' lvalue ParmVar 0x92bb200 '__first' '_Tp *')
    (CXXStaticCastExpr 0x92bb680 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x92bb654 <col:60> 'const _Tp' lvalue Var 0x92bb430 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x92bb700 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x92bb6c8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
      (DeclRefExpr 0x92bb698 <col:10> '_Tp *' lvalue ParmVar 0x92bb250 '__last' '_Tp *')
      (DeclRefExpr 0x92bb6b0 <col:19> '_Tp *' lvalue ParmVar 0x92bb200 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0x9806150 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x92bba38 <line:720:54>)
  (CallExpr 0x9806128 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0x9806118 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x98060d4 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0x9805fd0 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x92bace0 '__fill_a')))
    (CallExpr 0x98365e8 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x98365d8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9836578 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x98364d0 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
      (ImplicitCastExpr 0x9836608 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x98359fc <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9325360 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0x98366d0 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x98366c0 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9836698 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x98364d0 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x92ab9c0 '__niter_base')))
      (ImplicitCastExpr 0x98366f0 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x983664c <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x93253a0 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0x98366fc <line:723:7> 'const int':'const int' lvalue ParmVar 0x9325450 '__value' 'const int &')))

template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x92bbbf8 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x92bba38 <line:720:54>)
  (CallExpr 0x92bbbd0 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x92bba68 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ba620 0x92bace0 0x92bb3f0)
    (CallExpr 0x92bbb10 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x92bbac0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
      (DeclRefExpr 0x92bbaf4 <col:39> '_ForwardIterator' lvalue ParmVar 0x92bb830 '__first' '_ForwardIterator'))
    (CallExpr 0x92bbb98 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x92bbb48 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
      (DeclRefExpr 0x92bbb7c <col:67> '_ForwardIterator' lvalue ParmVar 0x92bb870 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x92bbbb8 <line:723:7> 'const _Tp' lvalue ParmVar 0x92bb8e0 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x92bd1e0 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x92bd190 <line:731:7, line:733:13>
    (DeclStmt 0x92bd010 <line:731:12, col:45>
      0x92bcfc0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x92bcff4 <col:42> '_Size' lvalue ParmVar 0x92bcd00 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92bd090 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x92bd050 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92bd020 <col:5> 'decltype(__n + 0)' lvalue Var 0x92bcfc0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x92bd038 <col:15> 'int' 0))
    (BinaryOperator 0x92bd118 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x92bd0d0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x92bd0b4 <col:20> 'decltype(__n + 0)' lvalue Var 0x92bcfc0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x92bd100 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92bd0e4 <col:31> '_OutputIterator' lvalue ParmVar 0x92bccc0 '__first' '_OutputIterator')))
    (BinaryOperator 0x92bd178 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x92bd148 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92bd130 <col:3> '_OutputIterator' lvalue ParmVar 0x92bccc0 '__first' '_OutputIterator'))
      (DeclRefExpr 0x92bd15c <col:13> 'const _Tp' lvalue ParmVar 0x92bcd90 '__value' 'const _Tp &')))
  (ReturnStmt 0x92bd1d0 <line:734:7, col:14>
    (DeclRefExpr 0x92bd1b4 <col:14> '_OutputIterator' lvalue ParmVar 0x92bccc0 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x92bdae0 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x92bd800 <line:742:7, col:32>
    0x92bd7b0 "const _Tp __tmp =
      (DeclRefExpr 0x92bd7e4 <col:25> 'const _Tp' lvalue ParmVar 0x92bd640 '__value' 'const _Tp &')")
  (ForStmt 0x92bda90 <line:743:7, line:745:13>
    (DeclStmt 0x92bd910 <line:743:12, col:45>
      0x92bd8c0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x92bd8f4 <col:42> '_Size' lvalue ParmVar 0x92bd5d0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92bd990 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x92bd950 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92bd920 <col:5> 'decltype(__n + 0)' lvalue Var 0x92bd8c0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x92bd938 <col:15> 'int' 0))
    (BinaryOperator 0x92bda18 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x92bd9d0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x92bd9b4 <col:20> 'decltype(__n + 0)' lvalue Var 0x92bd8c0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x92bda00 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92bd9e4 <col:31> '_OutputIterator' lvalue ParmVar 0x92bd590 '__first' '_OutputIterator')))
    (BinaryOperator 0x92bda78 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x92bda48 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92bda30 <col:3> '_OutputIterator' lvalue ParmVar 0x92bd590 '__first' '_OutputIterator'))
      (DeclRefExpr 0x92bda5c <col:13> 'const _Tp' lvalue Var 0x92bd7b0 '__tmp' 'const _Tp')))
  (ReturnStmt 0x92bdad0 <line:746:7, col:14>
    (DeclRefExpr 0x92bdab4 <col:14> '_OutputIterator' lvalue ParmVar 0x92bd590 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x92be2a0 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x92be1d8 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x92be0d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ba620 0x92bace0 0x92bb3f0)
    (DeclRefExpr 0x92be114 <col:21> '_Tp *' lvalue ParmVar 0x92bdea0 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x92be198 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x92be160 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (DeclRefExpr 0x92be12c <col:30> '_Tp *' lvalue ParmVar 0x92bdea0 '__first' '_Tp *')
      (DeclRefExpr 0x92be144 <col:40> '_Size' lvalue ParmVar 0x92bdee0 '__n' '_Size'))
    (DeclRefExpr 0x92be1bc <col:45> 'const _Tp' lvalue ParmVar 0x92bdf50 '__c' 'const _Tp &'))
  (ReturnStmt 0x92be290 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x92be268 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x92be230 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (DeclRefExpr 0x92be200 <col:14> '_Tp *' lvalue ParmVar 0x92bdea0 '__first' '_Tp *')
      (DeclRefExpr 0x92be218 <col:24> '_Size' lvalue ParmVar 0x92bdee0 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x92be748 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x92be738 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x92be718 <col:14, col:75> '_OI'
      (CallExpr 0x92be6f0 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x92be5f8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bcec0 0x92bd770 0x92be080)
        (CallExpr 0x92be6a0 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x92be650 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
          (DeclRefExpr 0x92be684 <col:52> '_OI' lvalue ParmVar 0x92be3d0 '__first' '_OI'))
        (DeclRefExpr 0x92be6c0 <col:62> '_Size' lvalue ParmVar 0x92be410 '__n' '_Size')
        (DeclRefExpr 0x92be6d8 <col:67> 'const _Tp' lvalue ParmVar 0x92be480 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x92c0080 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x92c0070 <line:804:4, line:805:30>
    (UnaryOperator 0x92c0058 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x92c0030 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x92bff04 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x92bff1c <col:29> 'const _Tp *' lvalue ParmVar 0x92bfb60 '__first1' 'const _Tp *')
        (DeclRefExpr 0x92bff34 <col:39> 'const _Tp *' lvalue ParmVar 0x92bfc00 '__first2' 'const _Tp *')
        (BinaryOperator 0x92c0018 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x92bff58 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x92c0000 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x92bffd8 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x92bffa0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
              (DeclRefExpr 0x92bff70 <col:11> 'const _Tp *' lvalue ParmVar 0x92bfbb0 '__last1' 'const _Tp *')
              (DeclRefExpr 0x92bff88 <col:21> 'const _Tp *' lvalue ParmVar 0x92bfb60 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x92bf8b0 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x92bf868 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92bf690 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x92bf650 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92bf620 <col:11> '_II1' lvalue ParmVar 0x92bf430 '__first1' '_II1')
      (DeclRefExpr 0x92bf638 <col:23> '_II1' lvalue ParmVar 0x92bf470 '__last1' '_II1'))
    (BinaryOperator 0x92bf718 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x92bf6d0 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92bf6b4 <col:34> '_II1' lvalue ParmVar 0x92bf430 '__first1' '_II1'))
      (UnaryOperator 0x92bf700 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92bf6e4 <col:46> '_II2' lvalue ParmVar 0x92bf4b0 '__first2' '_II2')))
    (IfStmt 0x92bf848 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x92bf810 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x92bf7f8 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x92bf7d0 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x92bf790 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490)
            (UnaryOperator 0x92bf748 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92bf730 <col:13> '_II1' lvalue ParmVar 0x92bf430 '__first1' '_II1'))
            (UnaryOperator 0x92bf778 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92bf75c <col:26> '_II2' lvalue ParmVar 0x92bf4b0 '__first2' '_II2')))))
      (ReturnStmt 0x92bf838 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x92bf828 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x92bf8a0 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x92bf890 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x92c0080 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x92c0070 <line:804:4, line:805:30>
    (UnaryOperator 0x92c0058 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x92c0030 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x92bff04 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x92bff1c <col:29> 'const _Tp *' lvalue ParmVar 0x92bfb60 '__first1' 'const _Tp *')
        (DeclRefExpr 0x92bff34 <col:39> 'const _Tp *' lvalue ParmVar 0x92bfc00 '__first2' 'const _Tp *')
        (BinaryOperator 0x92c0018 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x92bff58 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x92c0000 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x92bffd8 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x92bffa0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
              (DeclRefExpr 0x92bff70 <col:11> 'const _Tp *' lvalue ParmVar 0x92bfbb0 '__last1' 'const _Tp *')
              (DeclRefExpr 0x92bff88 <col:21> 'const _Tp *' lvalue ParmVar 0x92bfb60 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x92c0c18 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x92c0450 <line:813:7, col:69>
    0x92c0420 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x92c0580 <line:814:7, col:69>
    0x92c0550 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x92c0a50 <line:815:7, line:818:58>
    0x92c05a0 "const bool __simple =
      (ParenExpr 0x92c0a38 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x92c0a20 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x92c08c8 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x92c07d8 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x92c06e0 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x92c07b0 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x92c08a0 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x92c09f8 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x92c0c08 <line:820:7, col:71>
    (CallExpr 0x92c0be0 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92c0b70 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x92c0b94 <col:44> '_II1' lvalue ParmVar 0x92c0160 '__first1' '_II1')
      (DeclRefExpr 0x92c0bac <col:54> '_II1' lvalue ParmVar 0x92c01a0 '__last1' '_II1')
      (DeclRefExpr 0x92c0bc4 <col:63> '_II2' lvalue ParmVar 0x92c01e0 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x92c34b8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x92c3158 <line:846:4, line:847:34>
    0x92c3090 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x92c3130 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92c30f8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c30c4 <col:16> '_RAI1' lvalue ParmVar 0x92c2be0 '__last1' '_RAI1')
        (DeclRefExpr 0x92c30dc <col:26> '_RAI1' lvalue ParmVar 0x92c2ba0 '__first1' '_RAI1'))")
  (DeclStmt 0x92c3338 <line:848:4, line:849:34>
    0x92c3270 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x92c3310 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92c32d8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c32a4 <col:16> '_RAI2' lvalue ParmVar 0x92c2c60 '__last2' '_RAI2')
        (DeclRefExpr 0x92c32bc <col:26> '_RAI2' lvalue ParmVar 0x92c2c20 '__first2' '_RAI2'))")
  (ReturnStmt 0x92c34a8 <line:850:4, col:52>
    (ConditionalOperator 0x92c3488 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x92c33b8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x92c3378 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
        (DeclRefExpr 0x92c3348 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x92c3270 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x92c3360 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x92c3090 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x92c3448 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x92c3410 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
        (DeclRefExpr 0x92c33dc <col:31> '_RAI1' lvalue ParmVar 0x92c2ba0 '__first1' '_RAI1')
        (DeclRefExpr 0x92c33f4 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x92c3270 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x92c346c <col:52> '_RAI1' lvalue ParmVar 0x92c2be0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x92c34f8 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x92c34e8 <col:11, col:18>
    (CXXBoolLiteralExpr 0x92c34d8 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x92c27c8 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x92c27b8 <col:11, col:18>
    (DeclRefExpr 0x92c27a0 <col:18> '_II1' lvalue ParmVar 0x92c1020 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x92c2888 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x92c2878 <col:11, col:29>
    (CXXOperatorCallExpr 0x92c2850 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x92c2810 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92c27dc <col:18> '_II' lvalue ParmVar 0x92c1260 '__first' '_II')
      (DeclRefExpr 0x92c27f4 <col:29> '_II' lvalue ParmVar 0x92c2660 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x92c34b8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x92c3158 <line:846:4, line:847:34>
    0x92c3090 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x92c3130 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92c30f8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c30c4 <col:16> '_RAI1' lvalue ParmVar 0x92c2be0 '__last1' '_RAI1')
        (DeclRefExpr 0x92c30dc <col:26> '_RAI1' lvalue ParmVar 0x92c2ba0 '__first1' '_RAI1'))")
  (DeclStmt 0x92c3338 <line:848:4, line:849:34>
    0x92c3270 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x92c3310 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92c32d8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c32a4 <col:16> '_RAI2' lvalue ParmVar 0x92c2c60 '__last2' '_RAI2')
        (DeclRefExpr 0x92c32bc <col:26> '_RAI2' lvalue ParmVar 0x92c2c20 '__first2' '_RAI2'))")
  (ReturnStmt 0x92c34a8 <line:850:4, col:52>
    (ConditionalOperator 0x92c3488 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x92c33b8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x92c3378 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
        (DeclRefExpr 0x92c3348 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x92c3270 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x92c3360 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x92c3090 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x92c3448 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x92c3410 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
        (DeclRefExpr 0x92c33dc <col:31> '_RAI1' lvalue ParmVar 0x92c2ba0 '__first1' '_RAI1')
        (DeclRefExpr 0x92c33f4 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x92c3270 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x92c346c <col:52> '_RAI1' lvalue ParmVar 0x92c2be0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x92c34f8 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x92c34e8 <col:11, col:18>
    (CXXBoolLiteralExpr 0x92c34d8 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x92c6b90 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x92c6518 <line:897:4, col:44>
    0x92c6450 "const size_t __len1 =
      (CXXOperatorCallExpr 0x92c64f0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92c64b8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c6484 <col:26> 'const _Tp *' lvalue ParmVar 0x92c6210 '__last1' 'const _Tp *')
        (DeclRefExpr 0x92c649c <col:36> 'const _Tp *' lvalue ParmVar 0x92c61c0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x92c65f8 <line:898:4, col:44>
    0x92c6530 "const size_t __len2 =
      (CXXOperatorCallExpr 0x92c65d0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92c6598 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c6564 <col:26> 'const _Up *' lvalue ParmVar 0x92c62d0 '__last2' 'const _Up *')
        (DeclRefExpr 0x92c657c <col:36> 'const _Up *' lvalue ParmVar 0x92c6280 '__first2' 'const _Up *'))")
  (DeclStmt 0x92c6a38 <line:899:4, line:900:32>
    0x92c6620 "const int __result =
      (CallExpr 0x92c6a10 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x92c6654 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x92c666c <col:42> 'const _Tp *' lvalue ParmVar 0x92c61c0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x92c6684 <col:52> 'const _Up *' lvalue ParmVar 0x92c6280 '__first2' 'const _Up *')
        (CallExpr 0x92c69e8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x92c69d8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x92c6978 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x92c68d0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x92aa0a0 'min')))
          (DeclRefExpr 0x92c66f0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x92c6450 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x92c6708 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x92c6530 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x92c6b80 <line:901:4, col:51>
    (ConditionalOperator 0x92c6b60 <col:11, col:51> '_Bool'
      (BinaryOperator 0x92c6a88 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x92c6a78 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x92c6a48 <col:11> 'const int' lvalue Var 0x92c6620 '__result' 'const int'))
        (IntegerLiteral 0x92c6a60 <col:23> 'int' 0))
      (BinaryOperator 0x92c6ae0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x92c6ad0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x92c6aa0 <col:27> 'const int' lvalue Var 0x92c6620 '__result' 'const int'))
        (IntegerLiteral 0x92c6ab8 <col:38> 'int' 0))
      (BinaryOperator 0x92c6b48 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x92c6b28 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92c6af8 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x92c6450 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x92c6b38 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92c6b10 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x92c6530 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x92c5eb0 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x92c4070 <line:872:2, col:70>
    0x92c4040 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x92c4200 <line:873:2, col:70>
    0x92c41d0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x92c4420 <line:874:2, col:59>
    0x92c43f0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x92c4540 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x92c4430 <line:876:2> '_II1' lvalue ParmVar 0x92c3d20 '__last1' '_II1')
    (CallExpr 0x92c4510 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92c4488 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x92c44ac <col:35> '_II1' lvalue ParmVar 0x92c3ce0 '__first1' '_II1')
      (DeclRefExpr 0x92c44c4 <col:45> '_II1' lvalue ParmVar 0x92c3d20 '__last1' '_II1')
      (DeclRefExpr 0x92c44dc <line:877:7> '_II2' lvalue ParmVar 0x92c3d60 '__first2' '_II2')
      (DeclRefExpr 0x92c44f4 <col:17> '_II2' lvalue ParmVar 0x92c3da0 '__last2' '_II2')))
  (ForStmt 0x92c5d30 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x92c5a78 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92c45c8 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x92c4588 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
        (DeclRefExpr 0x92c4558 <col:9> '_II1' lvalue ParmVar 0x92c3ce0 '__first1' '_II1')
        (DeclRefExpr 0x92c4570 <col:21> '_II1' lvalue ParmVar 0x92c3d20 '__last1' '_II1'))
      (CallExpr 0x92c5a50 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x92c4610 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x92c4634 <col:51> '_II2' lvalue ParmVar 0x92c3d60 '__first2' '_II2')
        (DeclRefExpr 0x92c5a38 <col:61> '_II2' lvalue ParmVar 0x92c3da0 '__last2' '_II2')))
    (BinaryOperator 0x92c5af0 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x92c5aa8 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92c5a90 <col:9> '_II1' lvalue ParmVar 0x92c3ce0 '__first1' '_II1'))
      (UnaryOperator 0x92c5ad8 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92c5abc <col:21> '_II2' lvalue ParmVar 0x92c3d60 '__first2' '_II2')))
    (CompoundStmt 0x92c5d18 <line:880:4, line:885:4>
      (IfStmt 0x92c5bf0 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92c5ba8 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x92c5b68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
          (UnaryOperator 0x92c5b20 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92c5b08 <col:11> '_II1' lvalue ParmVar 0x92c3ce0 '__first1' '_II1'))
          (UnaryOperator 0x92c5b50 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92c5b34 <col:23> '_II2' lvalue ParmVar 0x92c3d60 '__first2' '_II2')))
        (ReturnStmt 0x92c5be0 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x92c5bd0 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x92c5cf8 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92c5cb0 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x92c5c70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
          (UnaryOperator 0x92c5c28 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92c5c0c <col:11> '_II2' lvalue ParmVar 0x92c3d60 '__first2' '_II2'))
          (UnaryOperator 0x92c5c58 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92c5c3c <col:23> '_II1' lvalue ParmVar 0x92c3ce0 '__first1' '_II1')))
        (ReturnStmt 0x92c5ce8 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x92c5cd8 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x92c5ea0 <line:886:2, col:44>
    (BinaryOperator 0x92c5e88 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92c5dc8 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x92c5d88 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490)
        (DeclRefExpr 0x92c5d54 <col:9> '_II1' lvalue ParmVar 0x92c3ce0 '__first1' '_II1')
        (DeclRefExpr 0x92c5d6c <col:21> '_II1' lvalue ParmVar 0x92c3d20 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x92c5e60 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x92c5e20 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
        (DeclRefExpr 0x92c5dec <col:32> '_II2' lvalue ParmVar 0x92c3d60 '__first2' '_II2')
        (DeclRefExpr 0x92c5e04 <col:44> '_II2' lvalue ParmVar 0x92c3da0 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x92c6b90 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x92c6518 <line:897:4, col:44>
    0x92c6450 "const size_t __len1 =
      (CXXOperatorCallExpr 0x92c64f0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92c64b8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c6484 <col:26> 'const _Tp *' lvalue ParmVar 0x92c6210 '__last1' 'const _Tp *')
        (DeclRefExpr 0x92c649c <col:36> 'const _Tp *' lvalue ParmVar 0x92c61c0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x92c65f8 <line:898:4, col:44>
    0x92c6530 "const size_t __len2 =
      (CXXOperatorCallExpr 0x92c65d0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92c6598 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x92c6564 <col:26> 'const _Up *' lvalue ParmVar 0x92c62d0 '__last2' 'const _Up *')
        (DeclRefExpr 0x92c657c <col:36> 'const _Up *' lvalue ParmVar 0x92c6280 '__first2' 'const _Up *'))")
  (DeclStmt 0x92c6a38 <line:899:4, line:900:32>
    0x92c6620 "const int __result =
      (CallExpr 0x92c6a10 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x92c6654 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x92c666c <col:42> 'const _Tp *' lvalue ParmVar 0x92c61c0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x92c6684 <col:52> 'const _Up *' lvalue ParmVar 0x92c6280 '__first2' 'const _Up *')
        (CallExpr 0x92c69e8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x92c69d8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x92c6978 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x92c68d0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x92aa0a0 'min')))
          (DeclRefExpr 0x92c66f0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x92c6450 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x92c6708 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x92c6530 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x92c6b80 <line:901:4, col:51>
    (ConditionalOperator 0x92c6b60 <col:11, col:51> '_Bool'
      (BinaryOperator 0x92c6a88 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x92c6a78 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x92c6a48 <col:11> 'const int' lvalue Var 0x92c6620 '__result' 'const int'))
        (IntegerLiteral 0x92c6a60 <col:23> 'int' 0))
      (BinaryOperator 0x92c6ae0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x92c6ad0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x92c6aa0 <col:27> 'const int' lvalue Var 0x92c6620 '__result' 'const int'))
        (IntegerLiteral 0x92c6ab8 <col:38> 'int' 0))
      (BinaryOperator 0x92c6b48 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x92c6b28 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92c6af8 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x92c6450 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x92c6b38 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92c6b10 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x92c6530 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x92c79f8 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x92c6fa0 <line:910:7, col:69>
    0x92c6f70 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x92c70d0 <line:911:7, col:69>
    0x92c70a0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x92c7818 <line:912:7, line:917:34>
    0x92c70f0 "const bool __simple =
      (ParenExpr 0x92c7800 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x92c77e8 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x92c76f8 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x92c7610 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x92c74d0 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x92c7378 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x92c7230 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x92c7350 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x92c74b8 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x92c7490 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x92c75f8 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x92c75d0 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x92c76d0 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x92c77c0 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x92c79e8 <line:919:7, line:920:29>
    (CallExpr 0x92c79b8 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92c7930 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x92c7954 <col:61> '_II1' lvalue ParmVar 0x92c6c70 '__first1' '_II1')
      (DeclRefExpr 0x92c796c <col:71> '_II1' lvalue ParmVar 0x92c6cb0 '__last1' '_II1')
      (DeclRefExpr 0x92c7984 <line:920:12> '_II2' lvalue ParmVar 0x92c6cf0 '__first2' '_II2')
      (DeclRefExpr 0x92c799c <col:22> '_II2' lvalue ParmVar 0x92c6d30 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x92c9030 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x92c8830 <line:939:7, line:940:12>
    0x92c8800 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x92c8960 <line:941:7, line:942:15>
    0x92c8930 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x92c8970 <line:947:67>)
  (DeclStmt 0x92c8a80 <line:949:7, col:59>
    0x92c89a0 "_DistanceType __len =
      (CallExpr 0x92c8a58 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x92c89f0 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
        (DeclRefExpr 0x92c8a24 <col:43> '_ForwardIterator' lvalue ParmVar 0x92c8510 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92c8a3c <col:52> '_ForwardIterator' lvalue ParmVar 0x92c8550 '__last' '_ForwardIterator'))")
  (WhileStmt 0x92c8ff0 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c8b00 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92c8ac0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x92c8a90 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c89a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x92c8aa8 <col:22> 'int' 0))
    (CompoundStmt 0x92c8fd0 <line:952:2, line:964:2>
      (DeclStmt 0x92c8bb0 <line:953:4, col:37>
        0x92c8b30 "_DistanceType __half =
          (BinaryOperator 0x92c8b98 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x92c8b64 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c89a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x92c8b80 <col:36> 'int' 1))")
      (DeclStmt 0x92c8c20 <line:954:4, col:39>
        0x92c8bd0 "_ForwardIterator __middle =
          (DeclRefExpr 0x92c8c04 <col:32> '_ForwardIterator' lvalue ParmVar 0x92c8510 '__first' '_ForwardIterator')")
      (CallExpr 0x92c8cc0 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x92c8c58 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9285340)
        (DeclRefExpr 0x92c8c8c <col:17> '_ForwardIterator' lvalue Var 0x92c8bd0 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x92c8ca4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c8b30 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x92c8fb0 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92c8d70 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x92c8d30 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
          (UnaryOperator 0x92c8d00 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92c8ce4 <col:9> '_ForwardIterator' lvalue Var 0x92c8bd0 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x92c8d14 <col:20> 'const _Tp' lvalue ParmVar 0x92c85c0 '__val' 'const _Tp &'))
        (CompoundStmt 0x92c8f48 <line:957:6, line:961:6>
          (BinaryOperator 0x92c8dc8 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x92c8d94 <col:8> '_ForwardIterator' lvalue ParmVar 0x92c8510 '__first' '_ForwardIterator')
            (DeclRefExpr 0x92c8dac <col:18> '_ForwardIterator' lvalue Var 0x92c8bd0 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x92c8df8 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92c8de0 <col:10> '_ForwardIterator' lvalue ParmVar 0x92c8510 '__first' '_ForwardIterator'))
          (BinaryOperator 0x92c8f30 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x92c8e0c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c89a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x92c8f08 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x92c8ed0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
              (CXXOperatorCallExpr 0x92c8e90 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x92c8e58 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
                (DeclRefExpr 0x92c8e24 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c89a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x92c8e3c <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c8b30 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x92c8eb8 <col:33> 'int' 1))))
        (BinaryOperator 0x92c8f98 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x92c8f64 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c89a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x92c8f7c <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x92c8b30 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x92c9020 <line:965:7, col:14>
    (DeclRefExpr 0x92c9004 <col:14> '_ForwardIterator' lvalue ParmVar 0x92c8510 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x92c9450 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x92c9218 <line:974:7, col:16>
    0x92c91e0 "_Size __k")
  (ForStmt 0x92c9388 <line:975:7, line:976:4>
    (BinaryOperator 0x92c9258 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x92c9228 <col:12> '_Size' lvalue Var 0x92c91e0 '__k' '_Size')
      (IntegerLiteral 0x92c9240 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c92e0 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x92c92a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92c9270 <col:21> '_Size' lvalue ParmVar 0x92c90c0 '__n' '_Size')
      (IntegerLiteral 0x92c9288 <col:28> 'int' 0))
    (CompoundAssignOperator 0x92c9338 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x92c9304 <col:31> '_Size' lvalue ParmVar 0x92c90c0 '__n' '_Size')
      (IntegerLiteral 0x92c9320 <col:39> 'int' 1))
    (UnaryOperator 0x92c9370 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92c9358 <col:4> '_Size' lvalue Var 0x92c91e0 '__k' '_Size')))
  (ReturnStmt 0x92c9440 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x92c9418 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x92c93e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
      (DeclRefExpr 0x92c93ac <col:14> '_Size' lvalue Var 0x92c91e0 '__k' '_Size')
      (IntegerLiteral 0x92c93c8 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x92c97c0 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x92c97b0 <col:5, col:63>
    (ImplicitCastExpr 0x92c97a0 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x92c9788 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x92c95d8 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x92c9598 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x92c9558 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x92c9588 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x92c9570 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x92c95c8 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x92c95b0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x92c9778 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x92c9738 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x92c9728 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x92c96e0 <col:46> 'int (unsigned int)' lvalue Function 0x92c95f0 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x92c9768 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x92c9758 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x92c96f8 <col:60> 'int' lvalue ParmVar 0x92c9480 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x92c9b50 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x92c9b40 <col:5, col:64>
    (ImplicitCastExpr 0x92c9b30 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x92c9b18 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x92c9948 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x92c9908 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x92c98c8 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x92c98f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x92c98e0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x92c9938 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x92c9920 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x92c9b08 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x92c9ac8 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x92c9ab8 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x92c9a70 <col:46> 'int (unsigned long)' lvalue Function 0x92c9980 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x92c9af8 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x92c9ae8 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x92c9a88 <col:61> 'long' lvalue ParmVar 0x92c97f0 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x92c9ee0 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x92c9ed0 <col:5, col:70>
    (ImplicitCastExpr 0x92c9ec0 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x92c9ea8 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x92c9cd8 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x92c9c98 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x92c9c58 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x92c9c88 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x92c9c70 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x92c9cc8 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x92c9cb0 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x92c9e98 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x92c9e58 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x92c9e48 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x92c9e00 <col:51> 'int (unsigned long long)' lvalue Function 0x92c9d10 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x92c9e88 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x92c9e78 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x92c9e18 <col:67> 'long long' lvalue ParmVar 0x92c9b80 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x92ca398 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x92ca168 <line:1018:56>)
  (ReturnStmt 0x92ca388 <line:1020:7, line:1022:37>
    (CallExpr 0x92ca360 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x92ca190 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x92c0300)
      (CallExpr 0x92ca230 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x92ca1e0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92ca214 <col:49> '_II1' lvalue ParmVar 0x92c9fc0 '__first1' '_II1'))
      (CallExpr 0x92ca2b8 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x92ca268 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92ca29c <col:28> '_II1' lvalue ParmVar 0x92ca000 '__last1' '_II1'))
      (CallExpr 0x92ca340 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92ca2f0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92ca324 <col:28> '_II2' lvalue ParmVar 0x92ca040 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x92cb7a0 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x92cb518 <line:1048:56>)
  (ForStmt 0x92cb758 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92cb598 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x92cb558 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92cb524 <col:14> '_IIter1' lvalue ParmVar 0x92cb300 '__first1' '_IIter1')
      (DeclRefExpr 0x92cb53c <col:26> '_IIter1' lvalue ParmVar 0x92cb340 '__last1' '_IIter1'))
    (BinaryOperator 0x92cb620 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x92cb5d8 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92cb5bc <col:37> '_IIter1' lvalue ParmVar 0x92cb300 '__first1' '_IIter1'))
      (UnaryOperator 0x92cb608 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92cb5ec <col:49> '_IIter2' lvalue ParmVar 0x92cb380 '__first2' '_IIter2')))
    (IfStmt 0x92cb738 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x92cb700 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x92cb6e0 <col:7, col:47> '_Bool'
          (CallExpr 0x92cb6b8 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x92cb640 <col:12> '_BinaryPredicate' lvalue ParmVar 0x92cb3c0 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x92cb670 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92cb658 <col:27> '_IIter1' lvalue ParmVar 0x92cb300 '__first1' '_IIter1'))
            (UnaryOperator 0x92cb6a0 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92cb684 <col:38> '_IIter2' lvalue ParmVar 0x92cb380 '__first2' '_IIter2')))))
      (ReturnStmt 0x92cb728 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x92cb718 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x92cb790 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x92cb780 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x92cbf90 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x92cbb80 <line:1077:7, col:69>
    0x92cbb50 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x92cbcb0 <line:1078:7, col:69>
    0x92cbc80 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x92cbcc0 <line:1083:56>)
  (NullStmt 0x92cbcd0 <line:1084:56>)
  (ReturnStmt 0x92cbf80 <line:1086:7, line:1089:33>
    (CallExpr 0x92cbf50 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x92cbcf8 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x92c6e50)
      (CallExpr 0x92cbd98 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x92cbd48 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92cbd7c <col:67> '_II1' lvalue ParmVar 0x92cb880 '__first1' '_II1'))
      (CallExpr 0x92cbe20 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x92cbdd0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92cbe04 <col:25> '_II1' lvalue ParmVar 0x92cb8c0 '__last1' '_II1'))
      (CallExpr 0x92cbea8 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x92cbe58 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92cbe8c <col:25> '_II2' lvalue ParmVar 0x92cb900 '__first2' '_II2'))
      (CallExpr 0x92cbf30 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x92cbee0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ab9c0)
        (DeclRefExpr 0x92cbf14 <col:25> '_II2' lvalue ParmVar 0x92cb940 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x92cce18 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x92cc460 <line:1110:7, col:75>
    0x92cc430 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x92cc590 <line:1111:7, col:75>
    0x92cc560 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x92cc7a0 <line:1112:7, col:64>
    0x92cc770 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x92cc7b0 <line:1117:56>)
  (NullStmt 0x92cc7c0 <line:1118:56>)
  (BinaryOperator 0x92cc8e0 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x92cc7cc <col:7> '_II1' lvalue ParmVar 0x92cc110 '__last1' '_II1')
    (CallExpr 0x92cc8b0 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92cc828 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x92cc84c <col:40> '_II1' lvalue ParmVar 0x92cc0d0 '__first1' '_II1')
      (DeclRefExpr 0x92cc864 <col:50> '_II1' lvalue ParmVar 0x92cc110 '__last1' '_II1')
      (DeclRefExpr 0x92cc87c <col:59> '_II2' lvalue ParmVar 0x92cc150 '__first2' '_II2')
      (DeclRefExpr 0x92cc894 <col:69> '_II2' lvalue ParmVar 0x92cc190 '__last2' '_II2')))
  (ForStmt 0x92ccc98 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x92cca30 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92cc968 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92cc928 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
        (DeclRefExpr 0x92cc8f8 <col:14> '_II1' lvalue ParmVar 0x92cc0d0 '__first1' '_II1')
        (DeclRefExpr 0x92cc910 <col:26> '_II1' lvalue ParmVar 0x92cc110 '__last1' '_II1'))
      (CallExpr 0x92cca08 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x92cc9b0 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x92cc9d4 <col:56> '_II2' lvalue ParmVar 0x92cc150 '__first2' '_II2')
        (DeclRefExpr 0x92cc9ec <col:66> '_II2' lvalue ParmVar 0x92cc190 '__last2' '_II2')))
    (BinaryOperator 0x92ccaa8 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x92cca60 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92cca48 <col:7> '_II1' lvalue ParmVar 0x92cc0d0 '__first1' '_II1'))
      (UnaryOperator 0x92cca90 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92cca74 <col:19> '_II2' lvalue ParmVar 0x92cc150 '__first2' '_II2')))
    (CompoundStmt 0x92ccc80 <line:1123:2, line:1128:2>
      (IfStmt 0x92ccb80 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x92ccb38 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x92ccac0 <col:8> '_Compare' lvalue ParmVar 0x92cc1d0 '__comp' '_Compare')
          (UnaryOperator 0x92ccaf0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ccad8 <col:16> '_II1' lvalue ParmVar 0x92cc0d0 '__first1' '_II1'))
          (UnaryOperator 0x92ccb20 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ccb04 <col:27> '_II2' lvalue ParmVar 0x92cc150 '__first2' '_II2')))
        (ReturnStmt 0x92ccb70 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x92ccb60 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x92ccc60 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x92ccc18 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x92ccb9c <col:8> '_Compare' lvalue ParmVar 0x92cc1d0 '__comp' '_Compare')
          (UnaryOperator 0x92ccbd0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ccbb4 <col:16> '_II2' lvalue ParmVar 0x92cc150 '__first2' '_II2'))
          (UnaryOperator 0x92ccc00 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ccbe4 <col:27> '_II1' lvalue ParmVar 0x92cc0d0 '__first1' '_II1')))
        (ReturnStmt 0x92ccc50 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x92ccc40 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x92cce08 <line:1129:7, col:49>
    (BinaryOperator 0x92ccdf0 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92ccd30 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92cccf0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490)
        (DeclRefExpr 0x92cccbc <col:14> '_II1' lvalue ParmVar 0x92cc0d0 '__first1' '_II1')
        (DeclRefExpr 0x92cccd4 <col:26> '_II1' lvalue ParmVar 0x92cc110 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x92ccdc8 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x92ccd88 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
        (DeclRefExpr 0x92ccd54 <col:37> '_II2' lvalue ParmVar 0x92cc150 '__first2' '_II2')
        (DeclRefExpr 0x92ccd6c <col:49> '_II2' lvalue ParmVar 0x92cc190 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x92cdee8 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x92cd1d8 <line:1156:56>)
  (WhileStmt 0x92cdd68 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x92cdcd8 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92cd258 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92cd218 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
        (DeclRefExpr 0x92cd1e4 <col:14> '_InputIterator1' lvalue ParmVar 0x92ccfe0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x92cd1fc <col:26> '_InputIterator1' lvalue ParmVar 0x92cd020 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x92cdcb0 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x92cdc70 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490)
        (UnaryOperator 0x92cdc28 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92cdc10 <col:38> '_InputIterator1' lvalue ParmVar 0x92ccfe0 '__first1' '_InputIterator1'))
        (UnaryOperator 0x92cdc58 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92cdc3c <col:51> '_InputIterator2' lvalue ParmVar 0x92cd060 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x92cdd50 <line:1159:9, line:1162:9>
      (UnaryOperator 0x92cdd08 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92cdcf0 <col:6> '_InputIterator1' lvalue ParmVar 0x92ccfe0 '__first1' '_InputIterator1'))
      (UnaryOperator 0x92cdd38 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92cdd1c <col:6> '_InputIterator2' lvalue ParmVar 0x92cd060 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x92cded8 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x92cdeb8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x92cde88 <col:53> '_InputIterator1' lvalue ParmVar 0x92ccfe0 '__first1' '_InputIterator1')
      (DeclRefExpr 0x92cdea0 <col:63> '_InputIterator2' lvalue ParmVar 0x92cd060 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x92ce6b8 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x92ce338 <line:1191:56>)
  (WhileStmt 0x92ce538 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x92ce4a8 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92ce3b8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x92ce378 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0)
        (DeclRefExpr 0x92ce344 <col:14> '_InputIterator1' lvalue ParmVar 0x92ce0f0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x92ce35c <col:26> '_InputIterator1' lvalue ParmVar 0x92ce130 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x92ce488 <col:37, col:77> '_Bool'
        (CallExpr 0x92ce460 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x92ce3e8 <col:42> '_BinaryPredicate' lvalue ParmVar 0x92ce1b0 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x92ce418 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ce400 <col:57> '_InputIterator1' lvalue ParmVar 0x92ce0f0 '__first1' '_InputIterator1'))
          (UnaryOperator 0x92ce448 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ce42c <col:68> '_InputIterator2' lvalue ParmVar 0x92ce170 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x92ce520 <line:1194:9, line:1197:9>
      (UnaryOperator 0x92ce4d8 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92ce4c0 <col:6> '_InputIterator1' lvalue ParmVar 0x92ce0f0 '__first1' '_InputIterator1'))
      (UnaryOperator 0x92ce508 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92ce4ec <col:6> '_InputIterator2' lvalue ParmVar 0x92ce170 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x92ce6a8 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x92ce688 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x92ce658 <col:53> '_InputIterator1' lvalue ParmVar 0x92ce0f0 '__first1' '_InputIterator1')
      (DeclRefExpr 0x92ce670 <col:63> '_InputIterator2' lvalue ParmVar 0x92ce170 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0x92cebe0 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0x92cf1c0 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0x92d84a0 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0x92d96e8 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0x92d96d8 <col:61, col:68>
    (ImplicitCastExpr 0x92d96c8 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0x92d96ac <col:68> 'void *' lvalue ParmVar 0x92d9560 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0x92d98c8 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0x92d98b8 <col:63, col:70>
    (ImplicitCastExpr 0x92d98a8 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0x92d988c <col:70> 'void *' lvalue ParmVar 0x92d9780 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0x92d9a90 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0x92d9c10 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x92dbce0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x92dbd10 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *) (CompoundStmt 0x981bde8 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x981bd00 <line:89:2, line:90:27>
    <<<NULL>>>
    (BinaryOperator 0x981bcb8 <line:89:6, col:27> '_Bool' '>'
      (ImplicitCastExpr 0x981bca8 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x981bc30 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x92e2850 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x981bc78 <col:12, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x981bc58 <col:12, col:18> '<bound member function type>' ->max_size 0x92e2b80
          (ImplicitCastExpr 0x981bc98 <col:12> 'const class __gnu_cxx::new_allocator<char> *' <NoOp>
            (CXXThisExpr 0x981bc48 <col:12> 'class __gnu_cxx::new_allocator<char> *' this)))))
    (CallExpr 0x981bce0 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x981bcd0 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x92dbfa0 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x922b150 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x981bdd8 <line:92:2, col:60>
    (CXXStaticCastExpr 0x981bdc0 <col:9, col:60> 'char *' static_cast<char *> <BitCast>
      (CallExpr 0x981bda0 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x981bd90 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92dc100 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x92d8960 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x981bd78 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x981bd68 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x981bd2c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x92e2850 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x981bd50 <col:48, col:58> 'unsigned int' sizeof 'char':'char'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x98076e0 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x98076a0 <col:9, col:30> 'void'
    (ImplicitCastExpr 0x9807690 <col:9, <invalid sloc>> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x980766c <col:9, <invalid sloc>> 'void (void *) throw()' lvalue Function 0x92d8bd0 'operator delete' 'void (void *) throw()'))
    (ImplicitCastExpr 0x98076d0 <col:27> 'void *' <BitCast>
      (ImplicitCastExpr 0x98076c0 <col:27> 'pointer':'char *' <LValueToRValue>
        (DeclRefExpr 0x9807654 <col:27> 'pointer':'char *' lvalue ParmVar 0x92e2a30 '__p' 'pointer':'char *')))))


        size_type max_size() const throw() (CompoundStmt 0x981b858 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x981b848 <col:9, col:39>
    (BinaryOperator 0x981b830 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x981b7f8 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x981b7e8 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x92dc2a0 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x92dc288 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x981b818 <col:29, col:39> 'unsigned int' sizeof 'char':'char'))))


        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x92dbce0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0x92dbcf0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x92dbd10 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = std::tr1::shared_ptr<io_data_t>> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::tr1::shared_ptr<io_data_t> *pointer;
        typedef const std::tr1::shared_ptr<io_data_t> *const_pointer;
        typedef std::tr1::shared_ptr<io_data_t> &reference;
        typedef const std::tr1::shared_ptr<io_data_t> &const_reference;
        typedef std::tr1::shared_ptr<io_data_t> value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<std::tr1::shared_ptr<io_data_t> > &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const std::tr1::shared_ptr<io_data_t> &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0x92dbce0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0x92dbcf0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0x92dbd00 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0x92dbd10 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0x92dbdb8 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0x92dbda8 <col:38, col:65>
    (CallExpr 0x92dbd88 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0x92dbd38 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
      (DeclRefExpr 0x92dbd6c <col:62> '_Tp' lvalue ParmVar 0x92db470 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0x92dbe68 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0x92dbe58 <col:44, col:71>
    (CallExpr 0x92dbe38 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0x92dbde8 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
      (DeclRefExpr 0x92dbe1c <col:68> 'const _Tp' lvalue ParmVar 0x92db5b0 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0x92dbcd0 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0x92dbcb8 <col:45> 'int' 0))
) (CompoundStmt 0x92dc1c0 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x92dc008 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92dbf58 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x92dbf20 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929f730 0x929fd30)
      (DeclRefExpr 0x92dbe7c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x92db6e0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x92dbf00 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92dbec8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x92dbeb8 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0x92dbfe8 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x92dbfd8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x92dbfa0 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x922b150 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x92dc1b0 <line:92:2, col:60>
    (CXXStaticCastExpr 0x92dc198 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0x92dc168 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x92dc158 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92dc100 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x92d8960 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x92dc0e8 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x92dc0d8 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x92dc09c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x92db6e0 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x92dc0c0 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x92dc268 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x92dc248 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x92dc1f0 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0x92d8bd0 0x92d92a0 0x92d99e0)
    (DeclRefExpr 0x92dc22c <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x92db840 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0x92dc328 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x92dc318 <col:9, col:39>
    (BinaryOperator 0x92dc300 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x92dc2c8 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x92dc2b8 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x92dc2a0 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x92dc288 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x92dc2e8 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0x92dc3e0 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0x92dc3a0 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0x92dc368 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0x92dc33c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x92dba50 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0x92dc380 <col:32> 'const _Tp' lvalue ParmVar 0x92dbaa0 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0x92dc468 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0x92dc448 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0x92dc418 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0x92dc3f4 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x92dbbb0 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x92dc810 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0x92dc800 <col:7, col:14>
    (CXXBoolLiteralExpr 0x92dc7f0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x92dcb80 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0x92dcb70 <col:7, col:14>
    (CXXBoolLiteralExpr 0x92dcb60 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = completion_t> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<char>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1 = char> allocator(const allocator<char> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9823420 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9823174 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x92e6f50 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x92dfe20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::tr1::shared_ptr<io_data_t>> class allocator : public __gnu_cxx::new_allocator<shared_ptr<io_data_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::tr1::shared_ptr<io_data_t> *pointer;
        typedef const std::tr1::shared_ptr<io_data_t> *const_pointer;
        typedef std::tr1::shared_ptr<io_data_t> &reference;
        typedef const std::tr1::shared_ptr<io_data_t> &const_reference;
        typedef std::tr1::shared_ptr<io_data_t> value_type;
        template <typename _Tp1 = std::tr1::shared_ptr<io_data_t>> struct rebind {
            struct rebind;
            typedef allocator<std::tr1::shared_ptr<io_data_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<std::tr1::shared_ptr<io_data_t> > &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = completion_t> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<char>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1 = char> allocator(const allocator<char> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9823420 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9823174 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x92e6f50 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x92dfe20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::tr1::shared_ptr<io_data_t>> class allocator : public __gnu_cxx::new_allocator<shared_ptr<io_data_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::tr1::shared_ptr<io_data_t> *pointer;
        typedef const std::tr1::shared_ptr<io_data_t> *const_pointer;
        typedef std::tr1::shared_ptr<io_data_t> &reference;
        typedef const std::tr1::shared_ptr<io_data_t> &const_reference;
        typedef std::tr1::shared_ptr<io_data_t> value_type;
        template <typename _Tp1 = std::tr1::shared_ptr<io_data_t>> struct rebind {
            struct rebind;
            typedef allocator<std::tr1::shared_ptr<io_data_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<std::tr1::shared_ptr<io_data_t> > &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Tp>() throw() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Tp>(const allocator<_Tp> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0x92dfdc8 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Tp>' lvalue ParmVar 0x92df8e0 '__a' 'const allocator<_Tp> &')
) (CompoundStmt 0x92dfe20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Tp>(const allocator<_Tp1> &) throw() (CompoundStmt 0x92dfe30 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Tp>() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x92e0290 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0x92e0280 <col:7, col:14>
    (CXXBoolLiteralExpr 0x92e0270 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x92e0620 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0x92e0610 <col:7, col:14>
    (CXXBoolLiteralExpr 0x92e0600 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x92e1060 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0x92e1050 <col:7, col:14>
    (CXXBoolLiteralExpr 0x92e1040 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x92e13d0 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0x92e13c0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x92e13b0 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<char>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1 = char> allocator(const allocator<char> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9823420 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9823174 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x92e6f50 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x92dfe20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x92e7570 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0x92e79c0 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0x92e8db8 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0x92e8d98 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92e7f58 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x92e7f10 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92e1380 0x92e1010 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92e7ee0 <col:6> '_Alloc' lvalue ParmVar 0x92e7d90 '__one' '_Alloc &')
      (DeclRefExpr 0x92e7ef8 <col:15> '_Alloc' lvalue ParmVar 0x92e7de0 '__two' '_Alloc &'))
    (CallExpr 0x92e8d70 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x92e8d08 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9272240 0x9272780)
      (DeclRefExpr 0x92e8d40 <col:9> '_Alloc' lvalue ParmVar 0x92e7d90 '__one' '_Alloc &')
      (DeclRefExpr 0x92e8d58 <col:16> '_Alloc' lvalue ParmVar 0x92e7de0 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x92e8e20 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0x92e92b0 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0x92e92a0 <col:9, col:16>
    (CXXBoolLiteralExpr 0x92e9290 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0x92e9890 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0x92e9880 <col:9, col:25>
    (CXXOperatorCallExpr 0x92e9858 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x92e9810 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92e1380 0x92e1010 0x9275010 0x928c320 0x928eeb0)
      (DeclRefExpr 0x92e97e0 <col:16> 'const _Alloc' lvalue ParmVar 0x92e9690 '__one' 'const _Alloc &')
      (DeclRefExpr 0x92e97f8 <col:25> 'const _Alloc' lvalue ParmVar 0x92e96e0 '__two' 'const _Alloc &'))))


    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0x92e9c80 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0x92e9c40 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0x92e9c08 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0x92e9be0 <col:32> '_T1 *' lvalue ParmVar 0x92e9a40 '__p' '_T1 *'))
    (DeclRefExpr 0x92e9c20 <col:42> 'const _T2' lvalue ParmVar 0x92e9ab0 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0x92e9eb0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0x92e9e90 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0x92e9e60 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0x92e9e3c <col:7> '_Tp *' lvalue ParmVar 0x92e9d30 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator = char *> static void __destroy(char *, char *) (CompoundStmt 0x92ea930 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x92ea930 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x92ea530 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0x92ea508 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ea388 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92ea340 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
      (DeclRefExpr 0x92ea310 <col:11> '_ForwardIterator' lvalue ParmVar 0x92ea190 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92ea328 <col:22> '_ForwardIterator' lvalue ParmVar 0x92ea1d0 '__last' '_ForwardIterator'))
    (UnaryOperator 0x92ea3c8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92ea3ac <col:32> '_ForwardIterator' lvalue ParmVar 0x92ea190 '__first' '_ForwardIterator'))
    (CallExpr 0x92ea4e8 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x92ea410 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10)
      (CallExpr 0x92ea4c8 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x92ea460 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
        (UnaryOperator 0x92ea4b0 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92ea494 <col:38> '_ForwardIterator' lvalue ParmVar 0x92ea190 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator = char *> static void __destroy(char *, char *) (CompoundStmt 0x92ea930 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x92ea930 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator = char *> inline void _Destroy(char *__first, char *__last) (CompoundStmt 0x9808b90 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0x9808800 <line:125:7, line:126:35>
    0x98087d0 "typedef typename iterator_traits<char *>::value_type _Value_type")
  (CallExpr 0x9808b48 <line:127:7, line:128:27> 'void'
    (ImplicitCastExpr 0x9808b38 <line:127:7, line:128:2> 'void (*)(char *, char *)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9808af0 <line:127:7, line:128:2> 'void (char *, char *)' lvalue CXXMethod 0x9808a50 '__destroy' 'void (char *, char *)' (FunctionTemplate 0x92ea8f0 '__destroy')))
    (ImplicitCastExpr 0x9808b70 <col:12> 'char *':'char *' <LValueToRValue>
      (DeclRefExpr 0x98088e4 <col:12> 'char *':'char *' lvalue ParmVar 0x98084f0 '__first' 'char *':'char *'))
    (ImplicitCastExpr 0x9808b80 <col:21> 'char *':'char *' <LValueToRValue>
      (DeclRefExpr 0x98088fc <col:21> 'char *':'char *' lvalue ParmVar 0x9808530 '__last' 'char *':'char *'))))

template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x92ed418 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0x92eac10 <line:125:7, line:126:35>
    0x92eabe0 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0x92ed3f0 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0x92ed398 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x92ed3bc <col:12> '_ForwardIterator' lvalue ParmVar 0x92ea9a0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92ed3d4 <col:21> '_ForwardIterator' lvalue ParmVar 0x92ea9e0 '__last' '_ForwardIterator')))

;
    template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = completion_t> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<char>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1 = char> allocator(const allocator<char> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9823420 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9823174 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x92e6f50 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x92dfe20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::tr1::shared_ptr<io_data_t>> class allocator : public __gnu_cxx::new_allocator<shared_ptr<io_data_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::tr1::shared_ptr<io_data_t> *pointer;
        typedef const std::tr1::shared_ptr<io_data_t> *const_pointer;
        typedef std::tr1::shared_ptr<io_data_t> &reference;
        typedef const std::tr1::shared_ptr<io_data_t> &const_reference;
        typedef std::tr1::shared_ptr<io_data_t> value_type;
        template <typename _Tp1 = std::tr1::shared_ptr<io_data_t>> struct rebind {
            struct rebind;
            typedef allocator<std::tr1::shared_ptr<io_data_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<std::tr1::shared_ptr<io_data_t> > &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    template <typename _ForwardIterator = char *, typename _Allocator = std::allocator<char>> void _Destroy(char *__first, char *__last, std::allocator<char> &__alloc)template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0x92ed9e0 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0x92ed9b8 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ed850 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x92ed808 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
      (DeclRefExpr 0x92ed7d4 <col:14> '_ForwardIterator' lvalue ParmVar 0x92ed5d0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92ed7ec <col:25> '_ForwardIterator' lvalue ParmVar 0x92ed610 '__last' '_ForwardIterator'))
    (UnaryOperator 0x92ed890 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92ed874 <col:35> '_ForwardIterator' lvalue ParmVar 0x92ed5d0 '__first' '_ForwardIterator'))
    (CallExpr 0x92ed998 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92ed8c0 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0x92ed8a4 <col:2> '_Allocator' lvalue ParmVar 0x92ed680 '__alloc' '_Allocator &'))
      (CallExpr 0x92ed978 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x92ed910 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
        (UnaryOperator 0x92ed960 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92ed944 <col:36> '_ForwardIterator' lvalue ParmVar 0x92ed5d0 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator = char *, typename _Tp = char> inline void _Destroy(char *__first, char *__last, allocator<char> &) (CompoundStmt 0x9808710 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0x98086c8 <line:153:7, col:31> 'void'
    (ImplicitCastExpr 0x98086b8 <col:7> 'void (*)(char *, char *)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9808658 <col:7> 'void (char *, char *)' lvalue Function 0x98085b0 '_Destroy' 'void (char *, char *)' (FunctionTemplate 0x92eaac0 '_Destroy')))
    (ImplicitCastExpr 0x98086f0 <col:16> 'char *':'char *' <LValueToRValue>
      (DeclRefExpr 0x9808448 <col:16> 'char *':'char *' lvalue ParmVar 0x9807ee0 '__first' 'char *':'char *'))
    (ImplicitCastExpr 0x9808700 <col:25> 'char *':'char *' <LValueToRValue>
      (DeclRefExpr 0x9808460 <col:25> 'char *':'char *' lvalue ParmVar 0x9807f20 '__last' 'char *':'char *'))))

template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0x92ede10 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0x92edde8 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0x92edd78 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x92edd40 0x92ed7a0 0x92eaac0 0x92e9e10)
    (DeclRefExpr 0x92eddb8 <col:16> '_ForwardIterator' lvalue ParmVar 0x92edac0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92eddd0 <col:25> '_ForwardIterator' lvalue ParmVar 0x92edb00 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator = const char *, typename _ForwardIterator = char *> static char *__uninit_copy(const char *__first, const char *__last, char *__result) (CompoundStmt 0x9818e10 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x9818e00 <col:11, col:53>
    (CallExpr 0x9818da8 <col:18, col:53> 'char *':'char *'
      (ImplicitCastExpr 0x9818d98 <col:18, col:23> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9818d58 <col:18, col:23> 'char *(const char *, const char *, char *)' lvalue Function 0x9818c90 'copy' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92b4db0 'copy')))
      (ImplicitCastExpr 0x9818dd0 <col:28> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x9818ad4 <col:28> 'const char *':'const char *' lvalue ParmVar 0x98187f0 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9818de0 <col:37> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x9818aec <col:37> 'const char *':'const char *' lvalue ParmVar 0x9818830 '__last' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9818df0 <col:45> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x9818b04 <col:45> 'char *':'char *' lvalue ParmVar 0x9818870 '__result' 'char *':'char *')))))

template <typename _InputIterator = char *, typename _ForwardIterator = char *> static char *__uninit_copy(char *__first, char *__last, char *__result) (CompoundStmt 0x983f250 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x983f240 <col:11, col:53>
    (CallExpr 0x983f1e8 <col:18, col:53> 'char *':'char *'
      (ImplicitCastExpr 0x983f1d8 <col:18, col:23> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x983f198 <col:18, col:23> 'char *(char *, char *, char *)' lvalue Function 0x983f0d0 'copy' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b4db0 'copy')))
      (ImplicitCastExpr 0x983f210 <col:28> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eed4 <col:28> 'char *':'char *' lvalue ParmVar 0x983ebf0 '__first' 'char *':'char *'))
      (ImplicitCastExpr 0x983f220 <col:37> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eeec <col:37> 'char *':'char *' lvalue ParmVar 0x983ec30 '__last' 'char *':'char *'))
      (ImplicitCastExpr 0x983f230 <col:45> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983ef04 <col:45> 'char *':'char *' lvalue ParmVar 0x983ec70 '__result' 'char *':'char *')))))

template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x92eede0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x92eedd0 <col:11, col:53>
    (CallExpr 0x92eeda8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x92eed28 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
      (DeclRefExpr 0x92eed5c <col:28> '_InputIterator' lvalue ParmVar 0x92eeb50 '__first' '_InputIterator')
      (DeclRefExpr 0x92eed74 <col:37> '_InputIterator' lvalue ParmVar 0x92eeb90 '__last' '_InputIterator')
      (DeclRefExpr 0x92eed8c <col:45> '_ForwardIterator' lvalue ParmVar 0x92eebd0 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x92ee868 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0x92ee430 <line:73:4, col:37>
    0x92ee3e0 "_ForwardIterator __cur =
      (DeclRefExpr 0x92ee414 <col:29> '_ForwardIterator' lvalue ParmVar 0x92ee290 '__result' '_ForwardIterator')")
  (IfStmt 0x92ee730 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92ee440 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92ee718 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0x92ee6c8 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92ee4c8 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x92ee480 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
          (DeclRefExpr 0x92ee450 <col:15> '_InputIterator' lvalue ParmVar 0x92ee210 '__first' '_InputIterator')
          (DeclRefExpr 0x92ee468 <col:26> '_InputIterator' lvalue ParmVar 0x92ee250 '__last' '_InputIterator'))
        (BinaryOperator 0x92ee550 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0x92ee508 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92ee4ec <col:36> '_InputIterator' lvalue ParmVar 0x92ee210 '__first' '_InputIterator'))
          (UnaryOperator 0x92ee538 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92ee51c <col:47> '_ForwardIterator' lvalue Var 0x92ee3e0 '__cur' '_ForwardIterator')))
        (CallExpr 0x92ee6a0 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x92ee598 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9bb0)
          (CallExpr 0x92ee650 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x92ee5e8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x92ee638 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92ee61c <col:37> '_ForwardIterator' lvalue Var 0x92ee3e0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x92ee688 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92ee670 <col:46> '_InputIterator' lvalue ParmVar 0x92ee210 '__first' '_InputIterator'))))
      (ReturnStmt 0x92ee708 <line:78:8, col:15>
        (DeclRefExpr 0x92ee6ec <col:15> '_ForwardIterator' lvalue Var 0x92ee3e0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x92ee848 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92ee750 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92ee830 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0x92ee7f8 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x92ee788 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92ee7c8 <col:22> '_ForwardIterator' lvalue ParmVar 0x92ee290 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92ee7e0 <col:32> '_ForwardIterator' lvalue Var 0x92ee3e0 '__cur' '_ForwardIterator'))
      (NullStmt 0x92ee820 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator = const char *, typename _ForwardIterator = char *> static char *__uninit_copy(const char *__first, const char *__last, char *__result) (CompoundStmt 0x9818e10 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x9818e00 <col:11, col:53>
    (CallExpr 0x9818da8 <col:18, col:53> 'char *':'char *'
      (ImplicitCastExpr 0x9818d98 <col:18, col:23> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9818d58 <col:18, col:23> 'char *(const char *, const char *, char *)' lvalue Function 0x9818c90 'copy' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92b4db0 'copy')))
      (ImplicitCastExpr 0x9818dd0 <col:28> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x9818ad4 <col:28> 'const char *':'const char *' lvalue ParmVar 0x98187f0 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9818de0 <col:37> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x9818aec <col:37> 'const char *':'const char *' lvalue ParmVar 0x9818830 '__last' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9818df0 <col:45> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x9818b04 <col:45> 'char *':'char *' lvalue ParmVar 0x9818870 '__result' 'char *':'char *')))))

template <typename _InputIterator = char *, typename _ForwardIterator = char *> static char *__uninit_copy(char *__first, char *__last, char *__result) (CompoundStmt 0x983f250 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x983f240 <col:11, col:53>
    (CallExpr 0x983f1e8 <col:18, col:53> 'char *':'char *'
      (ImplicitCastExpr 0x983f1d8 <col:18, col:23> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x983f198 <col:18, col:23> 'char *(char *, char *, char *)' lvalue Function 0x983f0d0 'copy' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b4db0 'copy')))
      (ImplicitCastExpr 0x983f210 <col:28> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eed4 <col:28> 'char *':'char *' lvalue ParmVar 0x983ebf0 '__first' 'char *':'char *'))
      (ImplicitCastExpr 0x983f220 <col:37> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eeec <col:37> 'char *':'char *' lvalue ParmVar 0x983ec30 '__last' 'char *':'char *'))
      (ImplicitCastExpr 0x983f230 <col:45> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983ef04 <col:45> 'char *':'char *' lvalue ParmVar 0x983ec70 '__result' 'char *':'char *')))))

template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x92eede0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x92eedd0 <col:11, col:53>
    (CallExpr 0x92eeda8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x92eed28 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
      (DeclRefExpr 0x92eed5c <col:28> '_InputIterator' lvalue ParmVar 0x92eeb50 '__first' '_InputIterator')
      (DeclRefExpr 0x92eed74 <col:37> '_InputIterator' lvalue ParmVar 0x92eeb90 '__last' '_InputIterator')
      (DeclRefExpr 0x92eed8c <col:45> '_ForwardIterator' lvalue ParmVar 0x92eebd0 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator = const char *, typename _ForwardIterator = char *> inline char *uninitialized_copy(const char *__first, const char *__last, char *__result) (CompoundStmt 0x9818a80 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x98184f0 <line:112:7, line:113:13>
    0x98184c0 "typedef typename iterator_traits<const char *>::value_type _ValueType1")
  (DeclStmt 0x98185e0 <line:114:7, line:115:13>
    0x98185b0 "typedef typename iterator_traits<char *>::value_type _ValueType2")
  (ReturnStmt 0x9818a70 <line:117:7, line:119:41>
    (CallExpr 0x9818a18 <line:117:14, line:119:41> 'char *':'char *'
      (ImplicitCastExpr 0x9818a08 <line:117:14, line:119:2> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x98189c4 <line:117:14, line:119:2> 'char *(const char *, const char *, char *)' lvalue CXXMethod 0x9818900 '__uninit_copy' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92eecc0 '__uninit_copy')))
      (ImplicitCastExpr 0x9818a40 <col:16> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x9818724 <col:16> 'const char *':'const char *' lvalue ParmVar 0x9818170 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9818a50 <col:25> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x981873c <col:25> 'const char *':'const char *' lvalue ParmVar 0x98181b0 '__last' 'const char *':'const char *'))
      (ImplicitCastExpr 0x9818a60 <col:33> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x9818754 <col:33> 'char *':'char *' lvalue ParmVar 0x98181f0 '__result' 'char *':'char *')))))

template <typename _InputIterator = char *, typename _ForwardIterator = char *> inline char *uninitialized_copy(char *__first, char *__last, char *__result) (CompoundStmt 0x983ee80 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x983e8b0 <line:112:7, line:113:13>
    0x983e880 "typedef typename iterator_traits<char *>::value_type _ValueType1")
  (DeclStmt 0x983e9a0 <line:114:7, line:115:13>
    0x983e970 "typedef typename iterator_traits<char *>::value_type _ValueType2")
  (ReturnStmt 0x983ee70 <line:117:7, line:119:41>
    (CallExpr 0x983ee18 <line:117:14, line:119:41> 'char *':'char *'
      (ImplicitCastExpr 0x983ee08 <line:117:14, line:119:2> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x983edc4 <line:117:14, line:119:2> 'char *(char *, char *, char *)' lvalue CXXMethod 0x983ed00 '__uninit_copy' 'char *(char *, char *, char *)' (FunctionTemplate 0x92eecc0 '__uninit_copy')))
      (ImplicitCastExpr 0x983ee40 <col:16> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eae4 <col:16> 'char *':'char *' lvalue ParmVar 0x983e530 '__first' 'char *':'char *'))
      (ImplicitCastExpr 0x983ee50 <col:25> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eafc <col:25> 'char *':'char *' lvalue ParmVar 0x983e570 '__last' 'char *':'char *'))
      (ImplicitCastExpr 0x983ee60 <col:33> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983eb14 <col:33> 'char *':'char *' lvalue ParmVar 0x983e5b0 '__result' 'char *':'char *')))))

template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x92f1648 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x92ef180 <line:112:7, line:113:13>
    0x92ef150 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0x92ef2b0 <line:114:7, line:115:13>
    0x92ef280 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0x92f1638 <line:117:7, line:119:41>
    (CallExpr 0x92f1610 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0x92f15a0 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0x92f15c4 <col:16> '_InputIterator' lvalue ParmVar 0x92eeec0 '__first' '_InputIterator')
      (DeclRefExpr 0x92f15dc <col:25> '_InputIterator' lvalue ParmVar 0x92eef00 '__last' '_InputIterator')
      (DeclRefExpr 0x92f15f4 <col:33> '_ForwardIterator' lvalue ParmVar 0x92eef40 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x92f2570 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x92f2548 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x92f24c8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00)
    (DeclRefExpr 0x92f24fc <col:21> '_ForwardIterator' lvalue ParmVar 0x92f22b0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f2514 <col:30> '_ForwardIterator' lvalue ParmVar 0x92f22f0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x92f252c <col:38> 'const _Tp' lvalue ParmVar 0x92f2360 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x92f1fd0 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0x92f1c30 <line:131:4, col:36>
    0x92f1be0 "_ForwardIterator __cur =
      (DeclRefExpr 0x92f1c14 <col:29> '_ForwardIterator' lvalue ParmVar 0x92f1990 '__first' '_ForwardIterator')")
  (IfStmt 0x92f1e98 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f1c40 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92f1e80 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0x92f1e58 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92f1cc8 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x92f1c80 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
          (DeclRefExpr 0x92f1c50 <col:15> '_ForwardIterator' lvalue Var 0x92f1be0 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x92f1c68 <col:24> '_ForwardIterator' lvalue ParmVar 0x92f19d0 '__last' '_ForwardIterator'))
        (UnaryOperator 0x92f1d08 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0x92f1cec <col:34> '_ForwardIterator' lvalue Var 0x92f1be0 '__cur' '_ForwardIterator'))
        (CallExpr 0x92f1e30 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x92f1d40 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9bb0)
          (CallExpr 0x92f1df8 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x92f1d90 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x92f1de0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92f1dc4 <col:37> '_ForwardIterator' lvalue Var 0x92f1be0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x92f1e18 <col:45> 'const _Tp' lvalue ParmVar 0x92f1a60 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x92f1fb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f1eb8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92f1f98 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0x92f1f60 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92f1ef0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92f1f30 <col:22> '_ForwardIterator' lvalue ParmVar 0x92f1990 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92f1f48 <col:31> '_ForwardIterator' lvalue Var 0x92f1be0 '__cur' '_ForwardIterator'))
      (NullStmt 0x92f1f88 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x92f2570 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x92f2548 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x92f24c8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00)
    (DeclRefExpr 0x92f24fc <col:21> '_ForwardIterator' lvalue ParmVar 0x92f22b0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f2514 <col:30> '_ForwardIterator' lvalue ParmVar 0x92f22f0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x92f252c <col:38> 'const _Tp' lvalue ParmVar 0x92f2360 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x92f2b20 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0x92f2940 <line:169:7, line:170:12>
    0x92f2910 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x92f2af8 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0x92f2a88 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x92f2aac <col:16> '_ForwardIterator' lvalue ParmVar 0x92f2650 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f2ac4 <col:25> '_ForwardIterator' lvalue ParmVar 0x92f2690 '__last' '_ForwardIterator')
    (DeclRefExpr 0x92f2adc <col:33> 'const _Tp' lvalue ParmVar 0x92f2700 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x92f53c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x92f5398 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x92f5318 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92be5a0)
    (DeclRefExpr 0x92f534c <col:23> '_ForwardIterator' lvalue ParmVar 0x92f50d0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f5364 <col:32> '_Size' lvalue ParmVar 0x92f5110 '__n' '_Size')
    (DeclRefExpr 0x92f537c <col:37> 'const _Tp' lvalue ParmVar 0x92f5180 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x92f4da0 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0x92f3170 <line:185:4, col:36>
    0x92f3120 "_ForwardIterator __cur =
      (DeclRefExpr 0x92f3154 <col:29> '_ForwardIterator' lvalue ParmVar 0x92f2ed0 '__first' '_ForwardIterator')")
  (IfStmt 0x92f3420 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f3180 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92f3408 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0x92f33e0 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92f3200 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x92f31c0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
          (DeclRefExpr 0x92f3190 <col:15> '_Size' lvalue ParmVar 0x92f2f10 '__n' '_Size')
          (IntegerLiteral 0x92f31a8 <col:21> 'int' 0))
        (BinaryOperator 0x92f3288 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0x92f3240 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0x92f3224 <col:26> '_Size' lvalue ParmVar 0x92f2f10 '__n' '_Size'))
          (UnaryOperator 0x92f3270 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92f3254 <col:33> '_ForwardIterator' lvalue Var 0x92f3120 '__cur' '_ForwardIterator')))
        (CallExpr 0x92f33b8 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x92f32c8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9bb0)
          (CallExpr 0x92f3380 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x92f3318 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x92f3368 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92f334c <col:37> '_ForwardIterator' lvalue Var 0x92f3120 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x92f33a0 <col:45> 'const _Tp' lvalue ParmVar 0x92f2fa0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x92f4d80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f3440 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92f4d68 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0x92f4d30 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92f4cc0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92f4d00 <col:22> '_ForwardIterator' lvalue ParmVar 0x92f2ed0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92f4d18 <col:31> '_ForwardIterator' lvalue Var 0x92f3120 '__cur' '_ForwardIterator'))
      (NullStmt 0x92f4d58 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x92f53c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x92f5398 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x92f5318 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92be5a0)
    (DeclRefExpr 0x92f534c <col:23> '_ForwardIterator' lvalue ParmVar 0x92f50d0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f5364 <col:32> '_Size' lvalue ParmVar 0x92f5110 '__n' '_Size')
    (DeclRefExpr 0x92f537c <col:37> 'const _Tp' lvalue ParmVar 0x92f5180 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x92f59c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0x92f57e0 <line:222:7, line:223:12>
    0x92f57b0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x92f5998 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0x92f5928 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x92f594c <col:18> '_ForwardIterator' lvalue ParmVar 0x92f54f0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f5964 <col:27> '_Size' lvalue ParmVar 0x92f5530 '__n' '_Size')
    (DeclRefExpr 0x92f597c <col:32> 'const _Tp' lvalue ParmVar 0x92f55a0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator = const char *, typename _ForwardIterator = char *, typename _Allocator = std::allocator<char>> char *__uninitialized_copy_a(const char *__first, const char *__last, char *__result, std::allocator<char> &__alloc)template <typename _InputIterator = char *, typename _ForwardIterator = char *, typename _Allocator = std::allocator<char>> char *__uninitialized_copy_a(char *__first, char *__last, char *__result, std::allocator<char> &__alloc)template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x92f61e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0x92f5db0 <line:241:7, col:40>
    0x92f5d60 "_ForwardIterator __cur =
      (DeclRefExpr 0x92f5d94 <col:32> '_ForwardIterator' lvalue ParmVar 0x92f5b70 '__result' '_ForwardIterator')")
  (IfStmt 0x92f6098 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f5dc0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92f6080 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0x92f6030 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92f5e48 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x92f5e00 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
          (DeclRefExpr 0x92f5dd0 <col:11> '_InputIterator' lvalue ParmVar 0x92f5af0 '__first' '_InputIterator')
          (DeclRefExpr 0x92f5de8 <col:22> '_InputIterator' lvalue ParmVar 0x92f5b30 '__last' '_InputIterator'))
        (BinaryOperator 0x92f5ed0 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0x92f5e88 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92f5e6c <col:32> '_InputIterator' lvalue ParmVar 0x92f5af0 '__first' '_InputIterator'))
          (UnaryOperator 0x92f5eb8 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92f5e9c <col:43> '_ForwardIterator' lvalue Var 0x92f5d60 '__cur' '_ForwardIterator')))
        (CallExpr 0x92f6008 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92f5f00 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x92f5ee8 <col:6> '_Allocator' lvalue ParmVar 0x92f5c00 '__alloc' '_Allocator &'))
          (CallExpr 0x92f5fb8 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x92f5f50 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x92f5fa0 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92f5f84 <col:42> '_ForwardIterator' lvalue Var 0x92f5d60 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x92f5ff0 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92f5fd8 <col:51> '_InputIterator' lvalue ParmVar 0x92f5af0 '__first' '_InputIterator'))))
      (ReturnStmt 0x92f6070 <line:246:4, col:11>
        (DeclRefExpr 0x92f6054 <col:11> '_ForwardIterator' lvalue Var 0x92f5d60 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x92f61c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f60b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92f61b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0x92f6178 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x92f60f0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92f6130 <col:18> '_ForwardIterator' lvalue ParmVar 0x92f5b70 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92f6148 <col:28> '_ForwardIterator' lvalue Var 0x92f5d60 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x92f6160 <col:35> '_Allocator' lvalue ParmVar 0x92f5c00 '__alloc' '_Allocator &'))
      (NullStmt 0x92f61a0 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator = char *, typename _ForwardIterator = char *, typename _Tp = char> inline char *__uninitialized_copy_a(char *__first, char *__last, char *__result, allocator<char> &) (CompoundStmt 0x983e7c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x983e7b0 <col:7, col:63>
    (CallExpr 0x983e758 <col:14, col:63> 'char *':'char *'
      (ImplicitCastExpr 0x983e748 <col:14, col:19> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x983e708 <col:14, col:19> 'char *(char *, char *, char *)' lvalue Function 0x983e640 'uninitialized_copy' 'char *(char *, char *, char *)' (FunctionTemplate 0x92ef030 'uninitialized_copy')))
      (ImplicitCastExpr 0x983e780 <col:38> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983e424 <col:38> 'char *':'char *' lvalue ParmVar 0x983e080 '__first' 'char *':'char *'))
      (ImplicitCastExpr 0x983e790 <col:47> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983e43c <col:47> 'char *':'char *' lvalue ParmVar 0x983e0c0 '__last' 'char *':'char *'))
      (ImplicitCastExpr 0x983e7a0 <col:55> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983e454 <col:55> 'char *':'char *' lvalue ParmVar 0x983e100 '__result' 'char *':'char *')))))

template <typename _InputIterator = const char *, typename _ForwardIterator = char *, typename _Tp = char> inline char *__uninitialized_copy_a(const char *__first, const char *__last, char *__result, allocator<char> &) (CompoundStmt 0x9818400 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x98183f0 <col:7, col:63>
    (CallExpr 0x9818398 <col:14, col:63> 'char *':'char *'
      (ImplicitCastExpr 0x9818388 <col:14, col:19> 'char *(*)(const char *, const char *, char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9818348 <col:14, col:19> 'char *(const char *, const char *, char *)' lvalue Function 0x9818280 'uninitialized_copy' 'char *(const char *, const char *, char *)' (FunctionTemplate 0x92ef030 'uninitialized_copy')))
      (ImplicitCastExpr 0x98183c0 <col:38> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x98180ac <col:38> 'const char *':'const char *' lvalue ParmVar 0x9839490 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x98183d0 <col:47> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x98180c4 <col:47> 'const char *':'const char *' lvalue ParmVar 0x98394d0 '__last' 'const char *':'const char *'))
      (ImplicitCastExpr 0x98183e0 <col:55> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x98180dc <col:55> 'char *':'char *' lvalue ParmVar 0x9839510 '__result' 'char *':'char *')))))

template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0x92f6718 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x92f6708 <col:7, col:63>
    (CallExpr 0x92f66e0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x92f6660 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ef030)
      (DeclRefExpr 0x92f6694 <col:38> '_InputIterator' lvalue ParmVar 0x92f6320 '__first' '_InputIterator')
      (DeclRefExpr 0x92f66ac <col:47> '_InputIterator' lvalue ParmVar 0x92f6360 '__last' '_InputIterator')
      (DeclRefExpr 0x92f66c4 <col:55> '_ForwardIterator' lvalue ParmVar 0x92f63a0 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator = char *, typename _ForwardIterator = char *, typename _Allocator = std::allocator<char>> inline char *__uninitialized_move_a(char *__first, char *__last, char *__result, std::allocator<char> &__alloc) (CompoundStmt 0x983e3d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0x983e3c8 <line:267:7, line:269:24>
    (CallExpr 0x983e368 <line:267:14, line:269:24> 'char *':'char *'
      (ImplicitCastExpr 0x983e358 <line:267:14, col:19> 'char *(*)(char *, char *, char *, allocator<char> &)' <FunctionToPointerDecay>
        (DeclRefExpr 0x983e318 <col:14, col:19> 'char *(char *, char *, char *, allocator<char> &)' lvalue Function 0x983e240 '__uninitialized_copy_a' 'char *(char *, char *, char *, allocator<char> &)' (FunctionTemplate 0x92f6610 '__uninitialized_copy_a')))
      (ImplicitCastExpr 0x983e398 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> 'char *':'char *' <LValueToRValue>
        (ParenExpr 0x983dc98 <col:44, col:50> 'char *':'char *' lvalue
          (DeclRefExpr 0x983dc80 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> 'char *':'char *' lvalue ParmVar 0x9837a70 '__first' 'char *':'char *')))
      (ImplicitCastExpr 0x983e3a8 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> 'char *':'char *' <LValueToRValue>
        (ParenExpr 0x983dcc8 <col:44, col:50> 'char *':'char *' lvalue
          (DeclRefExpr 0x983dcac </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> 'char *':'char *' lvalue ParmVar 0x9837ab0 '__last' 'char *':'char *')))
      (ImplicitCastExpr 0x983e3b8 <line:269:7> 'char *':'char *' <LValueToRValue>
        (DeclRefExpr 0x983dcdc <col:7> 'char *':'char *' lvalue ParmVar 0x9837af0 '__result' 'char *':'char *'))
      (DeclRefExpr 0x983dcf4 <col:17> 'class std::allocator<char>':'class std::allocator<char>' lvalue ParmVar 0x9837b80 '__alloc' 'class std::allocator<char> &'))))

template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x92f6b78 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0x92f6b68 <line:267:7, line:269:24>
    (CallExpr 0x92f6b38 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0x92f6a70 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
      (ParenExpr 0x92f6ac0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x92f6aa8 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0x92f6840 '__first' '_InputIterator'))
      (ParenExpr 0x92f6af0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x92f6ad4 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0x92f6880 '__last' '_InputIterator'))
      (DeclRefExpr 0x92f6b04 <line:269:7> '_ForwardIterator' lvalue ParmVar 0x92f68c0 '__result' '_ForwardIterator')
      (DeclRefExpr 0x92f6b1c <col:17> '_Allocator' lvalue ParmVar 0x92f6930 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x92f8550 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0x92f81a0 <line:277:7, col:39>
    0x92f8150 "_ForwardIterator __cur =
      (DeclRefExpr 0x92f8184 <col:32> '_ForwardIterator' lvalue ParmVar 0x92f7ed0 '__first' '_ForwardIterator')")
  (IfStmt 0x92f8400 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f81b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92f83e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0x92f83c0 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92f8238 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x92f81f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
          (DeclRefExpr 0x92f81c0 <col:11> '_ForwardIterator' lvalue Var 0x92f8150 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x92f81d8 <col:20> '_ForwardIterator' lvalue ParmVar 0x92f7f10 '__last' '_ForwardIterator'))
        (UnaryOperator 0x92f8278 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0x92f825c <col:30> '_ForwardIterator' lvalue Var 0x92f8150 '__cur' '_ForwardIterator'))
        (CallExpr 0x92f8398 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92f82a8 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x92f828c <col:6> '_Allocator' lvalue ParmVar 0x92f7ff0 '__alloc' '_Allocator &'))
          (CallExpr 0x92f8360 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x92f82f8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x92f8348 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92f832c <col:42> '_ForwardIterator' lvalue Var 0x92f8150 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x92f8380 <col:50> 'const _Tp' lvalue ParmVar 0x92f7f80 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x92f8530 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f8420 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92f8518 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0x92f84e0 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x92f8458 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92f8498 <col:18> '_ForwardIterator' lvalue ParmVar 0x92f7ed0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92f84b0 <col:27> '_ForwardIterator' lvalue Var 0x92f8150 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x92f84c8 <col:34> '_Allocator' lvalue ParmVar 0x92f7ff0 '__alloc' '_Allocator &'))
      (NullStmt 0x92f8508 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x92f8a58 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0x92f8a30 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x92f89b0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f27f0)
    (DeclRefExpr 0x92f89e4 <col:31> '_ForwardIterator' lvalue ParmVar 0x92f8680 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f89fc <col:40> '_ForwardIterator' lvalue ParmVar 0x92f86c0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x92f8a14 <col:48> 'const _Tp' lvalue ParmVar 0x92f8730 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x92f92b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0x92f8ec0 <line:302:7, col:39>
    0x92f8e70 "_ForwardIterator __cur =
      (DeclRefExpr 0x92f8ea4 <col:32> '_ForwardIterator' lvalue ParmVar 0x92f8bd0 '__first' '_ForwardIterator')")
  (IfStmt 0x92f9160 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f8ed0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92f9148 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0x92f9120 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92f8f50 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x92f8f10 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
          (DeclRefExpr 0x92f8ee0 <col:11> '_Size' lvalue ParmVar 0x92f8c10 '__n' '_Size')
          (IntegerLiteral 0x92f8ef8 <col:17> 'int' 0))
        (BinaryOperator 0x92f8fd8 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0x92f8f90 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0x92f8f74 <col:22> '_Size' lvalue ParmVar 0x92f8c10 '__n' '_Size'))
          (UnaryOperator 0x92f8fc0 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92f8fa4 <col:29> '_ForwardIterator' lvalue Var 0x92f8e70 '__cur' '_ForwardIterator')))
        (CallExpr 0x92f90f8 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92f9008 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x92f8ff0 <col:6> '_Allocator' lvalue ParmVar 0x92f8d10 '__alloc' '_Allocator &'))
          (CallExpr 0x92f90c0 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x92f9058 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x92f90a8 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x92f908c <col:42> '_ForwardIterator' lvalue Var 0x92f8e70 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x92f90e0 <col:50> 'const _Tp' lvalue ParmVar 0x92f8c80 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x92f9290 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f9180 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92f9278 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0x92f9240 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x92f91b8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92f91f8 <col:18> '_ForwardIterator' lvalue ParmVar 0x92f8bd0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92f9210 <col:27> '_ForwardIterator' lvalue Var 0x92f8e70 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x92f9228 <col:34> '_Allocator' lvalue ParmVar 0x92f8d10 '__alloc' '_Allocator &'))
      (NullStmt 0x92f9268 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x92f9858 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0x92f9830 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0x92f97b0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5690)
    (DeclRefExpr 0x92f97e4 <col:33> '_ForwardIterator' lvalue ParmVar 0x92f9430 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92f97fc <col:42> '_Size' lvalue ParmVar 0x92f9470 '__n' '_Size')
    (DeclRefExpr 0x92f9814 <col:47> 'const _Tp' lvalue ParmVar 0x92f94e0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x92faa88 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0x92f9dd8 <line:342:7, line:344:19>
    0x92f9cc0 "_ForwardIterator __mid =
      (CallExpr 0x92f9da8 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0x92f9d10 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
        (DeclRefExpr 0x92f9d48 <col:60> '_InputIterator1' lvalue ParmVar 0x92f99d0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x92f9d60 <col:70> '_InputIterator1' lvalue ParmVar 0x92f9a10 '__last1' '_InputIterator1')
        (DeclRefExpr 0x92f9d78 <line:343:11> '_ForwardIterator' lvalue ParmVar 0x92f9ad0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92f9d90 <line:344:11> '_Allocator' lvalue ParmVar 0x92f9b40 '__alloc' '_Allocator &'))")
  (IfStmt 0x92fa938 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92f9de8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92fa920 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0x92fa910 <line:347:4, col:72>
        (CallExpr 0x92f9ea8 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x92f9e10 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
          (DeclRefExpr 0x92f9e44 <col:39> '_InputIterator2' lvalue ParmVar 0x92f9a50 '__first2' '_InputIterator2')
          (DeclRefExpr 0x92f9e5c <col:49> '_InputIterator2' lvalue ParmVar 0x92f9a90 '__last2' '_InputIterator2')
          (DeclRefExpr 0x92f9e74 <col:58> '_ForwardIterator' lvalue Var 0x92f9cc0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x92f9e8c <col:65> '_Allocator' lvalue ParmVar 0x92f9b40 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x92faa68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92fa958 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92faa50 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0x92faa18 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x92fa990 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92fa9d0 <col:18> '_ForwardIterator' lvalue ParmVar 0x92f9ad0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92fa9e8 <col:28> '_ForwardIterator' lvalue Var 0x92f9cc0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x92faa00 <col:35> '_Allocator' lvalue ParmVar 0x92f9b40 '__alloc' '_Allocator &'))
      (NullStmt 0x92faa40 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x92fb260 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0x92fafe8 <line:370:7, line:372:19>
    0x92faed0 "_ForwardIterator __mid =
      (CallExpr 0x92fafb8 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0x92faf20 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
        (DeclRefExpr 0x92faf54 <col:60> '_InputIterator1' lvalue ParmVar 0x92fac10 '__first1' '_InputIterator1')
        (DeclRefExpr 0x92faf6c <col:70> '_InputIterator1' lvalue ParmVar 0x92fac50 '__last1' '_InputIterator1')
        (DeclRefExpr 0x92faf84 <line:371:11> '_ForwardIterator' lvalue ParmVar 0x92fad10 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92faf9c <line:372:11> '_Allocator' lvalue ParmVar 0x92fad80 '__alloc' '_Allocator &'))")
  (IfStmt 0x92fb110 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92faff8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92fb0f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0x92fb0e8 <line:375:4, col:72>
        (CallExpr 0x92fb0b8 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x92fb020 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
          (DeclRefExpr 0x92fb058 <col:39> '_InputIterator2' lvalue ParmVar 0x92fac90 '__first2' '_InputIterator2')
          (DeclRefExpr 0x92fb070 <col:49> '_InputIterator2' lvalue ParmVar 0x92facd0 '__last2' '_InputIterator2')
          (DeclRefExpr 0x92fb088 <col:58> '_ForwardIterator' lvalue Var 0x92faed0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x92fb0a0 <col:65> '_Allocator' lvalue ParmVar 0x92fad80 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x92fb240 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92fb130 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92fb228 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0x92fb1f0 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x92fb168 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92fb1a8 <col:18> '_ForwardIterator' lvalue ParmVar 0x92fad10 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92fb1c0 <col:28> '_ForwardIterator' lvalue Var 0x92faed0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x92fb1d8 <col:35> '_Allocator' lvalue ParmVar 0x92fad80 '__alloc' '_Allocator &'))
      (NullStmt 0x92fb218 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0x92fba48 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0x92fb7b0 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0x92fb718 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f8110 0x92f8950)
    (DeclRefExpr 0x92fb750 <col:35> '_ForwardIterator' lvalue ParmVar 0x92fb3e0 '__result' '_ForwardIterator')
    (DeclRefExpr 0x92fb768 <col:45> '_ForwardIterator' lvalue ParmVar 0x92fb420 '__mid' '_ForwardIterator')
    (DeclRefExpr 0x92fb780 <col:52> 'const _Tp' lvalue ParmVar 0x92fb490 '__x' 'const _Tp &')
    (DeclRefExpr 0x92fb798 <col:57> '_Allocator' lvalue ParmVar 0x92fb580 '__alloc' '_Allocator &'))
  (IfStmt 0x92fb8f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92fb7e0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92fb8e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0x92fb8d0 <line:397:4, col:70>
        (CallExpr 0x92fb8a0 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0x92fb808 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
          (DeclRefExpr 0x92fb83c <col:39> '_InputIterator' lvalue ParmVar 0x92fb4d0 '__first' '_InputIterator')
          (DeclRefExpr 0x92fb854 <col:48> '_InputIterator' lvalue ParmVar 0x92fb510 '__last' '_InputIterator')
          (DeclRefExpr 0x92fb86c <col:56> '_ForwardIterator' lvalue ParmVar 0x92fb420 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x92fb884 <col:63> '_Allocator' lvalue ParmVar 0x92fb580 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x92fba28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92fb918 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92fba10 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0x92fb9d8 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x92fb950 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92fb990 <col:18> '_ForwardIterator' lvalue ParmVar 0x92fb3e0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92fb9a8 <col:28> '_ForwardIterator' lvalue ParmVar 0x92fb420 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x92fb9c0 <col:35> '_Allocator' lvalue ParmVar 0x92fb580 '__alloc' '_Allocator &'))
      (NullStmt 0x92fba00 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x92fc280 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0x92fc008 <line:417:7, line:419:20>
    0x92fbef0 "_ForwardIterator __mid2 =
      (CallExpr 0x92fbfd8 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0x92fbf40 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
        (DeclRefExpr 0x92fbf74 <col:61> '_InputIterator' lvalue ParmVar 0x92fbbd0 '__first1' '_InputIterator')
        (DeclRefExpr 0x92fbf8c <col:71> '_InputIterator' lvalue ParmVar 0x92fbc10 '__last1' '_InputIterator')
        (DeclRefExpr 0x92fbfa4 <line:418:12> '_ForwardIterator' lvalue ParmVar 0x92fbc50 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x92fbfbc <line:419:12> '_Allocator' lvalue ParmVar 0x92fbd70 '__alloc' '_Allocator &'))")
  (IfStmt 0x92fc130 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92fc018 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92fc118 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0x92fc0e8 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x92fc050 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f8110 0x92f8950)
        (DeclRefExpr 0x92fc088 <col:32> '_ForwardIterator' lvalue Var 0x92fbef0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x92fc0a0 <col:40> '_ForwardIterator' lvalue ParmVar 0x92fbc90 '__last2' '_ForwardIterator')
        (DeclRefExpr 0x92fc0b8 <col:49> 'const _Tp' lvalue ParmVar 0x92fbd00 '__x' 'const _Tp &')
        (DeclRefExpr 0x92fc0d0 <col:54> '_Allocator' lvalue ParmVar 0x92fbd70 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0x92fc260 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92fc150 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92fc248 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0x92fc210 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x92fc188 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x92fc1c8 <col:18> '_ForwardIterator' lvalue ParmVar 0x92fbc50 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x92fc1e0 <col:28> '_ForwardIterator' lvalue Var 0x92fbef0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x92fc1f8 <col:36> '_Allocator' lvalue ParmVar 0x92fbd70 '__alloc' '_Allocator &'))
      (NullStmt 0x92fc238 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp = std::tr1::shared_ptr<io_data_t>, typename _Alloc = std::allocator<std::tr1::shared_ptr<io_data_t> >> struct _Vector_base {
        struct _Vector_base;
        typedef typename allocator<shared_ptr<io_data_t> >::rebind<shared_ptr<io_data_t> >::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl();
            _Vector_impl(const _Tp_alloc_type &__a);
        };
    public:
    public:
        typedef std::allocator<std::tr1::shared_ptr<io_data_t> > allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator();
        const _Tp_alloc_type &_M_get_Tp_allocator() const;
        allocator_type get_allocator() const;
        _Vector_base();
        _Vector_base(const allocator_type &__a);
        _Vector_base(size_t __n);
        _Vector_base(size_t __n, const allocator_type &__a);
        void ~_Vector_base();
    public:
    public:
        std::_Vector_base<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > >::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n);
        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n);
    }
template <typename _Tp = char, typename _Alloc = std::allocator<char>> struct _Vector_base {
        struct _Vector_base;
        typedef typename allocator<char>::rebind<char>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((ImplicitCastExpr 0x9806e58 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'typename _Tp_alloc_type::pointer':'char *' <NullToPointer>
  (IntegerLiteral 0x92fed28 <col:31> 'int' 0))
), _M_finish((ImplicitCastExpr 0x9806f58 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'typename _Tp_alloc_type::pointer':'char *' <NullToPointer>
  (IntegerLiteral 0x92fed78 <col:45> 'int' 0))
), _M_end_of_storage((ImplicitCastExpr 0x9807058 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'typename _Tp_alloc_type::pointer':'char *' <NullToPointer>
  (IntegerLiteral 0x92fedc8 <col:67> 'int' 0))
) (CompoundStmt 0x92fee28 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a);
            inline _Vector_impl(const std::_Vector_base<char, std::allocator<char> >::_Vector_impl &) throw();
            inline void ~_Vector_impl() throw() (CompoundStmt 0x9806c70 </usr/include/c++/4.6/bits/stl_vector.h:75:14>)


        };
    public:
    public:
        typedef std::allocator<char> allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0x98083f0 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0x98083e0 <col:9, col:60>
    (UnaryOperator 0x98083c8 <col:16, col:60> '_Tp_alloc_type':'class std::allocator<char>' lvalue prefix '*'
      (CXXStaticCastExpr 0x98083b0 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <NoOp>
        (ImplicitCastExpr 0x98083a0 <col:46, col:53> '_Tp_alloc_type *' <DerivedToBase (allocator)>
          (UnaryOperator 0x9808388 <col:46, col:53> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl *' prefix '&'
            (MemberExpr 0x9808348 <col:47, col:53> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
              (CXXThisExpr 0x9808338 <col:47> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0x981b7d0 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0x981b7c0 <col:9, col:66>
    (UnaryOperator 0x981b7a8 <col:16, col:66> 'const _Tp_alloc_type':'const class std::allocator<char>' lvalue prefix '*'
      (CXXStaticCastExpr 0x981b790 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <NoOp>
        (ImplicitCastExpr 0x981b780 <col:52, col:59> 'const _Tp_alloc_type *' <DerivedToBase (allocator)>
          (UnaryOperator 0x981b768 <col:52, col:59> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl *' prefix '&'
            (MemberExpr 0x981b728 <col:53, col:59> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
              (CXXThisExpr 0x981b718 <col:53> 'const struct std::_Vector_base<char, class std::allocator<char> > *' this))))))))


        allocator_type get_allocator() const;
        _Vector_base() : _M_impl() (CompoundStmt 0x92ff2f0 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base(const allocator_type &__a);
        _Vector_base(size_t __n);
        _Vector_base(size_t __n, const allocator_type &__a);
        void ~_Vector_base() (CompoundStmt 0x98073d0 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CXXMemberCallExpr 0x9807388 <line:142:9, line:143:33> 'void'
    (MemberExpr 0x9807208 <line:142:9> '<bound member function type>' ->_M_deallocate 0x94a7890
      (CXXThisExpr 0x9807128 <col:9> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))
    (ImplicitCastExpr 0x98073b0 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
      (MemberExpr 0x9807258 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
        (MemberExpr 0x9807238 <col:23, col:29> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
          (CXXThisExpr 0x9807228 <col:23> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))))
    (ImplicitCastExpr 0x98073c0 <col:47, line:143:25> 'size_t':'unsigned int' <IntegralCast>
      (BinaryOperator 0x9807370 <line:142:47, line:143:25> 'int' '-'
        (ImplicitCastExpr 0x9807350 <line:142:47, col:61> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
          (MemberExpr 0x98072e0 <col:47, col:61> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_end_of_storage 0x94a7070
            (MemberExpr 0x98072c0 <col:47, col:53> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
              (CXXThisExpr 0x98072b0 <col:47> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))))
        (ImplicitCastExpr 0x9807360 <line:143:11, col:25> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
          (MemberExpr 0x9807330 <col:11, col:25> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
            (MemberExpr 0x9807310 <col:11, col:17> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
              (CXXThisExpr 0x9807300 <col:11> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))))))))


    public:
    public:
        std::_Vector_base<char, std::allocator<char> >::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0x981bbe0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0x981bbd0 <col:9, col:51>
    (ConditionalOperator 0x981bbb0 <col:16, col:51> 'pointer':'char *'
      (BinaryOperator 0x981b9d8 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x981b9b8 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x981b9a0 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x94a75d0 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x981b9c8 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9302288 <col:23> 'int' 0)))
      (CXXMemberCallExpr 0x981bb20 <col:27, col:47> 'pointer':'char *'
        (MemberExpr 0x981bae8 <col:27, col:35> '<bound member function type>' .allocate 0x92e2930
          (ImplicitCastExpr 0x981bb40 <col:27> 'class __gnu_cxx::new_allocator<char>' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
            (MemberExpr 0x981bac8 <col:27> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
              (CXXThisExpr 0x981b9f0 <col:27> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))))
        (ImplicitCastExpr 0x981bb68 <col:44> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x981bb08 <col:44> 'size_t':'unsigned int' lvalue ParmVar 0x94a75d0 '__n' 'size_t':'unsigned int'))
        (CXXDefaultArgExpr 0x981bb88 <<invalid sloc>> 'const void *'))
      (ImplicitCastExpr 0x981bba0 <col:51> 'pointer':'char *' <NullToPointer>
        (IntegerLiteral 0x9302378 <col:51> 'int' 0)))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0x9807600 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0x98075e0 <line:155:2, line:156:31>
    <<<NULL>>>
    (ImplicitCastExpr 0x9807410 <line:155:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9807400 <col:6> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
        (DeclRefExpr 0x98073e4 <col:6> 'typename _Tp_alloc_type::pointer':'char *' lvalue ParmVar 0x94a77d0 '__p' 'typename _Tp_alloc_type::pointer':'char *')))
    (CXXMemberCallExpr 0x9807568 <line:156:4, col:31> 'void'
      (MemberExpr 0x9807518 <col:4, col:12> '<bound member function type>' .deallocate 0x92e2b10
        (ImplicitCastExpr 0x98075a8 <col:4> 'class __gnu_cxx::new_allocator<char>' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
          (MemberExpr 0x98074f8 <col:4> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
            (CXXThisExpr 0x9807420 <col:4> 'struct std::_Vector_base<char, class std::allocator<char> > *' this))))
      (ImplicitCastExpr 0x98075c0 <col:23> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
        (DeclRefExpr 0x9807538 <col:23> 'typename _Tp_alloc_type::pointer':'char *' lvalue ParmVar 0x94a77d0 '__p' 'typename _Tp_alloc_type::pointer':'char *'))
      (ImplicitCastExpr 0x98075d0 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9807550 <col:28> 'size_t':'unsigned int' lvalue ParmVar 0x94a7810 '__n' 'size_t':'unsigned int')))
    <<<NULL>>>))


        inline _Vector_base(const std::_Vector_base<char, std::allocator<char> > &) throw();
    }
template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0x92fed28 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0x92fed78 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x92fedc8 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0x92fee28 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0x92fee38 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0x92fe0b0 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0x92fee98 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0x92feee8 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x92fef38 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0x92fef98 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0x92ff0b8 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0x92ff0a8 <col:9, col:60>
    (UnaryOperator 0x92ff090 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x92ff078 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (UnaryOperator 0x92ff010 <col:46, col:53> '<dependent type>' prefix '&'
          (CXXDependentScopeMemberExpr 0x92fefd8 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0x92fefc8 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0x92ff1d8 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0x92ff1c8 <col:9, col:66>
    (UnaryOperator 0x92ff1b0 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x92ff198 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (UnaryOperator 0x92ff130 <col:52, col:59> '<dependent type>' prefix '&'
          (CXXDependentScopeMemberExpr 0x92ff0f8 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0x92ff0e8 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x92ff298 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0x92ff288 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x92ff268 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0x92ff248 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0x92ff208 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0x92ff2f0 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x92ff300 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x92fe570 '__a' 'const allocator_type &')
) (CompoundStmt 0x92ff360 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0x92ff770 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0x92ff4b0 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ff3f8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff3c0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff3b0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x92ff490 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92ff440 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff430 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x92ff474 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x92fe690 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x92ff5c8 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ff510 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff4d8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff4c8 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x92ff590 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff558 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff548 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x92ff758 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ff628 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff5f0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff5e0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x92ff730 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x92ff6f8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (CXXDependentScopeMemberExpr 0x92ff6a8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ff670 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x92ff660 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x92ff6dc <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x92fe690 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0x92ff78c </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x92fe7e0 '__a' 'const allocator_type &')
) (CompoundStmt 0x92ffbb0 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0x92ff8f0 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ff838 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff800 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff7f0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x92ff8d0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92ff880 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff870 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x92ff8b4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x92fe790 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x92ffa08 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ff950 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff918 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff908 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x92ff9d0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ff998 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x92ff988 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x92ffb98 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ffa68 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ffa30 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92ffa20 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x92ffb70 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x92ffb38 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (CXXDependentScopeMemberExpr 0x92ffae8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ffab0 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x92ffaa0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x92ffb1c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x92fe790 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0x9302258 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0x9302230 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0x92ffbe0 <line:142:9> '<bound member function type>' ->_M_deallocate 0x92fec80
      (CXXThisExpr 0x92ffbd0 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x92ffc48 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ffc10 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x92ffc00 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9302208 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0x93021d0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
      (CXXDependentScopeMemberExpr 0x92ffcc8 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ffc90 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x92ffc80 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x92ffd48 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ffd10 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x92ffd00 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0x93023c0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0x93023b0 <col:9, col:51>
    (ConditionalOperator 0x9302390 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0x93022c0 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x93022a0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x930226c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x92fea40 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x93022b0 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9302288 <col:23> 'int' 0)))
      (CallExpr 0x9302358 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9302308 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0x93022e8 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x92fe9e0
            (CXXThisExpr 0x93022d8 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x930233c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0x92fea40 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0x9302378 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0x93024d0 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0x93024b0 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0x93023d4 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x92feba0 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0x9302488 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9302420 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9302400 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x92fe9e0
          (CXXThisExpr 0x93023f0 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9302454 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x92feba0 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0x930246c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0x92febe0 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::tr1::shared_ptr<io_data_t>, typename _Alloc = std::allocator<std::tr1::shared_ptr<io_data_t> >> class vector : protected _Vector_base<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > {
        class vector;
        typedef typename allocator<shared_ptr<io_data_t> >::value_type _Alloc_value_type;
        typedef _Vector_base<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef std::tr1::shared_ptr<io_data_t> value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<shared_ptr<io_data_t>, allocator<shared_ptr<io_data_t> > > > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<shared_ptr<io_data_t>, allocator<shared_ptr<io_data_t> > > > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::allocator<std::tr1::shared_ptr<io_data_t> > allocator_type;
    protected:
    protected:
        using _Base::_M_allocate;
        ;
        using _Base::_M_deallocate;
        ;
        using _Base::_M_impl;
        ;
        using _Base::_M_get_Tp_allocator;
        ;
        ;
    public:
    public:
        vector();
        vector(const allocator_type &__a);
        vector(size_type __n, const value_type &__value, const allocator_type &__a);
        vector(const std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > &__x);
        template <typename _InputIterator> vector(_InputIterator __first, _InputIterator __last, const allocator_type &__a);
        void ~vector();
        std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > &operator=(const std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > &__x);
        void assign(size_type __n, const value_type &__val);
        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last);
        using _Base::get_allocator;
        ;
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
        size_type size() const;
        size_type max_size() const;
        void resize(size_type __new_size, value_type __x);
        size_type capacity() const;
        bool empty() const;
        void reserve(size_type __n);
        reference operator[](size_type __n);
        const_reference operator[](size_type __n) const;
    protected:
    protected:
        void _M_range_check(size_type __n) const;
    public:
    public:
        reference at(size_type __n);
        const_reference at(size_type __n) const;
        reference front();
        const_reference front() const;
        reference back();
        const_reference back() const;
        pointer data();
        const_pointer data() const;
        void push_back(const value_type &__x);
        void pop_back();
        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x);
        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(std::vector<std::tr1::shared_ptr<io_data_t>, std::allocator<std::tr1::shared_ptr<io_data_t> > > &__x);
        void clear();
    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last);
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type);
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_initialize(size_type __n, const value_type &__value);
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type);
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type);
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const;
        void _M_erase_at_end(pointer __pos);
    }
template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp = completion_t, typename _Alloc = std::allocator<completion_t>> class vector
template <typename _Tp = char, typename _Alloc = std::allocator<char>> class vector : protected _Vector_base<char, std::allocator<char> > {
        class vector;
        typedef typename allocator<char>::value_type _Alloc_value_type;
        typedef _Vector_base<char, std::allocator<char> > _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef char value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<char, allocator<char> > > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<char, allocator<char> > > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::allocator<char> allocator_type;
    protected:
    protected:
        using _Base::_M_allocate;
        ;
        using _Base::_M_deallocate;
        ;
        using _Base::_M_impl;
        ;
        using _Base::_M_get_Tp_allocator;
        ;
        ;
    public:
    public:
        vector() : _Base() (CompoundStmt 0x930f320 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector(const allocator_type &__a);
        vector(size_type __n, const value_type &__value, const allocator_type &__a);
        vector(const std::vector<char, std::allocator<char> > &__x);
        template <typename _InputIterator> vector(_InputIterator __first, _InputIterator __last, const allocator_type &__a);
        void ~vector() (CompoundStmt 0x9808200 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0x98081b8 <line:350:9, line:351:30> 'void'
    (ImplicitCastExpr 0x98081a8 <line:350:9, col:14> 'void (*)(char *, char *, allocator<char> &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9808148 <col:9, col:14> 'void (char *, char *, allocator<char> &)' lvalue Function 0x9808080 '_Destroy' 'void (char *, char *, allocator<char> &)' (FunctionTemplate 0x92edd40 '_Destroy')))
    (ImplicitCastExpr 0x98081e0 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
      (MemberExpr 0x9807784 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
        (MemberExpr 0x9807758 <col:23, col:29> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
          (ImplicitCastExpr 0x9807748 <col:23> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0x9807738 <col:23> 'class std::vector<char, class std::allocator<char> > *' this)))))
    (ImplicitCastExpr 0x98081f0 <col:47, col:61> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
      (MemberExpr 0x98077f4 <col:47, col:61> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
        (MemberExpr 0x98077c8 <col:47, col:53> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
          (ImplicitCastExpr 0x98077b8 <col:47> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0x98077a8 <col:47> 'class std::vector<char, class std::allocator<char> > *' this)))))
    (CXXMemberCallExpr 0x9807b28 <line:351:9, col:29> '_Tp_alloc_type':'class std::allocator<char>' lvalue
      (MemberExpr 0x9807af8 <col:9> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
        (ImplicitCastExpr 0x9807b48 <col:9> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
          (CXXThisExpr 0x9807ae8 <col:9> 'class std::vector<char, class std::allocator<char> > *' this))))))


        std::vector<char, std::allocator<char> > &operator=(const std::vector<char, std::allocator<char> > &__x);
        void assign(size_type __n, const value_type &__val);
        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last);
        using _Base::get_allocator;
        ;
        iterator begin();
        const_iterator begin() const (CompoundStmt 0x98206d8 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0x98206c8 <col:9, col:53>
    (CXXConstructExpr 0x98206a0 <col:16, col:53> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x9820610 <col:16, col:53> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x9820600 <col:16, col:53> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXFunctionalCastExpr 0x9820288 <col:16, col:53> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' functional cast to const_iterator <ConstructorConversion>
            (CXXConstructExpr 0x9820260 <col:16, col:45> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >''void (const char *const &)'
              (MaterializeTemporaryExpr 0x9820250 <col:31, col:45> 'const char *const':'const char *const' lvalue
                (ImplicitCastExpr 0x9820240 <col:31, col:45> 'const char *':'const char *' <NoOp>
                  (ImplicitCastExpr 0x9820230 <col:31, col:45> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                    (MemberExpr 0x982020c <col:31, col:45> 'const typename _Tp_alloc_type::pointer':'char *const' lvalue ._M_start 0x94a6e30
                      (MemberExpr 0x98201e0 <col:31, col:37> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                        (ImplicitCastExpr 0x98201d0 <col:31> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x98201c0 <col:31> 'const class std::vector<char, class std::allocator<char> > *' this))))))))))))))


        iterator end() (CompoundStmt 0x9808df8 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0x9808de8 <col:9, col:48>
    (CXXConstructExpr 0x9808dc0 <col:16, col:48> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x9808db0 <col:16, col:48> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x9808da0 <col:16, col:48> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXFunctionalCastExpr 0x9808d28 <col:16, col:48> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' functional cast to iterator <ConstructorConversion>
            (CXXConstructExpr 0x9808d00 <col:16, col:39> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (char *const &)'
              (ImplicitCastExpr 0x9808cf0 <col:25, col:39> 'char *const':'char *const' lvalue <NoOp>
                (MemberExpr 0x9808ccc <col:25, col:39> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                  (MemberExpr 0x9808ca0 <col:25, col:31> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                    (ImplicitCastExpr 0x9808c90 <col:25> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9808c80 <col:25> 'class std::vector<char, class std::allocator<char> > *' this))))))))))))


        const_iterator end() const (CompoundStmt 0x9820d78 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0x9820d68 <col:9, col:54>
    (CXXConstructExpr 0x9820d40 <col:16, col:54> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x9820d30 <col:16, col:54> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x9820d20 <col:16, col:54> 'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXFunctionalCastExpr 0x98209a8 <col:16, col:54> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' functional cast to const_iterator <ConstructorConversion>
            (CXXConstructExpr 0x9820980 <col:16, col:45> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >''void (const char *const &)'
              (MaterializeTemporaryExpr 0x9820970 <col:31, col:45> 'const char *const':'const char *const' lvalue
                (ImplicitCastExpr 0x9820960 <col:31, col:45> 'const char *':'const char *' <NoOp>
                  (ImplicitCastExpr 0x9820950 <col:31, col:45> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                    (MemberExpr 0x982092c <col:31, col:45> 'const typename _Tp_alloc_type::pointer':'char *const' lvalue ._M_finish 0x94a6f50
                      (MemberExpr 0x9820900 <col:31, col:37> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                        (ImplicitCastExpr 0x98208f0 <col:31> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x98208e0 <col:31> 'const class std::vector<char, class std::allocator<char> > *' this))))))))))))))


        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
        size_type size() const (CompoundStmt 0x9821a70 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0x9821a60 <col:9, col:74>
    (CXXFunctionalCastExpr 0x9821a48 <col:16, col:74> 'size_type':'unsigned int' functional cast to size_type <NoOp>
      (ImplicitCastExpr 0x9821a38 <col:26, col:66> 'size_type':'unsigned int' <IntegralCast>
        (BinaryOperator 0x9821a20 <col:26, col:66> 'int' '-'
          (ImplicitCastExpr 0x9821a00 <col:26, col:40> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
            (MemberExpr 0x982196c <col:26, col:40> 'const typename _Tp_alloc_type::pointer':'char *const' lvalue ._M_finish 0x94a6f50
              (MemberExpr 0x9821940 <col:26, col:32> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                (ImplicitCastExpr 0x9821930 <col:26> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x9821920 <col:26> 'const class std::vector<char, class std::allocator<char> > *' this)))))
          (ImplicitCastExpr 0x9821a10 <col:52, col:66> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
            (MemberExpr 0x98219dc <col:52, col:66> 'const typename _Tp_alloc_type::pointer':'char *const' lvalue ._M_start 0x94a6e30
              (MemberExpr 0x98219b0 <col:52, col:58> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                (ImplicitCastExpr 0x98219a0 <col:52> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x9821990 <col:52> 'const class std::vector<char, class std::allocator<char> > *' this))))))))))


        size_type max_size() const (CompoundStmt 0x981b5e8 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0x981b5d8 <col:9, col:47>
    (CXXMemberCallExpr 0x981b588 <col:16, col:47> 'size_type':'unsigned int'
      (MemberExpr 0x981b568 <col:16, col:38> '<bound member function type>' .max_size 0x92e2b80
        (ImplicitCastExpr 0x981b5c8 <col:16, col:36> 'const class __gnu_cxx::new_allocator<char>' lvalue <UncheckedDerivedToBase (new_allocator)>
          (CXXMemberCallExpr 0x981b518 <col:16, col:36> 'const _Tp_alloc_type':'const class std::allocator<char>' lvalue
            (MemberExpr 0x981b4e8 <col:16> '<bound member function type>' ->_M_get_Tp_allocator 0x9496200
              (ImplicitCastExpr 0x981b558 <col:16> 'const struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0x981b4d8 <col:16> 'const class std::vector<char, class std::allocator<char> > *' this)))))))))


        void resize(size_type __new_size, value_type __x);
        size_type capacity() const;
        bool empty() const (CompoundStmt 0x98200d0 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0x98200c0 <col:9, col:31>
    (CXXOperatorCallExpr 0x9820098 <col:16, col:31> '_Bool'
      (ImplicitCastExpr 0x9820088 <col:24, <invalid sloc>> '_Bool (*)(const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &, const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9820030 <col:24, <invalid sloc>> '_Bool (const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &, const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &)' lvalue Function 0x981f6d0 'operator==' '_Bool (const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &, const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > > &)'))
      (MaterializeTemporaryExpr 0x981fe50 <col:16, col:22> 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x981fe40 <col:16, col:22> 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXMemberCallExpr 0x981c218 <col:16, col:22> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >'
            (MemberExpr 0x981c1f8 <col:16> '<bound member function type>' ->begin 0x932a1f0
              (CXXThisExpr 0x981c1e8 <col:16> 'const class std::vector<char, class std::allocator<char> > *' this)))))
      (MaterializeTemporaryExpr 0x9820020 <col:27, col:31> 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x9820010 <col:27, col:31> 'const __normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXMemberCallExpr 0x981efc8 <col:27, col:31> 'const_iterator':'class __gnu_cxx::__normal_iterator<const char *, class std::vector<char, class std::allocator<char> > >'
            (MemberExpr 0x981efa8 <col:27> '<bound member function type>' ->end 0x932a490
              (CXXThisExpr 0x981ef98 <col:27> 'const class std::vector<char, class std::allocator<char> > *' this))))))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0x9821518 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0x9821508 <col:9, col:46>
    (UnaryOperator 0x98214f0 <col:16, col:46> 'char':'char' lvalue prefix '*'
      (ParenExpr 0x98214d8 <col:17, col:46> 'typename _Tp_alloc_type::pointer':'char *'
        (BinaryOperator 0x98214c0 <col:18, col:43> 'typename _Tp_alloc_type::pointer':'char *' '+'
          (ImplicitCastExpr 0x98214a0 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
            (MemberExpr 0x9821464 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
              (MemberExpr 0x9821438 <col:18, col:24> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                (ImplicitCastExpr 0x9821428 <col:18> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x9821418 <col:18> 'class std::vector<char, class std::allocator<char> > *' this)))))
          (ImplicitCastExpr 0x98214b0 <col:43> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9821484 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x932b050 '__n' 'size_type':'unsigned int')))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x98218d0 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0x98218c0 <col:9, col:46>
    (ImplicitCastExpr 0x98218b0 <col:16, col:46> 'const char':'const char' lvalue <NoOp>
      (UnaryOperator 0x9821898 <col:16, col:46> 'char':'char' lvalue prefix '*'
        (ParenExpr 0x9821880 <col:17, col:46> 'typename _Tp_alloc_type::pointer':'char *'
          (BinaryOperator 0x9821868 <col:18, col:43> 'typename _Tp_alloc_type::pointer':'char *' '+'
            (ImplicitCastExpr 0x9821848 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
              (MemberExpr 0x982180c <col:18, col:32> 'const typename _Tp_alloc_type::pointer':'char *const' lvalue ._M_start 0x94a6e30
                (MemberExpr 0x98217e0 <col:18, col:24> 'const struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                  (ImplicitCastExpr 0x98217d0 <col:18> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0x98217c0 <col:18> 'const class std::vector<char, class std::allocator<char> > *' this)))))
            (ImplicitCastExpr 0x9821858 <col:43> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x982182c <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x932b240 '__n' 'size_type':'unsigned int'))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x98213c8 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0x98213a8 <line:718:2, line:719:54>
    <<<NULL>>>
    (BinaryOperator 0x9821350 <line:718:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9821340 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x98212d4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x932b390 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9821320 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9821300 <col:13, col:19> '<bound member function type>' ->size 0x932aae0
          (CXXThisExpr 0x98212f0 <col:13> 'const class std::vector<char, class std::allocator<char> > *' this))))
    (CallExpr 0x9821378 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0x9821368 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x931264c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9821398 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9312638 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0x9312600 </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x9821280 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CXXMemberCallExpr 0x9821140 <line:737:2, col:20> 'void'
    (MemberExpr 0x9821108 <col:2> '<bound member function type>' ->_M_range_check 0x932b3d0
      (ImplicitCastExpr 0x9821160 <col:2> 'const class std::vector<char, class std::allocator<char> > *' <NoOp>
        (CXXThisExpr 0x9821030 <col:2> 'class std::vector<char, class std::allocator<char> > *' this)))
    (ImplicitCastExpr 0x9821170 <col:17> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9821128 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x932b550 '__n' 'size_type':'unsigned int')))
  (ReturnStmt 0x9821270 <line:738:2, col:20>
    (CXXOperatorCallExpr 0x9821248 <col:9, col:20> 'char':'char' lvalue
      (ImplicitCastExpr 0x9821238 <col:9, col:20> 'reference (*)(size_type)' <FunctionToPointerDecay>
        (DeclRefExpr 0x98211e8 <col:9, col:20> 'reference (size_type)' lvalue CXXMethod 0x932b0f0 'operator[]' 'reference (size_type)'))
      (ParenExpr 0x98211a8 <col:9, col:15> 'class std::vector<char, class std::allocator<char> >' lvalue
        (UnaryOperator 0x9821190 <col:10, col:11> 'class std::vector<char, class std::allocator<char> >' lvalue prefix '*'
          (CXXThisExpr 0x9821180 <col:11> 'class std::vector<char, class std::allocator<char> > *' this)))
      (ImplicitCastExpr 0x98211d8 <col:17> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x98211bc <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x932b550 '__n' 'size_type':'unsigned int')))))


        const_reference at(size_type __n) const (CompoundStmt 0x9821770 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CXXMemberCallExpr 0x9821640 <line:755:2, col:20> 'void'
    (MemberExpr 0x9821608 <col:2> '<bound member function type>' ->_M_range_check 0x932b3d0
      (CXXThisExpr 0x9821530 <col:2> 'const class std::vector<char, class std::allocator<char> > *' this))
    (ImplicitCastExpr 0x9821660 <col:17> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9821628 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x932b6e0 '__n' 'size_type':'unsigned int')))
  (ReturnStmt 0x9821760 <line:756:2, col:20>
    (CXXOperatorCallExpr 0x9821738 <col:9, col:20> 'const char':'const char' lvalue
      (ImplicitCastExpr 0x9821728 <col:9, col:20> 'const_reference (*)(size_type) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x98216d8 <col:9, col:20> 'const_reference (size_type) const' lvalue CXXMethod 0x932b2e0 'operator[]' 'const_reference (size_type) const'))
      (ParenExpr 0x9821698 <col:9, col:15> 'const class std::vector<char, class std::allocator<char> >' lvalue
        (UnaryOperator 0x9821680 <col:10, col:11> 'const class std::vector<char, class std::allocator<char> >' lvalue prefix '*'
          (CXXThisExpr 0x9821670 <col:11> 'const class std::vector<char, class std::allocator<char> > *' this)))
      (ImplicitCastExpr 0x98216c8 <col:17> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x98216ac <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x932b6e0 '__n' 'size_type':'unsigned int')))))


        reference front();
        const_reference front() const;
        reference back();
        const_reference back() const;
        pointer data();
        const_pointer data() const;
        void push_back(const value_type &__x);
        void pop_back();
        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x);
        template <typename _InputIterator = const char *> void insert(iterator __position, const char *__first, const char *__last) (CompoundStmt 0x980a050 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0x98092a0 <line:966:4, col:72>
    0x9809270 "typedef typename std::__is_integer<const char *>::__type _Integral")
  (CXXMemberCallExpr 0x9809f40 <line:967:4, col:63> 'void'
    (MemberExpr 0x9809f10 <col:4> '<bound member function type>' ->_M_insert_dispatch 0x9809a50
      (CXXThisExpr 0x9809f00 <col:4> 'class std::vector<char, class std::allocator<char> > *' this))
    (CXXConstructExpr 0x9809fb0 <col:23> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
      (ImplicitCastExpr 0x9809fa0 <col:23> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
        (DeclRefExpr 0x9809668 <col:23> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x949efc0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))
    (ImplicitCastExpr 0x9809fd8 <col:35> 'const char *':'const char *' <LValueToRValue>
      (DeclRefExpr 0x9809680 <col:35> 'const char *':'const char *' lvalue ParmVar 0x949f020 '__first' 'const char *':'const char *'))
    (ImplicitCastExpr 0x9809fe8 <col:44> 'const char *':'const char *' <LValueToRValue>
      (DeclRefExpr 0x9809698 <col:44> 'const char *':'const char *' lvalue ParmVar 0x949f060 '__last' 'const char *':'const char *'))
    (CXXConstructExpr 0x980a028 <col:52, col:62> 'struct std::__false_type''void (const struct std::__false_type &) throw()' elidable
      (MaterializeTemporaryExpr 0x980a008 <col:52, col:62> 'const struct std::__false_type' lvalue
        (ImplicitCastExpr 0x9809ff8 <col:52, col:62> 'const struct std::__false_type' <NoOp>
          (CXXTemporaryObjectExpr 0x9809850 <col:52, col:62> '_Integral':'struct std::__false_type''void (void) throw()' zeroing))))))

template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(std::vector<char, std::allocator<char> > &__x);
        void clear();
    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last);
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type);
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_initialize(size_type __n, const value_type &__value);
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type);
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer = const char *> void _M_insert_dispatch(iterator __pos, const char *__n, const char *__val, std::__true_type)template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type);
        template <typename _InputIterator = const char *> void _M_insert_dispatch(iterator __pos, const char *__first, const char *__last, std::__false_type) (CompoundStmt 0x980b798 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0x980a5e0 <line:1199:4, line:1200:37>
    0x980a5b0 "typedef typename std::iterator_traits<const char *>::iterator_category _IterCategory")
  (CXXMemberCallExpr 0x980b5e8 <line:1201:4, col:59> 'void'
    (MemberExpr 0x980b5b8 <col:4> '<bound member function type>' ->_M_range_insert 0x980b280
      (CXXThisExpr 0x980b5a8 <col:4> 'class std::vector<char, class std::allocator<char> > *' this))
    (CXXConstructExpr 0x980b658 <col:20> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
      (ImplicitCastExpr 0x980b648 <col:20> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
        (DeclRefExpr 0x980a988 <col:20> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x98098b0 '__pos' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))
    (ImplicitCastExpr 0x980b680 <col:27> 'const char *':'const char *' <LValueToRValue>
      (DeclRefExpr 0x980a9a0 <col:27> 'const char *':'const char *' lvalue ParmVar 0x9809910 '__first' 'const char *':'const char *'))
    (ImplicitCastExpr 0x980b690 <col:36> 'const char *':'const char *' <LValueToRValue>
      (DeclRefExpr 0x980a9b8 <col:36> 'const char *':'const char *' lvalue ParmVar 0x9809950 '__last' 'const char *':'const char *'))
    (CXXConstructExpr 0x980b770 <col:44, col:58> 'std::forward_iterator_tag':'struct std::forward_iterator_tag''void (const struct std::forward_iterator_tag &) throw()'
      (MaterializeTemporaryExpr 0x980b6c8 <col:44, col:58> 'const struct std::forward_iterator_tag' lvalue
        (ImplicitCastExpr 0x980b6b8 <col:44, col:58> 'const struct std::forward_iterator_tag' <NoOp>
          (ImplicitCastExpr 0x980b6a0 <col:44, col:58> 'struct std::forward_iterator_tag' <DerivedToBase (bidirectional_iterator_tag -> forward_iterator_tag)>
            (CXXTemporaryObjectExpr 0x980b080 <col:44, col:58> '_IterCategory':'struct std::random_access_iterator_tag''void (void) throw()' zeroing)))))))

template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator = const char *> void _M_range_insert(iterator __pos, const char *__first, const char *__last, std::input_iterator_tag)template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator = const char *> void _M_range_insert(iterator __position, const char *__first, const char *__last, std::forward_iterator_tag) (CompoundStmt 0x983cd08 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0x983cce8 <line:540:2, line:614:4>
    <<<NULL>>>
    (BinaryOperator 0x980b848 <line:540:6, col:17> '_Bool' '!='
      (ImplicitCastExpr 0x980b828 <col:6> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x980b7f8 <col:6> 'const char *':'const char *' lvalue ParmVar 0x980b140 '__first' 'const char *':'const char *'))
      (ImplicitCastExpr 0x980b838 <col:17> 'const char *':'const char *' <LValueToRValue>
        (DeclRefExpr 0x980b810 <col:17> 'const char *':'const char *' lvalue ParmVar 0x980b180 '__last' 'const char *':'const char *')))
    (CompoundStmt 0x983ccd0 <line:541:4, line:614:4>
      (DeclStmt 0x980bc30 <line:542:6, col:58>
        0x980b860 "const size_type __n =
          (ImplicitCastExpr 0x980bc20 <col:28, col:57> 'const size_type':'const unsigned int' <IntegralCast>
            (CallExpr 0x980bbd8 <col:28, col:57> 'typename iterator_traits<const char *>::difference_type':'int'
              (ImplicitCastExpr 0x980bbc8 <col:28, col:33> 'typename iterator_traits<const char *>::difference_type (*)(const char *, const char *)' <FunctionToPointerDecay>
                (DeclRefExpr 0x980bb88 <col:28, col:33> 'typename iterator_traits<const char *>::difference_type (const char *, const char *)' lvalue Function 0x980bae0 'distance' 'typename iterator_traits<const char *>::difference_type (const char *, const char *)' (FunctionTemplate 0x9283a30 'distance')))
              (ImplicitCastExpr 0x980bc00 <col:42> 'const char *':'const char *' <LValueToRValue>
                (DeclRefExpr 0x980b8cc <col:42> 'const char *':'const char *' lvalue ParmVar 0x980b140 '__first' 'const char *':'const char *'))
              (ImplicitCastExpr 0x980bc10 <col:51> 'const char *':'const char *' <LValueToRValue>
                (DeclRefExpr 0x980b8e4 <col:51> 'const char *':'const char *' lvalue ParmVar 0x980b180 '__last' 'const char *':'const char *'))))")
      (IfStmt 0x983ccb0 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0x980bde8 <line:543:10, line:544:36> '_Bool' '>='
          (CXXFunctionalCastExpr 0x980bda8 <line:543:10, line:544:31> 'size_type':'unsigned int' functional cast to size_type <NoOp>
            (ImplicitCastExpr 0x980bd98 <line:543:20, line:544:22> 'size_type':'unsigned int' <IntegralCast>
              (BinaryOperator 0x980bd80 <line:543:20, line:544:22> 'int' '-'
                (ImplicitCastExpr 0x980bd60 <line:543:20, col:34> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x980bccc <col:20, col:34> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_end_of_storage 0x94a7070
                    (MemberExpr 0x980bca0 <col:20, col:26> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x980bc90 <col:20> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x980bc80 <col:20> 'class std::vector<char, class std::allocator<char> > *' this)))))
                (ImplicitCastExpr 0x980bd70 <line:544:8, col:22> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x980bd3c <col:8, col:22> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                    (MemberExpr 0x980bd10 <col:8, col:14> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x980bd00 <col:8> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x980bcf0 <col:8> 'class std::vector<char, class std::allocator<char> > *' this))))))))
          (ImplicitCastExpr 0x980bdd8 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x980bdc0 <col:36> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0x983a148 <line:545:8, line:574:8>
          (DeclStmt 0x980ccd0 <line:546:3, col:53>
            0x980be30 "const size_type __elems_after =
              (ImplicitCastExpr 0x980ccc0 <col:35, col:43> 'const size_type':'const unsigned int' <IntegralCast>
                (CXXOperatorCallExpr 0x980cc98 <col:35, col:43> 'typename __normal_iterator<char *, class vector<char, class allocator<char> > >::difference_type':'int'
                  (ImplicitCastExpr 0x980cc88 <col:41, <invalid sloc>> 'typename __normal_iterator<char *, class vector<char, class allocator<char> > >::difference_type (*)(const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &, const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x980cc38 <col:41, <invalid sloc>> 'typename __normal_iterator<char *, class vector<char, class allocator<char> > >::difference_type (const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &, const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &)' lvalue Function 0x980cb20 'operator-' 'typename __normal_iterator<char *, class vector<char, class allocator<char> > >::difference_type (const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &, const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &)'))
                  (MaterializeTemporaryExpr 0x980cc18 <col:35, col:39> 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue
                    (ImplicitCastExpr 0x980cc08 <col:35, col:39> 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
                      (CXXMemberCallExpr 0x980c278 <col:35, col:39> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'
                        (MemberExpr 0x980c258 <col:35> '<bound member function type>' ->end 0x932a340
                          (CXXThisExpr 0x980c248 <col:35> 'class std::vector<char, class std::allocator<char> > *' this)))))
                  (ImplicitCastExpr 0x980cc28 <col:43> 'const __normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                    (DeclRefExpr 0x980c294 <col:43> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'))))")
          (DeclStmt 0x980ce68 <line:547:3, col:48>
            0x980cdb0 "pointer __old_finish =
              (ImplicitCastExpr 0x980ce58 <col:24, col:38> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                (MemberExpr 0x980ce34 <col:24, col:38> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                  (MemberExpr 0x980ce08 <col:24, col:30> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                    (ImplicitCastExpr 0x980cdf8 <col:24> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x980cde8 <col:24> 'class std::vector<char, class std::allocator<char> > *' this)))))")
          (IfStmt 0x983a128 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0x980cec8 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0x980cea8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x980ce78 <col:7> 'const size_type':'const unsigned int' lvalue Var 0x980be30 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x980ceb8 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x980ce90 <col:23> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0x98387b8 <line:549:5, line:558:5>
              (CallExpr 0x9837d88 <line:550:7, line:553:28> 'char *':'char *'
                (ImplicitCastExpr 0x9837d78 <line:550:7, col:12> 'char *(*)(char *, char *, char *, class std::allocator<char> &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9837d18 <col:7, col:12> 'char *(char *, char *, char *, class std::allocator<char> &)' lvalue Function 0x9837c40 '__uninitialized_move_a' 'char *(char *, char *, char *, class std::allocator<char> &)' (FunctionTemplate 0x92f6a20 '__uninitialized_move_a')))
                (BinaryOperator 0x980d030 <col:35, col:61> 'typename _Tp_alloc_type::pointer':'char *' '-'
                  (ImplicitCastExpr 0x980d010 <col:35, col:49> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                    (MemberExpr 0x980cfd4 <col:35, col:49> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                      (MemberExpr 0x980cfa8 <col:35, col:41> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                        (ImplicitCastExpr 0x980cf98 <col:35> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x980cf88 <col:35> 'class std::vector<char, class std::allocator<char> > *' this)))))
                  (ImplicitCastExpr 0x980d020 <col:61> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x980cff4 <col:61> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int')))
                (ImplicitCastExpr 0x9837db8 <line:551:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x980d094 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                    (MemberExpr 0x980d068 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x980d058 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x980d048 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
                (ImplicitCastExpr 0x9837dc8 <line:552:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x980d104 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                    (MemberExpr 0x980d0d8 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x980d0c8 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x980d0b8 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
                (CXXMemberCallExpr 0x9837968 <line:553:7, col:27> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                  (MemberExpr 0x9837938 <col:7> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                    (ImplicitCastExpr 0x9837988 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9837928 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
              (CompoundAssignOperator 0x9837e70 <line:554:7, col:34> 'typename _Tp_alloc_type::pointer':'char *' lvalue '+=' ComputeLHSTy='typename _Tp_alloc_type::pointer':'char *' ComputeResultTy='typename _Tp_alloc_type::pointer':'char *'
                (MemberExpr 0x9837e24 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                  (MemberExpr 0x9837df8 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                    (ImplicitCastExpr 0x9837de8 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9837dd8 <col:7> 'class std::vector<char, class std::allocator<char> > *' this))))
                (ImplicitCastExpr 0x9837e60 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9837e44 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int')))
              (CallExpr 0x9838338 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> 'char *':'char *'
                (ImplicitCastExpr 0x9838328 <col:48, col:53> 'char *(*)(char *, char *, char *)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x98382c8 <col:48, col:53> 'char *(char *, char *, char *)' lvalue Function 0x9838200 'copy_backward' 'char *(char *, char *, char *)' (FunctionTemplate 0x92b9d60 'copy_backward')))
                (ImplicitCastExpr 0x9838360 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> 'char *':'char *' <LValueToRValue>
                  (CXXMemberCallExpr 0x9837f00 <col:31, col:47> 'char *const':'char *const' lvalue
                    (MemberExpr 0x9837edc <col:31, col:42> '<bound member function type>' .base 0x949ee80
                      (ImplicitCastExpr 0x9837f38 <col:31> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                        (DeclRefExpr 0x9837ec4 <col:31> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))
                (BinaryOperator 0x9837fd8 <line:556:10, col:25> 'pointer':'char *' '-'
                  (ImplicitCastExpr 0x9837fb8 <col:10> 'pointer':'char *' <LValueToRValue>
                    (DeclRefExpr 0x9837f84 <col:10> 'pointer':'char *' lvalue Var 0x980cdb0 '__old_finish' 'pointer':'char *'))
                  (ImplicitCastExpr 0x9837fc8 <col:25> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9837f9c <col:25> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int')))
                (ImplicitCastExpr 0x9838370 <col:30> 'pointer':'char *' <LValueToRValue>
                  (DeclRefExpr 0x9837ff0 <col:30> 'pointer':'char *' lvalue Var 0x980cdb0 '__old_finish' 'pointer':'char *')))
              (CallExpr 0x9838708 <line:557:7, col:44> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'
                (ImplicitCastExpr 0x98386f8 <col:7, col:12> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (*)(const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9838698 <col:7, col:12> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' lvalue Function 0x98385d0 'copy' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' (FunctionTemplate 0x92b4db0 'copy')))
                (ImplicitCastExpr 0x9838730 <col:17> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x98383b4 <col:17> 'const char *':'const char *' lvalue ParmVar 0x980b140 '__first' 'const char *':'const char *'))
                (ImplicitCastExpr 0x9838740 <col:26> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x98383cc <col:26> 'const char *':'const char *' lvalue ParmVar 0x980b180 '__last' 'const char *':'const char *'))
                (CXXConstructExpr 0x9838790 <col:34> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
                  (ImplicitCastExpr 0x9838780 <col:34> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                    (DeclRefExpr 0x98383e4 <col:34> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))
            (CompoundStmt 0x983a0f8 <line:560:5, line:573:5>
              (DeclStmt 0x9838860 <line:561:7, col:39>
                0x9838800 "const char *__mid =
                  (ImplicitCastExpr 0x9838850 <col:32> 'const char *':'const char *' <LValueToRValue>
                    (DeclRefExpr 0x9838834 <col:32> 'const char *':'const char *' lvalue ParmVar 0x980b140 '__first' 'const char *':'const char *'))")
              (CallExpr 0x9838be8 <line:562:7, col:40> 'void'
                (ImplicitCastExpr 0x9838bd8 <col:7, col:12> 'void (*)(const char *&, unsigned int)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9838b78 <col:7, col:12> 'void (const char *&, unsigned int)' lvalue Function 0x9838ac0 'advance' 'void (const char *&, unsigned int)' (FunctionTemplate 0x9285340 'advance')))
                (DeclRefExpr 0x98388a4 <col:20> 'const char *':'const char *' lvalue Var 0x9838800 '__mid' 'const char *':'const char *')
                (ImplicitCastExpr 0x9838c10 <col:27> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x98388bc <col:27> 'const size_type':'const unsigned int' lvalue Var 0x980be30 '__elems_after' 'const size_type':'const unsigned int')))
              (CallExpr 0x98397b8 <line:563:7, line:565:28> 'char *':'char *'
                (ImplicitCastExpr 0x98397a8 <line:563:7, col:12> 'char *(*)(const char *, const char *, char *, allocator<char> &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9839748 <col:7, col:12> 'char *(const char *, const char *, char *, allocator<char> &)' lvalue Function 0x9839670 '__uninitialized_copy_a' 'char *(const char *, const char *, char *, allocator<char> &)' (FunctionTemplate 0x92f6610 '__uninitialized_copy_a')))
                (ImplicitCastExpr 0x98397e8 <col:35> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9838c58 <col:35> 'const char *':'const char *' lvalue Var 0x9838800 '__mid' 'const char *':'const char *'))
                (ImplicitCastExpr 0x98397f8 <col:42> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9838c70 <col:42> 'const char *':'const char *' lvalue ParmVar 0x980b180 '__last' 'const char *':'const char *'))
                (ImplicitCastExpr 0x9839808 <line:564:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x9838cd4 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                    (MemberExpr 0x9838ca8 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x9838c98 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x9838c88 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
                (CXXMemberCallExpr 0x9839008 <line:565:7, col:27> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                  (MemberExpr 0x9838fd8 <col:7> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                    (ImplicitCastExpr 0x9839028 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9838fc8 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
              (CompoundAssignOperator 0x98398f0 <line:566:7, col:40> 'typename _Tp_alloc_type::pointer':'char *' lvalue '+=' ComputeLHSTy='typename _Tp_alloc_type::pointer':'char *' ComputeResultTy='typename _Tp_alloc_type::pointer':'char *'
                (MemberExpr 0x9839864 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                  (MemberExpr 0x9839838 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                    (ImplicitCastExpr 0x9839828 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9839818 <col:7> 'class std::vector<char, class std::allocator<char> > *' this))))
                (BinaryOperator 0x98398d8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0x98398b8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9839884 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0x98398c8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x983989c <col:40> 'const size_type':'const unsigned int' lvalue Var 0x980be30 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x9839e28 <line:567:7, line:570:28> 'char *':'char *'
                (ImplicitCastExpr 0x9839e18 <line:567:7, col:12> 'char *(*)(char *, char *, char *, class std::allocator<char> &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9839df0 <col:7, col:12> 'char *(char *, char *, char *, class std::allocator<char> &)' lvalue Function 0x9837c40 '__uninitialized_move_a' 'char *(char *, char *, char *, class std::allocator<char> &)' (FunctionTemplate 0x92f6a20 '__uninitialized_move_a')))
                (ImplicitCastExpr 0x9839e58 <col:35, col:51> 'char *':'char *' <LValueToRValue>
                  (CXXMemberCallExpr 0x9839980 <col:35, col:51> 'char *const':'char *const' lvalue
                    (MemberExpr 0x983995c <col:35, col:46> '<bound member function type>' .base 0x949ee80
                      (ImplicitCastExpr 0x98399a0 <col:35> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                        (DeclRefExpr 0x9839944 <col:35> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))
                (ImplicitCastExpr 0x9839e68 <line:568:7> 'pointer':'char *' <LValueToRValue>
                  (DeclRefExpr 0x98399ac <col:7> 'pointer':'char *' lvalue Var 0x980cdb0 '__old_finish' 'pointer':'char *'))
                (ImplicitCastExpr 0x9839e78 <line:569:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x9839a14 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                    (MemberExpr 0x98399e8 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x98399d8 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x98399c8 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
                (CXXMemberCallExpr 0x9839d48 <line:570:7, col:27> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                  (MemberExpr 0x9839d18 <col:7> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                    (ImplicitCastExpr 0x9839d68 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9839d08 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
              (CompoundAssignOperator 0x9839f20 <line:571:7, col:34> 'typename _Tp_alloc_type::pointer':'char *' lvalue '+=' ComputeLHSTy='typename _Tp_alloc_type::pointer':'char *' ComputeResultTy='typename _Tp_alloc_type::pointer':'char *'
                (MemberExpr 0x9839ed4 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                  (MemberExpr 0x9839ea8 <col:7, col:13> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                    (ImplicitCastExpr 0x9839e98 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x9839e88 <col:7> 'class std::vector<char, class std::allocator<char> > *' this))))
                (ImplicitCastExpr 0x9839f10 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9839ef4 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x980be30 '__elems_after' 'const size_type':'const unsigned int')))
              (CallExpr 0x983a048 <line:572:7, col:43> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'
                (ImplicitCastExpr 0x983a038 <col:7, col:12> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (*)(const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x983a010 <col:7, col:12> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' lvalue Function 0x98385d0 'copy' 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > (const char *, const char *, class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >)' (FunctionTemplate 0x92b4db0 'copy')))
                (ImplicitCastExpr 0x983a070 <col:17> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9839f74 <col:17> 'const char *':'const char *' lvalue ParmVar 0x980b140 '__first' 'const char *':'const char *'))
                (ImplicitCastExpr 0x983a080 <col:26> 'const char *':'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9839f8c <col:26> 'const char *':'const char *' lvalue Var 0x9838800 '__mid' 'const char *':'const char *'))
                (CXXConstructExpr 0x983a0d0 <col:33> 'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()'
                  (ImplicitCastExpr 0x983a0c0 <col:33> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                    (DeclRefExpr 0x9839fa4 <col:33> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))))
        (CompoundStmt 0x983cc78 <line:576:8, line:613:8>
          (DeclStmt 0x983a318 <line:577:3, line:578:49>
            0x983a170 "const size_type __len =
              (CXXMemberCallExpr 0x983a2c0 <col:5, col:48> 'size_type':'unsigned int'
                (MemberExpr 0x983a288 <col:5> '<bound member function type>' ->_M_check_len 0x949b050
                  (ImplicitCastExpr 0x983a2e8 <col:5> 'const class std::vector<char, class std::allocator<char> > *' <NoOp>
                    (CXXThisExpr 0x983a1a8 <col:5> 'class std::vector<char, class std::allocator<char> > *' this)))
                (ImplicitCastExpr 0x983a2f8 <col:18> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x983a2a8 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x980b860 '__n' 'const size_type':'const unsigned int'))
                (ImplicitCastExpr 0x983a308 <col:23> 'const char *' <ArrayToPointerDecay>
                  (StringLiteral 0x93615a0 <col:23> 'const char [24]' lvalue "vector::_M_range_insert")))")
          (DeclStmt 0x983a4d0 <line:579:3, col:48>
            0x983a400 "pointer __new_start =
              (CXXMemberCallExpr 0x983a490 <col:23, col:46> 'typename _Tp_alloc_type::pointer':'char *'
                (MemberExpr 0x983a448 <col:23, col:29> '<bound member function type>' ->_M_allocate 0x94a7670
                  (ImplicitCastExpr 0x983a4b0 <col:23> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0x983a438 <col:23> 'class std::vector<char, class std::allocator<char> > *' this)))
                (ImplicitCastExpr 0x983a4c0 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x983a474 <col:41> 'const size_type':'const unsigned int' lvalue Var 0x983a170 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x983a610 <line:580:3, col:36>
            0x983a5b0 "pointer __new_finish =
              (ImplicitCastExpr 0x983a600 <col:24> 'pointer':'char *' <LValueToRValue>
                (DeclRefExpr 0x983a5e4 <col:24> 'pointer':'char *' lvalue Var 0x983a400 '__new_start' 'pointer':'char *'))")
          (IfStmt 0x983b700 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9361790 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x983b6e0 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0x983aba8 <line:583:7, line:587:30> 'pointer':'char *' lvalue '='
                (DeclRefExpr 0x983a620 <line:583:7> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *')
                (CallExpr 0x983ab48 <line:584:9, line:587:30> 'char *':'char *'
                  (ImplicitCastExpr 0x983ab38 <line:584:9, col:14> 'char *(*)(char *, char *, char *, class std::allocator<char> &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x983ab10 <col:9, col:14> 'char *(char *, char *, char *, class std::allocator<char> &)' lvalue Function 0x9837c40 '__uninitialized_move_a' 'char *(char *, char *, char *, class std::allocator<char> &)' (FunctionTemplate 0x92f6a20 '__uninitialized_move_a')))
                  (ImplicitCastExpr 0x983ab78 <col:37, col:51> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                    (MemberExpr 0x983a6bc <col:37, col:51> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
                      (MemberExpr 0x983a690 <col:37, col:43> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                        (ImplicitCastExpr 0x983a680 <col:37> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x983a670 <col:37> 'class std::vector<char, class std::allocator<char> > *' this)))))
                  (ImplicitCastExpr 0x983ab88 <line:585:9, col:25> 'char *':'char *' <LValueToRValue>
                    (CXXMemberCallExpr 0x983a718 <col:9, col:25> 'char *const':'char *const' lvalue
                      (MemberExpr 0x983a6f4 <col:9, col:20> '<bound member function type>' .base 0x949ee80
                        (ImplicitCastExpr 0x983a738 <col:9> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                          (DeclRefExpr 0x983a6dc <col:9> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))
                  (ImplicitCastExpr 0x983ab98 <line:586:9> 'pointer':'char *' <LValueToRValue>
                    (DeclRefExpr 0x983a744 <col:9> 'pointer':'char *' lvalue Var 0x983a400 '__new_start' 'pointer':'char *'))
                  (CXXMemberCallExpr 0x983aa68 <line:587:9, col:29> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                    (MemberExpr 0x983aa38 <col:9> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                      (ImplicitCastExpr 0x983aa88 <col:9> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x983aa28 <col:9> 'class std::vector<char, class std::allocator<char> > *' this))))))
              (BinaryOperator 0x983b120 <line:588:7, line:591:30> 'pointer':'char *' lvalue '='
                (DeclRefExpr 0x983abc0 <line:588:7> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *')
                (CallExpr 0x983b0c0 <line:589:9, line:591:30> 'char *':'char *'
                  (ImplicitCastExpr 0x983b0b0 <line:589:9, col:14> 'char *(*)(const char *, const char *, char *, allocator<char> &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x983b088 <col:9, col:14> 'char *(const char *, const char *, char *, allocator<char> &)' lvalue Function 0x9839670 '__uninitialized_copy_a' 'char *(const char *, const char *, char *, allocator<char> &)' (FunctionTemplate 0x92f6610 '__uninitialized_copy_a')))
                  (ImplicitCastExpr 0x983b0f0 <col:37> 'const char *':'const char *' <LValueToRValue>
                    (DeclRefExpr 0x983ac10 <col:37> 'const char *':'const char *' lvalue ParmVar 0x980b140 '__first' 'const char *':'const char *'))
                  (ImplicitCastExpr 0x983b100 <col:46> 'const char *':'const char *' <LValueToRValue>
                    (DeclRefExpr 0x983ac28 <col:46> 'const char *':'const char *' lvalue ParmVar 0x980b180 '__last' 'const char *':'const char *'))
                  (ImplicitCastExpr 0x983b110 <line:590:9> 'pointer':'char *' <LValueToRValue>
                    (DeclRefExpr 0x983ac40 <col:9> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *'))
                  (CXXMemberCallExpr 0x983af68 <line:591:9, col:29> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                    (MemberExpr 0x983af38 <col:9> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                      (ImplicitCastExpr 0x983af88 <col:9> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x983af28 <col:9> 'class std::vector<char, class std::allocator<char> > *' this))))))
              (BinaryOperator 0x983b6c8 <line:592:7, line:596:30> 'pointer':'char *' lvalue '='
                (DeclRefExpr 0x983b138 <line:592:7> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *')
                (CallExpr 0x983b668 <line:593:9, line:596:30> 'char *':'char *'
                  (ImplicitCastExpr 0x983b658 <line:593:9, col:14> 'char *(*)(char *, char *, char *, class std::allocator<char> &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x983b630 <col:9, col:14> 'char *(char *, char *, char *, class std::allocator<char> &)' lvalue Function 0x9837c40 '__uninitialized_move_a' 'char *(char *, char *, char *, class std::allocator<char> &)' (FunctionTemplate 0x92f6a20 '__uninitialized_move_a')))
                  (ImplicitCastExpr 0x983b698 <col:37, col:53> 'char *':'char *' <LValueToRValue>
                    (CXXMemberCallExpr 0x983b1c0 <col:37, col:53> 'char *const':'char *const' lvalue
                      (MemberExpr 0x983b19c <col:37, col:48> '<bound member function type>' .base 0x949ee80
                        (ImplicitCastExpr 0x983b1e0 <col:37> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue <NoOp>
                          (DeclRefExpr 0x983b184 <col:37> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue ParmVar 0x980b0e0 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >')))))
                  (ImplicitCastExpr 0x983b6a8 <line:594:9, col:23> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                    (MemberExpr 0x983b23c <col:9, col:23> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                      (MemberExpr 0x983b210 <col:9, col:15> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                        (ImplicitCastExpr 0x983b200 <col:9> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x983b1f0 <col:9> 'class std::vector<char, class std::allocator<char> > *' this)))))
                  (ImplicitCastExpr 0x983b6b8 <line:595:9> 'pointer':'char *' <LValueToRValue>
                    (DeclRefExpr 0x983b25c <col:9> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *'))
                  (CXXMemberCallExpr 0x983b588 <line:596:9, col:29> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                    (MemberExpr 0x983b558 <col:9> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                      (ImplicitCastExpr 0x983b5a8 <col:9> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x983b548 <col:9> 'class std::vector<char, class std::allocator<char> > *' this)))))))
            <<<NULL>>>)
          (IfStmt 0x983bf60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9361d58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x983bf40 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0x983bba0 <line:600:7, line:601:28> 'void'
                (ImplicitCastExpr 0x983bb90 <line:600:7, col:12> 'void (*)(char *, char *, allocator<char> &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x983bb68 <col:7, col:12> 'void (char *, char *, allocator<char> &)' lvalue Function 0x9808080 '_Destroy' 'void (char *, char *, allocator<char> &)' (FunctionTemplate 0x92edd40 '_Destroy')))
                (ImplicitCastExpr 0x983bbc8 <col:21> 'pointer':'char *' <LValueToRValue>
                  (DeclRefExpr 0x983b760 <col:21> 'pointer':'char *' lvalue Var 0x983a400 '__new_start' 'pointer':'char *'))
                (ImplicitCastExpr 0x983bbd8 <col:34> 'pointer':'char *' <LValueToRValue>
                  (DeclRefExpr 0x983b778 <col:34> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *'))
                (CXXMemberCallExpr 0x983ba98 <line:601:7, col:27> '_Tp_alloc_type':'class std::allocator<char>' lvalue
                  (MemberExpr 0x983ba68 <col:7> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                    (ImplicitCastExpr 0x983bab8 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0x983ba58 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))))
              (CXXMemberCallExpr 0x983bee8 <line:602:7, col:39> 'void'
                (MemberExpr 0x983be88 <col:7> '<bound member function type>' ->_M_deallocate 0x94a7890
                  (ImplicitCastExpr 0x983bf10 <col:7> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0x983be78 <col:7> 'class std::vector<char, class std::allocator<char> > *' this)))
                (ImplicitCastExpr 0x983bf20 <col:21> 'pointer':'char *' <LValueToRValue>
                  (DeclRefExpr 0x983beb4 <col:21> 'pointer':'char *' lvalue Var 0x983a400 '__new_start' 'pointer':'char *'))
                (ImplicitCastExpr 0x983bf30 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x983becc <col:34> 'const size_type':'const unsigned int' lvalue Var 0x983a170 '__len' 'const size_type':'const unsigned int')))
              (NullStmt 0x9361f20 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0x983c4b0 <line:605:3, line:606:31> 'void'
            (ImplicitCastExpr 0x983c4a0 <line:605:3, col:8> 'void (*)(char *, char *, allocator<char> &)' <FunctionToPointerDecay>
              (DeclRefExpr 0x983c478 <col:3, col:8> 'void (char *, char *, allocator<char> &)' lvalue Function 0x9808080 '_Destroy' 'void (char *, char *, allocator<char> &)' (FunctionTemplate 0x92edd40 '_Destroy')))
            (ImplicitCastExpr 0x983c4d8 <col:17, col:31> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
              (MemberExpr 0x983c00c <col:17, col:31> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
                (MemberExpr 0x983bfe0 <col:17, col:23> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                  (ImplicitCastExpr 0x983bfd0 <col:17> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0x983bfc0 <col:17> 'class std::vector<char, class std::allocator<char> > *' this)))))
            (ImplicitCastExpr 0x983c4e8 <col:41, col:55> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
              (MemberExpr 0x983c07c <col:41, col:55> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
                (MemberExpr 0x983c050 <col:41, col:47> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                  (ImplicitCastExpr 0x983c040 <col:41> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0x983c030 <col:41> 'class std::vector<char, class std::allocator<char> > *' this)))))
            (CXXMemberCallExpr 0x983c3a8 <line:606:10, col:30> '_Tp_alloc_type':'class std::allocator<char>' lvalue
              (MemberExpr 0x983c378 <col:10> '<bound member function type>' ->_M_get_Tp_allocator 0x9496050
                (ImplicitCastExpr 0x983c3c8 <col:10> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x983c368 <col:10> 'class std::vector<char, class std::allocator<char> > *' this)))))
          (CXXMemberCallExpr 0x983c990 <line:607:3, line:609:34> 'void'
            (MemberExpr 0x983c798 <line:607:3> '<bound member function type>' ->_M_deallocate 0x94a7890
              (ImplicitCastExpr 0x983c9b8 <col:3> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0x983c788 <col:3> 'class std::vector<char, class std::allocator<char> > *' this)))
            (ImplicitCastExpr 0x983c9c8 <col:17, col:31> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
              (MemberExpr 0x983c814 <col:17, col:31> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
                (MemberExpr 0x983c7e8 <col:17, col:23> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                  (ImplicitCastExpr 0x983c7d8 <col:17> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0x983c7c8 <col:17> 'class std::vector<char, class std::allocator<char> > *' this)))))
            (ImplicitCastExpr 0x983c9d8 <line:608:10, line:609:26> 'size_t':'unsigned int' <IntegralCast>
              (BinaryOperator 0x983c978 <line:608:10, line:609:26> 'int' '-'
                (ImplicitCastExpr 0x983c958 <line:608:10, col:24> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x983c8c4 <col:10, col:24> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_end_of_storage 0x94a7070
                    (MemberExpr 0x983c898 <col:10, col:16> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x983c888 <col:10> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x983c878 <col:10> 'class std::vector<char, class std::allocator<char> > *' this)))))
                (ImplicitCastExpr 0x983c968 <line:609:12, col:26> 'typename _Tp_alloc_type::pointer':'char *' <LValueToRValue>
                  (MemberExpr 0x983c934 <col:12, col:26> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
                    (MemberExpr 0x983c908 <col:12, col:18> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                      (ImplicitCastExpr 0x983c8f8 <col:12> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                        (CXXThisExpr 0x983c8e8 <col:12> 'class std::vector<char, class std::allocator<char> > *' this))))))))
          (BinaryOperator 0x983ca80 <line:610:3, col:28> 'typename _Tp_alloc_type::pointer':'char *' lvalue '='
            (MemberExpr 0x983ca34 <col:3, col:17> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_start 0x94a6e30
              (MemberExpr 0x983ca08 <col:3, col:9> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                (ImplicitCastExpr 0x983c9f8 <col:3> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x983c9e8 <col:3> 'class std::vector<char, class std::allocator<char> > *' this))))
            (ImplicitCastExpr 0x983ca70 <col:28> 'pointer':'char *' <LValueToRValue>
              (DeclRefExpr 0x983ca54 <col:28> 'pointer':'char *' lvalue Var 0x983a400 '__new_start' 'pointer':'char *')))
          (BinaryOperator 0x983cb30 <line:611:3, col:29> 'typename _Tp_alloc_type::pointer':'char *' lvalue '='
            (MemberExpr 0x983cae4 <col:3, col:17> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_finish 0x94a6f50
              (MemberExpr 0x983cab8 <col:3, col:9> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                (ImplicitCastExpr 0x983caa8 <col:3> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x983ca98 <col:3> 'class std::vector<char, class std::allocator<char> > *' this))))
            (ImplicitCastExpr 0x983cb20 <col:29> 'pointer':'char *' <LValueToRValue>
              (DeclRefExpr 0x983cb04 <col:29> 'pointer':'char *' lvalue Var 0x983a5b0 '__new_finish' 'pointer':'char *')))
          (BinaryOperator 0x983cc60 <line:612:3, col:51> 'typename _Tp_alloc_type::pointer':'char *' lvalue '='
            (MemberExpr 0x983cb94 <col:3, col:17> 'typename _Tp_alloc_type::pointer':'char *' lvalue ._M_end_of_storage 0x94a7070
              (MemberExpr 0x983cb68 <col:3, col:9> 'struct std::_Vector_base<char, class std::allocator<char> >::_Vector_impl' lvalue ->_M_impl 0x94a74c0
                (ImplicitCastExpr 0x983cb58 <col:3> 'struct std::_Vector_base<char, class std::allocator<char> > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0x983cb48 <col:3> 'class std::vector<char, class std::allocator<char> > *' this))))
            (BinaryOperator 0x983cc48 <col:37, col:51> 'pointer':'char *' '+'
              (ImplicitCastExpr 0x983cc28 <col:37> 'pointer':'char *' <LValueToRValue>
                (DeclRefExpr 0x983cbf4 <col:37> 'pointer':'char *' lvalue Var 0x983a400 '__new_start' 'pointer':'char *'))
              (ImplicitCastExpr 0x983cc38 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x983cc0c <col:51> 'const size_type':'const unsigned int' lvalue Var 0x983a170 '__len' 'const size_type':'const unsigned int')))))))
    <<<NULL>>>))

template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x981b1f0 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0x981a6f0 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (BinaryOperator 0x981a668 <line:1241:6, col:28> '_Bool' '<'
      (BinaryOperator 0x981a628 <col:6, col:24> 'unsigned int' '-'
        (CXXMemberCallExpr 0x981a4e8 <col:6, col:15> 'size_type':'unsigned int'
          (MemberExpr 0x981a4c8 <col:6> '<bound member function type>' ->max_size 0x932ab50
            (CXXThisExpr 0x981a3f0 <col:6> 'const class std::vector<char, class std::allocator<char> > *' this)))
        (CXXMemberCallExpr 0x981a608 <col:19, col:24> 'size_type':'unsigned int'
          (MemberExpr 0x981a5e8 <col:19> '<bound member function type>' ->size 0x932aae0
            (CXXThisExpr 0x981a508 <col:19> 'const class std::vector<char, class std::allocator<char> > *' this))))
      (ImplicitCastExpr 0x981a658 <col:28> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x981a640 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x949afd0 '__n' 'size_type':'unsigned int')))
    (CallExpr 0x981a6c0 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0x981a6b0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9318ecc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x981a6e0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x981a698 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x981a680 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0x949b010 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x981acd8 <line:1244:2, col:56>
    0x981a710 "const size_type __len =
      (BinaryOperator 0x981acc0 <col:26, col:55> 'unsigned int' '+'
        (CXXMemberCallExpr 0x981a878 <col:26, col:31> 'size_type':'unsigned int'
          (MemberExpr 0x981a858 <col:26> '<bound member function type>' ->size 0x932aae0
            (CXXThisExpr 0x981a780 <col:26> 'const class std::vector<char, class std::allocator<char> > *' this)))
        (ImplicitCastExpr 0x981acb0 <col:35, col:55> 'unsigned int':'unsigned int' <LValueToRValue>
          (CallExpr 0x981ac68 <col:35, col:55> 'const unsigned int':'const unsigned int' lvalue
            (ImplicitCastExpr 0x981ac58 <col:35, col:40> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
              (DeclRefExpr 0x981ac18 <col:35, col:40> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x981ab70 'max' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x92aa3b0 'max')))
            (MaterializeTemporaryExpr 0x981ac90 <col:44, col:49> 'const unsigned int':'const unsigned int' lvalue
              (CXXMemberCallExpr 0x981a9c8 <col:44, col:49> 'size_type':'unsigned int'
                (MemberExpr 0x981a9a8 <col:44> '<bound member function type>' ->size 0x932aae0
                  (CXXThisExpr 0x981a8d0 <col:44> 'const class std::vector<char, class std::allocator<char> > *' this))))
            (ImplicitCastExpr 0x981aca0 <col:52> 'const unsigned int':'const unsigned int' lvalue <NoOp>
              (DeclRefExpr 0x981a9e4 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0x949afd0 '__n' 'size_type':'unsigned int')))))")
  (ReturnStmt 0x981b1e0 <line:1245:2, col:63>
    (ConditionalOperator 0x981b190 <col:9, col:63> 'size_type':'unsigned int'
      (ParenExpr 0x981b038 <col:9, col:46> '_Bool'
        (BinaryOperator 0x981b020 <col:10, col:45> '_Bool' '||'
          (BinaryOperator 0x981ae68 <col:10, col:23> '_Bool' '<'
            (ImplicitCastExpr 0x981ae58 <col:10> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x981ad24 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x981a710 '__len' 'const size_type':'const unsigned int'))
            (CXXMemberCallExpr 0x981ae38 <col:18, col:23> 'size_type':'unsigned int'
              (MemberExpr 0x981ae18 <col:18> '<bound member function type>' ->size 0x932aae0
                (CXXThisExpr 0x981ad40 <col:18> 'const class std::vector<char, class std::allocator<char> > *' this))))
          (BinaryOperator 0x981b008 <col:28, col:45> '_Bool' '>'
            (ImplicitCastExpr 0x981aff8 <col:28> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x981aebc <col:28> 'const size_type':'const unsigned int' lvalue Var 0x981a710 '__len' 'const size_type':'const unsigned int'))
            (CXXMemberCallExpr 0x981afd8 <col:36, col:45> 'size_type':'unsigned int'
              (MemberExpr 0x981afb8 <col:36> '<bound member function type>' ->max_size 0x932ab50
                (CXXThisExpr 0x981aed8 <col:36> 'const class std::vector<char, class std::allocator<char> > *' this))))))
      (CXXMemberCallExpr 0x981b148 <col:50, col:59> 'size_type':'unsigned int'
        (MemberExpr 0x981b128 <col:50> '<bound member function type>' ->max_size 0x932ab50
          (CXXThisExpr 0x981b050 <col:50> 'const class std::vector<char, class std::allocator<char> > *' this)))
      (ImplicitCastExpr 0x981b180 <col:63> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x981b164 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x981a710 '__len' 'const size_type':'const unsigned int')))))


        void _M_erase_at_end(pointer __pos);
    }
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0x930f320 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0x930f330 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9303a30 '__a' 'const allocator_type &')
) (CompoundStmt 0x930f390 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0x930f260 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x930f280 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x930f3a0 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0x9303b40 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0x930f3b8 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9303c10 '__a' 'const allocator_type &')
) (CompoundStmt 0x930f4c0 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0x930f498 <col:9, col:40> '<dependent type>'
    (MemberExpr 0x930f448 <col:9> '<bound member function type>' ->_M_fill_initialize 0x930aed0
      (CXXThisExpr 0x930f438 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x930f468 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9303b40 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x930f480 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0x9303bc0 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0x930f528 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x930f4f0 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0x930f4d4 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9303d80 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0x930f598 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x930f560 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0x930f544 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9303d80 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0x930f8d0 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0x930f8b8 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x930f648 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x930f610 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x930f600 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x930f888 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0x930f698 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
      (CallExpr 0x930f720 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x930f6e8 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x930f6d0 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9303d80 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x930f790 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x930f758 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0x930f73c <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9303d80 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0x930f7f8 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x930f7c0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x930f7b0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x930f868 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x930f82c <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x930f2a0 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x930f8e4 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9303f60 '__a' 'const allocator_type &')
) (CompoundStmt 0x930fbc8 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0x930fae0 <line:339:4, col:72>
    0x930fab0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x930fba0 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0x930fb00 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x930fb40 <col:27> '_InputIterator' lvalue ParmVar 0x9303ed0 '__first' '_InputIterator')
    (DeclRefExpr 0x930fb58 <col:36> '_InputIterator' lvalue ParmVar 0x9303f10 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x930fb88 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0x930fdc8 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0x930fda0 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0x930fc08 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
    (CXXDependentScopeMemberExpr 0x930fc90 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x930fc58 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x930fc48 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x930fd10 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x930fcd8 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x930fcc8 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x930fd80 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x930fd44 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0x930fe68 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0x930fe40 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x930fdf0 <col:9> '<bound member function type>' ->_M_fill_assign 0x930b870
      (CXXThisExpr 0x930fde0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x930fe10 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0x9304320 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x930fe28 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0x9304370 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9310098 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0x930ffb0 <line:432:4, col:72>
    0x930ff80 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9310070 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0x930ffd0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9310010 <col:23> '_InputIterator' lvalue ParmVar 0x93044e0 '__first' '_InputIterator')
    (DeclRefExpr 0x9310028 <col:32> '_InputIterator' lvalue ParmVar 0x9304520 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9310058 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0x9310168 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0x9310158 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0x9310138 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9310100 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x93100c8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x93100b8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0x9310258 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0x9310248 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x9310228 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x93101f0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x93101b8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x93101a8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0x9310328 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0x9310318 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0x93102f8 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x93102c0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9310288 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9310278 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0x93103f8 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0x93103e8 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0x93103c8 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9310390 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9310358 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9310348 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0x93104b8 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0x93104a8 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0x9310488 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9310468 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x9310428 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9310578 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0x9310568 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9310548 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9310528 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0x93104e8 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0x9310638 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0x9310628 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9310608 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x93105e8 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x93105a8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0x93106f8 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0x93106e8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x93106c8 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x93106a8 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0x9310668 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0x93108a8 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0x9310898 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0x9310878 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9310850 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9310818 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (CXXDependentScopeMemberExpr 0x9310760 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9310728 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x9310718 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x93107e0 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93107a8 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0x9310798 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0x9310980 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0x9310970 <col:9, col:47>
    (CallExpr 0x9310950 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9310918 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0x93108f8 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x93108bc <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0x930f2c0 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0x9311ec0 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0x9311ea0 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9311a70 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9311a30 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
      (DeclRefExpr 0x9310994 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9304c80 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x9311a10 <col:19, col:24> '<dependent type>'
        (MemberExpr 0x93119f0 <col:19> '<bound member function type>' ->size 0x9304b90
          (CXXThisExpr 0x93109b0 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9311c40 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0x9311aa8 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9311b40 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9311b00 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x9311c00 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9311bc8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (DeclRefExpr 0x9311b5c <col:18> 'size_type':'unsigned int' lvalue ParmVar 0x9304c80 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9311ba8 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x9311b88 <col:31> '<bound member function type>' ->size 0x9304b90
            (CXXThisExpr 0x9311b78 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9311c24 <col:39> 'value_type':'_Tp' lvalue ParmVar 0x9304cc0 '__x' 'value_type':'_Tp'))
    (IfStmt 0x9311e80 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9311d10 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9311cd0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
        (DeclRefExpr 0x9311c68 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9304c80 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9311cb0 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9311c90 <col:24> '<bound member function type>' ->size 0x9304b90
            (CXXThisExpr 0x9311c80 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0x9311e60 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0x9311d48 <col:4> '<bound member function type>' ->_M_erase_at_end 0x930f1f0
          (CXXThisExpr 0x9311d38 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x9311e38 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9311e00 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
          (CXXDependentScopeMemberExpr 0x9311db0 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9311d78 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9311d68 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9311de4 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0x9304c80 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0x9312070 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0x9312060 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0x9312040 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9312018 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9311fe0 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (CXXDependentScopeMemberExpr 0x9311f28 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9311ef0 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x9311ee0 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9311fa8 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9311f70 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x9311f60 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0x93121e8 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0x93121d8 <col:9, col:31>
    (CXXOperatorCallExpr 0x93121b0 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0x9312168 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0)
      (CallExpr 0x93120d8 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9312098 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0x9312148 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x9312108 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0x9312338 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0x9312328 <col:9, col:46>
    (UnaryOperator 0x9312310 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x93122f8 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x93122d0 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9312298 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
          (CXXDependentScopeMemberExpr 0x9312248 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9312210 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9312200 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x931227c <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9304ff0 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x9312488 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0x9312478 <col:9, col:46>
    (UnaryOperator 0x9312460 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x9312448 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x9312420 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x93123e8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
          (CXXDependentScopeMemberExpr 0x9312398 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9312360 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9312350 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x93123cc <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9305120 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x93126e8 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0x93126c8 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9312560 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9312520 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90)
      (DeclRefExpr 0x931249c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9305280 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9312500 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x93124c8 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x93124b8 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9312698 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0x9312688 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x931264c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x93126b8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9312638 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0x9312600 </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x93127e8 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0x9312748 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0x9312710 <col:2> '<bound member function type>' ->_M_range_check 0x9305320
      (CXXThisExpr 0x9312700 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9312730 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x93053e0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x93127d8 <line:738:2, col:20>
    (ArraySubscriptExpr 0x93127c0 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9312790 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9312778 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9312768 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x93127a4 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x93053e0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x93128e8 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0x9312848 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0x9312810 <col:2> '<bound member function type>' ->_M_range_check 0x9305320
      (CXXThisExpr 0x9312800 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9312830 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x93054a0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x93128d8 <line:756:2, col:20>
    (ArraySubscriptExpr 0x93128c0 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9312890 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9312878 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9312868 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x93128a4 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x93054a0 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0x9312998 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0x9312988 <col:9, col:23>
    (UnaryOperator 0x9312970 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9312950 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9312910 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x9312a48 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0x9312a38 <col:9, col:23>
    (UnaryOperator 0x9312a20 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9312a00 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x93129c0 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x9312b88 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0x9312b78 <col:9, col:27>
    (UnaryOperator 0x9312b60 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9312b48 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9312b20 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9312ae8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
          (CallExpr 0x9312ab0 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9312a70 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9312ad0 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x9312cc8 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0x9312cb8 <col:9, col:27>
    (UnaryOperator 0x9312ca0 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9312c88 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9312c60 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9312c28 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
          (CallExpr 0x9312bf0 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9312bb0 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9312c10 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0x9312dd0 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0x9312dc0 <col:9, col:40>
    (CallExpr 0x9312da0 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9312cf8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
      (CallExpr 0x9312d80 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9312d40 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0x9312ed8 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0x9312ec8 <col:9, col:40>
    (CallExpr 0x9312ea8 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9312e00 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
      (CallExpr 0x9312e88 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9312e48 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0x9313350 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0x9313330 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9313038 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9312ff0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
      (CXXDependentScopeMemberExpr 0x9312f38 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9312f00 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9312ef0 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9312fb8 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9312f80 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9312f70 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9313238 <line:829:4, line:832:4>
      (CallExpr 0x9313178 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x93130a8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9313070 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9313060 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9313128 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93130f0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x93130e0 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x931315c <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0x9305930 '__x' 'const value_type &'))
      (UnaryOperator 0x9313220 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x93131e8 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93131b0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x93131a0 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0x9313308 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0x9313260 <col:4> '<bound member function type>' ->_M_insert_aux 0x930ef80
        (CXXThisExpr 0x9313250 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0x93132d0 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9313290 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0x93132ec <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0x9305930 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0x9313520 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0x93133e8 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x93133b0 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9313378 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9313368 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x9313500 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9313448 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9313410 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9313400 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x93134c8 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9313490 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0x9313480 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x93135d8 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0x93135b0 <col:9, col:44> '<dependent type>'
    (MemberExpr 0x9313548 <col:9> '<bound member function type>' ->_M_fill_insert 0x930ee10
      (CXXThisExpr 0x9313538 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9313568 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9305c00 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9313580 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9305c40 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9313598 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0x9305c90 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x9313830 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0x9313720 <line:966:4, col:72>
    0x93136f0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9313800 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0x9313740 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9313780 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9305e20 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9313798 <col:35> '_InputIterator' lvalue ParmVar 0x9305e60 '__first' '_InputIterator')
    (DeclRefExpr 0x93137b0 <col:44> '_InputIterator' lvalue ParmVar 0x9305ea0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x93137e8 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0x9315c60 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0x93139b0 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0x9313870 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780)
    (CXXDependentScopeMemberExpr 0x93138f0 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93138b8 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x93138a8 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9313978 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9313940 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9313924 <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x930a0c0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9315800 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0x93156c0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780)
    (CXXDependentScopeMemberExpr 0x9315740 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9315708 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x93156f8 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x93157c8 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9315790 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0x9315774 <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x930a0c0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9315988 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0x9315848 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780)
    (CXXDependentScopeMemberExpr 0x93158c8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9315890 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9315880 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9315950 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9315918 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0x93158fc <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x930a0c0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9315c38 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9315b38 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0x9315ba8 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9315b6c <col:46> '<dependent type>' lvalue))
    (CallExpr 0x9315c18 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9315be0 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9315bc4 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x930a0c0 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0x9315d50 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0x9315d30 <col:9, col:47> '<dependent type>'
    (MemberExpr 0x9315c90 <col:9> '<bound member function type>' ->_M_erase_at_end 0x930f1f0
      (CXXThisExpr 0x9315c80 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x9315cf8 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9315cc0 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0x9315cb0 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x93160d0 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0x9315e28 <line:1052:4, col:45>
    0x9315d70 "pointer __result =
      (CallExpr 0x9315e08 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9315db8 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0x9315da8 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x9315dec <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x930a2c0 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0x9315fc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9315e38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9315fa8 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0x9315f50 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9315e70 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
        (DeclRefExpr 0x9315ea8 <col:36> '_ForwardIterator' lvalue ParmVar 0x930a300 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9315ec0 <col:45> '_ForwardIterator' lvalue ParmVar 0x930a340 '__last' '_ForwardIterator')
        (DeclRefExpr 0x9315ed8 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9315d70 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0x9315f30 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x9315ef0 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0x9315f98 <line:1057:8, col:15>
        (DeclRefExpr 0x9315f7c <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9315d70 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0x93160b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9315fe0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9316098 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0x9316060 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x9315ff0 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0x931602c <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9315d70 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0x9316044 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x930a2c0 '__n' 'size_type':'unsigned int'))
      (NullStmt 0x9316088 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0x9316470 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0x9316200 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9316138 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316100 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x93160f0 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x93161e0 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x931616c <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0x93161c8 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x93161a8 <col:64> '_Integer' lvalue ParmVar 0x930a500 '__n' '_Integer'))))
  (BinaryOperator 0x93163b0 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9316260 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316228 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9316218 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9316388 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9316350 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (CXXDependentScopeMemberExpr 0x93162e0 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x93162a8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9316298 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0x9316338 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9316314 <col:54> '_Integer' lvalue ParmVar 0x930a500 '__n' '_Integer'))))
  (CallExpr 0x9316448 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0x93163d8 <col:4> '<bound member function type>' ->_M_fill_initialize 0x930aed0
      (CXXThisExpr 0x93163c8 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0x9316418 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x93163f8 <col:46> '_Integer' lvalue ParmVar 0x930a500 '__n' '_Integer'))
    (DeclRefExpr 0x9316430 <col:52> '_Integer' lvalue ParmVar 0x930a540 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x93166a8 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0x93165c0 <line:1089:4, line:1090:37>
    0x9316590 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9316680 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0x93165e0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9316620 <col:24> '_InputIterator' lvalue ParmVar 0x930a740 '__first' '_InputIterator')
    (DeclRefExpr 0x9316638 <col:33> '_InputIterator' lvalue ParmVar 0x930a780 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9316668 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9316838 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0x9316810 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9316738 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x93166f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380)
      (DeclRefExpr 0x93166c0 <col:11> '_InputIterator' lvalue ParmVar 0x930a980 '__first' '_InputIterator')
      (DeclRefExpr 0x93166d8 <col:22> '_InputIterator' lvalue ParmVar 0x930a9c0 '__last' '_InputIterator'))
    (UnaryOperator 0x9316778 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x931675c <col:32> '_InputIterator' lvalue ParmVar 0x930a980 '__first' '_InputIterator'))
    (CallExpr 0x93167f0 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0x93167a0 <col:6> '<bound member function type>' ->push_back 0x93059b0
        (CXXThisExpr 0x9316790 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0x93167d8 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0x93167c0 <col:17> '_InputIterator' lvalue ParmVar 0x930a980 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9316e18 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0x9316940 <line:1110:4, col:56>
    0x9316860 "const size_type __n =
      (CallExpr 0x9316918 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x93168b0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
        (DeclRefExpr 0x93168e4 <col:40> '_ForwardIterator' lvalue ParmVar 0x930ac00 '__first' '_ForwardIterator')
        (DeclRefExpr 0x93168fc <col:49> '_ForwardIterator' lvalue ParmVar 0x930ac40 '__last' '_ForwardIterator'))")
  (BinaryOperator 0x9316a50 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9316998 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316960 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9316950 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9316a30 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x93169e0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x93169d0 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9316a14 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x9316860 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9316be0 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9316ab0 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316a78 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9316a68 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9316bb8 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9316b80 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
      (CXXDependentScopeMemberExpr 0x9316b30 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9316af8 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x9316ae8 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9316b64 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9316860 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9316e00 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9316c40 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316c08 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9316bf8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9316dd0 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9316c90 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
      (DeclRefExpr 0x9316cc8 <col:34> '_ForwardIterator' lvalue ParmVar 0x930ac00 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9316ce0 <col:43> '_ForwardIterator' lvalue ParmVar 0x930ac40 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0x9316d40 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9316d08 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9316cf8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x9316db0 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9316d74 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0x93170e8 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0x9316fa0 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9316e60 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f8e30 0x92f9750)
    (CXXDependentScopeMemberExpr 0x9316ee0 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316ea8 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0x9316e98 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9316f14 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0x930ae20 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9316f2c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0x930ae70 '__value' 'const value_type &')
    (CallExpr 0x9316f80 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0x9316f44 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0x93170d0 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9317018 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9316fe0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9316fd0 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9317098 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9317060 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9317050 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9317188 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0x9317160 <col:11, col:36> '<dependent type>'
    (MemberExpr 0x9317110 <col:11> '<bound member function type>' ->_M_fill_assign 0x930b870
      (CXXThisExpr 0x9317100 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9317130 <col:26> '_Integer' lvalue ParmVar 0x930afa0 '__n' '_Integer')
    (DeclRefExpr 0x9317148 <col:31> '_Integer' lvalue ParmVar 0x930afe0 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x93173b8 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0x93172d0 <line:1158:4, line:1159:37>
    0x93172a0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9317390 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0x93172f0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9317330 <col:18> '_InputIterator' lvalue ParmVar 0x930b1b0 '__first' '_InputIterator')
    (DeclRefExpr 0x9317348 <col:27> '_InputIterator' lvalue ParmVar 0x930b1f0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9317378 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9317470 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0x9317448 <col:11, col:43> '<dependent type>'
    (MemberExpr 0x93173e0 <col:11> '<bound member function type>' ->_M_fill_insert 0x930ee10
      (CXXThisExpr 0x93173d0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9317400 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x930b940 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9317418 <col:33> '_Integer' lvalue ParmVar 0x930b980 '__n' '_Integer')
    (DeclRefExpr 0x9317430 <col:38> '_Integer' lvalue ParmVar 0x930b9c0 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9318cd0 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0x93175b0 <line:1199:4, line:1200:37>
    0x9317580 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9318ca0 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0x93175d0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9317610 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x930bbc0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9317628 <col:27> '_InputIterator' lvalue ParmVar 0x930bc00 '__first' '_InputIterator')
    (DeclRefExpr 0x9317640 <col:36> '_InputIterator' lvalue ParmVar 0x930bc40 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9317678 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x9319390 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0x9318f28 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9318e40 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9318e00 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
      (CXXOperatorCallExpr 0x9318dc0 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9318d88 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010)
        (CallExpr 0x9318d18 <col:6, col:15> '<dependent type>'
          (MemberExpr 0x9318cf8 <col:6> '<bound member function type>' ->max_size 0x9304c10
            (CXXThisExpr 0x9318ce8 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9318d68 <col:19, col:24> '<dependent type>'
          (MemberExpr 0x9318d48 <col:19> '<bound member function type>' ->size 0x9304b90
            (CXXThisExpr 0x9318d38 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9318de4 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x930eff0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x9318ef8 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0x9318ee8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9318ecc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9318f18 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9318eb8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9318e9c </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0x930f040 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x9319118 <line:1244:2, col:56>
    0x9318f50 "const size_type __len =
      (CXXOperatorCallExpr 0x93190f0 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x93190b8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0)
        (CallExpr 0x9318fb8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x9318f98 <col:26> '<bound member function type>' ->size 0x9304b90
            (CXXThisExpr 0x9318f88 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9319090 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x9318ff0 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa3b0 0x92ab180)
          (CallExpr 0x9319058 <col:44, col:49> '<dependent type>'
            (MemberExpr 0x9319038 <col:44> '<bound member function type>' ->size 0x9304b90
              (CXXThisExpr 0x9319028 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9319074 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0x930eff0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x9319380 <line:1245:2, col:63>
    (ConditionalOperator 0x9319360 <col:9, col:63> '<dependent type>'
      (ParenExpr 0x93192e0 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0x93192c8 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x93191d0 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9319190 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0)
            (DeclRefExpr 0x9319128 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x9318f50 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9319170 <col:18, col:23> '<dependent type>'
              (MemberExpr 0x9319150 <col:18> '<bound member function type>' ->size 0x9304b90
                (CXXThisExpr 0x9319140 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0x93192a0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9319260 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330)
            (DeclRefExpr 0x93191f4 <col:28> 'const size_type':'const unsigned int' lvalue Var 0x9318f50 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9319240 <col:36, col:45> '<dependent type>'
              (MemberExpr 0x9319220 <col:36> '<bound member function type>' ->max_size 0x9304c10
                (CXXThisExpr 0x9319210 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x9319328 <col:50, col:59> '<dependent type>'
        (MemberExpr 0x9319308 <col:50> '<bound member function type>' ->max_size 0x9304c10
          (CXXThisExpr 0x93192f8 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9319344 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9318f50 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0x93195d8 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0x9319500 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0x93193d0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
    (DeclRefExpr 0x9319410 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x930f150 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0x9319470 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9319438 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9319428 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x93194e0 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x93194a4 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0x93195c0 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9319570 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9319538 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9319528 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x93195a4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x930f150 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9319de8 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0x9319dd8 <line:1274:7, line:1275:58>
    (ParenExpr 0x9319dc0 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0x9319da8 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9319bb8 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9319b70 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9319a60 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0)
          (CallExpr 0x9319ae0 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9319aa8 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9319a90 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x93197f0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9319b50 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9319b18 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x9319afc <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9319960 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0x9319d80 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x9319bf8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x92ca130 0x92cb4e0)
          (CallExpr 0x9319c80 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9319c48 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0x9319c30 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x93197f0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9319cf0 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9319cb8 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9319c9c <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x93197f0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9319d60 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9319d28 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0x9319d0c <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9319960 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x931a4b0 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0x931a4a0 <line:1291:7, line:1292:30>
    (CallExpr 0x931a470 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0x931a278 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x92cba30 0x92cc300)
      (CallExpr 0x931a300 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x931a2c8 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0x931a2b0 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9319fe0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x931a370 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x931a338 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0x931a31c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9319fe0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x931a3e0 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x931a3a8 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x931a38c <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931a150 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x931a450 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x931a418 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x931a3fc <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931a150 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x931aa10 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0x931aa00 <col:7, col:26>
    (UnaryOperator 0x931a9e8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x931a9d0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x931a9a8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x931a960 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9319a60 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0)
          (DeclRefExpr 0x931a930 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931a6b0 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x931a948 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931a820 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x931b448 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0x931b438 <col:7, col:20>
    (CXXOperatorCallExpr 0x931b410 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x931b3d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x931a230 0x9274810 0x928be80 0x928e9b0)
      (DeclRefExpr 0x931b3a0 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931b290 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0x931b3b8 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931ac10 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x931b998 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0x931b988 <col:7, col:25>
    (UnaryOperator 0x931b970 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x931b958 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x931b930 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x931b8f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x931a230 0x9274810 0x928be80 0x928e9b0)
          (DeclRefExpr 0x931b8c0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931b7b0 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x931b8d8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931b640 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x931bee8 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0x931bed8 <col:7, col:25>
    (UnaryOperator 0x931bec0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x931bea8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x931be80 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x931be40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x931a230 0x9274810 0x928be80 0x928e9b0)
          (DeclRefExpr 0x931be10 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931bb90 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x931be28 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x931bd00 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0x931c428 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0x931c408 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x931c3b8 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x931c3a0 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x931c100 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0x931c3ec <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x931c270 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0x931c678 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0x931c628 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0x931c618 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0x931c600 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0x931c5f0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x931c5a0 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0x931c5d8 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0x931cf98 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x931cf7c <col:12> '_Bit_type *' lvalue ParmVar 0x931c880 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0x931cfe0 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0x931cfc8 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0x931c8c0 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0x931d010 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0x931d038 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x931d020 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0x931d080 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0x931d068 <col:41> 'int' 0))
) (CompoundStmt 0x931d0b0 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0x931d230 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0x931d220 <col:7, col:32>
    (UnaryOperator 0x931d208 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0x931d1f0 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0x931d1e0 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x931d1c8 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0x931d1b0 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0x931d190 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0x931d138 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0x931d128 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x931d104 <col:18> '_Bit_type *const' lvalue ->_M_p 0x931c800
                      (CXXThisExpr 0x931d0d8 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0x931d1a0 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0x931d170 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0x931c840
                  (CXXThisExpr 0x931d150 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0x931d450 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0x931d3f8 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x931d260 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x931d244 <col:11> '_Bool' lvalue ParmVar 0x931cb10 '__x' '_Bool'))
    (CompoundAssignOperator 0x931d308 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x931d2b0 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x931d2a0 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x931d280 <col:3> '_Bit_type *' lvalue ->_M_p 0x931c800
            (CXXThisExpr 0x931d270 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0x931d2f8 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0x931d2d8 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x931c840
          (CXXThisExpr 0x931d2c8 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0x931d3d8 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x931d368 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x931d358 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x931d338 <col:3> '_Bit_type *' lvalue ->_M_p 0x931c800
            (CXXThisExpr 0x931d328 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0x931d3c0 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x931d3b0 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0x931d390 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x931c840
            (CXXThisExpr 0x931d380 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0x931d440 <line:89:7, col:15>
    (UnaryOperator 0x931d428 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0x931d418 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0x931dae0 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0x931dad0 <col:7, col:30>
    (CXXOperatorCallExpr 0x931daa8 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x931da98 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x931da68 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x931cbb0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0x931d478 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0x931d468 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0x931d520 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x931d510 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x931d4f0 <col:27> '_Bool'
            (MemberExpr 0x931d4d0 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
              (DeclRefExpr 0x931d498 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0x931cc50 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0x931dc70 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0x931dc60 <col:7, col:37>
    (BinaryOperator 0x931dc48 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0x931dc28 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x931db80 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x931db70 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x931db50 <col:19, col:20> '_Bool'
              (MemberExpr 0x931db30 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
                (UnaryOperator 0x931db10 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x931db00 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0x931dc38 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x931dc10 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x931dc00 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x931dbe0 <col:34> '_Bool'
              (MemberExpr 0x931dbc0 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
                (DeclRefExpr 0x931dba0 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0x931cd50 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0x931ddf8 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0x931dde8 <col:7, col:38>
    (BinaryOperator 0x931ddd0 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0x931dd28 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0x931dd10 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x931dd00 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x931dce0 <col:20, col:21> '_Bool'
              (MemberExpr 0x931dcc0 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
                (UnaryOperator 0x931dca0 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x931dc90 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0x931ddb8 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x931dda8 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x931dd88 <col:35> '_Bool'
            (MemberExpr 0x931dd68 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
              (DeclRefExpr 0x931dd48 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0x931ce50 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0x931dec8 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0x931dea8 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0x931de50 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0x931de40 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x931de20 <col:8> '_Bit_type *' lvalue ->_M_p 0x931c800
          (CXXThisExpr 0x931de10 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0x931de98 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0x931de78 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x931c840
        (CXXThisExpr 0x931de68 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0x9321640 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x932161c <col:10> '_Bit_type *const' lvalue ._M_p 0x931c800
    (DeclRefExpr 0x9321604 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x931d5f0 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0x93216a0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0x932167c <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0x931c840
    (DeclRefExpr 0x9321664 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x931d5f0 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0x93216d0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0x931ee80 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x931ee64 <col:12> '_Bit_type *' lvalue ParmVar 0x931e5d0 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0x931eec0 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x931eea8 <col:28> 'unsigned int' lvalue ParmVar 0x931e620 '__y' 'unsigned int'))
) (CompoundStmt 0x931f138 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0x931f358 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0x931f338 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0x931f250 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0x931f1a8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0x931f188 <col:11> 'unsigned int' lvalue ->_M_offset 0x931e590
          (CXXThisExpr 0x931f178 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x931f240 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0x931f228 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0x931f1f8 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x931f1e8 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0x931f1cc <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0x931f210 <col:45> 'int' 1))))
    (CompoundStmt 0x931f320 <line:122:2, line:125:2>
      (BinaryOperator 0x931f2c0 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0x931f278 <col:4> 'unsigned int' lvalue ->_M_offset 0x931e590
          (CXXThisExpr 0x931f268 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x931f2b0 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x931f298 <col:16> 'int' 0)))
      (UnaryOperator 0x931f308 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0x931f2e8 <col:6> '_Bit_type *' lvalue ->_M_p 0x931e550
          (CXXThisExpr 0x931f2d8 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0x931f550 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0x931f530 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0x931f3e0 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0x931f3a0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0x931f380 <col:11> 'unsigned int' lvalue ->_M_offset 0x931e590
          (CXXThisExpr 0x931f370 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x931f3d0 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x931f3b8 <col:26> 'int' 0)))
    (CompoundStmt 0x931f518 <line:132:2, line:135:2>
      (BinaryOperator 0x931f4b8 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0x931f408 <col:4> 'unsigned int' lvalue ->_M_offset 0x931e590
          (CXXThisExpr 0x931f3f8 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x931f4a8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x931f490 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0x931f460 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x931f450 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0x931f434 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0x931f478 <col:35> 'int' 1))))
      (UnaryOperator 0x931f500 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x931f4e0 <col:6> '_Bit_type *' lvalue ->_M_p 0x931e550
          (CXXThisExpr 0x931f4d0 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0x931fa20 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0x931f668 <line:141:7, col:44>
    0x931f590 "difference_type __n =
      (ImplicitCastExpr 0x931f658 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0x931f640 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0x931f630 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x931f610 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x931f5c4 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0x931e850 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0x931f620 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x931f5f0 <col:35> 'unsigned int' lvalue ->_M_offset 0x931e590
              (CXXThisExpr 0x931f5e0 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0x931f738 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0x931f688 <col:7> '_Bit_type *' lvalue ->_M_p 0x931e550
      (CXXThisExpr 0x931f678 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0x931f720 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0x931f710 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x931f6a8 <col:15> 'difference_type':'int' lvalue Var 0x931f590 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x931f6f8 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x931f6e8 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0x931f6cc <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0x931f800 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0x931f758 <col:7> 'difference_type':'int' lvalue Var 0x931f590 '__n' 'difference_type':'int')
    (BinaryOperator 0x931f7e8 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0x931f7d8 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x931f770 <col:13> 'difference_type':'int' lvalue Var 0x931f590 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x931f7c0 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x931f7b0 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0x931f794 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0x931f958 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0x931f858 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0x931f848 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x931f818 <col:11> 'difference_type':'int' lvalue Var 0x931f590 '__n' 'difference_type':'int'))
      (IntegerLiteral 0x931f830 <col:17> 'int' 0))
    (CompoundStmt 0x931f940 <line:145:2, line:148:2>
      (CompoundAssignOperator 0x931f8d8 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x931f870 <col:4> 'difference_type':'int' lvalue Var 0x931f590 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0x931f8c0 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0x931f8b0 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0x931f894 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0x931f928 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x931f908 <col:6> '_Bit_type *' lvalue ->_M_p 0x931e550
          (CXXThisExpr 0x931f8f8 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0x931fa08 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0x931f988 <col:7> 'unsigned int' lvalue ->_M_offset 0x931e590
      (CXXThisExpr 0x931f978 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0x931f9f0 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0x931f9e0 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x931f9d0 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0x931f9a8 <col:45> 'difference_type':'int' lvalue Var 0x931f590 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x931fbd0 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0x931fbc0 <col:7, col:51>
    (BinaryOperator 0x931fba8 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0x931faf0 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0x931fad0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x931fa78 <col:14> '_Bit_type *const' lvalue ->_M_p 0x931e550
            (CXXThisExpr 0x931fa68 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x931fae0 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x931fab0 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0x931e550
            (DeclRefExpr 0x931fa98 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931e970 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0x931fb90 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0x931fb70 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x931fb18 <col:34> 'const unsigned int' lvalue ->_M_offset 0x931e590
            (CXXThisExpr 0x931fb08 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x931fb80 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x931fb50 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0x931e590
            (DeclRefExpr 0x931fb38 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931e970 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x931fe20 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0x931fe10 <line:159:7, line:160:56>
    (BinaryOperator 0x931fdf8 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0x931fc70 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0x931fc50 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x931fbf8 <col:14> '_Bit_type *const' lvalue ->_M_p 0x931e550
            (CXXThisExpr 0x931fbe8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x931fc60 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x931fc30 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0x931e550
            (DeclRefExpr 0x931fc18 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931ea70 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0x931fde0 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0x931fdc8 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0x931fd10 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0x931fcf0 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x931fc98 <col:11> '_Bit_type *const' lvalue ->_M_p 0x931e550
                (CXXThisExpr 0x931fc88 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x931fd00 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x931fcd0 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0x931e550
                (DeclRefExpr 0x931fcb8 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931ea70 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0x931fdb0 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0x931fd90 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x931fd38 <col:31> 'const unsigned int' lvalue ->_M_offset 0x931e590
                (CXXThisExpr 0x931fd28 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x931fda0 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x931fd70 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0x931e590
                (DeclRefExpr 0x931fd58 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931ea70 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x931ff20 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0x931ff10 <col:7, col:28>
    (UnaryOperator 0x931fef8 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0x931fee0 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0x931feb8 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0x931fea8 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x931fe78 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x931e9f0 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x931fe48 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x931fe38 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x931fe5c <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931eb40 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x931ffd8 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0x931ffc8 <col:7, col:21>
    (CXXOperatorCallExpr 0x931ffa0 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0x931ff90 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x931ff78 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x931eac0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0x931ff34 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931ec10 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0x931ff60 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0x931ff50 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x93200c0 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0x93200b0 <col:7, col:27>
    (UnaryOperator 0x9320098 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9320080 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9320058 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0x9320048 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9320030 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x931eac0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0x931ffec <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931ece0 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0x9320018 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9320008 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x93201a8 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0x9320198 <col:7, col:27>
    (UnaryOperator 0x9320180 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9320168 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9320140 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0x9320130 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9320118 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x931eac0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x93200e8 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x93200d8 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x93200fc <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x931edb0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0x93219e0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0x93219c8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9321350 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0x9321ae0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9321ac0 <col:10> '_Bit_type *const' lvalue ._M_p 0x931e550
    (DeclRefExpr 0x9321aa8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9321350 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0x9321b40 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x9321b1c <col:10> 'const unsigned int' lvalue ._M_offset 0x931e590
    (DeclRefExpr 0x9321b04 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9321350 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0x9321b78 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0x9320558 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0x9320548 <line:183:5, line:184:37>
    (ImplicitCastExpr 0x9320538 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0x9320520 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0x9320508 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0x93204a8 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0x9320498 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0x9320438 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0x9320360 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9320350 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x9320334 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0x9320420 <col:32, col:52> 'int'
                  (BinaryOperator 0x9320408 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0x93203e8 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9320390 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0x931e550
                        (DeclRefExpr 0x9320378 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x93201d0 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0x93203f8 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x93203c8 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0x931e550
                        (DeclRefExpr 0x93203b0 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9320220 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0x9320488 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9320468 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0x931e590
                (DeclRefExpr 0x9320450 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x93201d0 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0x93204f8 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x93204d8 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0x931e590
              (DeclRefExpr 0x93204c0 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9320220 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x9321390 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9321248 <col:42> 'int' 0))
, (ImplicitCastExpr 0x93213a0 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9321260 <col:45> 'int' 0))
) (CompoundStmt 0x9321400 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x9321448 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9321410 <col:26> '_Bit_type *' lvalue ParmVar 0x9320840 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x9321458 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9321428 <col:31> 'unsigned int' lvalue ParmVar 0x9320890 '__y' 'unsigned int'))
) (CompoundStmt 0x93214b0 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0x9321718 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0x9321708 <col:7, col:46>
    (CXXConstructExpr 0x93216e0 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x93215f8 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x93215e8 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0x93215b8 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0x93215a8 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9321508 <col:24> '_Bit_type *const' lvalue ->_M_p 0x931e550
                (ImplicitCastExpr 0x93214f8 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0x93214e8 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0x9321590 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0x9321528 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0x9321580 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0x9321560 <col:37> 'const unsigned int' lvalue ->_M_offset 0x931e590
                  (ImplicitCastExpr 0x9321550 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x9321540 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0x93217e0 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0x9321778 <line:205:7, col:18> 'void'
    (MemberExpr 0x9321758 <col:7> '<bound member function type>' ->_M_bump_up 0x931e760
      (ImplicitCastExpr 0x9321798 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9321748 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x93217d0 <line:206:7, col:15>
    (UnaryOperator 0x93217b8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x93217a8 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0x9321ce8 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0x9321c18 <line:212:7, col:29>
    0x9321800 "iterator __tmp =
      (CXXConstructExpr 0x9321bf0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9321990 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x9321848 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9321838 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x9321c58 <line:213:7, col:18> 'void'
    (MemberExpr 0x9321c38 <col:7> '<bound member function type>' ->_M_bump_up 0x931e760
      (ImplicitCastExpr 0x9321c78 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9321c28 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9321cd8 <line:214:7, col:14>
    (CXXConstructExpr 0x9321cb0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9321ca0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9321c88 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9321800 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0x9321da0 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0x9321d38 <line:220:7, col:20> 'void'
    (MemberExpr 0x9321d18 <col:7> '<bound member function type>' ->_M_bump_down 0x931e7e0
      (ImplicitCastExpr 0x9321d58 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9321d08 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9321d90 <line:221:7, col:15>
    (UnaryOperator 0x9321d78 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9321d68 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0x9321f28 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0x9321e58 <line:227:7, col:29>
    0x9321dc0 "iterator __tmp =
      (CXXConstructExpr 0x9321e30 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9321e20 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x9321e08 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9321df8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x9321e98 <line:228:7, col:20> 'void'
    (MemberExpr 0x9321e78 <col:7> '<bound member function type>' ->_M_bump_down 0x931e7e0
      (ImplicitCastExpr 0x9321eb8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9321e68 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9321f18 <line:229:7, col:14>
    (CXXConstructExpr 0x9321ef0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9321ee0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9321ec8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9321dc0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0x9322008 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0x9321f90 <line:235:7, col:18> 'void'
    (MemberExpr 0x9321f58 <col:7> '<bound member function type>' ->_M_incr 0x931e8d0
      (ImplicitCastExpr 0x9321fb0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9321f48 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0x9321fc0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9321f78 <col:15> 'difference_type':'int' lvalue ParmVar 0x9320d80 '__i' 'difference_type':'int')))
  (ReturnStmt 0x9321ff8 <line:236:7, col:15>
    (UnaryOperator 0x9321fe0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9321fd0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0x9322148 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0x93220e8 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0x93220d8 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9322088 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9320e20 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0x9322030 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9322020 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0x9322070 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x9322060 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9322044 <col:17> 'difference_type':'int' lvalue ParmVar 0x9320e90 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x9322138 <line:243:7, col:15>
    (UnaryOperator 0x9322120 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9322110 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0x93222e0 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0x93221f8 <line:249:7, col:29>
    0x9322170 "iterator __tmp =
      (CXXConstructExpr 0x93221d0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x93221b8 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x93221a8 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x93222d0 <line:250:7, col:23>
    (CXXConstructExpr 0x93222a8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9322298 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9322270 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x9322260 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9322248 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9320e20 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x9322208 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9322170 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x9322238 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9322220 <col:23> 'difference_type':'int' lvalue ParmVar 0x9320f60 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0x9322470 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0x9322388 <line:256:7, col:29>
    0x9322300 "iterator __tmp =
      (CXXConstructExpr 0x9322360 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x9322348 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9322338 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x9322460 <line:257:7, col:23>
    (CXXConstructExpr 0x9322438 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9322428 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9322400 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x93223f0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93223d8 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9320ef0 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x9322398 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9322300 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x93223c8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x93223b0 <col:23> 'difference_type':'int' lvalue ParmVar 0x9321070 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0x9322660 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0x9322650 <col:7, col:27>
    (CXXConstructExpr 0x9322628 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9322618 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9322608 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x93225e8 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x93225d8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9322588 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x93209c0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x9322578 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0x9322560 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x9322538 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0x9322528 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0x93224d8 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0x9322498 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0x9322488 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0x93224c8 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0x93224ac <col:24> 'difference_type':'int' lvalue ParmVar 0x9321130 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x93219b8 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x932199c <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9321950 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0x9321be0 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0x93228c0 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0x93228b0 <col:5, col:18>
    (CXXConstructExpr 0x9322888 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9322878 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9322868 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0x9322840 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x9322830 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9322818 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0x93227d8 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0x93226d0 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0x9322808 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x93227f0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x9322680 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x9323700 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x93236c8 <col:48> 'int' 0))
, (ImplicitCastExpr 0x9323710 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x93236e0 <col:51> 'int' 0))
) (CompoundStmt 0x9323770 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x93237b8 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9323780 <col:26> '_Bit_type *' lvalue ParmVar 0x9322c10 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x93237c8 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9323798 <col:31> 'unsigned int' lvalue ParmVar 0x9322c60 '__y' 'unsigned int'))
) (CompoundStmt 0x9323820 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0x93238c8 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9323858 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0x931e550
    (ImplicitCastExpr 0x9323848 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x9323830 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9322d40 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0x93238d8 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x93238a0 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0x931e590
    (ImplicitCastExpr 0x9323890 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x9323878 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9322d40 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0x9323930 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0x9323ae0 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0x9323ad0 <col:7, col:51>
    (ImplicitCastExpr 0x9323ac0 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0x9323aa0 <col:14, col:51> '_Bool'
        (MemberExpr 0x9323a80 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
          (ImplicitCastExpr 0x9323a70 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0x9323a38 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0x9323a28 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0x9323988 <col:29> '_Bit_type *const' lvalue ->_M_p 0x931e550
                  (ImplicitCastExpr 0x9323978 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x9323968 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0x9323a10 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0x93239a8 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0x9323a00 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0x93239e0 <col:42> 'const unsigned int' lvalue ->_M_offset 0x931e590
                    (ImplicitCastExpr 0x93239d0 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0x93239c0 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0x9323bb0 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0x9323b48 <line:291:7, col:18> 'void'
    (MemberExpr 0x9323b28 <col:7> '<bound member function type>' ->_M_bump_up 0x931e760
      (ImplicitCastExpr 0x9323b68 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9323b18 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9323ba0 <line:292:7, col:15>
    (UnaryOperator 0x9323b88 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9323b78 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0x9323ed8 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0x9323e08 <line:298:7, col:35>
    0x9323bd0 "const_iterator __tmp =
      (CXXConstructExpr 0x9323de0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x9323d40 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x9323c18 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9323c08 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x9323e48 <line:299:7, col:18> 'void'
    (MemberExpr 0x9323e28 <col:7> '<bound member function type>' ->_M_bump_up 0x931e760
      (ImplicitCastExpr 0x9323e68 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9323e18 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9323ec8 <line:300:7, col:14>
    (CXXConstructExpr 0x9323ea0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9323e90 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9323e78 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9323bd0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0x9323f90 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0x9323f28 <line:306:7, col:20> 'void'
    (MemberExpr 0x9323f08 <col:7> '<bound member function type>' ->_M_bump_down 0x931e7e0
      (ImplicitCastExpr 0x9323f48 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9323ef8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9323f80 <line:307:7, col:15>
    (UnaryOperator 0x9323f68 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9323f58 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0x9324118 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0x9324048 <line:313:7, col:35>
    0x9323fb0 "const_iterator __tmp =
      (CXXConstructExpr 0x9324020 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x9324010 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x9323ff8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9323fe8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x9324088 <line:314:7, col:20> 'void'
    (MemberExpr 0x9324068 <col:7> '<bound member function type>' ->_M_bump_down 0x931e7e0
      (ImplicitCastExpr 0x93240a8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9324058 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9324108 <line:315:7, col:14>
    (CXXConstructExpr 0x93240e0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x93240d0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x93240b8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9323fb0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0x93241f8 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0x9324180 <line:321:7, col:18> 'void'
    (MemberExpr 0x9324148 <col:7> '<bound member function type>' ->_M_incr 0x931e8d0
      (ImplicitCastExpr 0x93241a0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9324138 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0x93241b0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9324168 <col:15> 'difference_type':'int' lvalue ParmVar 0x9323210 '__i' 'difference_type':'int')))
  (ReturnStmt 0x93241e8 <line:322:7, col:15>
    (UnaryOperator 0x93241d0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x93241c0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0x9324338 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0x93242d8 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0x93242c8 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9324278 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x93232b0 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0x9324220 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9324210 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0x9324260 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x9324250 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9324234 <col:17> 'difference_type':'int' lvalue ParmVar 0x9323320 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x9324328 <line:329:7, col:15>
    (UnaryOperator 0x9324310 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9324300 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0x93244d0 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0x93243e8 <line:335:7, col:35>
    0x9324360 "const_iterator __tmp =
      (CXXConstructExpr 0x93243c0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x93243a8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9324398 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x93244c0 <line:336:7, col:23>
    (CXXConstructExpr 0x9324498 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x9324488 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9324460 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x9324450 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9324438 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x93232b0 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x93243f8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9324360 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x9324428 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9324410 <col:23> 'difference_type':'int' lvalue ParmVar 0x93233f0 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0x9324660 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0x9324578 <line:342:7, col:35>
    0x93244f0 "const_iterator __tmp =
      (CXXConstructExpr 0x9324550 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x9324538 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9324528 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x9324650 <line:343:7, col:23>
    (CXXConstructExpr 0x9324628 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x9324618 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x93245f0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x93245e0 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93245c8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9323380 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x9324588 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x93244f0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x93245b8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x93245a0 <col:23> 'difference_type':'int' lvalue ParmVar 0x9323500 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0x93247e8 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0x93247d8 <col:7, col:27>
    (CXXOperatorCallExpr 0x93247b8 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x93247a8 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9324778 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x9322e40 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x9324768 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0x9324750 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x9324728 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x9324718 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x93246c8 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x9323490 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0x9324688 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0x9324678 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0x93246b8 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0x932469c <col:24> 'difference_type':'int' lvalue ParmVar 0x93235c0 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x9323d68 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x9323d4c <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x9323d00 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0x9323dd0 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0x9324a50 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0x9324a40 <col:5, col:18>
    (CXXConstructExpr 0x9324a18 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9324a08 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0x93249f8 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0x93249d0 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x93249c0 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x93249a8 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x9323490 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0x9324968 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x9324860 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0x9324998 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9324980 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x9324810 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0x9324e48 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0x9324e20 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9324c78 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0x9324c68 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9324c50 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x931eb90 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x9324c40 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x9324bec <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324a70 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x9324c30 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x9324c20 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x9324c04 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324ab0 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0x9324d18 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0x9324d08 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9324cb8 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9320ac0 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0x9324c9c <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324a70 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0x9324df8 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x9324de8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9324dd0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x931cbb0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0x9324d88 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x9324d78 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9324d60 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x93209c0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x9324d50 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9324d38 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324a70 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x9324dc0 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9324da8 <col:18> '_Bool' lvalue ParmVar 0x9324af0 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0x9325c70 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0x9325c50 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0x93250d0 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0x93250b0 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9325048 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0x931e550
          (ImplicitCastExpr 0x9325038 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x932501c <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324e70 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0x93250c0 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9325090 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0x931e550
          (ImplicitCastExpr 0x9325080 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x9325068 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324eb0 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0x9325ae0 <line:366:7, line:370:7>
      (CallExpr 0x9325648 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0x9325638 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93255d8 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0x9325510 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x92bba00 'fill')))
        (BinaryOperator 0x93251d8 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0x93251c8 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0x9325190 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0x931e550
              (ImplicitCastExpr 0x9325160 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0x9325148 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324e70 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0x93251b0 <col:27> 'int' 1))
        (ImplicitCastExpr 0x9325670 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9325218 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0x931e550
            (ImplicitCastExpr 0x9325208 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x93251f0 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324eb0 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0x9325680 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0x93252a8 <col:43, col:54> 'int'
            (ImplicitCastExpr 0x9325298 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9325238 <col:43> 'const _Bool' lvalue ParmVar 0x9324f20 '__x' 'const _Bool &'))
            (UnaryOperator 0x9325268 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0x9325250 <col:50> 'int' 0))
            (IntegerLiteral 0x9325280 <col:54> 'int' 0))))
      (CallExpr 0x9325828 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0x9325818 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93257e0 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9324b80 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x9325860 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9325850 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x93256c4 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324e70 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x93258a8 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9325898 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9325888 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x9325798 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0x9325758 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0x9325748 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x9325710 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0x931e550
                      (ImplicitCastExpr 0x9325700 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0x93256e8 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324e70 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0x9325730 <col:55> 'int' 1))
                (ImplicitCastExpr 0x9325788 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9325770 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0x93258d0 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x93257c8 <col:62> 'const _Bool' lvalue ParmVar 0x9324f20 '__x' 'const _Bool &')))
      (CallExpr 0x9325a28 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0x9325a18 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9325a00 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9324b80 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x9325a70 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9325a60 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9325a50 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x93259a0 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0x9325980 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0x9325948 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0x931e550
                    (ImplicitCastExpr 0x9325938 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0x9325920 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324eb0 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0x9325990 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9325968 <col:44> 'int' 0))))))
        (CXXConstructExpr 0x9325aa8 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9325a98 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x93259d0 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324eb0 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x9325ad0 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x93259e8 <col:56> 'const _Bool' lvalue ParmVar 0x9324f20 '__x' 'const _Bool &'))))
    (CallExpr 0x9325ba8 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0x9325b98 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9325b7c <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9324b80 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0x9325be0 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9325bd0 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9325b34 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324e70 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0x9325c18 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9325c08 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9325b4c <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x9324eb0 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x9325c40 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9325b64 <col:39> 'const _Bool' lvalue ParmVar 0x9324f20 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x9326cd8 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0x9326d48 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0x9326d58 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0x93263c0 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x9326e58 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0x9326ec8 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0x9326fe8 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0x9326fd8 <col:9, col:61>
    (UnaryOperator 0x9326fc0 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9326fa8 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (UnaryOperator 0x9326f40 <col:47, col:54> '<dependent type>' prefix '&'
          (CXXDependentScopeMemberExpr 0x9326f08 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0x9326ef8 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0x9327108 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0x93270f8 <col:9, col:67>
    (UnaryOperator 0x93270e0 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x93270c8 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (UnaryOperator 0x9327060 <col:53, col:60> '<dependent type>' prefix '&'
          (CXXDependentScopeMemberExpr 0x9327028 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0x9327018 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x93271e8 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0x93271d8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x93271b8 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0x9327198 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0x9327138 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0x9327240 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9327250 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9326860 '__a' 'const allocator_type &')
) (CompoundStmt 0x93272b0 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0x9327328 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0x9327308 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x93272d0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x93272c0 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0x9327548 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0x9327538 <line:439:9, line:440:23>
    (CallExpr 0x9327518 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9327370 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0x9327350 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9326a40
          (CXXThisExpr 0x9327340 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0x9327500 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0x9327488 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0x9327470 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0x9327430 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0x9327410 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x93273a4 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9326a80 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9327420 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x93273f8 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x93273e8 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0x93273cc <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0x9327460 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9327448 <col:59> 'int' 1))))
        (ImplicitCastExpr 0x93274f0 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0x93274d8 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x93274c8 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0x93274ac <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0x93278c0 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0x93278a0 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x93275c8 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9327590 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0x9327570 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9326a40
          (CXXThisExpr 0x9327560 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0x9327878 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9327630 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9327610 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9326a40
          (CXXThisExpr 0x9327600 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x93276d0 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9327698 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0x9327678 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9326a40
            (CXXThisExpr 0x9327668 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0x9327850 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9327810 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x93202c0 0x928d910 0x920e010)
        (CXXDependentScopeMemberExpr 0x9327738 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0x9327718 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9326a40
            (CXXThisExpr 0x9327708 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x93277d8 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93277a0 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0x9327780 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9326a40
              (CXXThisExpr 0x9327770 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0x9339210 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0x9339200 <col:7, col:35>
    (CallExpr 0x93391e0 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x93391a8 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0x9339270 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0x9339280 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9328810 '__a' 'const allocator_type &')
) (CompoundStmt 0x93392e0 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0x93390e0 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x93390d0 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x93390f8 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x93392f0 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x93289c0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9339620 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0x93393b0 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0x9339378 <col:7> '<bound member function type>' ->_M_initialize 0x9333460
      (CXXThisExpr 0x9339368 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9339398 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9328920 '__n' 'size_type':'unsigned int'))
  (CallExpr 0x93395f8 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0x93393f8 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
    (CXXDependentScopeMemberExpr 0x93394b0 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9339478 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9339440 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9339430 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x9339530 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93394f8 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0x93394e8 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x93395d8 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0x93395c8 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9339564 <col:3> 'const _Bool' lvalue ParmVar 0x9328970 '__value' 'const _Bool &'))
      (UnaryOperator 0x9339598 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0x9339580 <col:14> 'int' 0))
      (IntegerLiteral 0x93395b0 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0x9339688 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9339650 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0x9339638 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328b30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0x9339968 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0x9339790 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0x9339700 <col:7> '<bound member function type>' ->_M_initialize 0x9333460
      (CXXThisExpr 0x93396f0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9339770 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9339738 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9339720 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328b30 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9339940 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0x93397c0 <col:7> '<bound member function type>' ->_M_copy_aligned 0x9333390
      (CXXThisExpr 0x93397b0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9339830 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x93397f8 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0x93397e0 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328b30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0x93398a0 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9339868 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x933984c <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328b30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0x9339908 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93398d0 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x93398c0 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9339118 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9339980 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9328d10 '__a' 'const allocator_type &')
) (CompoundStmt 0x9339bf8 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0x9339b10 <line:552:2, col:70>
    0x9339ae0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9339bd0 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0x9339b30 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9339b70 <col:25> '_InputIterator' lvalue ParmVar 0x9328c80 '__first' '_InputIterator')
    (DeclRefExpr 0x9339b88 <col:34> '_InputIterator' lvalue ParmVar 0x9328cc0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9339bb8 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0x9339c10 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0x933a228 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0x9339d08 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9339ca8 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9339c60 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
      (UnaryOperator 0x9339c38 <col:11, col:12> '<dependent type>' prefix '&'
        (DeclRefExpr 0x9339c20 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328f30 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0x9339c50 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0x9339cf8 <line:562:2, col:10>
      (UnaryOperator 0x9339ce0 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9339cd0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0x9339f90 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9339e28 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9339de8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (CallExpr 0x9339d78 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9339d40 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9339d24 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9339dc8 <col:24, col:33> '<dependent type>'
        (MemberExpr 0x9339da8 <col:24> '<bound member function type>' ->capacity 0x9290330
          (CXXThisExpr 0x9339d98 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9339f78 <line:564:2, line:567:2>
      (CallExpr 0x9339e98 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9339e60 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9339e50 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0x9339f58 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0x9339ec8 <col:4> '<bound member function type>' ->_M_initialize 0x9333460
          (CXXThisExpr 0x9339eb8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0x9339f38 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9339f00 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9339ee8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0x933a1d8 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9339ff8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9339fc0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9339fb0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0x933a1b0 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0x933a040 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0x9333390
        (CXXThisExpr 0x933a030 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x933a0b0 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x933a078 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0x933a060 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x933a120 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x933a0e8 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x933a0cc <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9328f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x933a190 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0x933a150 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0x933a218 <line:570:7, col:15>
    (UnaryOperator 0x933a200 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x933a1f0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0x933a2d0 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0x933a2a8 <col:7, col:30> '<dependent type>'
    (MemberExpr 0x933a258 <col:7> '<bound member function type>' ->_M_fill_assign 0x9334270
      (CXXThisExpr 0x933a248 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x933a278 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9329040 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x933a290 <col:27> 'const _Bool' lvalue ParmVar 0x9329090 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x933a4f8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0x933a410 <line:604:2, col:70>
    0x933a3e0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x933a4d0 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0x933a430 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x933a470 <col:21> '_InputIterator' lvalue ParmVar 0x928fbd0 '__first' '_InputIterator')
    (DeclRefExpr 0x933a488 <col:30> '_InputIterator' lvalue ParmVar 0x928fc10 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x933a4b8 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0x933a5a0 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0x933a590 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x933a558 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x933a520 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x933a510 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0x933a648 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0x933a638 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x933a600 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x933a5c8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x933a5b8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0x933a6f0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0x933a6e0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x933a6a8 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x933a670 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x933a660 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0x933a798 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0x933a788 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x933a750 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x933a718 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x933a708 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0x933f950 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0x933f940 <col:7, col:36>
    (CXXConstructExpr 0x933f918 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x933f908 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0x933f8f8 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x933f6c8 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0x933f6a8 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0x933f668 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9342cd0 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0x9342cc0 <col:7, col:42>
    (CXXConstructExpr 0x9342c98 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9342c88 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0x9342c78 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9342a48 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0x9342a28 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x93429e8 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0x9342e28 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0x9342e18 <col:7, col:38>
    (CXXConstructExpr 0x9342df0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9342de0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0x9342dd0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9342d60 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0x9342d40 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0x9342d00 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0x9342f80 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0x9342f70 <col:7, col:44>
    (CXXConstructExpr 0x9342f48 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9342f38 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0x9342f28 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9342eb8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0x9342e98 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x9342e58 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0x9343118 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0x9343108 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0x93430e8 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x93430c0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9343080 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CallExpr 0x9342ff0 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x9342fb0 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0x9343060 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0x9343020 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0x9344898 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0x9344590 <line:671:7, line:673:24>
    0x9343140 "const size_type __isize =
      (ImplicitCastExpr 0x9344550 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0x9344538 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0x9344508 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0x93444f8 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0x9344488 <col:2, col:48> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0x93444e0 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x93444d0 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0x93444b4 <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0x9344520 <col:23> 'int' 1)))")
  (DeclStmt 0x9344698 <line:674:7, col:66>
    0x93445b0 "const size_type __asize =
      (CallExpr 0x9344678 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9344640 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0x9344620 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0x93445e4 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0x9344888 <line:675:7, line:676:46>
    (ParenExpr 0x9344870 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0x9344850 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0x9344770 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0x9344760 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x93446a8 <col:15> 'const size_type':'const unsigned int' lvalue Var 0x93445b0 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0x9344748 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0x9344728 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x93446c0 <col:26> 'const size_type':'const unsigned int' lvalue Var 0x9343140 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0x9344738 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x9344710 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x9344700 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0x93446e4 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0x9344810 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0x93447f0 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9344788 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x93445b0 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0x9344800 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0x93447d8 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x93447c8 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x93447ac <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0x9344840 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9344828 <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9343140 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0x9344a88 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0x9344a78 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0x9344a58 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9344a30 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0x93449f0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CXXUnresolvedConstructExpr 0x9344960 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0x9344910 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x93448d8 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0x93448c8 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0x9344948 <col:72> 'int' 0))
        (CallExpr 0x93449d0 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9344990 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0x9344c00 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0x9344bf0 <col:7, col:29>
    (CXXOperatorCallExpr 0x9344bc8 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9344b80 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
      (CallExpr 0x9344af0 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x9344ab0 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0x9344b60 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9344b20 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0x9344f50 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0x9344f40 <line:691:7, line:692:58>
    (CXXConstructExpr 0x9344f18 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9344f08 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9344ef8 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x9344ed8 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x9344ec8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9344eb0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x93209c0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x9344ea0 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0x9344e80 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x9344db8 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0x9344d78 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                  (CXXDependentScopeMemberExpr 0x9344ca0 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9344c68 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0x9344c30 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0x9344c20 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0x9344d60 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0x9344d40 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9344cd4 <col:12> 'size_type':'unsigned int' lvalue ParmVar 0x9290430 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0x9344d50 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x9344d28 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x9344d18 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0x9344cfc <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0x9344e68 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0x9344e48 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9344ddc <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9290430 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x9344e58 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0x9344e30 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0x9344e20 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0x9344e04 <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x9345258 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0x9345248 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0x9345228 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x9345218 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9345200 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x9322e40 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x93451f0 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0x93451d0 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x9345108 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0x93450c8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
            (CXXDependentScopeMemberExpr 0x9344ff0 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9344fb8 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9344f80 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0x9344f70 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0x93450b0 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0x9345090 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9345024 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9290560 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0x93450a0 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x9345078 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9345068 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0x934504c <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0x93451b8 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0x9345198 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x934512c <col:35> 'size_type':'unsigned int' lvalue ParmVar 0x9290560 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0x93451a8 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x9345180 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x9345170 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0x9345154 <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x9345498 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0x9345478 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9345330 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x93452f0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (DeclRefExpr 0x934526c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x92906c0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x93452d0 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9345298 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0x9345288 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x9345448 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0x9345438 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x934541c <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9345468 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9345408 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0x93453d0 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x9346868 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0x93454f8 <col:7, col:25> '<dependent type>'
    (MemberExpr 0x93454c0 <col:7> '<bound member function type>' ->_M_range_check 0x9290740
      (CXXThisExpr 0x93454b0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x93454e0 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9290800 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9346858 <col:28, col:46>
    (ArraySubscriptExpr 0x9346840 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0x9346810 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0x93467f8 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9345518 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9346824 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9290800 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9346968 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0x93468c8 <col:7, col:25> '<dependent type>'
    (MemberExpr 0x9346890 <col:7> '<bound member function type>' ->_M_range_check 0x9290740
      (CXXThisExpr 0x9346880 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x93468b0 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x92908c0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9346958 <col:28, col:46>
    (ArraySubscriptExpr 0x9346940 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0x9346910 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0x93468f8 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0x93468e8 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9346924 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x92908c0 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0x9346a18 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0x9346a08 <col:7, col:21>
    (UnaryOperator 0x93469f0 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0x93469d0 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0x9346990 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x9346ac8 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0x9346ab8 <col:7, col:21>
    (UnaryOperator 0x9346aa0 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0x9346a80 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0x9346a40 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x9346c10 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0x9346c00 <col:7, col:25>
    (UnaryOperator 0x9346be8 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0x9346bd0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9346ba8 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9346b68 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CallExpr 0x9346b30 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9346af0 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9346b50 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x9346d58 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0x9346d48 <col:7, col:25>
    (UnaryOperator 0x9346d30 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0x9346d18 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9346cf0 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9346cb0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CallExpr 0x9346c78 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9346c38 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9346c98 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0x9346d70 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0x9347120 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0x9347100 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9346f00 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9346eb8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (CXXDependentScopeMemberExpr 0x9346e00 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9346dc8 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9346d90 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x9346d80 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0x9346e80 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9346e48 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0x9346e38 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0x9347008 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0x9346fd8 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0x9346fc0 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0x9346f70 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9346f38 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9346f28 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0x9346fec <col:38> '_Bool' lvalue ParmVar 0x9290d40 '__x' '_Bool'))
    (CallExpr 0x93470d8 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0x9347030 <col:9> '<bound member function type>' ->_M_insert_aux 0x9338e10
        (CXXThisExpr 0x9347020 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x93470a0 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0x9347060 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0x93470bc <col:30> '_Bool' lvalue ParmVar 0x9290d40 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0x9347920 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0x93472a0 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9347158 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780 0x931c370)
    (CXXDependentScopeMemberExpr 0x93471e0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93471a8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x9347198 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x9347268 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9347230 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0x9347214 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9290e40 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9347430 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0x93472e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780 0x931c370)
    (CXXDependentScopeMemberExpr 0x9347370 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9347338 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x9347328 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x93473f8 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93473c0 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x93473a4 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9290e40 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x93475c0 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9347478 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780 0x931c370)
    (CXXDependentScopeMemberExpr 0x9347500 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93474c8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x93474b8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x9347588 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9347550 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9347534 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9290e40 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x93478f8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x93477f8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0x9347868 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0x934782c <col:11> '<dependent type>' lvalue))
    (CallExpr 0x93478d8 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x93478a0 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0x9347884 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9290e40 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0x9347b60 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0x9347a08 <line:773:7, col:23>
    0x9347950 "bool __tmp =
      (ImplicitCastExpr 0x93479f8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0x93479d8 <col:20> '_Bool'
          (MemberExpr 0x93479b8 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x931caa0
            (ImplicitCastExpr 0x93479a8 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0x9347984 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9290f30 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0x9347aa8 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0x9347a98 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9347a60 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0x931ccd0 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0x9347a18 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9290f30 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0x9347a50 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0x9347a30 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9290f70 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0x9347b38 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0x9347b28 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9347b10 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x931cbb0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0x9347acc <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9290f70 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0x9347b00 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9347ae4 <col:13> '_Bool' lvalue Var 0x9347950 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0x9339148 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9339138 <col:51, col:56> '_Bool'))
) (CompoundStmt 0x9348220 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0x9347cb8 <line:781:7, col:55>
    0x9347b90 "const difference_type __n =
      (CXXOperatorCallExpr 0x9347c90 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9347c50 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9347bc4 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291080 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9347c30 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0x9347bf0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0x9348100 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0x9347f68 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9347e48 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9347e00 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
        (CXXDependentScopeMemberExpr 0x9347d48 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9347d10 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9347cd8 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0x9347cc8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x9347dc8 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9347d90 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9347d80 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0x9347f40 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9347ef8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
        (DeclRefExpr 0x9347e6c <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291080 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9347ed8 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0x9347e98 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0x9348060 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0x9348030 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0x9348018 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0x9347fc8 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9347f90 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9347f80 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0x9348044 <col:38> 'const _Bool' lvalue ParmVar 0x92910d0 '__x' 'const _Bool &'))
    (CallExpr 0x93480d8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0x9348088 <col:9> '<bound member function type>' ->_M_insert_aux 0x9338e10
        (CXXThisExpr 0x9348078 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0x93480a8 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291080 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0x93480c0 <col:35> 'const _Bool' lvalue ParmVar 0x92910d0 '__x' 'const _Bool &')))
  (ReturnStmt 0x9348210 <line:787:7, col:24>
    (CXXOperatorCallExpr 0x93481e8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x93481a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
      (CallExpr 0x9348170 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x9348130 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0x934818c <col:24> 'const difference_type':'const int' lvalue Var 0x9347b90 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x9348480 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0x9348370 <line:795:2, col:70>
    0x9348340 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9348450 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0x9348390 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x93483d0 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291240 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x93483e8 <col:33> '_InputIterator' lvalue ParmVar 0x9291280 '__first' '_InputIterator')
    (DeclRefExpr 0x9348400 <col:42> '_InputIterator' lvalue ParmVar 0x92912c0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9348438 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0x9348538 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0x9348510 <col:7, col:42> '<dependent type>'
    (MemberExpr 0x93484a8 <col:7> '<bound member function type>' ->_M_fill_insert 0x9334d80
      (CXXThisExpr 0x9348498 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x93484c8 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291420 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x93484e0 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9291460 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x93484f8 <col:39> 'const _Bool' lvalue ParmVar 0x92914b0 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0x93485e8 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0x93485d0 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9348598 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9348560 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9348550 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0x9349d18 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0x9349c00 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9348748 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9348700 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (CXXOperatorCallExpr 0x9348668 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0x9348658 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9348640 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0x9348630 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x93485fc <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291670 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0x9348618 <col:24> 'int' 1))
      (CallExpr 0x93486e0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x93486a0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0x9349bd8 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0x9348790 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
      (CXXOperatorCallExpr 0x9349b28 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0x9349b18 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9349b00 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0x9349af0 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x93487c4 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291670 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0x9349ad8 <col:32> 'int' 1))
      (CallExpr 0x9349ba0 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9349b60 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9349bbc <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291670 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0x9349ca0 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9349c68 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9349c30 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9349c20 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0x9349d08 <line:818:7, col:14>
    (CXXConstructExpr 0x9349ce0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9349cd0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9349cb4 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291670 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9349fd0 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0x9349f50 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9349dc0 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0x9349db0 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9349d98 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x931eb90 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x9349d88 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x9349d34 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291780 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x9349d78 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x9349d68 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x9349d4c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92917c0 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0x9349f30 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0x9349df8 <col:2> '<bound member function type>' ->_M_erase_at_end 0x9339060
        (CXXThisExpr 0x9349de8 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x9349f08 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9349e30 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
        (DeclRefExpr 0x9349e64 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92917c0 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9349ed0 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0x9349e90 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9349eec <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291780 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0x9349fc0 <line:826:7, col:14>
    (CXXConstructExpr 0x9349f98 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9349f88 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9349f6c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9291780 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0x9339160 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0x934a430 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0x934a410 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x934a090 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x934a050 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (DeclRefExpr 0x9349fe8 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x92918d0 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x934a030 <col:24, col:29> '<dependent type>'
        (MemberExpr 0x934a010 <col:24> '<bound member function type>' ->size 0x9290230
          (CXXThisExpr 0x934a000 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x934a218 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0x934a0c8 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9339060
        (CXXThisExpr 0x934a0b8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0x934a1f0 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x934a1b0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x934a138 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0x934a0f8 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0x934a198 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0x934a188 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0x934a178 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x934a160 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x92918d0 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0x934a3e8 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0x934a248 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0x934a2e0 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x934a2a0 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x934a3a8 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x934a368 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x934a2fc <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x92918d0 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x934a348 <col:36, col:41> '<dependent type>'
          (MemberExpr 0x934a328 <col:36> '<bound member function type>' ->size 0x9290230
            (CXXThisExpr 0x934a318 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x934a3cc <col:44> '_Bool' lvalue ParmVar 0x9291910 '__x' '_Bool'))))


        void flip() (CompoundStmt 0x934a780 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0x934a758 <line:847:7, line:849:18>
    (DeclStmt 0x934a550 <line:847:12, col:57>
      0x934a460 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0x934a518 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x934a4e0 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x934a4a8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x934a498 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x934a640 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x934a5f8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x934a560 <col:5> '_Bit_type *' lvalue Var 0x934a460 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0x934a5c0 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x934a588 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x934a578 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0x934a680 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0x934a664 <col:47> '_Bit_type *' lvalue Var 0x934a460 '__p' '_Bit_type *'))
    (BinaryOperator 0x934a740 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0x934a6c0 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x934a6b0 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0x934a694 <col:10> '_Bit_type *' lvalue Var 0x934a460 '__p' '_Bit_type *')))
      (UnaryOperator 0x934a728 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x934a718 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0x934a700 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0x934a6f0 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x934a6d4 <col:18> '_Bit_type *' lvalue Var 0x934a460 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0x934a858 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0x934a838 <col:7, col:30> '<dependent type>'
    (MemberExpr 0x934a7a8 <col:7> '<bound member function type>' ->_M_erase_at_end 0x9339060
      (CXXThisExpr 0x934a798 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x934a818 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x934a7d8 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0x934b340 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0x934ad70 <line:863:7, col:75>
    0x934a880 "_Bit_type *__q =
      (CallExpr 0x934ad18 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0x934ad08 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x934aca8 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0x934abe0 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x92b4db0 'copy')))
        (ImplicitCastExpr 0x934ad40 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x934a930 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0x931e550
            (ImplicitCastExpr 0x934a920 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x934a904 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9333250 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0x934ad50 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x934a978 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0x931e550
            (ImplicitCastExpr 0x934a968 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x934a950 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9333290 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0x934ad60 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x934a9c0 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0x931e550
            (ImplicitCastExpr 0x934a9b0 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x934a998 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93332d0 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0x934b330 <line:864:7, line:865:26>
    (CXXConstructExpr 0x934b308 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x934b2f8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x934b2e8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0x934b1f8 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x934b1e8 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0x934b188 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0x934b0c0 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x92b4db0 'copy')))
            (CXXConstructExpr 0x934b240 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0x934b230 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0x934b220 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0x934ae58 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0x934ae38 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x934ae00 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0x931e550
                        (ImplicitCastExpr 0x934adf0 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0x934add8 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9333290 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0x934ae48 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x934ae20 <col:52> 'int' 0))))))
            (CXXConstructExpr 0x934b278 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0x934b268 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0x934ae88 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9333290 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0x934b2c0 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0x934b2b0 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0x934b2a0 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0x934aef8 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0x934aed8 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0x934aea8 <col:19> '_Bit_type *' lvalue Var 0x934a880 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0x934aee8 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x934aec0 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0x934b9a8 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0x934b428 <line:871:7, col:46>
    0x934b370 "_Bit_type *__q =
      (CallExpr 0x934b408 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x934b3b8 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0x934b3a8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0x934b3ec <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9333410 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0x934b698 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x934b480 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x934b448 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x934b438 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0x934b680 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0x934b668 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0x934b658 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0x934b4b4 <col:42> '_Bit_type *' lvalue Var 0x934b370 '__q' '_Bit_type *'))
        (ParenExpr 0x934b640 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0x934b628 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0x934b5b0 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0x934b598 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0x934b558 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0x934b538 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x934b4cc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9333410 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x934b548 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0x934b520 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0x934b510 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0x934b4f4 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0x934b588 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x934b570 <col:36> 'int' 1))))
            (ImplicitCastExpr 0x934b618 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x934b600 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x934b5f0 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0x934b5d4 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0x934b7b8 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x934b6f8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x934b6c0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x934b6b0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0x934b788 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0x934b768 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0x934b738 <col:41> '_Bit_type *' lvalue Var 0x934b370 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0x934b778 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x934b750 <col:46> 'int' 0))))
  (BinaryOperator 0x934b990 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x934b818 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x934b7e0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x934b7d0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0x934b968 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0x934b928 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
      (CXXDependentScopeMemberExpr 0x934b898 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x934b860 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x934b850 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0x934b910 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0x934b900 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0x934b8f0 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x934b8d8 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0x9333410 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0x934cf90 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0x934ba30 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0x934b9d8 <col:2> '<bound member function type>' ->_M_initialize 0x9333460
      (CXXThisExpr 0x934b9c8 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0x934ba18 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x934b9f8 <col:39> '_Integer' lvalue ParmVar 0x9333530 '__n' '_Integer')))
  (CallExpr 0x934cf68 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0x934ba78 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
    (CXXDependentScopeMemberExpr 0x934ce30 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x934cdf8 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x934cdc0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x934bab0 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x934ceb0 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x934ce78 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0x934ce68 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x934cf48 <col:38, col:49> 'int'
      (DeclRefExpr 0x934cee4 <col:38> '_Integer' lvalue ParmVar 0x9333570 '__x' '_Integer')
      (UnaryOperator 0x934cf18 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0x934cf00 <col:45> 'int' 0))
      (IntegerLiteral 0x934cf30 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x934d0d8 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0x934d0b0 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0x934cfb8 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x934cff8 <col:29> '_InputIterator' lvalue ParmVar 0x9333740 '__first' '_InputIterator')
    (DeclRefExpr 0x934d010 <col:38> '_InputIterator' lvalue ParmVar 0x9333780 '__last' '_InputIterator')
    (CallExpr 0x934d090 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x934d040 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x927e750)
      (DeclRefExpr 0x934d074 <col:33> '_InputIterator' lvalue ParmVar 0x9333740 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x934d268 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0x934d240 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x934d168 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x934d120 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x934d0ec <col:9> '_InputIterator' lvalue ParmVar 0x9333950 '__first' '_InputIterator')
      (DeclRefExpr 0x934d104 <col:20> '_InputIterator' lvalue ParmVar 0x9333990 '__last' '_InputIterator'))
    (UnaryOperator 0x934d1a8 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x934d18c <col:30> '_InputIterator' lvalue ParmVar 0x9333950 '__first' '_InputIterator'))
    (CallExpr 0x934d220 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0x934d1d0 <col:4> '<bound member function type>' ->push_back 0x9290dc0
        (CXXThisExpr 0x934d1c0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0x934d208 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0x934d1f0 <col:15> '_InputIterator' lvalue ParmVar 0x9333950 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x934d520 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0x934d370 <line:913:2, col:54>
    0x934d290 "const size_type __n =
      (CallExpr 0x934d348 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x934d2e0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
        (DeclRefExpr 0x934d314 <col:38> '_ForwardIterator' lvalue ParmVar 0x9333ba0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x934d32c <col:47> '_ForwardIterator' lvalue ParmVar 0x9333be0 '__last' '_ForwardIterator'))")
  (CallExpr 0x934d3c8 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0x934d390 <col:2> '<bound member function type>' ->_M_initialize 0x9333460
      (CXXThisExpr 0x934d380 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x934d3b0 <col:16> 'const size_type':'const unsigned int' lvalue Var 0x934d290 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0x934d4f8 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x934d410 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
    (DeclRefExpr 0x934d444 <col:12> '_ForwardIterator' lvalue ParmVar 0x9333ba0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x934d45c <col:21> '_ForwardIterator' lvalue ParmVar 0x9333be0 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0x934d4c0 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x934d488 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x934d478 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x934d5c8 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0x934d5a0 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x934d550 <col:9> '<bound member function type>' ->_M_fill_assign 0x9334270
      (CXXThisExpr 0x934d540 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x934d570 <col:24> '_Integer' lvalue ParmVar 0x9333df0 '__n' '_Integer')
    (DeclRefExpr 0x934d588 <col:29> '_Integer' lvalue ParmVar 0x9333e30 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x934d710 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0x934d6e8 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0x934d5f0 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x934d630 <col:23> '_InputIterator' lvalue ParmVar 0x9334000 '__first' '_InputIterator')
    (DeclRefExpr 0x934d648 <col:32> '_InputIterator' lvalue ParmVar 0x9334040 '__last' '_InputIterator')
    (CallExpr 0x934d6c8 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x934d678 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x927e750)
      (DeclRefExpr 0x934d6ac <col:65> '_InputIterator' lvalue ParmVar 0x9334000 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0x934dff8 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0x934dfd8 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x934d7d0 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x934d790 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x934d724 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x93341b0 '__n' 'size_t':'unsigned int')
      (CallExpr 0x934d770 <col:17, col:22> '<dependent type>'
        (MemberExpr 0x934d750 <col:17> '<bound member function type>' ->size 0x9290230
          (CXXThisExpr 0x934d740 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x934dc18 <line:935:2, line:939:2>
      (CallExpr 0x934da18 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0x934d818 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
        (CXXDependentScopeMemberExpr 0x934d8d0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x934d898 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x934d860 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x934d850 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x934d950 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x934d918 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x934d908 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0x934d9f8 <col:40, col:51> 'int'
          (ImplicitCastExpr 0x934d9e8 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x934d984 <col:40> '_Bool' lvalue ParmVar 0x93341f0 '__x' '_Bool'))
          (UnaryOperator 0x934d9b8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0x934d9a0 <col:47> 'int' 0))
          (IntegerLiteral 0x934d9d0 <col:51> 'int' 0)))
      (CallExpr 0x934dbf0 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x934da50 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x934dae8 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0x934daa8 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0x934dbb0 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x934db70 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (DeclRefExpr 0x934db04 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0x93341b0 '__n' 'size_t':'unsigned int')
          (CallExpr 0x934db50 <col:24, col:29> '<dependent type>'
            (MemberExpr 0x934db30 <col:24> '<bound member function type>' ->size 0x9290230
              (CXXThisExpr 0x934db20 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0x934dbd4 <col:32> '_Bool' lvalue ParmVar 0x93341f0 '__x' '_Bool')))
    (CompoundStmt 0x934dfc0 <line:941:2, line:945:2>
      (CallExpr 0x934dd50 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0x934dc40 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9339060
          (CXXThisExpr 0x934dc30 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0x934dd28 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x934dce8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CallExpr 0x934dcb0 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x934dc70 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0x934dccc <col:30> 'size_t':'unsigned int' lvalue ParmVar 0x93341b0 '__n' 'size_t':'unsigned int')))
      (CallExpr 0x934df98 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0x934dd98 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
        (CXXDependentScopeMemberExpr 0x934de50 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x934de18 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x934dde0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x934ddd0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x934ded0 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x934de98 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x934de88 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0x934df78 <col:40, col:51> 'int'
          (ImplicitCastExpr 0x934df68 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x934df04 <col:40> '_Bool' lvalue ParmVar 0x93341f0 '__x' '_Bool'))
          (UnaryOperator 0x934df38 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0x934df20 <col:47> 'int' 0))
          (IntegerLiteral 0x934df50 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x934e658 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0x934e0c8 <line:953:2, col:26>
    0x934e020 "iterator __cur =
      (CallExpr 0x934e0a8 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x934e068 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0x934e3e8 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x934e270 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x934e150 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x934e108 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
        (DeclRefExpr 0x934e0d8 <col:9> '_InputIterator' lvalue ParmVar 0x9334340 '__first' '_InputIterator')
        (DeclRefExpr 0x934e0f0 <col:20> '_InputIterator' lvalue ParmVar 0x9334380 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0x934e248 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x934e200 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
        (DeclRefExpr 0x934e174 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x934e020 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x934e1e0 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0x934e1a0 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0x934e318 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0x934e2c8 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x934e2b8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x934e2a0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9320ac0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0x934e288 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x934e020 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0x934e300 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0x934e2e8 <col:57> '_InputIterator' lvalue ParmVar 0x9334340 '__first' '_InputIterator')))
    (BinaryOperator 0x934e3d0 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0x934e380 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x934e370 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x934e358 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x93209c0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x934e348 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x934e330 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x934e020 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0x934e3b8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0x934e3a0 <col:14> '_InputIterator' lvalue ParmVar 0x9334340 '__first' '_InputIterator'))))
  (IfStmt 0x934e638 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x934e488 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x934e440 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
      (DeclRefExpr 0x934e40c <col:6> '_InputIterator' lvalue ParmVar 0x9334340 '__first' '_InputIterator')
      (DeclRefExpr 0x934e424 <col:17> '_InputIterator' lvalue ParmVar 0x9334380 '__last' '_InputIterator'))
    (CallExpr 0x934e4f8 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0x934e4c0 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9339060
        (CXXThisExpr 0x934e4b0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0x934e4e0 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x934e020 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0x934e610 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0x934e528 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x934e5c0 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x934e580 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0x934e5dc <col:18> '_InputIterator' lvalue ParmVar 0x9334340 '__first' '_InputIterator')
      (DeclRefExpr 0x934e5f4 <col:27> '_InputIterator' lvalue ParmVar 0x9334380 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x934ed80 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0x934e760 <line:967:2, col:56>
    0x934e680 "const size_type __len =
      (CallExpr 0x934e738 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x934e6d0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
        (DeclRefExpr 0x934e704 <col:40> '_ForwardIterator' lvalue ParmVar 0x9334570 '__first' '_ForwardIterator')
        (DeclRefExpr 0x934e71c <col:49> '_ForwardIterator' lvalue ParmVar 0x93345b0 '__last' '_ForwardIterator'))")
  (IfStmt 0x934ed60 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x934e818 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x934e7d8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (DeclRefExpr 0x934e770 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x934e680 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0x934e7b8 <col:14, col:19> '<dependent type>'
        (MemberExpr 0x934e798 <col:14> '<bound member function type>' ->size 0x9290230
          (CXXThisExpr 0x934e788 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x934e988 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0x934e850 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9339060
        (CXXThisExpr 0x934e840 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x934e960 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x934e888 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
        (DeclRefExpr 0x934e8bc <col:30> '_ForwardIterator' lvalue ParmVar 0x9334570 '__first' '_ForwardIterator')
        (DeclRefExpr 0x934e8d4 <col:39> '_ForwardIterator' lvalue ParmVar 0x93345b0 '__last' '_ForwardIterator')
        (CallExpr 0x934e940 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x934e900 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0x934ed40 <line:971:4, line:976:4>
      (DeclStmt 0x934ea00 <line:972:6, col:38>
        0x934e9b0 "_ForwardIterator __mid =
          (DeclRefExpr 0x934e9e4 <col:31> '_ForwardIterator' lvalue ParmVar 0x9334570 '__first' '_ForwardIterator')")
      (CallExpr 0x934ead8 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x934ea38 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9285340)
        (DeclRefExpr 0x934ea6c <col:19> '_ForwardIterator' lvalue Var 0x934e9b0 '__mid' '_ForwardIterator')
        (CallExpr 0x934eab8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x934ea98 <col:26> '<bound member function type>' ->size 0x9290230
            (CXXThisExpr 0x934ea88 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0x934ebf8 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x934eb20 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
        (DeclRefExpr 0x934eb54 <col:16> '_ForwardIterator' lvalue ParmVar 0x9334570 '__first' '_ForwardIterator')
        (DeclRefExpr 0x934eb6c <col:25> '_ForwardIterator' lvalue Var 0x934e9b0 '__mid' '_ForwardIterator')
        (CallExpr 0x934ebd8 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0x934eb98 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0x934ed18 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x934ec30 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0x934ecc8 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0x934ec88 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0x934ece4 <col:20> '_ForwardIterator' lvalue Var 0x934e9b0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x934ecfc <col:27> '_ForwardIterator' lvalue ParmVar 0x93345b0 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0x9350980 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0x9350958 <col:9, col:39> '<dependent type>'
    (MemberExpr 0x93508f0 <col:9> '<bound member function type>' ->_M_fill_insert 0x9334d80
      (CXXThisExpr 0x934ed98 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9350910 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93347a0 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x9350928 <col:31> '_Integer' lvalue ParmVar 0x93347e0 '__n' '_Integer')
    (DeclRefExpr 0x9350940 <col:36> '_Integer' lvalue ParmVar 0x9334820 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9350ae8 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0x9350ab8 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0x93509a8 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x93509e8 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9334a20 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x9350a00 <col:32> '_InputIterator' lvalue ParmVar 0x9334a60 '__first' '_InputIterator')
    (DeclRefExpr 0x9350a18 <col:41> '_InputIterator' lvalue ParmVar 0x9334aa0 '__last' '_InputIterator')
    (CallExpr 0x9350a98 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9350a48 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x927e750)
      (DeclRefExpr 0x9350a7c <col:29> '_InputIterator' lvalue ParmVar 0x9334a60 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9350d68 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0x9350d40 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9350b78 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9350b30 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x9350afc <col:9> '_InputIterator' lvalue ParmVar 0x9334e90 '__first' '_InputIterator')
      (DeclRefExpr 0x9350b14 <col:20> '_InputIterator' lvalue ParmVar 0x9334ed0 '__last' '_InputIterator'))
    (UnaryOperator 0x9350bb8 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9350b9c <col:30> '_InputIterator' lvalue ParmVar 0x9334e90 '__first' '_InputIterator'))
    (CompoundStmt 0x9350d28 <line:1006:4, line:1009:4>
      (BinaryOperator 0x9350cb0 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0x9350bcc <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9334e50 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9350c88 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x9350bf8 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9350c3c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9334e50 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0x9350c70 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9350c54 <col:29> '_InputIterator' lvalue ParmVar 0x9334e90 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0x9350d08 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9350cf8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9350ce0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9320ac0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0x9350cc8 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9334e50 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x9351438 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0x9350fc8 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9350ee0 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9350ea0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CXXOperatorCallExpr 0x9350e60 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9350e20 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CallExpr 0x9350db0 <col:11, col:20> '<dependent type>'
          (MemberExpr 0x9350d90 <col:11> '<bound member function type>' ->max_size 0x92902b0
            (CXXThisExpr 0x9350d80 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9350e00 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9350de0 <col:24> '<bound member function type>' ->size 0x9290230
            (CXXThisExpr 0x9350dd0 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x9350e84 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0x9338e80 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x9350f98 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0x9350f88 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9350f6c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9350fb8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9350f58 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9350f3c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0x9338ed0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x93511c0 <line:1026:7, col:61>
    0x9350ff0 "const size_type __len =
      (CXXOperatorCallExpr 0x9351198 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9351158 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x9351058 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x9351038 <col:31> '<bound member function type>' ->size 0x9290230
            (CXXThisExpr 0x9351028 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9351130 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9351090 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa3b0 0x92ab180)
          (CallExpr 0x93510f8 <col:49, col:54> '<dependent type>'
            (MemberExpr 0x93510d8 <col:49> '<bound member function type>' ->size 0x9290230
              (CXXThisExpr 0x93510c8 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0x9351114 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0x9338e80 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x9351428 <line:1027:7, col:68>
    (ConditionalOperator 0x9351408 <col:14, col:68> '<dependent type>'
      (ParenExpr 0x9351388 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0x9351370 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9351278 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9351238 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
            (DeclRefExpr 0x93511d0 <col:15> 'const size_type':'const unsigned int' lvalue Var 0x9350ff0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9351218 <col:23, col:28> '<dependent type>'
              (MemberExpr 0x93511f8 <col:23> '<bound member function type>' ->size 0x9290230
                (CXXThisExpr 0x93511e8 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0x9351348 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9351308 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
            (DeclRefExpr 0x935129c <col:33> 'const size_type':'const unsigned int' lvalue Var 0x9350ff0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x93512e8 <col:41, col:50> '<dependent type>'
              (MemberExpr 0x93512c8 <col:41> '<bound member function type>' ->max_size 0x92902b0
                (CXXThisExpr 0x93512b8 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0x93513d0 <col:55, col:64> '<dependent type>'
        (MemberExpr 0x93513b0 <col:55> '<bound member function type>' ->max_size 0x92902b0
          (CXXThisExpr 0x93513a0 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x93513ec <col:68> 'const size_type':'const unsigned int' lvalue Var 0x9350ff0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0x9351508 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0x93514f0 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x93514a0 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9351468 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9351458 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0x93514d4 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9338fc0 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0x9352720 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0x9351b60 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9351a18 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x93519d8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x9351954 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9351870 '__n' 'size_type':'unsigned int')
      (CallExpr 0x93519b8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9351980 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9351970 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9351b30 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0x9351b20 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9351b04 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9351b50 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9351af0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0x9351ac0 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0x9352700 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9351c40 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9351c00 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CallExpr 0x9351bc8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9351b90 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9351b80 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9351be4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0x9351870 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x93526d0 <line:72:2, line:85:2>
      (DeclStmt 0x9351cf8 <line:73:4, col:39>
        0x9351c70 "const size_type __old_size =
          (CallExpr 0x9351cd8 <col:33, col:38> '<dependent type>'
            (MemberExpr 0x9351cb8 <col:33> '<bound member function type>' ->size 0x9304b90
              (CXXThisExpr 0x9351ca8 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0x9351f08 <line:74:4, line:76:57>
        0x9351d10 "pointer __tmp =
          (CallExpr 0x9351ee0 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0x9351d58 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0x9351d94 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x9351870 '__n' 'size_type':'unsigned int')
            (ParenExpr 0x9351e30 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9351df8 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9351dc0 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0x9351db0 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0x9351ec8 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9351e90 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9351e58 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0x9351e48 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0x93520e0 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9351f48 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (CXXDependentScopeMemberExpr 0x9351fd0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9351f98 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x9351f88 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9352050 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9352018 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0x9352008 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x93520c0 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0x9352084 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0x9352330 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0x9352108 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x9352190 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9352158 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x9352148 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9352308 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0x93522c8 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CXXDependentScopeMemberExpr 0x9352210 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x93521d8 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x93521c8 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x9352290 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9352258 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x9352248 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x93523f0 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x93523a0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9352368 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9352358 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x93523d4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9351d10 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x9352520 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9352450 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9352418 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9352408 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x93524f8 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x93524b8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (DeclRefExpr 0x9352484 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9351d10 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0x935249c <col:38> 'const size_type':'const unsigned int' lvalue Var 0x9351c70 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x93526b8 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9352580 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9352548 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9352538 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9352690 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x9352650 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CXXDependentScopeMemberExpr 0x9352600 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x93525c8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x93525b8 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9352634 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0x9351870 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0x9353b90 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0x9353518 <line:111:7, col:49>
    0x93533f0 "const size_type __n =
      (CXXOperatorCallExpr 0x93534f0 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x93534b0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9353424 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353150 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x9353490 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0x9353450 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0x9353a38 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0x9353790 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9353670 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9353628 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
        (CXXDependentScopeMemberExpr 0x9353570 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9353538 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x9353528 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x93535f0 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93535b8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x93535a8 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9353768 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9353720 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
        (DeclRefExpr 0x9353694 <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353150 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x9353700 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0x93536c0 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0x9353980 <line:114:2, line:117:2>
      (CallExpr 0x93538c0 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x93537f0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93537b8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x93537a8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9353870 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9353838 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0x9353828 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x93538a4 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0x93531a0 '__x' 'const value_type &'))
      (UnaryOperator 0x9353968 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9353930 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93538f8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x93538e8 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0x9353a20 <line:119:2, line:129:2>
      (CallExpr 0x93539f8 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0x93539a8 <col:6> '<bound member function type>' ->_M_insert_aux 0x930ef80
          (CXXThisExpr 0x9353998 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x93539c8 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353150 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0x93539e0 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0x93531a0 '__x' 'const value_type &'))))
  (ReturnStmt 0x9353b80 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0x9353b60 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0x9353b38 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9353af8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CXXDependentScopeMemberExpr 0x9353aa8 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9353a70 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9353a60 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9353adc <col:48> 'const size_type':'const unsigned int' lvalue Var 0x93533f0 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0x93546c0 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0x93544c0 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x93542f8 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x93542b0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (CXXOperatorCallExpr 0x9354218 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x93541d8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (DeclRefExpr 0x93541a4 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353f70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0x93541c0 <col:24> 'int' 1))
      (CallExpr 0x9354290 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9354250 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0x9354498 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0x9354340 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
      (CXXOperatorCallExpr 0x93543e8 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x93543a8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (DeclRefExpr 0x9354374 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353f70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0x9354390 <col:30> 'int' 1))
      (CallExpr 0x9354460 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x9354420 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0x935447c <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353f70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0x9354560 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9354528 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x93544f0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x93544e0 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x9354678 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x93545c0 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9354588 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9354578 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9354640 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9354608 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x93545f8 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0x93546b0 <line:142:7, col:14>
    (DeclRefExpr 0x9354698 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9353f70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x93552c8 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0x9355280 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9354da0 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9354d58 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x9354d28 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354aa0 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0x9354d40 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354ae0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0x9355268 <line:151:2, line:155:2>
      (IfStmt 0x9355018 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9354e98 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9354e50 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
          (DeclRefExpr 0x9354dc4 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354ae0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0x9354e30 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9354df0 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0x9354ff0 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9354f18 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
          (DeclRefExpr 0x9354f4c </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354ae0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0x9354fb8 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0x9354f78 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9354fd4 <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354aa0 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0x9355248 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0x9355048 <col:4> '<bound member function type>' ->_M_erase_at_end 0x930f1f0
          (CXXThisExpr 0x9355038 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x9355220 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x93551e0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CallExpr 0x93550b8 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9355080 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9355068 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354aa0 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0x93551c8 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x93551a0 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9355160 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CallExpr 0x9355128 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0x93550e8 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9355144 <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354ae0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0x93552b8 <line:156:7, col:14>
    (DeclRefExpr 0x935529c <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9354aa0 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0x93570e8 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0x9357090 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9355a50 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9355a08 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (UnaryOperator 0x93559e0 <col:11, col:12> '<dependent type>' prefix '&'
        (DeclRefExpr 0x93559c4 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0x93559f8 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0x9357070 <line:165:2, line:194:2>
      (DeclStmt 0x9355b28 <line:166:4, col:39>
        0x9355a80 "const size_type __xlen =
          (CallExpr 0x9355b08 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9355ad0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x9355ab4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0x9356ea0 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9355be0 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9355ba0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
          (DeclRefExpr 0x9355b38 <col:8> 'const size_type':'const unsigned int' lvalue Var 0x9355a80 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0x9355b80 <col:17, col:26> '<dependent type>'
            (MemberExpr 0x9355b60 <col:17> '<bound member function type>' ->capacity 0x9304de0
              (CXXThisExpr 0x9355b50 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0x9356448 <line:168:6, line:178:6>
          (DeclStmt 0x9355db8 <line:169:8, line:170:20>
            0x9355c10 "pointer __tmp =
              (CallExpr 0x9355d90 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0x9355c58 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0x9355c94 <col:45> 'const size_type':'const unsigned int' lvalue Var 0x9355a80 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0x9355d00 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9355cc8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0x9355cac <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9355d70 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9355d38 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x9355d1c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0x9355f88 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9355df0 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
            (CXXDependentScopeMemberExpr 0x9355e78 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9355e40 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x9355e30 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x9355ef8 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9355ec0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x9355eb0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x9355f68 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x9355f2c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0x93561d8 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0x9355fb0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x9356038 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9356000 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x9355ff0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x93561b0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9356170 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CXXDependentScopeMemberExpr 0x93560b8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9356080 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9356070 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9356138 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9356100 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x93560f0 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x9356298 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9356248 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9356210 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9356200 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x935627c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9355c10 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9356430 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x93562f8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x93562c0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x93562b0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9356408 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0x93563c8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
              (CXXDependentScopeMemberExpr 0x9356378 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9356340 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0x9356330 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0x93563ac <col:67> 'const size_type':'const unsigned int' lvalue Var 0x9355a80 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0x9356e80 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9356518 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x93564d8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
            (CallExpr 0x93564a0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0x9356480 <col:13> '<bound member function type>' ->size 0x9304b90
                (CXXThisExpr 0x9356470 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x93564bc <col:23> 'const size_type':'const unsigned int' lvalue Var 0x9355a80 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0x9356858 <line:180:6, line:183:6>
            (CallExpr 0x9356830 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0x9356560 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
              (CallExpr 0x9356740 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0x93565b8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
                (CallExpr 0x9356640 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9356608 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0x93565ec <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x93566b0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9356678 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0x935665c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9356720 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0x93566e0 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0x93567b8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0x9356778 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0x9356810 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0x93567d4 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0x9356e68 <line:185:6, line:192:6>
            (CallExpr 0x9356b10 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0x9356890 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
              (CXXDependentScopeMemberExpr 0x9356918 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x93568e0 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0x93568c4 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0x9356a68 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0x9356a28 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                (CXXDependentScopeMemberExpr 0x93569a0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9356968 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0x935694c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9356a08 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0x93569e8 <col:63> '<bound member function type>' ->size 0x9304b90
                    (CXXThisExpr 0x93569d8 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0x9356ad8 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9356aa0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0x9356a90 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0x9356e38 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0x9356b60 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
              (CXXOperatorCallExpr 0x9356cb0 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x9356c70 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                (CXXDependentScopeMemberExpr 0x9356be8 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9356bb0 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9356b98 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9356c50 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0x9356c30 <col:59> '<bound member function type>' ->size 0x9304b90
                    (CXXThisExpr 0x9356c20 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0x9356d28 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9356cf0 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9356cd4 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9355780 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0x9356da8 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9356d70 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9356d60 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0x9356e18 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0x9356ddc <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0x9357058 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9356f20 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9356ed0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9356ec0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9357030 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x9356ff0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CXXDependentScopeMemberExpr 0x9356fa0 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9356f68 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x9356f58 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9356fd4 <col:55> 'const size_type':'const unsigned int' lvalue Var 0x9355a80 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0x93570d8 <line:195:7, col:15>
    (UnaryOperator 0x93570c0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x93570b0 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0x9357f68 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0x9357f48 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x93575b0 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9357570 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x9357508 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x93573a0 '__n' 'size_t':'unsigned int')
      (CallExpr 0x9357550 <col:17, col:26> '<dependent type>'
        (MemberExpr 0x9357530 <col:17> '<bound member function type>' ->capacity 0x9304de0
          (CXXThisExpr 0x9357520 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9357770 <line:204:2, line:207:2>
      (DeclStmt 0x93576c8 <line:205:4, col:51>
        0x93575e0 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0x93576a0 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0x9357614 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0x93573a0 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0x935762c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0x93573f0 '__val' 'const value_type &')
            (CallExpr 0x9357680 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0x9357644 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0x9357750 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x93576f0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x93576d8 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0x93575e0 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0x9357738 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9357728 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0x9357f28 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9357830 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x93577f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
        (DeclRefExpr 0x9357788 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x93573a0 '__n' 'size_t':'unsigned int')
        (CallExpr 0x93577d0 <col:22, col:27> '<dependent type>'
          (MemberExpr 0x93577b0 <col:22> '<bound member function type>' ->size 0x9304b90
            (CXXThisExpr 0x93577a0 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0x9357d90 <line:209:2, line:215:2>
        (CallExpr 0x93579a8 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9357878 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
          (CallExpr 0x9357900 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x93578c0 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9357970 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0x9357930 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0x935798c <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x93573f0 '__val' 'const value_type &'))
        (CallExpr 0x9357bf0 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0x93579f8 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f8e30 0x92f9750)
          (CXXDependentScopeMemberExpr 0x9357a78 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9357a40 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9357a30 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9357b58 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0x9357b18 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x9357aac <col:6> 'size_t':'unsigned int' lvalue ParmVar 0x93573a0 '__n' 'size_t':'unsigned int')
            (CallExpr 0x9357af8 <col:12, col:17> '<dependent type>'
              (MemberExpr 0x9357ad8 <col:12> '<bound member function type>' ->size 0x9304b90
                (CXXThisExpr 0x9357ac8 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0x9357b7c <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0x93573f0 '__val' 'const value_type &')
          (CallExpr 0x9357bd0 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9357b94 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0x9357d70 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0x9357c68 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9357c30 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x9357c20 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9357d48 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9357d08 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x9357c9c <col:31> 'size_t':'unsigned int' lvalue ParmVar 0x93573a0 '__n' 'size_t':'unsigned int')
            (CallExpr 0x9357ce8 <col:37, col:42> '<dependent type>'
              (MemberExpr 0x9357cc8 <col:37> '<bound member function type>' ->size 0x9304b90
                (CXXThisExpr 0x9357cb8 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x9357f08 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0x9357dc0 <col:9> '<bound member function type>' ->_M_erase_at_end 0x930f1f0
          (CXXThisExpr 0x9357db0 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0x9357ee0 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9357df8 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x92be5a0)
          (CXXDependentScopeMemberExpr 0x9357e78 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9357e40 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0x9357e30 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9357eac <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x93573a0 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0x9357ec4 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0x93573f0 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9358ae8 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0x93585b8 <line:227:2, col:39>
    0x93584e0 "pointer __cur =
      (ParenListExpr 0x9358598 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0x9358560 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9358528 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x9358518 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0x9358878 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9358770 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9358640 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x93585f8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
        (DeclRefExpr 0x93585c8 <col:9> '_InputIterator' lvalue ParmVar 0x9358280 '__first' '_InputIterator')
        (DeclRefExpr 0x93585e0 <col:20> '_InputIterator' lvalue ParmVar 0x93582c0 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0x9358748 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9358700 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
        (DeclRefExpr 0x9358664 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93584e0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0x93586c8 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9358690 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9358680 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0x93587e8 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0x93587a0 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9358788 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93584e0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0x93587d0 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0x93587b4 <col:18> '_InputIterator' lvalue ParmVar 0x9358280 '__first' '_InputIterator')))
    (BinaryOperator 0x9358860 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0x9358818 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9358800 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93584e0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0x9358848 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0x935882c <col:14> '_InputIterator' lvalue ParmVar 0x9358280 '__first' '_InputIterator'))))
  (IfStmt 0x9358ac8 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9358918 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x93588d0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
      (DeclRefExpr 0x935889c <col:6> '_InputIterator' lvalue ParmVar 0x9358280 '__first' '_InputIterator')
      (DeclRefExpr 0x93588b4 <col:17> '_InputIterator' lvalue ParmVar 0x93582c0 '__last' '_InputIterator'))
    (CallExpr 0x9358988 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0x9358950 <col:4> '<bound member function type>' ->_M_erase_at_end 0x930f1f0
        (CXXThisExpr 0x9358940 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9358970 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93584e0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0x9358aa0 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0x93589b8 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9358a50 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9358a10 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9358a6c <col:18> '_InputIterator' lvalue ParmVar 0x9358280 '__first' '_InputIterator')
      (DeclRefExpr 0x9358a84 <col:27> '_InputIterator' lvalue ParmVar 0x93582c0 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x935a2a0 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0x9359170 <line:244:2, col:56>
    0x9359090 "const size_type __len =
      (CallExpr 0x9359148 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x93590e0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
        (DeclRefExpr 0x9359114 <col:40> '_ForwardIterator' lvalue ParmVar 0x9358e10 '__first' '_ForwardIterator')
        (DeclRefExpr 0x935912c <col:49> '_ForwardIterator' lvalue ParmVar 0x9358e50 '__last' '_ForwardIterator'))")
  (IfStmt 0x935a280 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9359228 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x93591e8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x9359180 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x9359090 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0x93591c8 <col:14, col:23> '<dependent type>'
        (MemberExpr 0x93591a8 <col:14> '<bound member function type>' ->capacity 0x9304de0
          (CXXThisExpr 0x9359198 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9359b20 <line:247:4, line:257:4>
      (DeclStmt 0x9359378 <line:248:6, col:65>
        0x9359260 "pointer __tmp =
          (ParenListExpr 0x9359358 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0x9359330 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0x93592a8 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0x93592e4 <col:41> 'const size_type':'const unsigned int' lvalue Var 0x9359090 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0x93592fc <col:48> '_ForwardIterator' lvalue ParmVar 0x9358e10 '__first' '_ForwardIterator')
              (DeclRefExpr 0x9359314 <col:57> '_ForwardIterator' lvalue ParmVar 0x9358e50 '__last' '_ForwardIterator')))")
      (CallExpr 0x9359548 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0x93593b0 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (CXXDependentScopeMemberExpr 0x9359438 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9359400 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x93593f0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x93594b8 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9359480 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0x9359470 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9359528 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x93594ec <col:6> '<dependent type>' lvalue)))
      (CallExpr 0x9359798 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0x9359570 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x93595f8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93595c0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x93595b0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9359770 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9359730 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CXXDependentScopeMemberExpr 0x9359678 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9359640 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x9359630 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x93596f8 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x93596c0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x93596b0 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x9359858 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9359808 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93597d0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x93597c0 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x935983c <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9359260 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x93599f0 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x93598b8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9359880 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9359870 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x93599c8 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x9359988 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CXXDependentScopeMemberExpr 0x9359938 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9359900 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0x93598f0 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x935996c <col:57> 'const size_type':'const unsigned int' lvalue Var 0x9359090 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x9359b08 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9359a50 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9359a18 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9359a08 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9359ad0 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9359a98 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9359a88 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0x935a260 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9359bf0 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9359bb0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
        (CallExpr 0x9359b78 <col:11, col:16> '<dependent type>'
          (MemberExpr 0x9359b58 <col:11> '<bound member function type>' ->size 0x9304b90
            (CXXThisExpr 0x9359b48 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9359b94 <col:21> 'const size_type':'const unsigned int' lvalue Var 0x9359090 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0x9359d70 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0x9359c28 <col:4> '<bound member function type>' ->_M_erase_at_end 0x930f1f0
          (CXXThisExpr 0x9359c18 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0x9359d48 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0x9359c60 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
          (DeclRefExpr 0x9359c94 <col:30> '_ForwardIterator' lvalue ParmVar 0x9358e10 '__first' '_ForwardIterator')
          (DeclRefExpr 0x9359cac <col:39> '_ForwardIterator' lvalue ParmVar 0x9358e50 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0x9359d10 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9359cd8 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x9359cc8 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0x935a240 <line:261:4, line:269:4>
        (DeclStmt 0x9359df0 <line:262:6, col:38>
          0x9359da0 "_ForwardIterator __mid =
            (DeclRefExpr 0x9359dd4 <col:31> '_ForwardIterator' lvalue ParmVar 0x9358e10 '__first' '_ForwardIterator')")
        (CallExpr 0x9359ec8 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9359e28 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9285340)
          (DeclRefExpr 0x9359e5c <col:19> '_ForwardIterator' lvalue Var 0x9359da0 '__mid' '_ForwardIterator')
          (CallExpr 0x9359ea8 <col:26, col:31> '<dependent type>'
            (MemberExpr 0x9359e88 <col:26> '<bound member function type>' ->size 0x9304b90
              (CXXThisExpr 0x9359e78 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0x9359ff8 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x9359f10 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
          (DeclRefExpr 0x9359f44 <col:16> '_ForwardIterator' lvalue ParmVar 0x9358e10 '__first' '_ForwardIterator')
          (DeclRefExpr 0x9359f5c <col:25> '_ForwardIterator' lvalue Var 0x9359da0 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0x9359fc0 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9359f88 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0x9359f78 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0x935a228 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x935a068 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x935a030 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x935a020 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0x935a1f8 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0x935a0b8 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
            (DeclRefExpr 0x935a0f0 <col:36> '_ForwardIterator' lvalue Var 0x9359da0 '__mid' '_ForwardIterator')
            (DeclRefExpr 0x935a108 <col:43> '_ForwardIterator' lvalue ParmVar 0x9358e50 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0x935a168 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935a130 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x935a120 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x935a1d8 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x935a19c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0x935c4a0 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0x935c480 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x935a830 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0x935a7e8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (CXXDependentScopeMemberExpr 0x935a730 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x935a6f8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x935a6e8 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x935a7b0 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x935a778 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x935a768 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x935af48 <line:305:2, line:321:2>
      (CallExpr 0x935aaa0 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x935a8a0 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935a868 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x935a858 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x935a920 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935a8e8 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0x935a8d8 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0x935aa88 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0x935aa70 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0x935aa58 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0x935aa30 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0x935a9f0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (CXXDependentScopeMemberExpr 0x935a9a0 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935a968 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0x935a958 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0x935a9d8 <line:308:11> 'int' 1))))))
      (UnaryOperator 0x935ab48 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x935ab10 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935aad8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x935aac8 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0x935abc0 <line:311:4, col:22>
        0x935ab70 "_Tp __x_copy =
          (DeclRefExpr 0x935aba4 <col:19> 'const _Tp' lvalue ParmVar 0x935a5d0 '__x' 'const _Tp &')")
      (CallExpr 0x935aea0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0x935abf8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b9d60)
        (CallExpr 0x935ac80 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x935ac48 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0x935ac2c <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935a560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0x935ad78 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x935ad38 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CXXDependentScopeMemberExpr 0x935ace8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x935acb0 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x935aca0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0x935ad20 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0x935ae78 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x935ae38 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CXXDependentScopeMemberExpr 0x935ade8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x935adb0 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x935ada0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0x935ae20 <col:33> 'int' 1)))
      (BinaryOperator 0x935af30 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0x935aee0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x935aec8 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935a560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0x935aef4 <col:18> '_Tp' lvalue Var 0x935ab70 '__x_copy' '_Tp')))
    (CompoundStmt 0x935c440 <line:323:2, line:372:2>
      (DeclStmt 0x935b0d0 <line:324:4, line:325:57>
        0x935af80 "const size_type __len =
          (CallExpr 0x935b0a8 <col:6, col:56> '<dependent type>'
            (MemberExpr 0x935afc8 <col:6> '<bound member function type>' ->_M_check_len 0x930f0e0
              (CXXThisExpr 0x935afb8 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0x935b018 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0x935b008 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x935aff0 <col:29> 'int' 1)))
            (StringLiteral 0x935b070 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0x935b218 <line:326:4, col:57>
        0x935b0f0 "const size_type __elems_before =
          (CXXOperatorCallExpr 0x935b1f0 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x935b1b0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x935b124 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935a560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0x935b190 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0x935b150 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0x935b308 <line:327:4, col:49>
        0x935b230 "pointer __new_start =
          (ParenListExpr 0x935b2e8 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0x935b2c8 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x935b278 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0x935b268 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0x935b2ac <col:42> 'const size_type':'const unsigned int' lvalue Var 0x935af80 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0x935b390 <line:328:4, col:37>
        0x935b320 "pointer __new_finish =
          (ParenListExpr 0x935b370 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0x935b354 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0x935b9c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x935b3a0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x935b9a0 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0x935b4e0 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x935b3f8 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935b3c0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x935b3b0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x935b4a0 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x935b460 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
              (DeclRefExpr 0x935b42c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x935b444 <col:46> 'const size_type':'const unsigned int' lvalue Var 0x935b0f0 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0x935b4c4 <line:339:32> 'const _Tp' lvalue ParmVar 0x935a5d0 '__x' 'const _Tp &'))
          (BinaryOperator 0x935b538 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0x935b504 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0x935b520 <col:23> 'int' 0))
          (BinaryOperator 0x935b748 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0x935b550 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0x935b718 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0x935b580 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
              (CXXDependentScopeMemberExpr 0x935b600 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935b5c8 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x935b5b8 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0x935b688 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x935b650 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x935b634 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935a560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0x935b6a4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x935b6f8 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0x935b6bc <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0x935b778 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x935b760 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x935b988 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0x935b78c <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0x935b958 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0x935b7c0 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
              (CallExpr 0x935b848 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x935b810 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0x935b7f4 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935a560 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0x935b8b0 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935b878 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x935b868 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0x935b8e4 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x935b938 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0x935b8fc <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x935bd60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x935b9e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x935bd40 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0x935bc80 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0x935ba10 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0x935b9f8 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0x935bb40 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x935ba70 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935ba38 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0x935ba28 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x935bb18 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x935bad8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                (DeclRefExpr 0x935baa4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x935babc <col:39> 'const size_type':'const unsigned int' lvalue Var 0x935b0f0 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0x935bc58 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0x935bb88 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
              (DeclRefExpr 0x935bbc8 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x935bbe0 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x935bc38 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0x935bbf8 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0x935bd08 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0x935bc9c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0x935bcd8 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0x935bcf0 <col:35> 'const size_type':'const unsigned int' lvalue Var 0x935af80 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0x935bd30 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0x935bf38 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0x935bda0 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (CXXDependentScopeMemberExpr 0x935be28 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935bdf0 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x935bde0 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x935bea8 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935be70 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0x935be60 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x935bf18 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0x935bedc <col:4> '<dependent type>' lvalue)))
      (CallExpr 0x935c188 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0x935bf60 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x935bfe8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935bfb0 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x935bfa0 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x935c160 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0x935c120 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CXXDependentScopeMemberExpr 0x935c068 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x935c030 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x935c020 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x935c0e8 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x935c0b0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x935c0a0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x935c248 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x935c1f8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935c1c0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x935c1b0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x935c22c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x935c2f8 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x935c2a8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935c270 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x935c260 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x935c2dc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b320 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x935c428 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x935c358 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x935c320 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x935c310 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x935c400 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x935c3c0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (DeclRefExpr 0x935c38c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935b230 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0x935c3a4 <col:52> 'const size_type':'const unsigned int' lvalue Var 0x935af80 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x935f3b0 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0x935f390 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0x935c940 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0x935c920 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x935c8ec <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x935c930 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x935c908 <col:18> 'int' 0)))
    (CompoundStmt 0x935f378 <line:381:2, line:463:2>
      (IfStmt 0x935f358 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0x935cb10 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0x935cac8 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0x935caa0 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0x935ca60 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CXXDependentScopeMemberExpr 0x935c9a8 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935c970 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0x935c960 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x935ca28 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935c9f0 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0x935c9e0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0x935cb00 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x935cae4 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0x935dcb8 <line:384:6, line:413:6>
          (DeclStmt 0x935cb80 <line:385:8, col:33>
            0x935cb30 "value_type __x_copy =
              (DeclRefExpr 0x935cb64 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x935c7f0 '__x' 'const value_type &')")
          (DeclStmt 0x935ccc8 <line:386:8, col:58>
            0x935cba0 "const size_type __elems_after =
              (CXXOperatorCallExpr 0x935cca0 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0x935cc60 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (CallExpr 0x935cc28 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0x935cbe8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x935cc44 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0x935cdb8 <line:387:8, col:53>
            0x935cce0 "pointer __old_finish =
              (ParenListExpr 0x935cd98 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0x935cd60 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935cd28 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x935cd18 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0x935dc98 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0x935ce18 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0x935cdf8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x935cdc8 <col:12> 'const size_type':'const unsigned int' lvalue Var 0x935cba0 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x935ce08 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x935cde0 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0x935d588 <line:389:3, line:399:3>
              (CallExpr 0x935d0f8 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0x935ce58 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                (CXXOperatorCallExpr 0x935cf78 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0x935cf38 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (CXXDependentScopeMemberExpr 0x935ced8 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x935cea0 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x935ce90 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x935cf0c <col:59> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0x935cfe8 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935cfb0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x935cfa0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0x935d068 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935d030 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x935d020 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x935d0d8 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0x935d09c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x935d1c0 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x935d170 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935d138 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x935d128 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x935d1a4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
              (CallExpr 0x935d360 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0x935d208 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b9d60)
                (CallExpr 0x935d290 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x935d258 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x935d23c <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x935d320 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x935d2e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x935d2ac <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935cce0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x935d2c4 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0x935d344 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935cce0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0x935d560 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0x935d3b0 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
                (CallExpr 0x935d438 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x935d400 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x935d3e8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x935d520 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0x935d4e0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                  (CallExpr 0x935d4a8 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x935d470 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0x935d454 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x935d4c4 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0x935d544 <line:398:8> 'value_type':'_Tp' lvalue Var 0x935cb30 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0x935dc70 <line:401:3, line:412:3>
              (CallExpr 0x935d768 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0x935d5d0 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f8e30 0x92f9750)
                (CXXDependentScopeMemberExpr 0x935d650 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935d618 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x935d608 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x935d6d8 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0x935d6b8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x935d684 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x935d6c8 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x935d69c <col:13> 'const size_type':'const unsigned int' lvalue Var 0x935cba0 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0x935d6f0 <line:404:7> 'value_type':'_Tp' lvalue Var 0x935cb30 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0x935d748 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x935d708 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x935d880 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x935d7e0 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935d7a8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x935d798 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x935d868 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0x935d848 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x935d814 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x935d858 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x935d82c <col:38> 'const size_type':'const unsigned int' lvalue Var 0x935cba0 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x935da60 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0x935d8c8 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                (CallExpr 0x935d950 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x935d918 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0x935d8fc <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x935d96c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935cce0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0x935d9d0 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935d998 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x935d988 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x935da40 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0x935da04 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x935db28 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x935dad8 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x935daa0 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x935da90 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x935db0c <col:32> 'const size_type':'const unsigned int' lvalue Var 0x935cba0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x935dc48 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x935db70 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x92bba00 0x9324fb0)
                (CallExpr 0x935dbf8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x935dbc0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x935dba8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x935dc14 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935cce0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x935dc2c <col:48> 'value_type':'_Tp' lvalue Var 0x935cb30 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0x935f318 <line:415:6, line:462:6>
          (DeclStmt 0x935ddc0 <line:416:8, line:417:46>
            0x935dce0 "const size_type __len =
              (CallExpr 0x935dd98 <col:3, col:45> '<dependent type>'
                (MemberExpr 0x935dd28 <col:3> '<bound member function type>' ->_M_check_len 0x930f0e0
                  (CXXThisExpr 0x935dd18 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0x935dd48 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0x935dd60 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0x935df08 <line:418:8, col:61>
            0x935dde0 "const size_type __elems_before =
              (CXXOperatorCallExpr 0x935dee0 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0x935dea0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (DeclRefExpr 0x935de14 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0x935de80 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0x935de40 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0x935dff8 <line:419:8, col:53>
            0x935df20 "pointer __new_start =
              (ParenListExpr 0x935dfd8 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0x935dfb8 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x935df68 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0x935df58 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0x935df9c <col:46> 'const size_type':'const unsigned int' lvalue Var 0x935dce0 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x935e080 <line:420:8, col:41>
            0x935e010 "pointer __new_finish =
              (ParenListExpr 0x935e060 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0x935e044 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0x935e730 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x935e090 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x935e708 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0x935e220 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0x935e0c8 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f8e30 0x92f9750)
                (CXXOperatorCallExpr 0x935e170 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0x935e130 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                  (DeclRefExpr 0x935e100 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x935e118 <col:49> 'const size_type':'const unsigned int' lvalue Var 0x935dde0 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0x935e194 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0x935e1ac <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0x935c7f0 '__x' 'const value_type &')
                (CallExpr 0x935e200 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x935e1c4 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0x935e280 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0x935e24c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0x935e268 <col:20> 'int' 0))
              (BinaryOperator 0x935e490 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0x935e298 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x935e460 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x935e2c8 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                  (CXXDependentScopeMemberExpr 0x935e348 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x935e310 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0x935e300 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0x935e3d0 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x935e398 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x935e37c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x935e3ec <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x935e440 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x935e404 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0x935e4d8 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x935e4a8 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x935e4c0 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0x935e6f0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0x935e4f8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x935e6c0 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x935e528 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                  (CallExpr 0x935e5b0 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x935e578 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x935e55c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935c760 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0x935e618 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x935e5e0 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0x935e5d0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x935e64c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x935e6a0 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x935e664 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0x935ec20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x935e750 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x935ec00 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0x935eb40 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0x935e778 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x935e760 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0x935e9f8 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x935e7b0 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
                  (CXXOperatorCallExpr 0x935e860 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0x935e820 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                    (DeclRefExpr 0x935e7f0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0x935e808 <col:35> 'const size_type':'const unsigned int' lvalue Var 0x935dde0 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0x935e978 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x935e938 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                    (CXXOperatorCallExpr 0x935e8f8 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0x935e8b8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
                      (DeclRefExpr 0x935e884 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0x935e89c <col:21> 'const size_type':'const unsigned int' lvalue Var 0x935dde0 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0x935e91c <col:38> 'size_type':'unsigned int' lvalue ParmVar 0x935c7a0 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0x935e9d8 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x935e99c <col:7> '<dependent type>' lvalue)))
                (CallExpr 0x935eb18 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x935ea48 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
                  (DeclRefExpr 0x935ea88 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x935eaa0 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x935eaf8 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x935eab8 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0x935ebc8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x935eb5c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0x935eb98 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x935ebb0 <col:32> 'const size_type':'const unsigned int' lvalue Var 0x935dce0 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0x935ebf0 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0x935edf8 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0x935ec60 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
            (CXXDependentScopeMemberExpr 0x935ece8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935ecb0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x935eca0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x935ed68 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935ed30 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x935ed20 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x935edd8 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x935ed9c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0x935f060 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0x935ee20 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x935eea8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935ee70 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x935ee60 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x935f038 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0x935eff8 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CXXDependentScopeMemberExpr 0x935ef40 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935eef0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x935eee0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x935efc0 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x935ef88 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x935ef78 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x935f120 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x935f0d0 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935f098 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x935f088 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x935f104 <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x935f1d0 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x935f180 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935f148 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x935f138 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x935f1b4 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935e010 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x935f300 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x935f230 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x935f1f8 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x935f1e8 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x935f2d8 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0x935f298 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
              (DeclRefExpr 0x935f264 <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x935df20 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x935f27c <col:56> 'const size_type':'const unsigned int' lvalue Var 0x935dce0 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x935fb78 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0x935fb50 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x935f9b8 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x935f970 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x935f93c <col:9> '_InputIterator' lvalue ParmVar 0x935f710 '__first' '_InputIterator')
      (DeclRefExpr 0x935f954 <col:20> '_InputIterator' lvalue ParmVar 0x935f750 '__last' '_InputIterator'))
    (UnaryOperator 0x935f9f8 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x935f9dc <col:30> '_InputIterator' lvalue ParmVar 0x935f710 '__first' '_InputIterator'))
    (CompoundStmt 0x935fb38 <line:527:4, line:530:4>
      (BinaryOperator 0x935faf0 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0x935fa0c <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935f6d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x935fac8 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x935fa38 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0x935fa7c <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935f6d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0x935fab0 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0x935fa94 <col:29> '_InputIterator' lvalue ParmVar 0x935f710 '__first' '_InputIterator'))))
      (UnaryOperator 0x935fb20 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x935fb08 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935f6d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x93626c0 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0x93626a0 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9360178 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9360130 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x93600fc <col:6> '_ForwardIterator' lvalue ParmVar 0x935fed0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9360114 <col:17> '_ForwardIterator' lvalue ParmVar 0x935ff10 '__last' '_ForwardIterator'))
    (CompoundStmt 0x9362688 <line:541:4, line:614:4>
      (DeclStmt 0x9360290 <line:542:6, col:58>
        0x93601b0 "const size_type __n =
          (CallExpr 0x9360268 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9360200 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
            (DeclRefExpr 0x9360234 <col:42> '_ForwardIterator' lvalue ParmVar 0x935fed0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x936024c <col:51> '_ForwardIterator' lvalue ParmVar 0x935ff10 '__last' '_ForwardIterator'))")
      (IfStmt 0x9362668 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0x9360458 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0x9360410 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0x93603e8 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0x93603a8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CXXDependentScopeMemberExpr 0x93602f0 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x93602b8 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0x93602a8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9360370 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9360338 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9360328 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0x9360448 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x936042c <col:36> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0x93614d8 <line:545:8, line:574:8>
          (DeclStmt 0x93605a8 <line:546:3, col:53>
            0x9360480 "const size_type __elems_after =
              (CXXOperatorCallExpr 0x9360580 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9360540 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (CallExpr 0x9360508 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0x93604c8 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9360524 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0x9360698 <line:547:3, col:48>
            0x93605c0 "pointer __old_finish =
              (ParenListExpr 0x9360678 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0x9360640 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9360608 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0x93605f8 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0x93614b8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0x93606f8 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0x93606d8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x93606a8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0x9360480 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x93606e8 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x93606c0 <col:23> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0x9360d28 <line:549:5, line:558:5>
              (CallExpr 0x93609c8 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9360738 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                (CXXOperatorCallExpr 0x9360848 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0x9360808 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (CXXDependentScopeMemberExpr 0x93607b8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9360780 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0x9360770 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x93607ec <col:61> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0x93608b8 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9360880 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9360870 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0x9360938 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9360900 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x93608f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x93609a8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x936096c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9360a90 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9360a40 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9360a08 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x93609f8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x9360a74 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0x9360c30 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0x9360ad8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b9d60)
                (CallExpr 0x9360b60 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9360b28 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0x9360b0c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x9360bf0 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0x9360bb0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x9360b7c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93605c0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x9360b94 <col:25> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0x9360c14 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93605c0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0x9360d00 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0x9360c80 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
                (DeclRefExpr 0x9360cb4 <col:17> '_ForwardIterator' lvalue ParmVar 0x935fed0 '__first' '_ForwardIterator')
                (DeclRefExpr 0x9360ccc <col:26> '_ForwardIterator' lvalue ParmVar 0x935ff10 '__last' '_ForwardIterator')
                (DeclRefExpr 0x9360ce4 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0x9361488 <line:560:5, line:573:5>
              (DeclStmt 0x9360da0 <line:561:7, col:39>
                0x9360d50 "_ForwardIterator __mid =
                  (DeclRefExpr 0x9360d84 <col:32> '_ForwardIterator' lvalue ParmVar 0x935fed0 '__first' '_ForwardIterator')")
              (CallExpr 0x9360e40 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0x9360dd8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9285340)
                (DeclRefExpr 0x9360e0c <col:20> '_ForwardIterator' lvalue Var 0x9360d50 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x9360e24 <col:27> 'const size_type':'const unsigned int' lvalue Var 0x9360480 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x9360fd8 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9360e88 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
                (DeclRefExpr 0x9360ec0 <col:35> '_ForwardIterator' lvalue Var 0x9360d50 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x9360ed8 <col:42> '_ForwardIterator' lvalue ParmVar 0x935ff10 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0x9360f48 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9360f00 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9360ef0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x9360fb8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9360f7c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x93610f0 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9361050 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9361018 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9361008 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x93610d8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0x93610b8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9361084 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0x93610c8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x936109c <col:40> 'const size_type':'const unsigned int' lvalue Var 0x9360480 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x93612d0 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9361138 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                (CallExpr 0x93611c0 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9361188 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0x936116c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x93611dc <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x93605c0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0x9361240 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9361208 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x93611f8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x93612b0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9361274 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9361398 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9361348 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9361310 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9361300 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x936137c <col:34> 'const size_type':'const unsigned int' lvalue Var 0x9360480 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x9361460 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x93613e0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
                (DeclRefExpr 0x9361414 <col:17> '_ForwardIterator' lvalue ParmVar 0x935fed0 '__first' '_ForwardIterator')
                (DeclRefExpr 0x936142c <col:26> '_ForwardIterator' lvalue Var 0x9360d50 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x9361444 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0x9362630 <line:576:8, line:613:8>
          (DeclStmt 0x9361600 <line:577:3, line:578:49>
            0x9361500 "const size_type __len =
              (CallExpr 0x93615d8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0x9361548 <col:5> '<bound member function type>' ->_M_check_len 0x930f0e0
                  (CXXThisExpr 0x9361538 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0x9361568 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x93601b0 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0x93615a0 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0x93616f8 <line:579:3, col:48>
            0x9361620 "pointer __new_start =
              (ParenListExpr 0x93616d8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0x93616b8 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9361668 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0x9361658 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0x936169c <col:41> 'const size_type':'const unsigned int' lvalue Var 0x9361500 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x9361780 <line:580:3, col:36>
            0x9361710 "pointer __new_finish =
              (ParenListExpr 0x9361760 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0x9361744 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361620 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0x9361d38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9361790 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x9361d18 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0x9361998 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0x93617a0 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9361968 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x93617d0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                  (CXXDependentScopeMemberExpr 0x9361850 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9361818 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0x9361808 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0x93618d8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x93618a0 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0x9361884 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x93618f4 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361620 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9361948 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x936190c <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0x9361af0 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0x93619b0 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9361ac0 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x93619e0 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f5d20 0x92f6610)
                  (DeclRefExpr 0x9361a18 <col:37> '_ForwardIterator' lvalue ParmVar 0x935fed0 '__first' '_ForwardIterator')
                  (DeclRefExpr 0x9361a30 <col:46> '_ForwardIterator' lvalue ParmVar 0x935ff10 '__last' '_ForwardIterator')
                  (DeclRefExpr 0x9361a48 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9361aa0 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x9361a60 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0x9361d00 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0x9361b08 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9361cd0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x9361b38 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92f6a20)
                  (CallExpr 0x9361bc0 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9361b88 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0x9361b6c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x935fe90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0x9361c28 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9361bf0 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0x9361be0 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x9361c5c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9361cb0 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x9361c74 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0x9361f50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9361d58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x9361f30 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0x9361e60 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9361d90 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
                (DeclRefExpr 0x9361dd0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361620 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9361de8 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9361e40 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9361e00 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0x9361ef8 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0x9361e88 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0x9361ec4 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361620 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9361edc <col:34> 'const size_type':'const unsigned int' lvalue Var 0x9361500 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0x9361f20 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0x9362128 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9361f90 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
            (CXXDependentScopeMemberExpr 0x9362018 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9361fe0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x9361fd0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x9362098 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9362060 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x9362050 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x9362108 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0x93620cc <col:10> '<dependent type>' lvalue)))
          (CallExpr 0x9362378 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0x9362150 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x93621d8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x93621a0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x9362190 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9362350 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0x9362310 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CXXDependentScopeMemberExpr 0x9362258 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9362220 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x9362210 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x93622d8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x93622a0 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x9362290 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x9362438 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x93623e8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x93623b0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x93623a0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x936241c <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361620 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x93624e8 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9362498 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9362460 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9362450 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x93624cc <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361710 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9362618 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9362548 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9362510 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9362500 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x93625f0 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x93625b0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
              (DeclRefExpr 0x936257c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9361620 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x9362594 <col:51> 'const size_type':'const unsigned int' lvalue Var 0x9361500 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0x9363450 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0x9362bd0 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9362ad8 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9362a98 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x9362a14 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9362930 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9362a78 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9362a40 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9362a30 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x9362ba0 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0x9362b90 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9362b74 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9362bc0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9362b60 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0x9362b34 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0x9363430 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9362cb0 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9362c70 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CallExpr 0x9362c38 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9362c00 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9362bf0 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9362c54 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0x9362930 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x9363408 <line:628:2, line:636:2>
      (DeclStmt 0x9362da8 <line:629:4, col:43>
        0x9362cf0 "_Bit_type *__q =
          (CallExpr 0x9362d88 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9362d38 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0x9362d28 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x9362d6c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0x9362930 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0x9363008 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9362e00 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9362dc8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9362db8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9362fe0 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0x9362e48 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0x9333390
            (CXXThisExpr 0x9362e38 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0x9362eb8 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0x9362e78 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0x9362f28 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0x9362ee8 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0x9362fb0 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0x9362f90 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9362f60 <col:20> '_Bit_type *' lvalue Var 0x9362cf0 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0x9362fa0 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9362f78 <col:25> 'int' 0)))))
      (CallExpr 0x9363068 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9363030 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9363020 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x9363190 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x93630d0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9363098 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9363088 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x9363160 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x9363140 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x9363110 <col:38> '_Bit_type *' lvalue Var 0x9362cf0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x9363150 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9363128 <col:43> 'int' 0))))
      (BinaryOperator 0x93633f0 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x93631f0 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93631b8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x93631a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x93633d8 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0x93633c0 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0x93633b0 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9363224 <col:39> '_Bit_type *' lvalue Var 0x9362cf0 '__q' '_Bit_type *'))
            (BinaryOperator 0x9363398 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0x9363320 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0x9363308 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0x93632c8 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0x93632a8 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x936323c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0x9362930 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0x93632b8 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x9363290 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x9363280 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0x9363264 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0x93632f8 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x93632e0 <col:71> 'int' 1))))
              (ImplicitCastExpr 0x9363388 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x9363370 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9363360 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x9363344 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0x9364f98 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0x93638b8 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0x9363890 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0x9363870 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x936383c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9363880 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9363858 <col:18> 'int' 0)))
    (ReturnStmt 0x93638a8 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0x9364f78 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9363a38 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0x93639f8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (CXXOperatorCallExpr 0x93639b8 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9363978 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CallExpr 0x9363908 <col:11, col:20> '<dependent type>'
          (MemberExpr 0x93638e8 <col:11> '<bound member function type>' ->capacity 0x9290330
            (CXXThisExpr 0x93638d8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9363958 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9363938 <col:24> '<bound member function type>' ->size 0x9290230
            (CXXThisExpr 0x9363928 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x93639dc <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x9364298 <line:647:2, line:652:2>
      (CallExpr 0x9363c80 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9363a80 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b9d60)
        (DeclRefExpr 0x9363ab4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93636c0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9363b20 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9363ae0 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0x9363c58 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x9363c18 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CXXDependentScopeMemberExpr 0x9363b88 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9363b50 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9363b40 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0x9363c00 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0x9363bf0 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0x9363be0 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9363bc8 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0x93640e8 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0x93640d8 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9364098 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x9324fb0 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0x9364120 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9364110 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9363d08 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93636c0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x9364168 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9364158 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9364148 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0x9363dc8 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0x9363db8 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9363da0 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0x9363d90 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0x9363d20 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93636c0 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0x9363d78 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0x9363d68 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0x9363d58 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9363d40 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0x9364190 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0x9363dec <col:61> '_Bool' lvalue ParmVar 0x9363740 '__x' '_Bool')))
      (CompoundAssignOperator 0x9364278 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0x93641e8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93641b0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x93641a0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0x9364260 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0x9364250 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0x9364240 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9364228 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0x9364f38 <line:654:2, line:668:2>
      (DeclStmt 0x93643a0 <line:655:4, line:656:55>
        0x93642c0 "const size_type __len =
          (CallExpr 0x9364378 <col:6, col:54> '<dependent type>'
            (MemberExpr 0x9364308 <col:6> '<bound member function type>' ->_M_check_len 0x9338f50
              (CXXThisExpr 0x93642f8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x9364328 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int')
            (StringLiteral 0x9364340 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0x9364478 <line:657:4, col:46>
        0x93643c0 "_Bit_type *__q =
          (CallExpr 0x9364458 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9364408 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0x93643f8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x936443c <col:40> 'const size_type':'const unsigned int' lvalue Var 0x93642c0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0x9364630 <line:658:4, line:659:24>
        0x9364490 "iterator __i =
          (CallExpr 0x9364608 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0x93644d8 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0x9333390
              (CXXThisExpr 0x93644c8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0x9364548 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x9364508 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9364564 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93636c0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0x93645d8 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x93645b8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x9364588 <col:16> '_Bit_type *' lvalue Var 0x93643c0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x93645c8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93645a0 <col:21> 'int' 0))))")
      (CallExpr 0x9364818 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0x9364808 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93647e8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x9324fb0 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0x9364850 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9364840 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x93646a0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9364490 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x9364898 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9364888 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9364878 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0x9364760 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0x9364750 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9364738 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0x9364728 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0x93646b8 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9364490 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0x9364710 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0x9364700 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0x93646f0 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x93646d8 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0x93648c0 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0x9364784 <col:47> '_Bool' lvalue ParmVar 0x9363740 '__x' '_Bool')))
      (BinaryOperator 0x9364b20 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9364918 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93648e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x93648d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9364af8 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9364968 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
          (DeclRefExpr 0x936499c <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x93636c0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0x9364a08 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0x93649c8 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0x9364ad0 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x9364ac0 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9364aa8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9321000 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0x9364a98 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0x9364a24 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9364490 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0x9364a80 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0x9364a70 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0x9364a60 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9364a48 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9363700 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0x9364b80 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9364b48 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9364b38 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x9364e00 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9364be8 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9364bb0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9364ba0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x9364de8 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0x9364dd0 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0x9364dc0 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9364c1c <col:39> '_Bit_type *' lvalue Var 0x93643c0 '__q' '_Bit_type *'))
            (ParenExpr 0x9364da8 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0x9364d90 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0x9364d18 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0x9364d00 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0x9364cc0 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0x9364ca0 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0x9364c34 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x93642c0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0x9364cb0 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0x9364c88 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0x9364c78 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0x9364c5c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0x9364cf0 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9364cd8 <col:33> 'int' 1))))
                (ImplicitCastExpr 0x9364d80 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0x9364d68 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0x9364d58 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0x9364d3c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0x9364f20 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9364e60 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9364e28 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9364e18 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x9364ef0 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x9364ed0 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x9364ea0 <col:38> '_Bit_type *' lvalue Var 0x93643c0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x9364ee0 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9364eb8 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9366728 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0x9366708 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9365548 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9365500 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x93654cc <col:6> '_ForwardIterator' lvalue ParmVar 0x93652a0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x93654e4 <col:17> '_ForwardIterator' lvalue ParmVar 0x93652e0 '__last' '_ForwardIterator'))
    (CompoundStmt 0x93666f0 <line:679:4, line:705:4>
      (DeclStmt 0x9365660 <line:680:6, col:52>
        0x9365580 "size_type __n =
          (CallExpr 0x9365638 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x93655d0 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
            (DeclRefExpr 0x9365604 <col:36> '_ForwardIterator' lvalue ParmVar 0x93652a0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x936561c <col:45> '_ForwardIterator' lvalue ParmVar 0x93652e0 '__last' '_ForwardIterator'))")
      (IfStmt 0x93666d0 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x93657d0 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9365790 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
          (CXXOperatorCallExpr 0x9365750 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9365710 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (CallExpr 0x93656a0 <col:10, col:19> '<dependent type>'
              (MemberExpr 0x9365680 <col:10> '<bound member function type>' ->capacity 0x9290330
                (CXXThisExpr 0x9365670 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0x93656f0 <col:23, col:28> '<dependent type>'
              (MemberExpr 0x93656d0 <col:23> '<bound member function type>' ->size 0x9290230
                (CXXThisExpr 0x93656c0 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0x9365774 <col:33> 'size_type':'unsigned int' lvalue Var 0x9365580 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0x9365c08 <line:682:8, line:688:8>
          (CallExpr 0x9365a18 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9365818 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b9d60)
            (DeclRefExpr 0x936584c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9365260 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0x93658b8 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0x9365878 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0x93659f0 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0x93659b0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
              (CXXDependentScopeMemberExpr 0x9365920 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x93658e8 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x93658d8 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0x9365998 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0x9365988 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0x9365978 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9365960 <col:26> 'size_type':'unsigned int' lvalue Var 0x9365580 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0x9365ae8 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0x9365a68 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
            (DeclRefExpr 0x9365a9c <col:13> '_ForwardIterator' lvalue ParmVar 0x93652a0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9365ab4 <col:22> '_ForwardIterator' lvalue ParmVar 0x93652e0 '__last' '_ForwardIterator')
            (DeclRefExpr 0x9365acc <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9365260 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0x9365be8 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0x9365b58 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9365b20 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9365b10 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0x9365bd0 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0x9365bc0 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0x9365bb0 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9365b98 <col:46> 'size_type':'unsigned int' lvalue Var 0x9365580 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0x93666a0 <line:690:8, line:704:8>
          (DeclStmt 0x9365d58 <line:691:3, line:692:55>
            0x9365c30 "const size_type __len =
              (CallExpr 0x9365d30 <col:5, col:54> '<dependent type>'
                (MemberExpr 0x9365c78 <col:5> '<bound member function type>' ->_M_check_len 0x9338f50
                  (CXXThisExpr 0x9365c68 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0x9365c98 <col:18> 'size_type':'unsigned int' lvalue Var 0x9365580 '__n' 'size_type':'unsigned int')
                (StringLiteral 0x9365cf0 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0x9365e38 <line:693:3, col:45>
            0x9365d80 "_Bit_type *__q =
              (CallExpr 0x9365e18 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9365dc8 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x9365db8 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0x9365dfc <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9365c30 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0x9365ff0 <line:694:3, line:695:30>
            0x9365e50 "iterator __i =
              (CallExpr 0x9365fc8 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0x9365e98 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0x9333390
                  (CXXThisExpr 0x9365e88 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0x9365f08 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0x9365ec8 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9365f24 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9365260 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0x9365f98 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0x9365f78 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0x9365f48 <col:22> '_Bit_type *' lvalue Var 0x9365d80 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0x9365f88 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x9365f60 <col:27> 'int' 0))))")
          (BinaryOperator 0x93660d8 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0x9366000 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9365e50 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0x93660b0 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0x9366030 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
              (DeclRefExpr 0x9366064 <col:19> '_ForwardIterator' lvalue ParmVar 0x93652a0 '__first' '_ForwardIterator')
              (DeclRefExpr 0x936607c <col:28> '_ForwardIterator' lvalue ParmVar 0x93652e0 '__last' '_ForwardIterator')
              (DeclRefExpr 0x9366094 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9365e50 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0x9366288 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9366138 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9366100 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x93660f0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0x9366260 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0x9366188 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
              (DeclRefExpr 0x93661bc <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9365260 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0x9366228 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0x93661e8 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9366244 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9365e50 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0x93662e8 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x93662b0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x93662a0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0x9366568 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9366350 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9366318 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9366308 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0x9366550 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0x9366538 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0x9366528 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0x9366384 <col:38> '_Bit_type *' lvalue Var 0x9365d80 '__q' '_Bit_type *'))
                (ParenExpr 0x9366510 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0x93664f8 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0x9366480 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0x9366468 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0x9366428 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0x9366408 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0x936639c <col:14> 'const size_type':'const unsigned int' lvalue Var 0x9365c30 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0x9366418 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0x93663f0 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0x93663e0 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0x93663c4 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0x9366458 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9366440 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0x93664e8 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x93664d0 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x93664c0 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0x93664a4 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0x9366688 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x93665c8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9366590 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9366580 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0x9366658 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x9366638 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x9366608 <col:37> '_Bit_type *' lvalue Var 0x9365d80 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x9366648 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9366620 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0x9367bd0 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0x9367bb0 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9366c48 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9366c00 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (CXXDependentScopeMemberExpr 0x9366b48 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9366b10 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9366ad8 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x9366ac8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0x9366bc8 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9366b90 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0x9366b80 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9367020 <line:714:2, line:719:2>
      (CallExpr 0x9366e60 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9366c90 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b9d60)
        (DeclRefExpr 0x9366cc4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9366990 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0x9366d28 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9366cf0 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0x9366ce0 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0x9366e38 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9366df8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
          (CXXDependentScopeMemberExpr 0x9366da8 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9366d70 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9366d60 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0x9366de0 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0x9366f60 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9366f38 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9366f20 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x931cbb0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0x9366ed8 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0x9366ec8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9366eb0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x93209c0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0x9366ea0 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9366e88 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9366990 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x9366f10 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9366ef8 <col:18> '_Bool' lvalue ParmVar 0x93669d0 '__x' '_Bool')))
      (UnaryOperator 0x9367008 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9366fd0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9366f98 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9366f88 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0x9367b80 <line:721:2, line:734:2>
      (DeclStmt 0x93671a0 <line:722:4, line:723:63>
        0x9367050 "const size_type __len =
          (CallExpr 0x9367178 <col:6, col:62> '<dependent type>'
            (MemberExpr 0x9367098 <col:6> '<bound member function type>' ->_M_check_len 0x9338f50
              (CXXThisExpr 0x9367088 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0x93670e8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0x93670d8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93670c0 <col:29> 'int' 1)))
            (StringLiteral 0x9367140 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0x9367278 <line:724:4, col:46>
        0x93671c0 "_Bit_type *__q =
          (CallExpr 0x9367258 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9367208 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0x93671f8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x936723c <col:40> 'const size_type':'const unsigned int' lvalue Var 0x9367050 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0x9367430 <line:725:4, line:726:24>
        0x9367290 "iterator __i =
          (CallExpr 0x9367408 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0x93672d8 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0x9333390
              (CXXThisExpr 0x93672c8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0x9367348 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x9367308 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9367364 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9366990 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0x93673d8 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x93673b8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x9367388 <col:16> '_Bit_type *' lvalue Var 0x93671c0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x93673c8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93673a0 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0x93675a8 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9367598 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9367580 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x931cbb0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0x9367538 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0x9367528 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9367510 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x93209c0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0x9367500 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0x93674d8 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0x93674c8 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9367470 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0x9320bd0 'operator++' 'iterator (int)'))
              (DeclRefExpr 0x9367440 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9367290 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0x9367458 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0x9367570 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9367558 <col:13> '_Bool' lvalue ParmVar 0x93669d0 '__x' '_Bool')))
      (BinaryOperator 0x9367768 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9367618 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93675e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x93675d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9367740 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9367668 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
          (DeclRefExpr 0x936769c <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9366990 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0x9367708 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0x93676c8 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9367724 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9367290 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0x93677c8 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9367790 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9367780 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x9367a48 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9367830 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x93677f8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x93677e8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x9367a30 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0x9367a18 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0x9367a08 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9367864 <col:39> '_Bit_type *' lvalue Var 0x93671c0 '__q' '_Bit_type *'))
            (ParenExpr 0x93679f0 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0x93679d8 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0x9367960 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0x9367948 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0x9367908 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0x93678e8 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0x936787c <col:47> 'const size_type':'const unsigned int' lvalue Var 0x9367050 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0x93678f8 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0x93678d0 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0x93678c0 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0x93678a4 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0x9367938 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9367920 <col:33> 'int' 1))))
                (ImplicitCastExpr 0x93679c8 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0x93679b0 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0x93679a0 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0x9367984 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x931c640 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0x9367b68 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9367aa8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9367a70 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9367a60 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x9367b38 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x9367b18 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x9367ae8 <col:38> '_Bit_type *' lvalue Var 0x93671c0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x9367b28 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9367b00 <col:43> 'int' 0)))))))


}
namespace std {
    template <typename _Tp> pair<_Tp *, ptrdiff_t> get_temporary_buffer(ptrdiff_t __len) (CompoundStmt 0x9368928 </usr/include/c++/4.6/bits/stl_tempbuf.h:87:5, line:102:5>
  (DeclStmt 0x93680f8 <line:88:7, line:89:61>
    0x9367fb0 "const ptrdiff_t __max =
      (ImplicitCastExpr 0x93680e8 <col:2, col:60> 'const ptrdiff_t':'const int' <IntegralCast>
        (BinaryOperator 0x93680d0 <col:2, col:60> 'unsigned int' '/'
          (ImplicitCastExpr 0x93680c0 <col:2, col:42> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x93680b0 <col:2, col:42> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0x9368070 <col:2, col:42> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int')))
          (UnaryExprOrTypeTraitExpr 0x9368098 <col:50, col:60> 'unsigned int' sizeof '_Tp')))")
  (IfStmt 0x93681c8 <line:90:7, line:91:10>
    <<<NULL>>>
    (BinaryOperator 0x9368158 <line:90:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9368138 <col:11> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9368108 <col:11> 'ptrdiff_t':'int' lvalue ParmVar 0x9367e50 '__len' 'ptrdiff_t':'int'))
      (ImplicitCastExpr 0x9368148 <col:19> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9368120 <col:19> 'const ptrdiff_t':'const int' lvalue Var 0x9367fb0 '__max' 'const ptrdiff_t':'const int')))
    (BinaryOperator 0x93681b0 <line:91:2, col:10> 'ptrdiff_t':'int' lvalue '='
      (DeclRefExpr 0x9368170 <col:2> 'ptrdiff_t':'int' lvalue ParmVar 0x9367e50 '__len' 'ptrdiff_t':'int')
      (ImplicitCastExpr 0x93681a0 <col:10> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9368188 <col:10> 'const ptrdiff_t':'const int' lvalue Var 0x9367fb0 '__max' 'const ptrdiff_t':'const int')))
    <<<NULL>>>)
  (WhileStmt 0x9368740 <line:93:7, line:100:2>
    <<<NULL>>>
    (BinaryOperator 0x9368228 <line:93:14, col:22> '_Bool' '>'
      (ImplicitCastExpr 0x9368218 <col:14> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x93681e4 <col:14> 'ptrdiff_t':'int' lvalue ParmVar 0x9367e50 '__len' 'ptrdiff_t':'int'))
      (IntegerLiteral 0x9368200 <col:22> 'int' 0))
    (CompoundStmt 0x9368720 <line:94:2, line:100:2>
      (DeclStmt 0x9368448 <line:95:4, line:96:22>
        0x9368250 "_Tp *__tmp =
          (CXXStaticCastExpr 0x9368430 <line:95:17, line:96:21> '_Tp *' static_cast<_Tp *> <Dependent>
            (CallExpr 0x93683f8 <line:95:35, line:96:20> 'void *'
              (ImplicitCastExpr 0x93683e8 <line:95:35, <invalid sloc>> 'void *(*)(std::size_t, const std::nothrow_t &) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0x936838c <col:35, <invalid sloc>> 'void *(std::size_t, const std::nothrow_t &) throw()' lvalue Function 0x92d8f20 'operator new' 'void *(std::size_t, const std::nothrow_t &) throw()'))
              (BinaryOperator 0x9368330 <col:50, col:68> 'unsigned int' '*'
                (ImplicitCastExpr 0x9368320 <col:50> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9368310 <col:50> 'ptrdiff_t':'int' <LValueToRValue>
                    (DeclRefExpr 0x93682d4 <col:50> 'ptrdiff_t':'int' lvalue ParmVar 0x9367e50 '__len' 'ptrdiff_t':'int')))
                (UnaryExprOrTypeTraitExpr 0x93682f8 <col:58, col:68> 'unsigned int' sizeof '_Tp'))
              (DeclRefExpr 0x936836c <line:96:8, col:13> 'const struct std::nothrow_t' lvalue Var 0x92d8630 'nothrow' 'const struct std::nothrow_t')))")
      (IfStmt 0x93686b0 <line:97:4, line:98:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x93684d0 <line:97:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9368488 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
          (DeclRefExpr 0x9368458 <col:8> '_Tp *' lvalue Var 0x9368250 '__tmp' '_Tp *')
          (IntegerLiteral 0x9368470 <col:17> 'int' 0))
        (ReturnStmt 0x93686a0 <line:98:6, col:52>
          (CXXUnresolvedConstructExpr 0x9368680 <col:13, col:52> 'std::pair<_Tp *, ptrdiff_t>':'pair<_Tp *, ptrdiff_t>'
            (DeclRefExpr 0x9368650 <col:40> '_Tp *' lvalue Var 0x9368250 '__tmp' '_Tp *')
            (DeclRefExpr 0x9368668 <col:47> 'ptrdiff_t':'int' lvalue ParmVar 0x9367e50 '__len' 'ptrdiff_t':'int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0x9368700 <line:99:4, col:13> 'ptrdiff_t':'int' lvalue '/=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x93686cc <col:4> 'ptrdiff_t':'int' lvalue ParmVar 0x9367e50 '__len' 'ptrdiff_t':'int')
        (IntegerLiteral 0x93686e8 <col:13> 'int' 2))))
  (ReturnStmt 0x9368918 <line:101:7, col:64>
    (CXXUnresolvedConstructExpr 0x93688f8 <col:14, col:64> 'std::pair<_Tp *, ptrdiff_t>':'pair<_Tp *, ptrdiff_t>'
      (CXXStaticCastExpr 0x93688c8 <col:41, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
        (IntegerLiteral 0x93688a0 <col:59> 'int' 0))
      (IntegerLiteral 0x93688e0 <col:63> 'int' 0))))

;
    template <typename _Tp> inline void return_temporary_buffer(_Tp *__p) (CompoundStmt 0x9368bc0 </usr/include/c++/4.6/bits/stl_tempbuf.h:114:5, col:45>
  (CallExpr 0x9368b98 <col:7, col:42> '<dependent type>'
    (UnresolvedLookupExpr 0x9368b08 <col:7, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x92d8bd0 0x92d92a0 0x92d99e0)
    (DeclRefExpr 0x9368b44 <col:25> '_Tp *' lvalue ParmVar 0x93689e0 '__p' '_Tp *')
    (DeclRefExpr 0x9368b74 <col:30, col:35> 'const struct std::nothrow_t' lvalue Var 0x92d8630 'nothrow' 'const struct std::nothrow_t')))

;
    template <typename _ForwardIterator, typename _Tp> class _Temporary_buffer {
        class _Temporary_buffer;
    public:
    public:
        typedef _Tp value_type;
        typedef value_type *pointer;
        typedef pointer iterator;
        typedef ptrdiff_t size_type;
    protected:
    protected:
        size_type _M_original_len;
        size_type _M_len;
        pointer _M_buffer;
    public:
    public:
        size_type size() const (CompoundStmt 0x936b9c8 </usr/include/c++/4.6/bits/stl_tempbuf.h:143:7, col:24>
  (ReturnStmt 0x936b9b8 <col:9, col:16>
    (MemberExpr 0x936b994 <col:16> 'const size_type':'const int' lvalue ->_M_len 0x936b210
      (CXXThisExpr 0x936b968 <col:16> 'const _Temporary_buffer<_ForwardIterator, _Tp> *' this))))


        size_type requested_size() const (CompoundStmt 0x936ba20 </usr/include/c++/4.6/bits/stl_tempbuf.h:148:7, col:33>
  (ReturnStmt 0x936ba10 <col:9, col:16>
    (MemberExpr 0x936b9f0 <col:16> 'const size_type':'const int' lvalue ->_M_original_len 0x936b1d0
      (CXXThisExpr 0x936b9e0 <col:16> 'const _Temporary_buffer<_ForwardIterator, _Tp> *' this))))


        iterator begin() (CompoundStmt 0x936ba78 </usr/include/c++/4.6/bits/stl_tempbuf.h:153:7, col:27>
  (ReturnStmt 0x936ba68 <col:9, col:16>
    (MemberExpr 0x936ba48 <col:16> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
      (CXXThisExpr 0x936ba38 <col:16> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))))


        iterator end() (CompoundStmt 0x936bb68 </usr/include/c++/4.6/bits/stl_tempbuf.h:158:7, col:36>
  (ReturnStmt 0x936bb58 <col:9, col:28>
    (CXXOperatorCallExpr 0x936bb30 <col:16, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x936baf0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
      (MemberExpr 0x936baa0 <col:16> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
        (CXXThisExpr 0x936ba90 <col:16> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
      (MemberExpr 0x936bad0 <col:28> 'size_type':'int' lvalue ->_M_len 0x936b210
        (CXXThisExpr 0x936bac0 <col:28> '_Temporary_buffer<_ForwardIterator, _Tp> *' this)))))


        _Temporary_buffer<_ForwardIterator, _Tp>(_ForwardIterator __first, _ForwardIterator __last);
        void ~_Temporary_buffer<_ForwardIterator, _Tp>() (CompoundStmt 0x936bda8 </usr/include/c++/4.6/bits/stl_tempbuf.h:167:7, line:170:7>
  (CallExpr 0x936bcd8 <line:168:2, col:45> '<dependent type>'
    (UnresolvedLookupExpr 0x936bba0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
    (MemberExpr 0x936bbf0 <col:16> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
      (CXXThisExpr 0x936bbe0 <col:16> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
    (CXXOperatorCallExpr 0x936bcb0 <col:27, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x936bc70 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
      (MemberExpr 0x936bc20 <col:27> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
        (CXXThisExpr 0x936bc10 <col:27> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
      (MemberExpr 0x936bc50 <col:39> 'size_type':'int' lvalue ->_M_len 0x936b210
        (CXXThisExpr 0x936bc40 <col:39> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))))
  (CallExpr 0x936bd88 <line:169:2, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x936bd20 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9368ac0)
    (MemberExpr 0x936bd68 <col:31> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
      (CXXThisExpr 0x936bd58 <col:31> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))))


    private:
    private:
        _Temporary_buffer<_ForwardIterator, _Tp>(const _Temporary_buffer<_ForwardIterator, _Tp> &);
        void operator=(const _Temporary_buffer<_ForwardIterator, _Tp> &);
    };
    template <bool = true> struct __uninitialized_construct_buf_dispatch {
        struct __uninitialized_construct_buf_dispatch;
        template <typename _ForwardIterator, typename _Tp> static void __ucr(_ForwardIterator, _ForwardIterator, _Tp &) (CompoundStmt 0x936cfd0 </usr/include/c++/4.6/bits/stl_tempbuf.h:217:57, col:59>)

;
    }
template <bool> struct __uninitialized_construct_buf_dispatch {
        struct __uninitialized_construct_buf_dispatch;
        template <typename _ForwardIterator, typename _Tp> static void __ucr(_ForwardIterator __first, _ForwardIterator __last, _Tp &__value) (CompoundStmt 0x936caf8 </usr/include/c++/4.6/bits/stl_tempbuf.h:188:9, line:209:2>
  (IfStmt 0x936c3e0 <line:189:4, line:190:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x936c3a8 <line:189:7, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x936c360 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60)
      (DeclRefExpr 0x936c330 <col:7> '_ForwardIterator' lvalue ParmVar 0x936c0f0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x936c348 <col:18> '_ForwardIterator' lvalue ParmVar 0x936c130 '__last' '_ForwardIterator'))
    (ReturnStmt 0x936c3d0 <line:190:6>)
    <<<NULL>>>)
  (DeclStmt 0x936c460 <line:192:4, col:36>
    0x936c410 "_ForwardIterator __cur =
      (DeclRefExpr 0x936c444 <col:29> '_ForwardIterator' lvalue ParmVar 0x936c0f0 '__first' '_ForwardIterator')")
  (IfStmt 0x936c9c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_tempbuf.h:203:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x936c470 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x936c998 </usr/include/c++/4.6/bits/stl_tempbuf.h:194:6, line:203:6>
      (CallExpr 0x936c5b0 <line:195:8, line:196:32> '<dependent type>'
        (UnresolvedLookupExpr 0x936c4a8 <line:195:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9bb0)
        (CallExpr 0x936c560 <col:24, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x936c4f8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
          (UnaryOperator 0x936c548 <col:41, col:42> '<dependent type>' prefix '*'
            (DeclRefExpr 0x936c52c <col:42> '_ForwardIterator' lvalue ParmVar 0x936c0f0 '__first' '_ForwardIterator')))
        (ParenExpr 0x936c598 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_Tp' lvalue
          (DeclRefExpr 0x936c580 </usr/include/c++/4.6/bits/stl_tempbuf.h:196:24> '_Tp' lvalue ParmVar 0x936c1c0 '__value' '_Tp &')))
      (DeclStmt 0x936c630 <line:197:8, col:39>
        0x936c5e0 "_ForwardIterator __prev =
          (DeclRefExpr 0x936c614 <col:34> '_ForwardIterator' lvalue Var 0x936c410 '__cur' '_ForwardIterator')")
      (UnaryOperator 0x936c658 <line:198:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x936c640 <col:10> '_ForwardIterator' lvalue Var 0x936c410 '__cur' '_ForwardIterator'))
      (ForStmt 0x936c8f8 <line:199:8, line:201:27>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x936c6e8 <line:199:14, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x936c6a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
          (DeclRefExpr 0x936c66c <col:14> '_ForwardIterator' lvalue Var 0x936c410 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x936c684 <col:23> '_ForwardIterator' lvalue ParmVar 0x936c130 '__last' '_ForwardIterator'))
        (BinaryOperator 0x936c770 <col:31, col:42> '<dependent type>' ','
          (UnaryOperator 0x936c728 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0x936c70c <col:33> '_ForwardIterator' lvalue Var 0x936c410 '__cur' '_ForwardIterator'))
          (UnaryOperator 0x936c758 <col:40, col:42> '<dependent type>' prefix '++'
            (DeclRefExpr 0x936c73c <col:42> '_ForwardIterator' lvalue Var 0x936c5e0 '__prev' '_ForwardIterator')))
        (CallExpr 0x936c8d0 <line:200:3, line:201:27> '<dependent type>'
          (UnresolvedLookupExpr 0x936c7b0 <line:200:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9bb0)
          (CallExpr 0x936c868 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x936c800 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
            (UnaryOperator 0x936c850 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x936c834 <col:37> '_ForwardIterator' lvalue Var 0x936c410 '__cur' '_ForwardIterator')))
          (ParenExpr 0x936c8b8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
            (UnaryOperator 0x936c8a0 </usr/include/c++/4.6/bits/stl_tempbuf.h:201:19, col:20> '<dependent type>' prefix '*'
              (DeclRefExpr 0x936c888 <col:20> '_ForwardIterator' lvalue Var 0x936c5e0 '__prev' '_ForwardIterator')))))
      (BinaryOperator 0x936c980 <line:202:8, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
        (DeclRefExpr 0x936c91c </usr/include/c++/4.6/bits/stl_tempbuf.h:202:8> '_Tp' lvalue ParmVar 0x936c1c0 '__value' '_Tp &')
        (ParenExpr 0x936c968 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0x936c950 </usr/include/c++/4.6/bits/stl_tempbuf.h:202:32, col:33> '<dependent type>' prefix '*'
            (DeclRefExpr 0x936c934 <col:33> '_ForwardIterator' lvalue Var 0x936c5e0 '__prev' '_ForwardIterator')))))
    <<<NULL>>>)
  (IfStmt 0x936cad8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_tempbuf.h:208:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x936c9e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x936cac0 </usr/include/c++/4.6/bits/stl_tempbuf.h:205:6, line:208:6>
      (CallExpr 0x936ca88 <line:206:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x936ca18 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9e10 0x92eaac0 0x92ed7a0 0x92edd40)
        (DeclRefExpr 0x936ca58 <col:22> '_ForwardIterator' lvalue ParmVar 0x936c0f0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x936ca70 <col:31> '_ForwardIterator' lvalue Var 0x936c410 '__cur' '_ForwardIterator'))
      (NullStmt 0x936cab0 <line:207:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_construct_buf_dispatch {
        struct __uninitialized_construct_buf_dispatch;
        template <typename _ForwardIterator, typename _Tp> static void __ucr(_ForwardIterator, _ForwardIterator, _Tp &) (CompoundStmt 0x936cfd0 </usr/include/c++/4.6/bits/stl_tempbuf.h:217:57, col:59>)

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void __uninitialized_construct_buf(_ForwardIterator __first, _ForwardIterator __last, _Tp &__value) (CompoundStmt 0x936d5b0 </usr/include/c++/4.6/bits/stl_tempbuf.h:235:5, line:242:5>
  (DeclStmt 0x936d3d0 <line:236:7, line:237:12>
    0x936d3a0 "typedef typename std::iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x936d588 <line:239:7, line:241:34> '<dependent type>'
    (DependentScopeDeclRefExpr 0x936d518 <line:239:7, line:241:4> '<dependent type>' lvalue)
    (DeclRefExpr 0x936d53c <col:10> '_ForwardIterator' lvalue ParmVar 0x936d0c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x936d554 <col:19> '_ForwardIterator' lvalue ParmVar 0x936d100 '__last' '_ForwardIterator')
    (DeclRefExpr 0x936d56c <col:27> '_Tp' lvalue ParmVar 0x936d170 '__value' '_Tp &')))

;
    _Temporary_buffer<_ForwardIterator, _Tp>::_Temporary_buffer<_ForwardIterator, _Tp>(_ForwardIterator __first, _ForwardIterator __last) : _M_original_len((CallExpr 0x936db68 </usr/include/c++/4.6/bits/stl_tempbuf.h:247:23, col:52> '<dependent type>'
  (UnresolvedLookupExpr 0x936db00 <col:23, col:28> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
  (DeclRefExpr 0x936db34 <col:37> '_ForwardIterator' lvalue ParmVar 0x936d980 '__first' '_ForwardIterator')
  (DeclRefExpr 0x936db4c <col:46> '_ForwardIterator' lvalue ParmVar 0x936d9c0 '__last' '_ForwardIterator'))
), _M_len((IntegerLiteral 0x936dbc8 </usr/include/c++/4.6/bits/stl_tempbuf.h:248:14> 'int' 0)
), _M_buffer((IntegerLiteral 0x936dc18 </usr/include/c++/4.6/bits/stl_tempbuf.h:248:28> 'int' 0)
) (CompoundStmt 0x936e4b8 </usr/include/c++/4.6/bits/stl_tempbuf.h:249:5, line:267:5>
  (IfStmt 0x936e2c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_tempbuf.h:259:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x936dc78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x936e2a8 </usr/include/c++/4.6/bits/stl_tempbuf.h:251:2, line:259:2>
      (DeclStmt 0x936df68 <line:252:4, line:253:39>
        0x936de50 "std::pair<pointer, size_type> __p =
          (ParenListExpr 0x936df48 <line:252:37, line:253:38> 'std::pair<pointer, size_type>':'pair<pointer, size_type>'
            (CallExpr 0x936df28 <line:252:38, line:253:37> '<dependent type>'
              (UnresolvedLookupExpr 0x936de90 <line:252:38, line:253:20> '<dependent type>' lvalue (no ADL) = '1' 0x9367f70)
              (MemberExpr 0x936df08 <col:22> 'size_type':'int' lvalue ->_M_original_len 0x936b1d0
                (CXXThisExpr 0x936def8 <col:22> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))))")
      (BinaryOperator 0x936dff8 <line:254:4, col:20> '<dependent type>' '='
        (MemberExpr 0x936df88 <col:4> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
          (CXXThisExpr 0x936df78 <col:4> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
        (CXXDependentScopeMemberExpr 0x936dfc0 <col:16, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x936dfa8 <col:16> 'std::pair<pointer, size_type>':'pair<pointer, size_type>' lvalue Var 0x936de50 '__p' 'std::pair<pointer, size_type>':'pair<pointer, size_type>')))
      (BinaryOperator 0x936e090 <line:255:4, col:17> '<dependent type>' '='
        (MemberExpr 0x936e020 <col:4> 'size_type':'int' lvalue ->_M_len 0x936b210
          (CXXThisExpr 0x936e010 <col:4> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
        (CXXDependentScopeMemberExpr 0x936e058 <col:13, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x936e040 <col:13> 'std::pair<pointer, size_type>':'pair<pointer, size_type>' lvalue Var 0x936de50 '__p' 'std::pair<pointer, size_type>':'pair<pointer, size_type>')))
      (IfStmt 0x936e288 <line:256:4, line:258:21>
        <<<NULL>>>
        (MemberExpr 0x936e0b8 <line:256:7> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
          (CXXThisExpr 0x936e0a8 <col:7> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
        (CallExpr 0x936e260 <line:257:6, line:258:21> '<dependent type>'
          (UnresolvedLookupExpr 0x936e100 <line:257:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x936d260)
          (MemberExpr 0x936e148 <col:41> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
            (CXXThisExpr 0x936e138 <col:41> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
          (CXXOperatorCallExpr 0x936e208 <col:52, col:64> '<dependent type>'
            (UnresolvedLookupExpr 0x936e1c8 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
            (MemberExpr 0x936e178 <col:52> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
              (CXXThisExpr 0x936e168 <col:52> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
            (MemberExpr 0x936e1a8 <col:64> 'size_type':'int' lvalue ->_M_len 0x936b210
              (CXXThisExpr 0x936e198 <col:64> '_Temporary_buffer<_ForwardIterator, _Tp> *' this)))
          (UnaryOperator 0x936e248 <line:258:13, col:14> '<dependent type>' prefix '*'
            (DeclRefExpr 0x936e22c <col:14> '_ForwardIterator' lvalue ParmVar 0x936d980 '__first' '_ForwardIterator')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x936e498 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_tempbuf.h:266:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x936e2e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x936e478 </usr/include/c++/4.6/bits/stl_tempbuf.h:261:2, line:266:2>
      (CallExpr 0x936e388 <line:262:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x936e320 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9368ac0)
        (MemberExpr 0x936e368 <col:33> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
          (CXXThisExpr 0x936e358 <col:33> '_Temporary_buffer<_ForwardIterator, _Tp> *' this)))
      (BinaryOperator 0x936e3f0 <line:263:4, col:16> '<dependent type>' '='
        (MemberExpr 0x936e3b8 <col:4> 'pointer':'value_type *' lvalue ->_M_buffer 0x936b250
          (CXXThisExpr 0x936e3a8 <col:4> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
        (IntegerLiteral 0x936e3d8 <col:16> 'int' 0))
      (BinaryOperator 0x936e450 <line:264:4, col:13> '<dependent type>' '='
        (MemberExpr 0x936e418 <col:4> 'size_type':'int' lvalue ->_M_len 0x936b210
          (CXXThisExpr 0x936e408 <col:4> '_Temporary_buffer<_ForwardIterator, _Tp> *' this))
        (IntegerLiteral 0x936e438 <col:13> 'int' 0))
      (NullStmt 0x936e468 <line:265:27>))
    <<<NULL>>>))


}
namespace std {
    template <class _OutputIterator, class _Tp> class raw_storage_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class raw_storage_iterator;
    protected:
    protected:
        _OutputIterator _M_iter;
    public:
    public:
        raw_storage_iterator<_OutputIterator, _Tp>(_OutputIterator __x) : _M_iter((DeclRefExpr 0x936ff64 </usr/include/c++/4.6/bits/stl_raw_storage_iter.h:78:17> '_OutputIterator' lvalue ParmVar 0x936ea90 '__x' '_OutputIterator')
) (CompoundStmt 0x936ffc0 </usr/include/c++/4.6/bits/stl_raw_storage_iter.h:78:22, col:23>)


        raw_storage_iterator<_OutputIterator, _Tp> &operator*() (CompoundStmt 0x9370020 </usr/include/c++/4.6/bits/stl_raw_storage_iter.h:81:19, col:35>
  (ReturnStmt 0x9370010 <col:21, col:29>
    (UnaryOperator 0x936fff8 <col:28, col:29> '<dependent type>' prefix '*'
      (CXXThisExpr 0x936ffe8 <col:29> 'raw_storage_iterator<_OutputIterator, _Tp> *' this))))


        raw_storage_iterator<_OutputIterator, _Tp> &operator=(const _Tp &__element) (CompoundStmt 0x93701d0 </usr/include/c++/4.6/bits/stl_raw_storage_iter.h:85:7, line:88:7>
  (CallExpr 0x9370170 <line:86:2, col:55> '<dependent type>'
    (UnresolvedLookupExpr 0x9370068 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x92e9bb0)
    (CallExpr 0x9370138 <col:18, col:43> '<dependent type>'
      (UnresolvedLookupExpr 0x93700b8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x926d690)
      (UnaryOperator 0x9370120 <col:35, col:36> '<dependent type>' prefix '*'
        (MemberExpr 0x9370100 <col:36> '_OutputIterator' lvalue ->_M_iter 0x936ea10
          (CXXThisExpr 0x93700f0 <col:36> 'raw_storage_iterator<_OutputIterator, _Tp> *' this))))
    (DeclRefExpr 0x9370158 <col:46> 'const _Tp' lvalue ParmVar 0x936ec70 '__element' 'const _Tp &'))
  (ReturnStmt 0x93701c0 <line:87:2, col:10>
    (UnaryOperator 0x93701a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9370198 <col:10> 'raw_storage_iterator<_OutputIterator, _Tp> *' this))))


        raw_storage_iterator<_OutputIterator, _Tp> &operator++() (CompoundStmt 0x9370268 </usr/include/c++/4.6/bits/stl_raw_storage_iter.h:92:7, line:95:7>
  (UnaryOperator 0x9370218 <line:93:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x93701f8 <col:4> '_OutputIterator' lvalue ->_M_iter 0x936ea10
      (CXXThisExpr 0x93701e8 <col:4> 'raw_storage_iterator<_OutputIterator, _Tp> *' this)))
  (ReturnStmt 0x9370258 <line:94:2, col:10>
    (UnaryOperator 0x9370240 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9370230 <col:10> 'raw_storage_iterator<_OutputIterator, _Tp> *' this))))


        raw_storage_iterator<_OutputIterator, _Tp> operator++(int) (CompoundStmt 0x9370470 </usr/include/c++/4.6/bits/stl_raw_storage_iter.h:99:7, line:103:7>
  (DeclStmt 0x93703f0 <line:100:2, col:58>
    0x9370390 "raw_storage_iterator<_OutputIterator, _Tp> __tmp =
      (UnaryOperator 0x93703d8 <col:53, col:54> '<dependent type>' prefix '*'
        (CXXThisExpr 0x93703c8 <col:54> 'raw_storage_iterator<_OutputIterator, _Tp> *' this))")
  (UnaryOperator 0x9370430 <line:101:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9370410 <col:4> '_OutputIterator' lvalue ->_M_iter 0x936ea10
      (CXXThisExpr 0x9370400 <col:4> 'raw_storage_iterator<_OutputIterator, _Tp> *' this)))
  (ReturnStmt 0x9370460 <line:102:2, col:9>
    (DeclRefExpr 0x9370444 <col:9> 'raw_storage_iterator<_OutputIterator, _Tp>':'raw_storage_iterator<_OutputIterator, _Tp>' lvalue Var 0x9370390 '__tmp' 'raw_storage_iterator<_OutputIterator, _Tp>':'raw_storage_iterator<_OutputIterator, _Tp>')))


    };
}
namespace std {
    template <typename _Tp1> struct auto_ptr_ref {
        struct auto_ptr_ref;
        _Tp1 *_M_ptr;
        auto_ptr_ref<_Tp1>(_Tp1 *__p) : _M_ptr((DeclRefExpr 0x93708fc </usr/include/c++/4.6/backward/auto_ptr.h:53:39> '_Tp1 *' lvalue ParmVar 0x9370800 '__p' '_Tp1 *')
) (CompoundStmt 0x9370960 </usr/include/c++/4.6/backward/auto_ptr.h:53:44, col:46>)


    };
    template <typename _Tp = void> class auto_ptr {
        class auto_ptr;
    public:
    public:
        typedef void element_type;
    }
template <typename _Tp> class auto_ptr {
        class auto_ptr;
    private:
    private:
        _Tp *_M_ptr;
    public:
    public:
        typedef _Tp element_type;
        auto_ptr<_Tp>(element_type *__p = (IntegerLiteral 0x93748f8 </usr/include/c++/4.6/backward/auto_ptr.h:103:36> 'int' 0)
) throw() : _M_ptr((DeclRefExpr 0x9374928 </usr/include/c++/4.6/backward/auto_ptr.h:103:56> 'element_type *' lvalue ParmVar 0x9370d20 '__p' 'element_type *')
) (CompoundStmt 0x9374980 </usr/include/c++/4.6/backward/auto_ptr.h:103:61, col:63>)


        auto_ptr<_Tp>(auto_ptr<_Tp> &__a) throw() : _M_ptr((CallExpr 0x93749e0 </usr/include/c++/4.6/backward/auto_ptr.h:112:48, col:60> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x93749a8 <col:48, col:52> '<dependent type>' lvalue
    (DeclRefExpr 0x9374990 <col:48> 'auto_ptr<_Tp>' lvalue ParmVar 0x9370e50 '__a' 'auto_ptr<_Tp> &')))
) (CompoundStmt 0x9374a40 </usr/include/c++/4.6/backward/auto_ptr.h:112:63, col:65>)


        template <typename _Tp1> auto_ptr<_Tp>(auto_ptr<_Tp1> &__a) throw() : _M_ptr((CallExpr 0x9374aa0 </usr/include/c++/4.6/backward/auto_ptr.h:125:56, col:68> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9374a68 <col:56, col:60> '<dependent type>' lvalue
    (DeclRefExpr 0x9374a50 <col:56> 'auto_ptr<_Tp1>' lvalue ParmVar 0x93710d0 '__a' 'auto_ptr<_Tp1> &')))
) (CompoundStmt 0x9374b00 </usr/include/c++/4.6/backward/auto_ptr.h:125:71, col:73>)

;
        auto_ptr<_Tp> &operator=(auto_ptr<_Tp> &__a) throw() (CompoundStmt 0x9374c20 </usr/include/c++/4.6/backward/auto_ptr.h:137:7, line:140:7>
  (CallExpr 0x9374bc8 <line:138:2, col:21> '<dependent type>'
    (MemberExpr 0x9374b38 <col:2> '<bound member function type>' ->reset 0x9371930
      (CXXThisExpr 0x9374b28 <col:2> 'auto_ptr<_Tp> *' this))
    (CallExpr 0x9374ba8 <col:8, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9374b70 <col:8, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x9374b58 <col:8> 'auto_ptr<_Tp>' lvalue ParmVar 0x9371220 '__a' 'auto_ptr<_Tp> &'))))
  (ReturnStmt 0x9374c10 <line:139:2, col:10>
    (UnaryOperator 0x9374bf8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9374be8 <col:10> 'auto_ptr<_Tp> *' this))))


        template <typename _Tp1> auto_ptr<_Tp> &operator=(auto_ptr<_Tp1> &__a) throw() (CompoundStmt 0x9374d30 </usr/include/c++/4.6/backward/auto_ptr.h:155:9, line:158:2>
  (CallExpr 0x9374cd8 <line:156:4, col:23> '<dependent type>'
    (MemberExpr 0x9374c48 <col:4> '<bound member function type>' ->reset 0x9371930
      (CXXThisExpr 0x9374c38 <col:4> 'auto_ptr<_Tp> *' this))
    (CallExpr 0x9374cb8 <col:10, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9374c80 <col:10, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9374c68 <col:10> 'auto_ptr<_Tp1>' lvalue ParmVar 0x9371450 '__a' 'auto_ptr<_Tp1> &'))))
  (ReturnStmt 0x9374d20 <line:157:4, col:12>
    (UnaryOperator 0x9374d08 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9374cf8 <col:12> 'auto_ptr<_Tp> *' this))))

;
        void ~auto_ptr<_Tp>() (CompoundStmt 0x9374d90 </usr/include/c++/4.6/backward/auto_ptr.h:170:19, col:36>
  (CXXDeleteExpr 0x9374d78 <col:21, col:28> 'void'
    (MemberExpr 0x9374d58 <col:28> '_Tp *' lvalue ->_M_ptr 0x9370c30
      (CXXThisExpr 0x9374d48 <col:28> 'auto_ptr<_Tp> *' this))))


        element_type &operator*() const throw() (CompoundStmt 0x9374e30 </usr/include/c++/4.6/backward/auto_ptr.h:182:7, line:185:7>
  (NullStmt 0x9374da8 <line:183:36>)
  (ReturnStmt 0x9374e20 <line:184:2, col:10>
    (UnaryOperator 0x9374e08 <col:9, col:10> '<dependent type>' prefix '*'
      (MemberExpr 0x9374de8 <col:10> '_Tp *const' lvalue ->_M_ptr 0x9370c30
        (CXXThisExpr 0x9374dd8 <col:10> 'const auto_ptr<_Tp> *' this)))))


        element_type *operator->() const throw() (CompoundStmt 0x9374e98 </usr/include/c++/4.6/backward/auto_ptr.h:195:7, line:198:7>
  (NullStmt 0x9374e48 <line:196:36>)
  (ReturnStmt 0x9374e88 <line:197:2, col:9>
    (MemberExpr 0x9374e68 <col:9> '_Tp *const' lvalue ->_M_ptr 0x9370c30
      (CXXThisExpr 0x9374e58 <col:9> 'const auto_ptr<_Tp> *' this))))


        element_type *get() const throw() (CompoundStmt 0x9374ef0 </usr/include/c++/4.6/backward/auto_ptr.h:211:27, col:44>
  (ReturnStmt 0x9374ee0 <col:29, col:36>
    (MemberExpr 0x9374ec0 <col:36> '_Tp *const' lvalue ->_M_ptr 0x9370c30
      (CXXThisExpr 0x9374eb0 <col:36> 'const auto_ptr<_Tp> *' this))))


        element_type *release() throw() (CompoundStmt 0x9375020 </usr/include/c++/4.6/backward/auto_ptr.h:226:7, line:230:7>
  (DeclStmt 0x9374f88 <line:227:2, col:30>
    0x9374f20 "element_type *__tmp =
      (MemberExpr 0x9374f68 <col:24> '_Tp *' lvalue ->_M_ptr 0x9370c30
        (CXXThisExpr 0x9374f58 <col:24> 'auto_ptr<_Tp> *' this))")
  (BinaryOperator 0x9374fe0 <line:228:2, col:11> '<dependent type>' '='
    (MemberExpr 0x9374fa8 <col:2> '_Tp *' lvalue ->_M_ptr 0x9370c30
      (CXXThisExpr 0x9374f98 <col:2> 'auto_ptr<_Tp> *' this))
    (IntegerLiteral 0x9374fc8 <col:11> 'int' 0))
  (ReturnStmt 0x9375010 <line:229:2, col:9>
    (DeclRefExpr 0x9374ff8 <col:9> 'element_type *' lvalue Var 0x9374f20 '__tmp' 'element_type *')))


        void reset(element_type *__p = (IntegerLiteral 0x9374910 </usr/include/c++/4.6/backward/auto_ptr.h:240:33> 'int' 0)
) throw() (CompoundStmt 0x93751d8 </usr/include/c++/4.6/backward/auto_ptr.h:241:7, line:247:7>
  (IfStmt 0x93751b8 <line:242:2, line:246:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x93750d0 <line:242:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9375088 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (DeclRefExpr 0x937503c <col:6> 'element_type *' lvalue ParmVar 0x93718e0 '__p' 'element_type *')
      (MemberExpr 0x9375068 <col:13> '_Tp *' lvalue ->_M_ptr 0x9370c30
        (CXXThisExpr 0x9375058 <col:13> 'auto_ptr<_Tp> *' this)))
    (CompoundStmt 0x93751a0 <line:243:4, line:246:4>
      (CXXDeleteExpr 0x9375128 <line:244:6, col:13> 'void'
        (MemberExpr 0x9375108 <col:13> '_Tp *' lvalue ->_M_ptr 0x9370c30
          (CXXThisExpr 0x93750f8 <col:13> 'auto_ptr<_Tp> *' this)))
      (BinaryOperator 0x9375188 <line:245:6, col:15> '<dependent type>' '='
        (MemberExpr 0x9375150 <col:6> '_Tp *' lvalue ->_M_ptr 0x9370c30
          (CXXThisExpr 0x9375140 <col:6> 'auto_ptr<_Tp> *' this))
        (DeclRefExpr 0x9375170 <col:15> 'element_type *' lvalue ParmVar 0x93718e0 '__p' 'element_type *')))
    <<<NULL>>>))


        auto_ptr<_Tp>(auto_ptr_ref<element_type> __ref) throw() : _M_ptr((CXXDependentScopeMemberExpr 0x9375208 </usr/include/c++/4.6/backward/auto_ptr.h:261:16, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0x93751ec <col:16> 'auto_ptr_ref<element_type>' lvalue ParmVar 0x9371a40 '__ref' 'auto_ptr_ref<element_type>'))
) (CompoundStmt 0x9375280 </usr/include/c++/4.6/backward/auto_ptr.h:261:30, col:32>)


        auto_ptr<_Tp> &operator=(auto_ptr_ref<element_type> __ref) throw() (CompoundStmt 0x9375508 </usr/include/c++/4.6/backward/auto_ptr.h:265:7, line:272:7>
  (IfStmt 0x93754b0 <line:266:2, line:270:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9375390 <line:266:6, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9375348 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900)
      (CXXDependentScopeMemberExpr 0x93752a8 <col:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x9375290 <col:6> 'auto_ptr_ref<element_type>' lvalue ParmVar 0x9371c00 '__ref' 'auto_ptr_ref<element_type>'))
      (CallExpr 0x9375328 <col:22, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x93752f0 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x93752e0 <col:22> 'auto_ptr<_Tp> *' this))))
    (CompoundStmt 0x9375498 <line:267:4, line:270:4>
      (CXXDeleteExpr 0x93753e8 <line:268:6, col:13> 'void'
        (MemberExpr 0x93753c8 <col:13> '_Tp *' lvalue ->_M_ptr 0x9370c30
          (CXXThisExpr 0x93753b8 <col:13> 'auto_ptr<_Tp> *' this)))
      (BinaryOperator 0x9375480 <line:269:6, col:21> '<dependent type>' '='
        (MemberExpr 0x9375410 <col:6> '_Tp *' lvalue ->_M_ptr 0x9370c30
          (CXXThisExpr 0x9375400 <col:6> 'auto_ptr<_Tp> *' this))
        (CXXDependentScopeMemberExpr 0x9375448 <col:15, col:21> '<dependent type>' lvalue
          (DeclRefExpr 0x9375430 <col:15> 'auto_ptr_ref<element_type>' lvalue ParmVar 0x9371c00 '__ref' 'auto_ptr_ref<element_type>'))))
    <<<NULL>>>)
  (ReturnStmt 0x93754f8 <line:271:2, col:10>
    (UnaryOperator 0x93754e0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x93754d0 <col:10> 'auto_ptr<_Tp> *' this))))


        template <typename _Tp1> auto_ptr_ref<_Tp1> operator auto_ptr_ref<_Tp1>() throw() (CompoundStmt 0x9375668 </usr/include/c++/4.6/backward/auto_ptr.h:276:9, col:55>
  (ReturnStmt 0x9375658 <col:11, col:52>
    (CXXUnresolvedConstructExpr 0x9375638 <col:18, col:52> 'auto_ptr_ref<_Tp1>'
      (CallExpr 0x9375618 <col:37, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x93755e0 <col:37, col:43> '<dependent type>' lvalue
          (CXXThisExpr 0x93755d0 <col:37> 'auto_ptr<_Tp> *' this))))))

;
        template <typename _Tp1> auto_ptr<_Tp1> operator auto_ptr<_Tp1>() throw() (CompoundStmt 0x93757c8 </usr/include/c++/4.6/backward/auto_ptr.h:280:9, col:51>
  (ReturnStmt 0x93757b8 <col:11, col:48>
    (CXXUnresolvedConstructExpr 0x9375798 <col:18, col:48> 'auto_ptr<_Tp1>'
      (CallExpr 0x9375778 <col:33, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9375740 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9375730 <col:33> 'auto_ptr<_Tp> *' this))))))

;
    };
    class auto_ptr {
        class auto_ptr;
    public:
    public:
        typedef void element_type;
    };
}
extern "C++" {
    namespace __cxxabiv1 {
        class __class_type_info;
    }
    namespace std {
        class type_info {
            class type_info;
        public:
        public:
            virtual void ~type_info();
            const char *name() const (CompoundStmt 0x9379858 </usr/include/c++/4.6/typeinfo:102:5, col:54>
  (ReturnStmt 0x9379848 <col:7, col:46>
    (ConditionalOperator 0x9379828 <col:14, col:46> 'const char *'
      (BinaryOperator 0x9379760 <col:14, col:27> '_Bool' '=='
        (ImplicitCastExpr 0x9379740 <col:14, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9379730 <col:14, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0x9379700 <col:14, col:22> 'const char' lvalue
              (ImplicitCastExpr 0x93796f0 <col:14> 'const char *' <LValueToRValue>
                (MemberExpr 0x93796b4 <col:14> 'const char *const' lvalue ->__name 0x9379310
                  (CXXThisExpr 0x9379690 <col:14> 'const class std::type_info *' this)))
              (IntegerLiteral 0x93796d8 <col:21> 'int' 0))))
        (ImplicitCastExpr 0x9379750 <col:27> 'int' <IntegralCast>
          (CharacterLiteral 0x9379718 <col:27> 'char'42)))
      (BinaryOperator 0x93797d0 <col:33, col:42> 'const char *' '+'
        (ImplicitCastExpr 0x93797c0 <col:33> 'const char *' <LValueToRValue>
          (MemberExpr 0x9379788 <col:33> 'const char *const' lvalue ->__name 0x9379310
            (CXXThisExpr 0x9379778 <col:33> 'const class std::type_info *' this)))
        (IntegerLiteral 0x93797a8 <col:42> 'int' 1))
      (ImplicitCastExpr 0x9379818 <col:46> 'const char *' <LValueToRValue>
        (MemberExpr 0x93797f8 <col:46> 'const char *const' lvalue ->__name 0x9379310
          (CXXThisExpr 0x93797e8 <col:46> 'const class std::type_info *' this))))))


            bool before(const std::type_info &__arg) const (CompoundStmt 0x9379d60 </usr/include/c++/4.6/typeinfo:118:5, line:120:49>
  (ReturnStmt 0x9379d50 <line:118:7, line:120:46>
    (ConditionalOperator 0x9379d30 <line:118:14, line:120:46> '_Bool'
      (ParenExpr 0x9379a30 <line:118:14, col:57> '_Bool'
        (BinaryOperator 0x9379a18 <col:15, col:54> '_Bool' '&&'
          (BinaryOperator 0x9379928 <col:15, col:28> '_Bool' '=='
            (ImplicitCastExpr 0x9379908 <col:15, col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x93798f8 <col:15, col:23> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x93798c8 <col:15, col:23> 'const char' lvalue
                  (ImplicitCastExpr 0x93798b8 <col:15> 'const char *' <LValueToRValue>
                    (MemberExpr 0x9379880 <col:15> 'const char *const' lvalue ->__name 0x9379310
                      (CXXThisExpr 0x9379870 <col:15> 'const class std::type_info *' this)))
                  (IntegerLiteral 0x93798a0 <col:22> 'int' 0))))
            (ImplicitCastExpr 0x9379918 <col:28> 'int' <IntegralCast>
              (CharacterLiteral 0x93798e0 <col:28> 'char'42)))
          (BinaryOperator 0x9379a00 <col:35, col:54> '_Bool' '=='
            (ImplicitCastExpr 0x93799e0 <col:35, col:49> 'int' <IntegralCast>
              (ImplicitCastExpr 0x93799d0 <col:35, col:49> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x93799a0 <col:35, col:49> 'const char' lvalue
                  (ImplicitCastExpr 0x9379990 <col:35, col:41> 'const char *' <LValueToRValue>
                    (MemberExpr 0x9379958 <col:35, col:41> 'const char *const' lvalue .__name 0x9379310
                      (DeclRefExpr 0x9379940 <col:35> 'const class std::type_info' lvalue ParmVar 0x9375e50 '__arg' 'const class std::type_info &')))
                  (IntegerLiteral 0x9379978 <col:48> 'int' 0))))
            (ImplicitCastExpr 0x93799f0 <col:54> 'int' <IntegralCast>
              (CharacterLiteral 0x93799b8 <col:54> 'char'42)))))
      (BinaryOperator 0x9379ad0 <line:119:4, col:19> '_Bool' '<'
        (ImplicitCastExpr 0x9379ab0 <col:4> 'const char *' <LValueToRValue>
          (MemberExpr 0x9379a58 <col:4> 'const char *const' lvalue ->__name 0x9379310
            (CXXThisExpr 0x9379a48 <col:4> 'const class std::type_info *' this)))
        (ImplicitCastExpr 0x9379ac0 <col:13, col:19> 'const char *' <LValueToRValue>
          (MemberExpr 0x9379a90 <col:13, col:19> 'const char *const' lvalue .__name 0x9379310
            (DeclRefExpr 0x9379a78 <col:13> 'const class std::type_info' lvalue ParmVar 0x9375e50 '__arg' 'const class std::type_info &'))))
      (BinaryOperator 0x9379d18 <line:120:4, col:46> '_Bool' '<'
        (CallExpr 0x9379cb8 <col:4, col:42> 'int'
          (ImplicitCastExpr 0x9379ca8 <col:4> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9379c04 <col:4> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9379ce0 <col:22> 'const char *' <LValueToRValue>
            (MemberExpr 0x9379c30 <col:22> 'const char *const' lvalue ->__name 0x9379310
              (CXXThisExpr 0x9379c20 <col:22> 'const class std::type_info *' this)))
          (ImplicitCastExpr 0x9379cf0 <col:30, col:36> 'const char *' <LValueToRValue>
            (MemberExpr 0x9379c68 <col:30, col:36> 'const char *const' lvalue .__name 0x9379310
              (DeclRefExpr 0x9379c50 <col:30> 'const class std::type_info' lvalue ParmVar 0x9375e50 '__arg' 'const class std::type_info &'))))
        (IntegerLiteral 0x9379d00 <col:46> 'int' 0)))))


            bool operator==(const std::type_info &__arg) const (CompoundStmt 0x937a078 </usr/include/c++/4.6/typeinfo:123:5, line:127:5>
  (ReturnStmt 0x937a068 <line:124:7, line:126:50>
    (ParenExpr 0x937a050 <line:124:14, line:126:50> '_Bool'
      (BinaryOperator 0x937a038 <line:124:15, line:126:49> '_Bool' '||'
        (ParenExpr 0x9379e18 <line:124:15, col:38> '_Bool'
          (BinaryOperator 0x9379e00 <col:16, col:32> '_Bool' '=='
            (ImplicitCastExpr 0x9379de0 <col:16> 'const char *' <LValueToRValue>
              (MemberExpr 0x9379d88 <col:16> 'const char *const' lvalue ->__name 0x9379310
                (CXXThisExpr 0x9379d78 <col:16> 'const class std::type_info *' this)))
            (ImplicitCastExpr 0x9379df0 <col:26, col:32> 'const char *' <LValueToRValue>
              (MemberExpr 0x9379dc0 <col:26, col:32> 'const char *const' lvalue .__name 0x9379310
                (DeclRefExpr 0x9379da8 <col:26> 'const class std::type_info' lvalue ParmVar 0x9375f50 '__arg' 'const class std::type_info &')))))
        (ParenExpr 0x937a020 <line:125:11, line:126:49> '_Bool'
          (BinaryOperator 0x937a008 <line:125:12, line:126:48> '_Bool' '&&'
            (BinaryOperator 0x9379ee8 <line:125:12, col:25> '_Bool' '!='
              (ImplicitCastExpr 0x9379ec8 <col:12, col:20> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9379eb8 <col:12, col:20> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0x9379e88 <col:12, col:20> 'const char' lvalue
                    (ImplicitCastExpr 0x9379e78 <col:12> 'const char *' <LValueToRValue>
                      (MemberExpr 0x9379e40 <col:12> 'const char *const' lvalue ->__name 0x9379310
                        (CXXThisExpr 0x9379e30 <col:12> 'const class std::type_info *' this)))
                    (IntegerLiteral 0x9379e60 <col:19> 'int' 0))))
              (ImplicitCastExpr 0x9379ed8 <col:25> 'int' <IntegralCast>
                (CharacterLiteral 0x9379ea0 <col:25> 'char'42)))
            (BinaryOperator 0x9379ff0 <line:126:5, col:48> '_Bool' '=='
              (CallExpr 0x9379f90 <col:5, col:43> 'int'
                (ImplicitCastExpr 0x9379f80 <col:5> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9379f00 <col:5> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
                (ImplicitCastExpr 0x9379fb8 <col:23> 'const char *' <LValueToRValue>
                  (MemberExpr 0x9379f28 <col:23> 'const char *const' lvalue ->__name 0x9379310
                    (CXXThisExpr 0x9379f18 <col:23> 'const class std::type_info *' this)))
                (ImplicitCastExpr 0x9379fc8 <col:31, col:37> 'const char *' <LValueToRValue>
                  (MemberExpr 0x9379f60 <col:31, col:37> 'const char *const' lvalue .__name 0x9379310
                    (DeclRefExpr 0x9379f48 <col:31> 'const class std::type_info' lvalue ParmVar 0x9375f50 '__arg' 'const class std::type_info &'))))
              (IntegerLiteral 0x9379fd8 <col:48> 'int' 0))))))))


            bool operator!=(const std::type_info &__arg) const (CompoundStmt 0x937a120 </usr/include/c++/4.6/typeinfo:139:5, col:34>
  (ReturnStmt 0x937a110 <col:7, col:31>
    (UnaryOperator 0x937a0f8 <col:14, col:31> '_Bool' prefix '!'
      (CXXMemberCallExpr 0x937a0d8 <col:15, col:31> '_Bool'
        (MemberExpr 0x937a0a0 <col:15, col:23> '<bound member function type>' ->operator== 0x9375fa0
          (CXXThisExpr 0x937a090 <col:15> 'const class std::type_info *' this))
        (DeclRefExpr 0x937a0c0 <col:26> 'const class std::type_info' lvalue ParmVar 0x9376020 '__arg' 'const class std::type_info &')))))


            virtual bool __is_pointer_p() const;
            virtual bool __is_function_p() const;
            virtual bool __do_catch(const std::type_info *__thr_type, void **__thr_obj, unsigned int __outer) const;
            virtual bool __do_upcast(const __cxxabiv1::__class_type_info *__target, void **__obj_ptr) const;
        protected:
        protected:
            const char *__name;
            type_info(const char *__n) : __name((ImplicitCastExpr 0x937a150 </usr/include/c++/4.6/typeinfo:175:49> 'const char *' <LValueToRValue>
  (DeclRefExpr 0x937a134 <col:49> 'const char *' lvalue ParmVar 0x9379350 '__n' 'const char *'))
) (CompoundStmt 0x937a180 </usr/include/c++/4.6/typeinfo:175:54, col:56>)


        private:
        private:
            std::type_info &operator=(const std::type_info &);
            type_info(const std::type_info &);
        };
        class bad_cast : public std::exception {
            class bad_cast;
        public:
        public:
            bad_cast() throw() : std::exception() (CompoundStmt 0x937a650 </usr/include/c++/4.6/typeinfo:192:24, col:26>)


            virtual void ~bad_cast() throw();
            virtual const char *what() const throw();
            inline std::bad_cast &operator=(const std::bad_cast &) throw();
        };
        class bad_typeid : public std::exception {
            class bad_typeid;
        public:
        public:
            bad_typeid() throw() : std::exception() (CompoundStmt 0x937ab20 </usr/include/c++/4.6/typeinfo:209:27, col:29>)


            virtual void ~bad_typeid() throw();
            virtual const char *what() const throw();
            inline std::bad_typeid &operator=(const std::bad_typeid &) throw();
        };
    }
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc = completion_t> class allocator
template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<char>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1 = char> allocator(const allocator<char> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x92dfd08 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9823420 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9823174 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x92e6f50 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x92dfe20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x92dfe40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::tr1::shared_ptr<io_data_t>> class allocator : public __gnu_cxx::new_allocator<shared_ptr<io_data_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::tr1::shared_ptr<io_data_t> *pointer;
        typedef const std::tr1::shared_ptr<io_data_t> *const_pointer;
        typedef std::tr1::shared_ptr<io_data_t> &reference;
        typedef const std::tr1::shared_ptr<io_data_t> &const_reference;
        typedef std::tr1::shared_ptr<io_data_t> value_type;
        template <typename _Tp1 = std::tr1::shared_ptr<io_data_t>> struct rebind {
            struct rebind;
            typedef allocator<std::tr1::shared_ptr<io_data_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<std::tr1::shared_ptr<io_data_t> > &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc> class allocator;
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8dd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x94f8dc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x94f8d80 <col:9> 'char_type':'char' lvalue ParmVar 0x90d1dc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94f8db0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x94f8d98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1e30 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8e88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x94f8e78 <col:9, col:24>
    (BinaryOperator 0x94f8e60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f8e30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8dec <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1f50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8e50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x90d1fa0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8f38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x94f8f28 <col:9, col:23>
    (BinaryOperator 0x94f8f10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94f8ee0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ed0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d20c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8f00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ef0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8eb4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x90d2110 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9060 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x94f9050 <col:9, col:48>
    (CallExpr 0x94f8fd8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x94f8fc8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f8f4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x94f9010 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9000 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f64 <col:33> 'const char_type *' lvalue ParmVar 0x90d2210 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x94f9030 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9020 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f7c <col:39> 'const char_type *' lvalue ParmVar 0x90d2260 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x94f9040 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94f8f94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x90d22a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94f91f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x94f91e8 <col:9, col:36>
    (CallExpr 0x94f91b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x94f91a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f9154 <col:16> 'unsigned int (const char *)' lvalue Function 0x94f9080 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x94f91d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94f916c <col:33> 'const char_type *' lvalue ParmVar 0x90d23e0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94f94e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x94f94d8 <col:9, col:77>
    (CXXStaticCastExpr 0x94f94c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x94f9438 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x94f9428 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f93a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x94f9240 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9470 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f9460 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f93bc <col:63> 'const char_type *' lvalue ParmVar 0x90d2500 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x94f9490 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9480 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f93d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x90d2590 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x94f94a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f93ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x90d2540 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9620 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x94f9610 <col:9, col:74>
    (CXXStaticCastExpr 0x94f95f8 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f9570 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x94f9560 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f94fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f95a8 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9598 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9514 <col:58> 'char_type *' lvalue ParmVar 0x90d26f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f95c8 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f95b8 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f952c <col:64> 'const char_type *' lvalue ParmVar 0x90d2740 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f95d8 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f9544 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x90d2780 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9758 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x94f9748 <col:9, col:73>
    (CXXStaticCastExpr 0x94f9730 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f96a8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x94f9698 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f9634 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f96e0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f96d0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f964c <col:57> 'char_type *' lvalue ParmVar 0x90d28c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f9700 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f96f0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9664 <col:63> 'const char_type *' lvalue ParmVar 0x90d2910 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f9710 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f967c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x90d2950 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94f98a8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x94f9898 <col:9, col:71>
    (CXXStaticCastExpr 0x94f9880 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f97f8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x94f97e8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f976c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x92bb4c0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9830 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9820 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9784 <col:57> 'char_type *' lvalue ParmVar 0x90d2a30 '__s' 'char_type *')))
        (ImplicitCastExpr 0x94f9850 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9840 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f979c <col:62> 'char_type':'char' lvalue ParmVar 0x90d2ab0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x94f9860 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f97b4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x90d2a70 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94f9928 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x94f9918 <col:9, col:42>
    (CXXStaticCastExpr 0x94f9900 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x94f98f0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x94f98e0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x94f98bc <col:39> 'const int_type':'const int' lvalue ParmVar 0x90d2c20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94f99e0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x94f99d0 <col:9, col:69>
    (CXXStaticCastExpr 0x94f99b8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x94f99a8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x94f9988 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x94f9978 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x94f9968 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x94f993c <col:65> 'const char_type':'const char' lvalue ParmVar 0x90d2d40 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94f9a70 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x94f9a60 <col:9, col:24>
    (BinaryOperator 0x94f9a48 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f9a28 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f99f4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x90d2e60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94f9a38 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9a0c <col:24> 'const int_type':'const int' lvalue ParmVar 0x90d2eb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94f9ae8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x94f9ad8 <col:9, col:56>
    (CXXStaticCastExpr 0x94f9ac0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x94f9aa0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x94f9a88 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94f9c28 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x94f9c18 <col:9, col:37>
    (ConditionalOperator 0x94f9bf8 <col:16, col:37> 'int'
      (ParenExpr 0x94f9ba0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x94f9b88 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x94f9b78 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x94f9afc <col:17> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &'))
          (CallExpr 0x94f9b58 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x94f9b48 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94f9b14 <col:24> 'int_type (void)' lvalue CXXMethod 0x94f8bf0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x94f9bb8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x94f9be8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9bd0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb358 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x94fb340 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x94fb300 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x94f9fc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94fb330 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x94fb318 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa030 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb3e8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x94fb3d8 <col:9, col:24>
    (BinaryOperator 0x94fb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fb3a0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb36c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa150 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb3b0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb384 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa1a0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb478 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x94fb468 <col:9, col:23>
    (BinaryOperator 0x94fb450 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94fb430 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb3fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa2c0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb440 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb414 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa310 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb5e0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x94fb5d0 <col:9, col:39>
    (CallExpr 0x94fb578 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x94fb568 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb50c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x91861e0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f7d0 'wmemcmp')))
      (ImplicitCastExpr 0x94fb5a0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4c4 <col:24> 'const char_type *' lvalue ParmVar 0x94fa410 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4dc <col:30> 'const char_type *' lvalue ParmVar 0x94fa460 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb4f4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94fa4a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94fb6e8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x94fb6d8 <col:9, col:26>
    (CallExpr 0x94fb6a8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x94fb698 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb644 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9185b20 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x937f220 'wcslen')))
      (ImplicitCastExpr 0x94fb6c8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb62c <col:23> 'const char_type *' lvalue ParmVar 0x94fa5b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94fb828 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x94fb818 <col:9, col:37>
    (ImplicitCastExpr 0x94fb808 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x94fb7b0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x94fb7a0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fb780 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186030 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9385f20 'wmemchr')))
        (ImplicitCastExpr 0x94fb7d8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94fb738 <col:24> 'const char_type *' lvalue ParmVar 0x94fa6b0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x94fb7e8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fb750 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa740 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x94fb7f8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fb768 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fa6f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb990 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x94fb980 <col:9, col:40>
    (CallExpr 0x94fb928 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x94fb918 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb8bc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9186570 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f8b0 'wmemmove')))
      (ImplicitCastExpr 0x94fb950 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb874 <col:25> 'char_type *' lvalue ParmVar 0x94fa8a0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fb960 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb88c <col:31> 'const char_type *' lvalue ParmVar 0x94fa8f0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb970 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb8a4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x94fa930 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fbad0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x94fbac0 <col:9, col:39>
    (CallExpr 0x94fba68 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x94fba58 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fba24 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9186390 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x937f840 'wmemcpy')))
      (ImplicitCastExpr 0x94fba90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9dc <col:24> 'char_type *' lvalue ParmVar 0x94faa40 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fbaa0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9f4 <col:30> 'const char_type *' lvalue ParmVar 0x94faa90 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fbab0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fba0c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94faad0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94fbc30 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x94fbc20 <col:9, col:37>
    (CallExpr 0x94fbbc8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x94fbbb8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fbb64 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186730 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x937f920 'wmemset')))
      (ImplicitCastExpr 0x94fbbf0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fbb1c <col:24> 'char_type *' lvalue ParmVar 0x94fabb0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x94fbc00 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fbb34 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x94fac30 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x94fbc10 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbb4c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fabf0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94fbcb0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x94fbca0 <col:9, col:29>
    (CXXFunctionalCastExpr 0x94fbc88 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x94fbc78 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x94fbc68 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fbc50 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fada0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94fbd30 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x94fbd20 <col:9, col:28>
    (CXXFunctionalCastExpr 0x94fbd08 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x94fbcf8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x94fbce8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fbcd0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x94faec0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94fbdc0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x94fbdb0 <col:9, col:24>
    (BinaryOperator 0x94fbd98 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fbd78 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd44 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fafe0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94fbd88 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd5c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb030 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94fbe38 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x94fbe28 <col:9, col:42>
    (CXXStaticCastExpr 0x94fbe10 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x94fbdf0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x94fbdd8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94fc010 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x94fc000 <col:9, col:46>
    (ConditionalOperator 0x94fbfe0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x94fbf58 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x94fbf48 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fbe4c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x94fb0d0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x94fbe64 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x94fbf80 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x94fbee8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x94fbed8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94fbe7c <col:33> 'int_type (void)' lvalue CXXMethod 0x94fb170 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x94fbfd0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x94fbf90 <col:42> 'int' 0))
      (ImplicitCastExpr 0x94fbfc0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbfa8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9822f88 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9822de8 <line:180:4, col:62>
    0x9822c10 "void *__p =
      (CXXReinterpretCastExpr 0x9822dd0 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x9822db8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x9822d60 <col:41> 'size_type []' lvalue Var 0x95dfdc0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9822f78 <line:181:4, col:39>
    (UnaryOperator 0x9822f60 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x9822f48 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x9822f38 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9822f1c <col:36> 'void *' lvalue Var 0x9822c10 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x9822bf8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9822bd8 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9822900 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x98228b8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x98228a8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x95420ac <col:8> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x98228e0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9822890 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x98226e8 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9822878 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9822858 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9822848 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9822810 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x95dff40 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x98228f0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x95421a0 <col:50> '_Bool' false))))
    (CompoundStmt 0x9822bc0 <line:236:6, line:245:6>
      (NullStmt 0x95421d8 <line:238:67>)
      (IfStmt 0x9822ba0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x98229f8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x98229d0 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x98229c0 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9542208 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x98229a8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x9822988 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x95df590
                (ImplicitCastExpr 0x9822978 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x9822950 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x95422a0 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9542288 <col:10> 'int' 1)))
          (IntegerLiteral 0x95422e0 <col:16> 'int' 0))
        (CompoundStmt 0x9822b88 <line:241:3, line:244:3>
          (NullStmt 0x9542360 <line:242:63>)
          (CXXMemberCallExpr 0x9822b68 <line:243:5, col:19> 'void'
            (MemberExpr 0x9822b30 <col:5> '<bound member function type>' ->_M_destroy 0x95e0c00
              (CXXThisExpr 0x9822a10 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x9822b50 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x95e0ae0 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x9821e40 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x95befc8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x95befb8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9528068 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x9822680 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9822670 <col:9, col:29>
    (ImplicitCastExpr 0x9822660 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x9822640 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x95bf550
        (MemberExpr 0x9822620 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x95bf580
          (CXXThisExpr 0x9822500 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x98224e8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x98224d8 <col:9, col:59>
    (UnaryOperator 0x98224c0 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x98224a8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9822490 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x9822478 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x9822460 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9822440 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x9822420 <col:44> '<bound member function type>' ->_M_data 0x95bf600
                  (CXXThisExpr 0x9822410 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x9821d90 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x9821d70 <col:9, col:51> 'void'
    (CXXTemporary 0x9821cf0)
    (CXXMemberCallExpr 0x9821d08 <col:9, col:51> 'void'
      (MemberExpr 0x9821c6c <col:9, col:19> '<bound member function type>' ->_M_dispose 0x95e0b30
        (CXXMemberCallExpr 0x9821c40 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x9821c20 <col:9> '<bound member function type>' ->_M_rep 0x95bf8f0
            (ImplicitCastExpr 0x9821c60 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9821b00 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x9821d60 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x9821d50 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x9821cf8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x9821cf0)
            (CXXMemberCallExpr 0x9821cc0 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x9821ca0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x95d7370
                (ImplicitCastExpr 0x9821ce0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9821c90 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x987ea70 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x987ea60 <col:9, col:26>
    (ImplicitCastExpr 0x987ea50 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x987ea30 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x95df410
        (ImplicitCastExpr 0x987ea20 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x987ea00 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x987e9e0 <col:16> '<bound member function type>' ->_M_rep 0x95bf8f0
              (CXXThisExpr 0x987e8b8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x987e8a0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x987e890 <col:9, col:32>
    (BinaryOperator 0x987e878 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x987e848 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x987e828 <col:16, col:22> '<bound member function type>' ->size 0x95c67c0
          (CXXThisExpr 0x987e818 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x987e868 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x954a558 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x987f110 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x987eb98 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x987eb40 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x987eb30 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x987eac8 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x95c7d20 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x987eb10 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x987eaf0 <col:13, col:19> '<bound member function type>' ->size 0x95c67c0
          (CXXThisExpr 0x987eae0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x987eb68 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x987eb58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x987eb88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x987f100 <line:859:2, col:22>
    (ImplicitCastExpr 0x987f0f0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x987f0d8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x987f090 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x987f070 <col:9> '<bound member function type>' ->_M_data 0x95bf600
            (CXXThisExpr 0x987f060 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x987f0c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x987f0ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x95c7d20 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x987f640 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x987f630 <col:9, col:24>
    (ImplicitCastExpr 0x987f620 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x987f600 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x987f5e0 <col:16> '<bound member function type>' ->_M_data 0x95bf600
          (CXXThisExpr 0x987f5d0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x9823160 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9823150 <col:9, col:16>
    (CXXConstructExpr 0x9823128 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x9823118 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x9823108 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x98230c0 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x95bf580
            (CXXThisExpr 0x9822fa0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9599c08 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9599bf8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9528068 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x9823f80 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9823f70 <col:9, col:29>
    (ImplicitCastExpr 0x9823f60 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x9823f40 <col:17, col:29> 'char *' lvalue ._M_p 0x959a190
        (MemberExpr 0x9823f20 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x959a1c0
          (CXXThisExpr 0x9823e00 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x9823de8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9823dd8 <col:9, col:59>
    (UnaryOperator 0x9823dc0 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x9823da8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9823d90 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x9823d78 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x9823d60 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9823d40 <col:44, col:52> 'char *'
                (MemberExpr 0x9823d20 <col:44> '<bound member function type>' ->_M_data 0x959a220
                  (CXXThisExpr 0x9823d10 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9823738 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9823728 <col:9, col:26>
    (ImplicitCastExpr 0x9823718 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x98236f8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x95b9f80
        (ImplicitCastExpr 0x98236e8 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x98236b0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x9823690 <col:16> '<bound member function type>' ->_M_rep 0x959a4f0
              (CXXThisExpr 0x9823570 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9823558 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9823548 <col:9, col:32>
    (BinaryOperator 0x9823530 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9823500 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x98234e0 <col:16, col:22> '<bound member function type>' ->size 0x95a1440
          (CXXThisExpr 0x98234d0 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x9823520 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x954a558 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x987e7b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x98240a8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9824050 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9824040 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9823fd8 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x95a2940 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9824020 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9824000 <col:13, col:19> '<bound member function type>' ->size 0x95a1440
          (CXXThisExpr 0x9823ff0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x9824078 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9824068 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9824098 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x987e7a0 <line:859:2, col:22>
    (ImplicitCastExpr 0x987e790 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x987e778 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x987e730 <col:9, col:17> 'char *'
          (MemberExpr 0x987e710 <col:9> '<bound member function type>' ->_M_data 0x959a220
            (CXXThisExpr 0x987e700 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x987e768 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x987e74c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x95a2940 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x93861e0 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x93861d0 <col:5, col:55>
    (CallExpr 0x9386198 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x9386188 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9386128 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9184ea0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x937fa70 'wcschr')))
      (CXXConstCastExpr 0x93860f8 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x93860e8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x93860c0 <col:46> 'wchar_t *' lvalue ParmVar 0x9385f60 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x93861c0 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9386110 <col:52> 'wchar_t' lvalue ParmVar 0x9385fa0 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9386480 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x9386470 <col:5, col:58>
    (CallExpr 0x9386438 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x9386428 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x93863c8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9185650 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x937fae0 'wcspbrk')))
      (CXXConstCastExpr 0x9386398 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9386388 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9386360 <col:47> 'wchar_t *' lvalue ParmVar 0x9386210 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9386460 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x93863b0 <col:54> 'const wchar_t *' lvalue ParmVar 0x9386260 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x93866d0 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x93866c0 <col:5, col:56>
    (CallExpr 0x9386688 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x9386678 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9386658 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9185000 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x937fb50 'wcsrchr')))
      (CXXConstCastExpr 0x9386628 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9386618 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x93865f0 <col:47> 'wchar_t *' lvalue ParmVar 0x93864b0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x93866b0 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9386640 <col:53> 'wchar_t' lvalue ParmVar 0x93864f0 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9386930 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x9386920 <col:5, col:57>
    (CallExpr 0x93868e8 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x93868d8 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x93868b8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x91857c0 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x937fbc0 'wcsstr')))
      (CXXConstCastExpr 0x9386888 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9386878 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9386850 <col:46> 'wchar_t *' lvalue ParmVar 0x9386700 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9386910 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x93868a0 <col:53> 'const wchar_t *' lvalue ParmVar 0x9386750 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x9386c60 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x9386c50 <col:5, col:61>
    (CallExpr 0x9386c08 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x9386bf8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9386b98 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186030 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9385f20 'wmemchr')))
      (CXXConstCastExpr 0x9386b50 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9386b40 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9386b18 <col:47> 'wchar_t *' lvalue ParmVar 0x9386960 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9386c30 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9386b68 <col:53> 'wchar_t' lvalue ParmVar 0x93869a0 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x9386c40 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9386b80 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x93869e0 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x9387d88 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x9387e20 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x9387e30 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x9387500 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x9387ed0 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x93887b8 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x93887a8 <col:36, col:43>
    (MemberExpr 0x9388784 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x93873b0
      (CXXThisExpr 0x9387ef8 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x9388830 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x9388818 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x93887e0 <col:9> '_StateT' lvalue ->_M_state 0x93873f0
      (CXXThisExpr 0x93887d0 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9388800 <col:20> '_StateT' lvalue ParmVar 0x93876f0 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x9388888 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x9388878 <col:9, col:16>
    (MemberExpr 0x9388858 <col:16> 'const _StateT' lvalue ->_M_state 0x93873f0
      (CXXThisExpr 0x9388848 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x9388940 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x93888e8 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x93888b0 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x93873b0
      (CXXThisExpr 0x93888a0 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x93888d0 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9387880 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9388930 <line:158:2, col:10>
    (UnaryOperator 0x9388918 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9388908 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x93889f8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x93889a0 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9388968 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x93873b0
      (CXXThisExpr 0x9388958 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9388988 <col:12> 'streamoff':'long long' lvalue ParmVar 0x93879b0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x93889e8 <line:169:2, col:10>
    (UnaryOperator 0x93889d0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x93889c0 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x9388b28 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x9388aa0 <line:181:2, col:19>
    0x9388a20 "fpos<_StateT> __pos =
      (ParenListExpr 0x9388a80 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9388a68 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9388a58 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9388ae0 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9388ab0 <col:2> 'fpos<_StateT>' lvalue Var 0x9388a20 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9388ac8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9387a80 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9388b18 <line:183:2, col:9>
    (DeclRefExpr 0x9388b00 <col:9> 'fpos<_StateT>' lvalue Var 0x9388a20 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x9388c58 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x9388bd0 <line:195:2, col:19>
    0x9388b50 "fpos<_StateT> __pos =
      (ParenListExpr 0x9388bb0 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9388b98 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9388b88 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9388c10 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9388be0 <col:2> 'fpos<_StateT>' lvalue Var 0x9388b50 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9388bf8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9387b90 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9388c48 <line:197:2, col:9>
    (DeclRefExpr 0x9388c30 <col:9> 'fpos<_StateT>' lvalue Var 0x9388b50 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x9388d70 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x9388d60 <col:9, col:33>
    (CXXOperatorCallExpr 0x9388d38 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9388cf8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (MemberExpr 0x9388c88 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x93873b0
        (CXXThisExpr 0x9388c78 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x9388cc0 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9388ca8 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x9387c80 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x93891a8 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x9389198 <col:7, col:49>
    (BinaryOperator 0x9389180 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x9389120 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9389108 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9388ed0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9389160 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9389148 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9388fd0 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9389598 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x9389588 <col:7, col:49>
    (BinaryOperator 0x9389570 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x9389510 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x93894f8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x93892e0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9389550 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9389538 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x93893e0 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace std {
    class ios_base;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0x93a12d0 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0x93a1330 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0x93a1390 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0x93a13f0 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0x93a1450 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0x93a14b0 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0x93a1510 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0x93a1570 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0x93a15d0 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0x93a1630 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0x93a1690 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x93ad2c8 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad134 <col:26> 'int' EnumConstant 0x93ad040 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x93ad2d8 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad184 <col:29> 'int' EnumConstant 0x93ad080 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x93ad2e8 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad1d4 <col:30> 'int' EnumConstant 0x93ad0c0 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x93ad2f8 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad224 <col:27> 'int' EnumConstant 0x93ad150 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x93ad308 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad274 <col:29> 'int' EnumConstant 0x93ad040 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x93ad498 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad3b4 <col:30> 'int' EnumConstant 0x93ad380 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x93ad4a8 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad444 <col:29> 'int' EnumConstant 0x93ad410 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x93ad748 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x93ad6f4 <col:31> 'int' EnumConstant 0x93ad640 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0x91c4f38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0x91c4ea0 <line:242:3, line:251:13>
    0x91c4de0 "static void *const __gthread_active_ptr =
      (UnaryOperator 0x91c4e88 <line:243:7, <scratch space>:100:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0x91c4e70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:100:1> 'void *' <BitCast>
          (UnaryOperator 0x91c4e48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:100:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0x91c4e14 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0x91c2d10 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0x91c4f28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0x91c4f18 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0x91c4f00 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0x91c4ee0 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0x91c4eb0 <col:10> 'void *const' lvalue Var 0x91c4de0 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0x91c4ef0 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0x91c4ec8 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0x91c5338 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0x91c5328 <line:663:3, col:68>
    (CallExpr 0x91c52b8 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0x91c52a8 <<scratch space>:101:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c5258 <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0x93c7200 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0x91c52e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0x91c51f4 <col:36> '__gthread_t *' lvalue ParmVar 0x91c4f90 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0x91c52f8 </usr/include/linux/stddef.h:8:14> 'const pthread_attr_t *' <NullToPointer>
        (IntegerLiteral 0x91c5210 <col:14> 'int' 0))
      (ImplicitCastExpr 0x91c5308 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x91c5228 <col:54> 'void *(*)(void *)' lvalue ParmVar 0x91c5040 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0x91c5318 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0x91c5240 <col:62> 'void *' lvalue ParmVar 0x91c5090 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0x91c55c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0x91c55b0 <line:669:3, col:57>
    (CallExpr 0x91c5568 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0x91c5558 <<scratch space>:102:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c54fc <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0x91c2690 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0x91c5590 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x91c54cc <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0x91c5360 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x91c55a0 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0x91c54e4 <col:46> 'void **' lvalue ParmVar 0x91c53b0 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0x91c5798 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0x91c5788 <line:675:3, col:46>
    (CallExpr 0x91c5758 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0x91c5748 <<scratch space>:103:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c5714 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0x91c2b80 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0x91c5778 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x91c56fc <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0x91c55e0 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0x91c5a10 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0x91c5a00 <line:681:3, col:45>
    (CallExpr 0x91c59b8 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0x91c59a8 <<scratch space>:104:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c594c <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0x91c2870 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0x91c59e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x91c591c <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0x91c57c0 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x91c59f0 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x91c5934 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0x91c5800 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0x91c5bc8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0x91c5bb8 <line:687:3, col:34>
    (CallExpr 0x91c5b98 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0x91c5b88 <<scratch space>:105:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c5b34 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0x91c2a40 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0x91c5d68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0x91c5d58 <line:693:3, col:33>
    (CallExpr 0x91c5d38 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0x91c5d28 <<scratch space>:106:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c5cd4 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0x91c2ee0 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0x91c6160 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0x91c6140 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0x91c5fc8 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91c5fa8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x91c5f98 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91c5f7c <col:7> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91c60f0 <line:700:5, col:50>
      (CallExpr 0x91c60a8 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0x91c6098 <<scratch space>:107:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x91c603c <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0x93c6c60 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0x91c60d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0x91c600c <col:36> '__gthread_once_t *' lvalue ParmVar 0x91c5dc0 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0x91c60e0 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0x91c6024 <col:44> 'void (*)(void)' lvalue ParmVar 0x91c5e60 '__func' 'void (*)(void)'))))
    (ReturnStmt 0x91c6130 <line:702:5, col:13>
      (UnaryOperator 0x91c6118 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0x91c6100 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0x91c6480 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0x91c6470 <line:708:3, col:53>
    (CallExpr 0x91c6428 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0x91c6418 <<scratch space>:108:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91c63bc <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x91c4460 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0x91c6450 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0x91c638c <col:40> '__gthread_key_t *' lvalue ParmVar 0x91c61c0 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0x91c6460 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x91c63a4 <col:47> 'void (*)(void *)' lvalue ParmVar 0x91c6270 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0x91b4848 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0x91b4838 <line:714:3, col:45>
    (CallExpr 0x91b4808 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0x91b47f8 <<scratch space>:109:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b47c4 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0x91c4660 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0x91b4828 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x91b47ac <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x91c64a0 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0x91b4a28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0x91b4a18 <line:720:3, col:46>
    (CallExpr 0x91b49e8 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0x91b49d8 <<scratch space>:110:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b49a4 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0x93c6e70 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0x91b4a08 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x91b498c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x91b4870 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0x91b4cb0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0x91b4ca0 <line:726:3, col:53>
    (CallExpr 0x91b4c58 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0x91b4c48 <<scratch space>:111:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b4bec <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0x93c7010 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0x91b4c80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x91b4bbc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x91b4a50 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0x91b4c90 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0x91b4bd4 <col:48> 'const void *' lvalue ParmVar 0x91b4aa0 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0x91b4fc0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0x91b4fa0 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x91b4e78 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91b4e58 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x91b4e48 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b4e2c <col:7> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91b4f68 <line:733:5, col:52>
      (CallExpr 0x91b4f38 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0x91b4f28 <<scratch space>:112:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b4ed4 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0x91c3960 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x91b4f58 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x91b4ebc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x91b4d10 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x91b4f90 <line:735:5, col:12>
      (IntegerLiteral 0x91b4f78 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0x91b5260 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0x91b5240 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x91b5138 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91b5118 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x91b5108 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b50ec <col:7> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91b5208 <line:742:5, col:49>
      (CallExpr 0x91b51d8 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0x91b51c8 <<scratch space>:113:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b5194 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x91c3060 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x91b51f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x91b517c <col:42> '__gthread_mutex_t *' lvalue ParmVar 0x91b4ff0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x91b5230 <line:744:5, col:12>
      (IntegerLiteral 0x91b5218 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0x91b5500 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0x91b54e0 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x91b53d8 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91b53b8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x91b53a8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b538c <col:7> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91b54a8 <line:751:5, col:52>
      (CallExpr 0x91b5478 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0x91b5468 <<scratch space>:114:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b5434 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x91c3200 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x91b5498 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x91b541c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x91b5290 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x91b54d0 <line:753:5, col:12>
      (IntegerLiteral 0x91b54b8 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x91b5898 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0x91b5878 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x91b5718 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91b56f8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x91b56e8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b56cc <col:7> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91b5840 <line:763:5, col:69>
      (CallExpr 0x91b57f8 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0x91b57e8 <<scratch space>:115:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b578c <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0x91c33a0 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0x91b5820 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x91b575c <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x91b5530 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0x91b5830 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0x91b5774 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0x91b55b0 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0x91b5868 <line:765:5, col:12>
      (IntegerLiteral 0x91b5850 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0x91b5b30 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0x91b5b10 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x91b5a08 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91b59e8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x91b59d8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b59bc <col:7> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91b5ad8 <line:774:5, col:51>
      (CallExpr 0x91b5aa8 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0x91b5a98 <<scratch space>:116:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b5a64 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x91c35d0 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x91b5ac8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x91b5a4c <col:44> '__gthread_mutex_t *' lvalue ParmVar 0x91b58c0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x91b5b00 <line:776:5, col:12>
      (IntegerLiteral 0x91b5ae8 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x91b5d48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0x91b5d38 <line:805:3, col:39>
    (CallExpr 0x91b5d08 <col:10, col:39> 'int'
      (ImplicitCastExpr 0x91b5cf8 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b5cc4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x91b5050 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x91b5d28 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b5cac <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x91b5b90 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x91b5ef0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0x91b5ee0 <line:811:3, col:42>
    (CallExpr 0x91b5eb0 <col:10, col:42> 'int'
      (ImplicitCastExpr 0x91b5ea0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b5e84 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x91b52f0 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x91b5ed0 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b5e6c <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x91b5d70 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x91b6160 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0x91b6150 <line:820:3, col:59>
    (CallExpr 0x91b6108 <col:10, col:59> 'int'
      (ImplicitCastExpr 0x91b60f8 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b60bc <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x91b5630 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x91b6130 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b608c <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x91b5f20 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x91b6140 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x91b60a4 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0x91b5f70 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x91b6310 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0x91b6300 <line:828:3, col:41>
    (CallExpr 0x91b62d0 <col:10, col:41> 'int'
      (ImplicitCastExpr 0x91b62c0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b62a4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x91b5920 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x91b62f0 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b628c <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x91b6190 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0x91b6548 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0x91b6538 <line:834:3, col:50>
    (CallExpr 0x91b6508 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0x91b64f8 <<scratch space>:117:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b64a4 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0x91c3b00 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x91b6528 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b648c <col:44> '__gthread_cond_t *' lvalue ParmVar 0x91b6370 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0x91b6708 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0x91b66f8 <line:840:3, col:47>
    (CallExpr 0x91b66c8 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0x91b66b8 <<scratch space>:118:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b6684 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0x91c3ca0 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x91b66e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b666c <col:41> '__gthread_cond_t *' lvalue ParmVar 0x91b6570 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0x91b6990 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0x91b6980 <line:846:3, col:54>
    (CallExpr 0x91b6938 <<scratch space>:119:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0x91b6928 <<scratch space>:119:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b68cc <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0x91c3e80 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0x91b6960 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b689c <col:39> '__gthread_cond_t *' lvalue ParmVar 0x91b6730 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x91b6970 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b68b4 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x91b6780 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x91b6cb0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0x91b6ca0 <line:853:3, col:74>
    (CallExpr 0x91b6c48 <<scratch space>:120:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0x91b6c38 <<scratch space>:120:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b6bdc <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0x91c4070 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0x91b6c70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b6b94 <col:44> '__gthread_cond_t *' lvalue ParmVar 0x91b69c0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x91b6c80 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b6bac <col:52> '__gthread_mutex_t *' lvalue ParmVar 0x91b6a10 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0x91b6c90 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x91b6bc4 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0x91b6a60 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x91b6f20 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0x91b6f10 <line:860:3, col:46>
    (CallExpr 0x91b6ec8 <col:10, col:46> 'int'
      (ImplicitCastExpr 0x91b6eb8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b6e7c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x91b6800 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0x91b6ef0 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b6e4c <col:31> '__gthread_cond_t *' lvalue ParmVar 0x91b6ce0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x91b6f00 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b6e64 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x91b6d30 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x91b7220 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0x91b7210 <line:868:3, col:66>
    (CallExpr 0x91b71b8 <col:10, col:66> 'int'
      (ImplicitCastExpr 0x91b71a8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b716c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x91b6af0 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x91b71e0 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b7124 <col:36> '__gthread_cond_t *' lvalue ParmVar 0x91b6f50 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x91b71f0 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x91b713c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x91b6fa0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x91b7200 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x91b7154 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0x91b6ff0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0x91b73e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0x91b73d8 <line:874:3, col:48>
    (CallExpr 0x91b73a8 <<scratch space>:121:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0x91b7398 <<scratch space>:121:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b7364 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0x91c42c0 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x91b73c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x91b734c <col:42> '__gthread_cond_t *' lvalue ParmVar 0x91b7250 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x91b7948 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0x91b7938 <col:5, col:45>
    (CallExpr 0x91b7768 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0x91b7928 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91b78f4 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0x91b77d0 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0x91b7790 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x91b7704 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0x91b7530 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0x91b78e8 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0x91b771c <col:40> 'int' lvalue ParmVar 0x91b7580 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x91b7cc0 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0x91b7b20 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0x91b7cb0 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x91b7c94 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0x91b7b70 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0x91b7b48 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0x91b7ae0 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0x91b7970 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0x91b7c88 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0x91b7af8 <col:33> 'int' lvalue ParmVar 0x91b79c0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x91b7fa8 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0x91b7ed8 <line:66:5, col:35>
    0x91b7e50 "_Atomic_word __result =
      (ImplicitCastExpr 0x91b7ec8 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0x91b7eb0 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0x91b7ea0 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x91b7e84 <col:30> '_Atomic_word *' lvalue ParmVar 0x91b7d10 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0x91b7f50 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x91b7f10 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x91b7f00 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x91b7ee8 <col:6> '_Atomic_word *' lvalue ParmVar 0x91b7d10 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x91b7f40 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x91b7f24 <col:15> 'int' lvalue ParmVar 0x91b7d60 '__val' 'int')))
  (ReturnStmt 0x91b7f98 <line:68:5, col:12>
    (ImplicitCastExpr 0x91b7f88 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0x91b7f70 <col:12> '_Atomic_word':'int' lvalue Var 0x91b7e50 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x91b81c0 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0x91b81a0 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x91b8160 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x91b8150 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x91b8138 <col:6> '_Atomic_word *' lvalue ParmVar 0x91b7fe0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x91b8190 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x91b8174 <col:15> 'int' lvalue ParmVar 0x91b8030 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x91b8650 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0x91b8630 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x91b83c8 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x91b83a8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x91b8398 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b837c <col:9> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x91b8500 <line:81:7, col:45>
      (CallExpr 0x91b84a8 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0x91b8498 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b843c <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0x91b7600 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0x91b84e0 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0x91b84d0 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x91b840c <col:33> '_Atomic_word *' lvalue ParmVar 0x91b81f0 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0x91b84f0 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0x91b8424 <col:40> 'int' lvalue ParmVar 0x91b8240 '__val' 'int'))))
    (ReturnStmt 0x91b8620 <line:83:7, col:52>
      (CallExpr 0x91b85d8 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0x91b85c8 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91b8574 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b7de0 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0x91b8600 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x91b8544 <col:40> '_Atomic_word *' lvalue ParmVar 0x91b81f0 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0x91b8610 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0x91b855c <col:47> 'int' lvalue ParmVar 0x91b8240 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x93df920 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0x93df900 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0x93df6b8 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93df698 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x93df688 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93df66c <col:9> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0x93df798 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0x93df788 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x93df72c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0x91b7a60 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0x93df7d0 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0x93df7c0 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x93df6fc <col:20> '_Atomic_word *' lvalue ParmVar 0x91b8680 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0x93df7e0 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0x93df714 <col:27> 'int' lvalue ParmVar 0x93df530 '__val' 'int')))
    (CallExpr 0x93df8b8 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0x93df8a8 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x93df854 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0x91b80d0 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0x93df8e0 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x93df824 <col:27> '_Atomic_word *' lvalue ParmVar 0x91b8680 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0x93df8f0 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0x93df83c <col:34> 'int' lvalue ParmVar 0x93df530 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace __gnu_cxx {
    enum _Lock_policy {
        _S_single,
        _S_mutex,
        _S_atomic
    };
    static const __gnu_cxx::_Lock_policy __default_lock_policy = (DeclRefExpr 0x93dfb44 </usr/include/c++/4.6/ext/concurrence.h:59:3> 'enum __gnu_cxx::_Lock_policy' EnumConstant 0x93dfa90 '_S_mutex' 'enum __gnu_cxx::_Lock_policy')
;
    class __concurrence_lock_error : public std::exception {
        class __concurrence_lock_error;
    public:
    public:
        virtual const char *what() const throw() (CompoundStmt 0x93e0000 </usr/include/c++/4.6/ext/concurrence.h:72:5, col:53>
  (ReturnStmt 0x93dfff0 <col:7, col:14>
    (ImplicitCastExpr 0x93dffe0 <col:14> 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0x93dffa0 <col:14> 'const char [36]' lvalue "__gnu_cxx::__concurrence_lock_error"))))


        inline __gnu_cxx::__concurrence_lock_error &operator=(const __gnu_cxx::__concurrence_lock_error &) throw();
        inline void ~__concurrence_lock_error() throw();
    };
    class __concurrence_unlock_error : public std::exception {
        class __concurrence_unlock_error;
    public:
    public:
        virtual const char *what() const throw() (CompoundStmt 0x93e04c8 </usr/include/c++/4.6/ext/concurrence.h:80:5, col:55>
  (ReturnStmt 0x93e04b8 <col:7, col:14>
    (ImplicitCastExpr 0x93e04a8 <col:14> 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0x93e0460 <col:14> 'const char [38]' lvalue "__gnu_cxx::__concurrence_unlock_error"))))


        inline __gnu_cxx::__concurrence_unlock_error &operator=(const __gnu_cxx::__concurrence_unlock_error &) throw();
        inline void ~__concurrence_unlock_error() throw();
    };
    class __concurrence_broadcast_error : public std::exception {
        class __concurrence_broadcast_error;
    public:
    public:
        virtual const char *what() const throw() (CompoundStmt 0x93e0988 </usr/include/c++/4.6/ext/concurrence.h:88:5, col:58>
  (ReturnStmt 0x93e0978 <col:7, col:14>
    (ImplicitCastExpr 0x93e0968 <col:14> 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0x93e0920 <col:14> 'const char [41]' lvalue "__gnu_cxx::__concurrence_broadcast_error"))))


        inline __gnu_cxx::__concurrence_broadcast_error &operator=(const __gnu_cxx::__concurrence_broadcast_error &) throw();
        inline void ~__concurrence_broadcast_error() throw();
    };
    class __concurrence_wait_error : public std::exception {
        class __concurrence_wait_error;
    public:
    public:
        virtual const char *what() const throw() (CompoundStmt 0x93e0e00 </usr/include/c++/4.6/ext/concurrence.h:96:5, col:53>
  (ReturnStmt 0x93e0df0 <col:7, col:14>
    (ImplicitCastExpr 0x93e0de0 <col:14> 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0x93e0da0 <col:14> 'const char [36]' lvalue "__gnu_cxx::__concurrence_wait_error"))))


        inline __gnu_cxx::__concurrence_wait_error &operator=(const __gnu_cxx::__concurrence_wait_error &) throw();
        inline void ~__concurrence_wait_error() throw();
    };
    inline void __throw_concurrence_lock_error() (CompoundStmt 0x93e0f70 </usr/include/c++/4.6/ext/concurrence.h:102:3, line:108:3>
  (CallExpr 0x93e0f50 <line:106:5, col:21> 'void'
    (ImplicitCastExpr 0x93e0f40 <col:5> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
      (DeclRefExpr 0x93e0f24 <col:5> 'void (void) __attribute__((noreturn))' lvalue Function 0x93e0e90 '__builtin_abort' 'void (void) __attribute__((noreturn))'))))


    inline void __throw_concurrence_unlock_error() (CompoundStmt 0x93e1048 </usr/include/c++/4.6/ext/concurrence.h:112:3, line:118:3>
  (CallExpr 0x93e1028 <line:116:5, col:21> 'void'
    (ImplicitCastExpr 0x93e1018 <col:5> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
      (DeclRefExpr 0x93e0ffc <col:5> 'void (void) __attribute__((noreturn))' lvalue Function 0x93e0e90 '__builtin_abort' 'void (void) __attribute__((noreturn))'))))


    inline void __throw_concurrence_broadcast_error() (CompoundStmt 0x93e1128 </usr/include/c++/4.6/ext/concurrence.h:123:3, line:129:3>
  (CallExpr 0x93e1108 <line:127:5, col:21> 'void'
    (ImplicitCastExpr 0x93e10f8 <col:5> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
      (DeclRefExpr 0x93e10dc <col:5> 'void (void) __attribute__((noreturn))' lvalue Function 0x93e0e90 '__builtin_abort' 'void (void) __attribute__((noreturn))'))))


    inline void __throw_concurrence_wait_error() (CompoundStmt 0x93e1208 </usr/include/c++/4.6/ext/concurrence.h:133:3, line:139:3>
  (CallExpr 0x93e11e8 <line:137:5, col:21> 'void'
    (ImplicitCastExpr 0x93e11d8 <col:5> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
      (DeclRefExpr 0x93e11bc <col:5> 'void (void) __attribute__((noreturn))' lvalue Function 0x93e0e90 '__builtin_abort' 'void (void) __attribute__((noreturn))'))))


    class __mutex {
        class __mutex;
    private:
    private:
        __gthread_mutex_t _M_mutex;
        __mutex(const __gnu_cxx::__mutex &);
        __gnu_cxx::__mutex &operator=(const __gnu_cxx::__mutex &);
    public:
    public:
        __mutex() : _M_mutex() (CompoundStmt 0x93e3238 </usr/include/c++/4.6/ext/concurrence.h:152:5, line:164:5>
  (IfStmt 0x93e3218 <line:154:7, line:162:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e2050 <line:154:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e2030 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e2020 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e2004 <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93e3200 <line:155:2, line:162:2>
      (DeclStmt 0x93e2298 <line:157:4, col:50>
        0x93e2070 "__gthread_mutex_t __tmp =
          (InitListExpr 0x93e21d8 </usr/include/pthread.h:101:3, col:30> '__gthread_mutex_t':'pthread_mutex_t'
            (InitListExpr 0x93e2208 <col:5, col:28> 'struct __pthread_mutex_s':'struct pthread_mutex_t::__pthread_mutex_s'
              (IntegerLiteral 0x93e20a8 <col:7> 'int' 0)
              (ImplicitCastExpr 0x93e2248 <col:10> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e20c0 <col:10> 'int' 0))
              (IntegerLiteral 0x93e20d8 <col:13> 'int' 0)
              (IntegerLiteral 0x93e20f0 <col:16> 'int' 0)
              (ImplicitCastExpr 0x93e2258 <col:19> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e2108 <col:19> 'int' 0))
              (InitListExpr 0x93e2268 <col:22, col:26> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>'
                (IntegerLiteral 0x93e2120 <col:24> 'int' 0))))")
      (CXXOperatorCallExpr 0x93e31d8 </usr/include/c++/4.6/ext/concurrence.h:158:4, col:15> 'pthread_mutex_t' lvalue
        (ImplicitCastExpr 0x93e31c8 <col:13, <invalid sloc>> 'pthread_mutex_t &(*)(const pthread_mutex_t &) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e3170 <col:13, <invalid sloc>> 'pthread_mutex_t &(const pthread_mutex_t &) throw()' lvalue CXXMethod 0x93e26d0 'operator=' 'pthread_mutex_t &(const pthread_mutex_t &) throw()'))
        (MemberExpr 0x93e22d8 <col:4> '__gthread_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e1390
          (CXXThisExpr 0x93e22c8 <col:4> 'class __gnu_cxx::__mutex *' this))
        (ImplicitCastExpr 0x93e3160 <col:15> 'const pthread_mutex_t' lvalue <NoOp>
          (DeclRefExpr 0x93e22f8 <col:15> '__gthread_mutex_t':'pthread_mutex_t' lvalue Var 0x93e2070 '__tmp' '__gthread_mutex_t':'pthread_mutex_t'))))
    <<<NULL>>>))


        void lock() (CompoundStmt 0x93e34b0 </usr/include/c++/4.6/ext/concurrence.h:175:5, line:183:5>
  (IfStmt 0x93e3490 <line:177:7, line:181:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e32d0 <line:177:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e32b0 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e32a0 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e3284 <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93e3478 <line:178:2, line:181:2>
      (IfStmt 0x93e3458 <line:179:4, line:180:37>
        <<<NULL>>>
        (BinaryOperator 0x93e33c0 <line:179:8, col:43> '_Bool' '!='
          (CallExpr 0x93e3388 <col:8, col:38> 'int'
            (ImplicitCastExpr 0x93e3378 <col:8> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x93e335c <col:8> 'int (__gthread_mutex_t *)' lvalue Function 0x91b5050 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
            (UnaryOperator 0x93e3348 <col:29, col:30> '__gthread_mutex_t *' prefix '&'
              (MemberExpr 0x93e3328 <col:30> '__gthread_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e1390
                (CXXThisExpr 0x93e3318 <col:30> 'class __gnu_cxx::__mutex *' this))))
          (IntegerLiteral 0x93e33a8 <col:43> 'int' 0))
        (CallExpr 0x93e3438 <line:180:6, col:37> 'void'
          (ImplicitCastExpr 0x93e3428 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93e340c <col:6> 'void (void)' lvalue Function 0x93e0e30 '__throw_concurrence_lock_error' 'void (void)')))
        <<<NULL>>>))
    <<<NULL>>>))


        void unlock() (CompoundStmt 0x93e72e8 </usr/include/c++/4.6/ext/concurrence.h:186:5, line:194:5>
  (IfStmt 0x93e72c8 <line:188:7, line:192:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e7108 <line:188:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e70e8 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e3518 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e34fc <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93e72b0 <line:189:2, line:192:2>
      (IfStmt 0x93e7290 <line:190:4, line:191:39>
        <<<NULL>>>
        (BinaryOperator 0x93e71f8 <line:190:8, col:45> '_Bool' '!='
          (CallExpr 0x93e71c0 <col:8, col:40> 'int'
            (ImplicitCastExpr 0x93e71b0 <col:8> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x93e7194 <col:8> 'int (__gthread_mutex_t *)' lvalue Function 0x91b5920 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
            (UnaryOperator 0x93e7180 <col:31, col:32> '__gthread_mutex_t *' prefix '&'
              (MemberExpr 0x93e7160 <col:32> '__gthread_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e1390
                (CXXThisExpr 0x93e7150 <col:32> 'class __gnu_cxx::__mutex *' this))))
          (IntegerLiteral 0x93e71e0 <col:45> 'int' 0))
        (CallExpr 0x93e7270 <line:191:6, col:39> 'void'
          (ImplicitCastExpr 0x93e7260 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93e7244 <col:6> 'void (void)' lvalue Function 0x93e0fa0 '__throw_concurrence_unlock_error' 'void (void)')))
        <<<NULL>>>))
    <<<NULL>>>))


        __gthread_mutex_t *gthread_mutex() (CompoundStmt 0x93e7358 </usr/include/c++/4.6/ext/concurrence.h:197:7, col:27>
  (ReturnStmt 0x93e7348 <col:9, col:17>
    (UnaryOperator 0x93e7330 <col:16, col:17> '__gthread_mutex_t *' prefix '&'
      (MemberExpr 0x93e7310 <col:17> '__gthread_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e1390
        (CXXThisExpr 0x93e7300 <col:17> 'class __gnu_cxx::__mutex *' this)))))


    };
    class __recursive_mutex {
        class __recursive_mutex;
    private:
    private:
        __gthread_recursive_mutex_t _M_mutex;
        __recursive_mutex(const __gnu_cxx::__recursive_mutex &);
        __gnu_cxx::__recursive_mutex &operator=(const __gnu_cxx::__recursive_mutex &);
    public:
    public:
        __recursive_mutex() : _M_mutex() (CompoundStmt 0x93e7e28 </usr/include/c++/4.6/ext/concurrence.h:210:5, line:222:5>
  (IfStmt 0x93e7e08 <line:212:7, line:220:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e7ac0 <line:212:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e7aa0 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e7a90 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e7a74 <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93e7df0 <line:213:2, line:220:2>
      (DeclStmt 0x93e7d18 <line:215:4, col:70>
        0x93e7ae0 "__gthread_recursive_mutex_t __tmp =
          (InitListExpr 0x93e7c48 </usr/include/pthread.h:104:3, col:55> '__gthread_recursive_mutex_t':'pthread_mutex_t'
            (InitListExpr 0x93e7c78 <col:5, col:53> 'struct __pthread_mutex_s':'struct pthread_mutex_t::__pthread_mutex_s'
              (IntegerLiteral 0x93e7b18 <col:7> 'int' 0)
              (ImplicitCastExpr 0x93e7cb8 <col:10> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e7b30 <col:10> 'int' 0))
              (IntegerLiteral 0x93e7b48 <col:13> 'int' 0)
              (ImplicitCastExpr 0x93e7cc8 <col:16> 'int' <IntegralCast>
                (DeclRefExpr 0x93e7b60 <col:16> 'enum <anonymous at /usr/include/pthread.h:44:1>' EnumConstant 0x93ad080 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
              (ImplicitCastExpr 0x93e7cd8 <col:44> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e7b78 <col:44> 'int' 0))
              (InitListExpr 0x93e7ce8 <col:47, col:51> 'union pthread_mutex_t::__pthread_mutex_s::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:65:19>'
                (IntegerLiteral 0x93e7b90 <col:49> 'int' 0))))")
      (CXXOperatorCallExpr 0x93e7dc8 </usr/include/c++/4.6/ext/concurrence.h:216:4, col:15> 'pthread_mutex_t' lvalue
        (ImplicitCastExpr 0x93e7db8 <col:13, <invalid sloc>> 'pthread_mutex_t &(*)(const pthread_mutex_t &) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e7da0 <col:13, <invalid sloc>> 'pthread_mutex_t &(const pthread_mutex_t &) throw()' lvalue CXXMethod 0x93e26d0 'operator=' 'pthread_mutex_t &(const pthread_mutex_t &) throw()'))
        (MemberExpr 0x93e7d58 <col:4> '__gthread_recursive_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e74e0
          (CXXThisExpr 0x93e7d48 <col:4> 'class __gnu_cxx::__recursive_mutex *' this))
        (ImplicitCastExpr 0x93e7d90 <col:15> 'const pthread_mutex_t' lvalue <NoOp>
          (DeclRefExpr 0x93e7d78 <col:15> '__gthread_recursive_mutex_t':'pthread_mutex_t' lvalue Var 0x93e7ae0 '__tmp' '__gthread_recursive_mutex_t':'pthread_mutex_t'))))
    <<<NULL>>>))


        void lock() (CompoundStmt 0x93e80c0 </usr/include/c++/4.6/ext/concurrence.h:233:5, line:241:5>
  (IfStmt 0x93e80a0 <line:235:7, line:239:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e7ec0 <line:235:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e7ea0 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e7e90 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e7e74 <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93e8088 <line:236:2, line:239:2>
      (IfStmt 0x93e8068 <line:237:4, line:238:37>
        <<<NULL>>>
        (BinaryOperator 0x93e7fd0 <line:237:8, col:53> '_Bool' '!='
          (CallExpr 0x93e7f98 <col:8, col:48> 'int'
            (ImplicitCastExpr 0x93e7f88 <col:8> 'int (*)(__gthread_recursive_mutex_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x93e7f4c <col:8> 'int (__gthread_recursive_mutex_t *)' lvalue Function 0x91b5c10 '__gthread_recursive_mutex_lock' 'int (__gthread_recursive_mutex_t *)'))
            (UnaryOperator 0x93e7f38 <col:39, col:40> '__gthread_recursive_mutex_t *' prefix '&'
              (MemberExpr 0x93e7f18 <col:40> '__gthread_recursive_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e74e0
                (CXXThisExpr 0x93e7f08 <col:40> 'class __gnu_cxx::__recursive_mutex *' this))))
          (IntegerLiteral 0x93e7fb8 <col:53> 'int' 0))
        (CallExpr 0x93e8048 <line:238:6, col:37> 'void'
          (ImplicitCastExpr 0x93e8038 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93e801c <col:6> 'void (void)' lvalue Function 0x93e0e30 '__throw_concurrence_lock_error' 'void (void)')))
        <<<NULL>>>))
    <<<NULL>>>))


        void unlock() (CompoundStmt 0x93e8338 </usr/include/c++/4.6/ext/concurrence.h:244:5, line:252:5>
  (IfStmt 0x93e8318 <line:246:7, line:250:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e8158 <line:246:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e8138 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e8128 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e810c <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93e8300 <line:247:2, line:250:2>
      (IfStmt 0x93e82e0 <line:248:4, line:249:39>
        <<<NULL>>>
        (BinaryOperator 0x93e8248 <line:248:8, col:55> '_Bool' '!='
          (CallExpr 0x93e8210 <col:8, col:50> 'int'
            (ImplicitCastExpr 0x93e8200 <col:8> 'int (*)(__gthread_recursive_mutex_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x93e81e4 <col:8> 'int (__gthread_recursive_mutex_t *)' lvalue Function 0x91b61f0 '__gthread_recursive_mutex_unlock' 'int (__gthread_recursive_mutex_t *)'))
            (UnaryOperator 0x93e81d0 <col:41, col:42> '__gthread_recursive_mutex_t *' prefix '&'
              (MemberExpr 0x93e81b0 <col:42> '__gthread_recursive_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e74e0
                (CXXThisExpr 0x93e81a0 <col:42> 'class __gnu_cxx::__recursive_mutex *' this))))
          (IntegerLiteral 0x93e8230 <col:55> 'int' 0))
        (CallExpr 0x93e82c0 <line:249:6, col:39> 'void'
          (ImplicitCastExpr 0x93e82b0 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93e8294 <col:6> 'void (void)' lvalue Function 0x93e0fa0 '__throw_concurrence_unlock_error' 'void (void)')))
        <<<NULL>>>))
    <<<NULL>>>))


        __gthread_recursive_mutex_t *gthread_recursive_mutex() (CompoundStmt 0x93e83a8 </usr/include/c++/4.6/ext/concurrence.h:255:5, col:25>
  (ReturnStmt 0x93e8398 <col:7, col:15>
    (UnaryOperator 0x93e8380 <col:14, col:15> '__gthread_recursive_mutex_t *' prefix '&'
      (MemberExpr 0x93e8360 <col:15> '__gthread_recursive_mutex_t':'pthread_mutex_t' lvalue ->_M_mutex 0x93e74e0
        (CXXThisExpr 0x93e8350 <col:15> 'class __gnu_cxx::__recursive_mutex *' this)))))


    };
    class __scoped_lock {
        class __scoped_lock;
    public:
    public:
        typedef __gnu_cxx::__mutex __mutex_type;
    private:
    private:
        __mutex_type &_M_device;
        __scoped_lock(const __gnu_cxx::__scoped_lock &);
        __gnu_cxx::__scoped_lock &operator=(const __gnu_cxx::__scoped_lock &);
    public:
    public:
        __scoped_lock(__mutex_type &__name) : _M_device((DeclRefExpr 0x93e8a54 </usr/include/c++/4.6/ext/concurrence.h:310:62> '__mutex_type':'class __gnu_cxx::__mutex' lvalue ParmVar 0x93e88b0 '__name' '__mutex_type &')
) (CompoundStmt 0x93e8b18 </usr/include/c++/4.6/ext/concurrence.h:311:5, col:25>
  (CXXMemberCallExpr 0x93e8af8 <col:7, col:22> 'void'
    (MemberExpr 0x93e8ad8 <col:7, col:17> '<bound member function type>' .lock 0x93e16f0
      (MemberExpr 0x93e8ab8 <col:7> '__mutex_type':'class __gnu_cxx::__mutex' lvalue ->_M_device 0x93e85e0
        (CXXThisExpr 0x93e8aa8 <col:7> 'class __gnu_cxx::__scoped_lock *' this)))))


        void ~__scoped_lock() throw() (CompoundStmt 0x93e8ba0 </usr/include/c++/4.6/ext/concurrence.h:314:5, col:27>
  (CXXMemberCallExpr 0x93e8b80 <col:7, col:24> 'void'
    (MemberExpr 0x93e8b60 <col:7, col:17> '<bound member function type>' .unlock 0x93e1770
      (MemberExpr 0x93e8b40 <col:7> '__mutex_type':'class __gnu_cxx::__mutex' lvalue ->_M_device 0x93e85e0
        (CXXThisExpr 0x93e8b30 <col:7> 'class __gnu_cxx::__scoped_lock *' this)))))


    };
    class __cond {
        class __cond;
    private:
    private:
        __gthread_cond_t _M_cond;
        __cond(const __gnu_cxx::__cond &);
        __gnu_cxx::__cond &operator=(const __gnu_cxx::__cond &);
    public:
    public:
        __cond() : _M_cond() (CompoundStmt 0x93ea398 </usr/include/c++/4.6/ext/concurrence.h:328:5, line:340:5>
  (IfStmt 0x93ea378 <line:330:7, line:338:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93e9700 <line:330:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93e96e0 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93e96d0 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93e96b4 <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93ea360 <line:331:2, line:338:2>
      (DeclStmt 0x93e99a0 <line:333:4, col:48>
        0x93e9720 "__gthread_cond_t __tmp =
          (InitListExpr 0x93e98c8 </usr/include/pthread.h:178:34, col:72> '__gthread_cond_t':'pthread_cond_t'
            (InitListExpr 0x93e98f8 <col:36, col:70> 'struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>':'struct pthread_cond_t::<anonymous at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3>'
              (IntegerLiteral 0x93e9758 <col:38> 'int' 0)
              (ImplicitCastExpr 0x93e9940 <col:41> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e9770 <col:41> 'int' 0))
              (ImplicitCastExpr 0x93e9950 <col:44> 'unsigned long long' <IntegralCast>
                (IntegerLiteral 0x93e9788 <col:44> 'int' 0))
              (ImplicitCastExpr 0x93e9960 <col:47> 'unsigned long long' <IntegralCast>
                (IntegerLiteral 0x93e97a0 <col:47> 'int' 0))
              (ImplicitCastExpr 0x93e9970 <col:50> 'unsigned long long' <IntegralCast>
                (IntegerLiteral 0x93e97b8 <col:50> 'int' 0))
              (CStyleCastExpr 0x93e9808 <col:53, col:62> 'void *' <NoOp>
                (ImplicitCastExpr 0x93e97f8 <col:62> 'void *' <NullToPointer>
                  (IntegerLiteral 0x93e97d0 <col:62> 'int' 0)))
              (ImplicitCastExpr 0x93e9980 <col:65> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e9820 <col:65> 'int' 0))
              (ImplicitCastExpr 0x93e9990 <col:68> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x93e9838 <col:68> 'int' 0))))")
      (CXXOperatorCallExpr 0x93ea338 </usr/include/c++/4.6/ext/concurrence.h:334:4, col:14> 'pthread_cond_t' lvalue
        (ImplicitCastExpr 0x93ea328 <col:12, <invalid sloc>> 'pthread_cond_t &(*)(const pthread_cond_t &) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x93ea2d8 <col:12, <invalid sloc>> 'pthread_cond_t &(const pthread_cond_t &) throw()' lvalue CXXMethod 0x93e9b90 'operator=' 'pthread_cond_t &(const pthread_cond_t &) throw()'))
        (MemberExpr 0x93e99d8 <col:4> '__gthread_cond_t':'pthread_cond_t' lvalue ->_M_cond 0x93e8d30
          (CXXThisExpr 0x93e99c8 <col:4> 'class __gnu_cxx::__cond *' this))
        (ImplicitCastExpr 0x93ea2c8 <col:14> 'const pthread_cond_t' lvalue <NoOp>
          (DeclRefExpr 0x93e99f8 <col:14> '__gthread_cond_t':'pthread_cond_t' lvalue Var 0x93e9720 '__tmp' '__gthread_cond_t':'pthread_cond_t'))))
    <<<NULL>>>))


        void broadcast() (CompoundStmt 0x93ea630 </usr/include/c++/4.6/ext/concurrence.h:351:5, line:359:5>
  (IfStmt 0x93ea610 <line:353:7, line:357:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x93ea430 <line:353:11, col:30> '_Bool' <IntegralToBoolean>
      (CallExpr 0x93ea410 <col:11, col:30> 'int'
        (ImplicitCastExpr 0x93ea400 <col:11> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93ea3e4 <col:11> 'int (void)' lvalue Function 0x91c4d70 '__gthread_active_p' 'int (void)'))))
    (CompoundStmt 0x93ea5f8 <line:354:2, line:357:2>
      (IfStmt 0x93ea5d8 <line:355:4, line:356:42>
        <<<NULL>>>
        (BinaryOperator 0x93ea540 <line:355:8, col:46> '_Bool' '!='
          (CallExpr 0x93ea508 <col:8, col:41> 'int'
            (ImplicitCastExpr 0x93ea4f8 <col:8> 'int (*)(__gthread_cond_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x93ea4bc <col:8> 'int (__gthread_cond_t *)' lvalue Function 0x91b63f0 '__gthread_cond_broadcast' 'int (__gthread_cond_t *)'))
            (UnaryOperator 0x93ea4a8 <col:33, col:34> '__gthread_cond_t *' prefix '&'
              (MemberExpr 0x93ea488 <col:34> '__gthread_cond_t':'pthread_cond_t' lvalue ->_M_cond 0x93e8d30
                (CXXThisExpr 0x93ea478 <col:34> 'class __gnu_cxx::__cond *' this))))
          (IntegerLiteral 0x93ea528 <col:46> 'int' 0))
        (CallExpr 0x93ea5b8 <line:356:6, col:42> 'void'
          (ImplicitCastExpr 0x93ea5a8 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93ea58c <col:6> 'void (void)' lvalue Function 0x93e1080 '__throw_concurrence_broadcast_error' 'void (void)')))
        <<<NULL>>>))
    <<<NULL>>>))


        void wait(__gnu_cxx::__mutex *mutex) (CompoundStmt 0x93ea868 </usr/include/c++/4.6/ext/concurrence.h:362:5, line:369:5>
  (CompoundStmt 0x93ea850 <line:364:7, line:367:7>
    (IfStmt 0x93ea830 <line:365:4, line:366:37>
      <<<NULL>>>
      (BinaryOperator 0x93ea798 <line:365:8, col:65> '_Bool' '!='
        (CallExpr 0x93ea758 <col:8, col:60> 'int'
          (ImplicitCastExpr 0x93ea748 <col:8> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93ea72c <col:8> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x91b6800 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
          (UnaryOperator 0x93ea6b0 <col:28, col:29> '__gthread_cond_t *' prefix '&'
            (MemberExpr 0x93ea690 <col:29> '__gthread_cond_t':'pthread_cond_t' lvalue ->_M_cond 0x93e8d30
              (CXXThisExpr 0x93ea680 <col:29> 'class __gnu_cxx::__cond *' this)))
          (CXXMemberCallExpr 0x93ea710 <col:38, col:59> '__gthread_mutex_t *'
            (MemberExpr 0x93ea6ec <col:38, col:45> '<bound member function type>' ->gthread_mutex 0x93e1870
              (ImplicitCastExpr 0x93ea6e0 <col:38> 'class __gnu_cxx::__mutex *' <LValueToRValue>
                (DeclRefExpr 0x93ea6c4 <col:38> 'class __gnu_cxx::__mutex *' lvalue ParmVar 0x93e9100 'mutex' 'class __gnu_cxx::__mutex *')))))
        (IntegerLiteral 0x93ea780 <col:65> 'int' 0))
      (CallExpr 0x93ea810 <line:366:6, col:37> 'void'
        (ImplicitCastExpr 0x93ea800 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93ea7e4 <col:6> 'void (void)' lvalue Function 0x93e1160 '__throw_concurrence_wait_error' 'void (void)')))
      <<<NULL>>>)))


        void wait_recursive(__gnu_cxx::__recursive_mutex *mutex) (CompoundStmt 0x93eaab8 </usr/include/c++/4.6/ext/concurrence.h:372:5, line:381:5>
  (CompoundStmt 0x93eaaa0 <line:374:7, line:379:7>
    (IfStmt 0x93eaa80 <line:375:4, line:378:37>
      <<<NULL>>>
      (BinaryOperator 0x93ea9e8 <line:375:8, line:377:11> '_Bool' '!='
        (CallExpr 0x93ea9a8 <line:375:8, line:376:42> 'int'
          (ImplicitCastExpr 0x93ea998 <line:375:8> 'int (*)(__gthread_cond_t *, __gthread_recursive_mutex_t *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x93ea964 <col:8> 'int (__gthread_cond_t *, __gthread_recursive_mutex_t *)' lvalue Function 0x91b6db0 '__gthread_cond_wait_recursive' 'int (__gthread_cond_t *, __gthread_recursive_mutex_t *)'))
          (UnaryOperator 0x93ea8e8 <col:38, col:39> '__gthread_cond_t *' prefix '&'
            (MemberExpr 0x93ea8c8 <col:39> '__gthread_cond_t':'pthread_cond_t' lvalue ->_M_cond 0x93e8d30
              (CXXThisExpr 0x93ea8b8 <col:39> 'class __gnu_cxx::__cond *' this)))
          (CXXMemberCallExpr 0x93ea948 <line:376:10, col:41> '__gthread_recursive_mutex_t *'
            (MemberExpr 0x93ea924 <col:10, col:17> '<bound member function type>' ->gthread_recursive_mutex 0x93e79a0
              (ImplicitCastExpr 0x93ea918 <col:10> 'class __gnu_cxx::__recursive_mutex *' <LValueToRValue>
                (DeclRefExpr 0x93ea8fc <col:10> 'class __gnu_cxx::__recursive_mutex *' lvalue ParmVar 0x93e9200 'mutex' 'class __gnu_cxx::__recursive_mutex *')))))
        (IntegerLiteral 0x93ea9d0 <line:377:11> 'int' 0))
      (CallExpr 0x93eaa60 <line:378:6, col:37> 'void'
        (ImplicitCastExpr 0x93eaa50 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x93eaa34 <col:6> 'void (void)' lvalue Function 0x93e1160 '__throw_concurrence_wait_error' 'void (void)')))
      <<<NULL>>>)))


    };
}
extern void __builtin_abort();
extern void *__builtin_memcpy(void *, const void *, unsigned int);
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93eee38 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x93eee28 <col:9, col:22>
    (CXXOperatorCallExpr 0x93eee00 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x93eedc0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
      (DeclRefExpr 0x93eed90 <col:16> 'const _Tp' lvalue ParmVar 0x93eec20 '__x' 'const _Tp &')
      (DeclRefExpr 0x93eeda8 <col:22> 'const _Tp' lvalue ParmVar 0x93eec70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93ef418 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x93ef408 <col:9, col:22>
    (CXXOperatorCallExpr 0x93ef3e0 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x93ef3a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (DeclRefExpr 0x93ef370 <col:16> 'const _Tp' lvalue ParmVar 0x93ef220 '__x' 'const _Tp &')
      (DeclRefExpr 0x93ef388 <col:22> 'const _Tp' lvalue ParmVar 0x93ef270 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93ef9a8 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x93ef998 <col:9, col:22>
    (BinaryOperator 0x93ef980 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x93ef950 <col:16> 'const _Tp' lvalue ParmVar 0x93ef800 '__x' 'const _Tp &')
      (DeclRefExpr 0x93ef968 <col:22> 'const _Tp' lvalue ParmVar 0x93ef850 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93eff38 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x93eff28 <col:9, col:22>
    (BinaryOperator 0x93eff10 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x93efee0 <col:16> 'const _Tp' lvalue ParmVar 0x93efd90 '__x' 'const _Tp &')
      (DeclRefExpr 0x93efef8 <col:22> 'const _Tp' lvalue ParmVar 0x93efde0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f04c8 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x93f04b8 <col:9, col:22>
    (BinaryOperator 0x93f04a0 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x93f0470 <col:16> 'const _Tp' lvalue ParmVar 0x93f0320 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f0488 <col:22> 'const _Tp' lvalue ParmVar 0x93f0370 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x93f0a68 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x93f0a58 <col:9, col:17>
    (CXXOperatorCallExpr 0x93f0a38 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x93f09f8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (DeclRefExpr 0x93f09e0 <col:17> 'const _Tp' lvalue ParmVar 0x93f08c0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f10d8 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x93f10c8 <col:9, col:23>
    (CXXOperatorCallExpr 0x93f10a0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x93f1050 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (DeclRefExpr 0x93f1020 <col:16> 'const _Tp' lvalue ParmVar 0x93f0eb0 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f1038 <col:23> 'const _Tp' lvalue ParmVar 0x93f0f00 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f16c8 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x93f16b8 <col:9, col:23>
    (CXXOperatorCallExpr 0x93f1690 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x93f1640 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (DeclRefExpr 0x93f1610 <col:16> 'const _Tp' lvalue ParmVar 0x93f14c0 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f1628 <col:23> 'const _Tp' lvalue ParmVar 0x93f1510 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f1ca8 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x93f1c98 <col:9, col:22>
    (CXXOperatorCallExpr 0x93f1c70 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x93f1c30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x93f1c00 <col:16> 'const _Tp' lvalue ParmVar 0x93f1ab0 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f1c18 <col:22> 'const _Tp' lvalue ParmVar 0x93f1b00 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f2288 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x93f2278 <col:9, col:22>
    (CXXOperatorCallExpr 0x93f2250 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x93f2210 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (DeclRefExpr 0x93f21e0 <col:16> 'const _Tp' lvalue ParmVar 0x93f2090 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f21f8 <col:22> 'const _Tp' lvalue ParmVar 0x93f20e0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f7998 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x93f7988 <col:9, col:23>
    (CXXOperatorCallExpr 0x93f7960 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x93f7920 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (DeclRefExpr 0x93f78f0 <col:16> 'const _Tp' lvalue ParmVar 0x93f77a0 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f7908 <col:23> 'const _Tp' lvalue ParmVar 0x93f77f0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f7f78 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x93f7f68 <col:9, col:23>
    (CXXOperatorCallExpr 0x93f7f40 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x93f7f00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890)
      (DeclRefExpr 0x93f7ed0 <col:16> 'const _Tp' lvalue ParmVar 0x93f7d80 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f7ee8 <col:23> 'const _Tp' lvalue ParmVar 0x93f7dd0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f8508 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x93f84f8 <col:9, col:23>
    (BinaryOperator 0x93f84e0 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x93f84b0 <col:16> 'const _Tp' lvalue ParmVar 0x93f8360 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f84c8 <col:23> 'const _Tp' lvalue ParmVar 0x93f83b0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f8a98 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x93f8a88 <col:9, col:23>
    (BinaryOperator 0x93f8a70 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x93f8a40 <col:16> 'const _Tp' lvalue ParmVar 0x93f88f0 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f8a58 <col:23> 'const _Tp' lvalue ParmVar 0x93f8940 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x93f8ff0 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x93f8fe0 <col:9, col:17>
    (UnaryOperator 0x93f8fc8 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x93f8fb0 <col:17> 'const _Tp' lvalue ParmVar 0x93f8e90 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f9588 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x93f9578 <col:9, col:22>
    (BinaryOperator 0x93f9560 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x93f9530 <col:16> 'const _Tp' lvalue ParmVar 0x93f93e0 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f9548 <col:22> 'const _Tp' lvalue ParmVar 0x93f9430 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93f9b18 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x93f9b08 <col:9, col:22>
    (BinaryOperator 0x93f9af0 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x93f9ac0 <col:16> 'const _Tp' lvalue ParmVar 0x93f9970 '__x' 'const _Tp &')
      (DeclRefExpr 0x93f9ad8 <col:22> 'const _Tp' lvalue ParmVar 0x93f99c0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x93fa0a8 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x93fa098 <col:9, col:22>
    (BinaryOperator 0x93fa080 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x93fa050 <col:16> 'const _Tp' lvalue ParmVar 0x93f9f00 '__x' 'const _Tp &')
      (DeclRefExpr 0x93fa068 <col:22> 'const _Tp' lvalue ParmVar 0x93f9f50 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x93fa864 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x93fa5e0 '__x' 'const _Predicate &')
) (CompoundStmt 0x93fa8c0 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x93fa998 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x93fa988 <col:9, col:28>
    (UnaryOperator 0x93fa970 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x93fa950 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x93fa914 <col:17> 'const _Predicate' lvalue ->_M_pred 0x93fa540
          (CXXThisExpr 0x93fa8e8 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x93fa934 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x93fa760 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x93facf8 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x93face8 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x93facc8 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x93facb0 <col:39> 'const _Predicate' lvalue ParmVar 0x93faac0 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x93fb628 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x93fb2f0 '__x' 'const _Predicate &')
) (CompoundStmt 0x93ff660 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x93ff758 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x93ff748 <col:9, col:33>
    (UnaryOperator 0x93ff730 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x93ff708 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x93ff6b4 <col:17> 'const _Predicate' lvalue ->_M_pred 0x93fb250
          (CXXThisExpr 0x93ff688 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x93ff6d4 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x93fb470 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x93ff6ec <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x93fb520 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0x93ffab8 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0x93ffaa8 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0x93ffa88 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0x93ffa70 <col:40> 'const _Predicate' lvalue ParmVar 0x93ff880 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0x94003a8 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0x94003b8 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0x9400180 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0x9400410 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0x94004d0 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0x94004c0 <col:9, col:26>
    (CallExpr 0x94004a0 <col:16, col:26> '<dependent type>'
      (MemberExpr 0x9400464 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0x9400010
        (CXXThisExpr 0x9400438 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0x9400484 <col:23> '_Arg' lvalue ParmVar 0x94002a0 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0x94009e0 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0x94009d0 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x94009b0 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0x9400998 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0x9400740 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0x9401448 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0x9401458 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x94011e0 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0x94014b0 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0x9401590 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0x9401580 <col:9, col:31>
    (CallExpr 0x9401558 <col:16, col:31> '<dependent type>'
      (MemberExpr 0x9401504 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0x9401030
        (CXXThisExpr 0x94014d8 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0x9401524 <col:23> '_Arg1' lvalue ParmVar 0x9401300 '__x' '_Arg1')
      (DeclRefExpr 0x940153c <col:28> '_Arg2' lvalue ParmVar 0x9401340 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0x9401be8 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0x9401bd8 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0x9401bb8 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0x9401ba0 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x94018e0 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0x9402218 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0x9402208 <col:9, col:16>
    (DeclRefExpr 0x94021f0 <col:16> '_Tp' lvalue ParmVar 0x9401f90 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0x9402258 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0x9402248 <col:9, col:16>
    (DeclRefExpr 0x940222c <col:16> 'const _Tp' lvalue ParmVar 0x94020d0 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0x9402a80 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0x9402a70 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9402a38 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9402a20 <col:16> '_Pair' lvalue ParmVar 0x9402700 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0x9402af8 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0x9402ae8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9402ab0 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9402a94 <col:16> 'const _Pair' lvalue ParmVar 0x94028b0 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0x9403320 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0x9403310 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x94032d8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x94032c0 <col:16> '_Pair' lvalue ParmVar 0x9402fa0 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0x9403398 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0x9403388 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9403350 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9403334 <col:16> 'const _Pair' lvalue ParmVar 0x9403150 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9405b50 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9405860 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9405bb0 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0x9405ca8 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0x9405c98 <col:9, col:29>
    (CallExpr 0x9405c78 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9405c60 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9405c48 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9405bc0 <col:17> '_Tp *' lvalue ParmVar 0x9405990 '__p' '_Tp *')
          (MemberExpr 0x9405c24 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9405b20
            (CXXThisExpr 0x9405bf8 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9406520 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9406230 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9406580 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0x9406678 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0x9406668 <col:9, col:29>
    (CallExpr 0x9406648 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9406630 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9406618 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9406590 <col:17> 'const _Tp *' lvalue ParmVar 0x9406360 '__p' 'const _Tp *')
          (MemberExpr 0x94065f4 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x94064f0
            (CXXThisExpr 0x94065c8 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9406eb0 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9406bc0 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9406f10 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0x9407008 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0x9406ff8 <col:9, col:28>
    (CallExpr 0x9406fd8 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9406fc0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9406fa8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9406f20 <col:17> '_Tp' lvalue ParmVar 0x9406cf0 '__r' '_Tp &')
          (MemberExpr 0x9406f84 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9406e80
            (CXXThisExpr 0x9406f58 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x94077f0 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9407500 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9407850 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0x9407948 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0x9407938 <col:9, col:28>
    (CallExpr 0x9407918 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9407900 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x94078e8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9407860 <col:17> 'const _Tp' lvalue ParmVar 0x9407630 '__r' 'const _Tp &')
          (MemberExpr 0x94078c4 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x94077c0
            (CXXThisExpr 0x9407898 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9408370 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9408000 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x94083d0 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0x94084e0 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0x94084d0 <col:9, col:32>
    (CallExpr 0x94084b0 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9408480 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9408468 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x94083e0 <col:17> '_Tp *' lvalue ParmVar 0x9408130 '__p' '_Tp *')
          (MemberExpr 0x9408444 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9408340
            (CXXThisExpr 0x9408418 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9408494 <col:29> '_Arg' lvalue ParmVar 0x9408170 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9408f10 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9408ba0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9408f70 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0x9409080 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0x9409070 <col:9, col:32>
    (CallExpr 0x9409050 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9409020 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9409008 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9408f80 <col:17> 'const _Tp *' lvalue ParmVar 0x9408cd0 '__p' 'const _Tp *')
          (MemberExpr 0x9408fe4 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9408ee0
            (CXXThisExpr 0x9408fb8 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9409034 <col:29> '_Arg' lvalue ParmVar 0x9408d10 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x940bd60 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x940b9f0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x940bdc0 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0x940bed0 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0x940bec0 <col:9, col:31>
    (CallExpr 0x940bea0 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x940be70 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x940be58 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x940bdd0 <col:17> '_Tp' lvalue ParmVar 0x940bb20 '__r' '_Tp &')
          (MemberExpr 0x940be34 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x940bd30
            (CXXThisExpr 0x940be08 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x940be84 <col:28> '_Arg' lvalue ParmVar 0x940bb60 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x940c840 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x940c4d0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x940c8a0 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0x940c9b0 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0x940c9a0 <col:9, col:31>
    (CallExpr 0x940c980 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x940c950 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x940c938 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x940c8b0 <col:17> 'const _Tp' lvalue ParmVar 0x940c600 '__r' 'const _Tp &')
          (MemberExpr 0x940c914 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x940c810
            (CXXThisExpr 0x940c8e8 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x940c964 <col:28> '_Arg' lvalue ParmVar 0x940c640 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0x940ceb0 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0x940cea0 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0x940ce80 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x940ce68 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x940cc10 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0x940d3b0 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0x940d3a0 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0x940d380 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x940d368 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x940d110 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0x940d8b0 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0x940d8a0 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0x940d880 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x940d868 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x940d610 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0x940ddb0 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0x940dda0 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0x940dd80 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x940dd68 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x940db10 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x940e3f8 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0x940e3e8 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x940e3c8 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x940e3b0 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x940e0f0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x940ea38 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0x940ea28 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x940ea08 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x940e9f0 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x940e730 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x940f078 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0x940f068 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0x940f048 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x940f030 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x940ed70 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x940f6b8 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0x940f6a8 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x940f688 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x940f670 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x940f3b0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0x9414774 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0x9414270 '__x' 'const _Operation &')
), value((DeclRefExpr 0x94147c8 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9414300 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0x9414820 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9414918 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0x9414908 <col:9, col:29>
    (CallExpr 0x94148e0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9414874 <col:16> 'const _Operation' lvalue ->op 0x9414140
        (CXXThisExpr 0x9414848 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x94148a8 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x94141d0
        (CXXThisExpr 0x9414898 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x94148c8 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x94144a0 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0x94149e0 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0x94149d0 <col:9, col:29>
    (CallExpr 0x94149a8 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9414940 <col:16> 'const _Operation' lvalue ->op 0x9414140
        (CXXThisExpr 0x9414930 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9414970 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x94141d0
        (CXXThisExpr 0x9414960 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9414990 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0x9414660 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9414f30 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0x9414dd0 <line:129:7, col:66>
    0x9414da0 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0x9414f20 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0x9414f00 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0x9414e90 <col:36> 'const _Operation' lvalue ParmVar 0x9414b70 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9414ee0 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0x9414ec8 <col:53> 'const _Tp' lvalue ParmVar 0x9414be0 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0x9415a44 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0x9415540 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9415a98 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x94155d0 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0x9415af0 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9415be8 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0x9415bd8 <col:9, col:29>
    (CallExpr 0x9415bb0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9415b44 <col:16> 'const _Operation' lvalue ->op 0x9415410
        (CXXThisExpr 0x9415b18 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9415b64 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9415770 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0x9415b90 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x94154a0
        (CXXThisExpr 0x9415b80 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9415cb0 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0x9415ca0 <col:9, col:29>
    (CallExpr 0x9415c78 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9415c10 <col:16> 'const _Operation' lvalue ->op 0x9415410
        (CXXThisExpr 0x9415c00 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9415c30 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0x9415930 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0x9415c58 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x94154a0
        (CXXThisExpr 0x9415c48 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9416200 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0x94160a0 <line:164:7, col:67>
    0x9416070 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0x94161f0 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0x94161d0 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0x9416160 <col:36> 'const _Operation' lvalue ParmVar 0x9415e40 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x94161b0 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0x9416198 <col:53> 'const _Tp' lvalue ParmVar 0x9415eb0 '__x' 'const _Tp &')))))

;
}
namespace std {
    namespace tr1 {
        struct __sfinae_types {
            struct __sfinae_types;
            typedef char __one;
            struct {
                char __arr[2];
            };
            typedef struct __two __two;
        };
        template <typename _Tp = bool, _Tp __v = false> struct integral_constant {
            struct integral_constant;
            static const bool value = (SubstNonTypeTemplateParmExpr 0x9417748 </usr/include/c++/4.6/tr1/type_traits:76:53> '_Bool'
  (CXXBoolLiteralExpr 0x9417738 <col:53> '_Bool' false))
;
            typedef bool value_type;
            typedef integral_constant<bool, false> type;
        }
template <typename _Tp = bool, _Tp __v = true> struct integral_constant {
            struct integral_constant;
            static const bool value = (SubstNonTypeTemplateParmExpr 0x941bca0 </usr/include/c++/4.6/tr1/type_traits:76:53> '_Bool'
  (CXXBoolLiteralExpr 0x9417c98 <col:53> '_Bool' true))
;
            typedef bool value_type;
            typedef integral_constant<bool, true> type;
        }
template <typename _Tp = unsigned int, _Tp __v = 0> struct integral_constant {
            struct integral_constant;
            static const unsigned int value = (SubstNonTypeTemplateParmExpr 0x94360e0 </usr/include/c++/4.6/tr1/type_traits:76:53> 'unsigned int'
  (IntegerLiteral 0x94360c8 <col:53> 'unsigned int' 0))
;
            typedef unsigned int value_type;
            typedef integral_constant<unsigned int, 0U> type;
        }
template <typename _Tp, _Tp __v> struct integral_constant {
            struct integral_constant;
            static const _Tp value = (DeclRefExpr 0x94169a4 </usr/include/c++/4.6/tr1/type_traits:76:53> '_Tp' NonTypeTemplateParm 0x94166b0 '__v' '_Tp')
;
            typedef _Tp value_type;
            typedef integral_constant<_Tp, __v> type;
        };
        typedef integral_constant<bool, true> true_type;
        typedef integral_constant<bool, false> false_type;
        static const _Tp value;
        template <typename > struct remove_cv;
        template <typename  = void> struct __is_void_helper : public integral_constant<bool, true> {
            struct __is_void_helper;
        }
template <typename > struct __is_void_helper : public false_type {
            struct __is_void_helper;
        };
        struct __is_void_helper : public integral_constant<bool, true> {
            struct __is_void_helper;
        };
        template <typename _Tp> struct is_void : public integral_constant<bool, (__is_void_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_void;
        };
        template <typename  = short> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = bool> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = unsigned short> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = char> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = int> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = long> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = long long> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = wchar_t> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = unsigned int> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = signed char> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = unsigned char> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = unsigned long long> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename  = unsigned long> struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        }
template <typename > struct __is_integral_helper : public false_type {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        struct __is_integral_helper : public integral_constant<bool, true> {
            struct __is_integral_helper;
        };
        template <typename _Tp> struct is_integral : public integral_constant<bool, (__is_integral_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_integral;
        };
        template <typename  = float> struct __is_floating_point_helper : public integral_constant<bool, true> {
            struct __is_floating_point_helper;
        }
template <typename  = double> struct __is_floating_point_helper : public integral_constant<bool, true> {
            struct __is_floating_point_helper;
        }
template <typename  = long double> struct __is_floating_point_helper : public integral_constant<bool, true> {
            struct __is_floating_point_helper;
        }
template <typename > struct __is_floating_point_helper : public false_type {
            struct __is_floating_point_helper;
        };
        struct __is_floating_point_helper : public integral_constant<bool, true> {
            struct __is_floating_point_helper;
        };
        struct __is_floating_point_helper : public integral_constant<bool, true> {
            struct __is_floating_point_helper;
        };
        struct __is_floating_point_helper : public integral_constant<bool, true> {
            struct __is_floating_point_helper;
        };
        template <typename _Tp> struct is_floating_point : public integral_constant<bool, (__is_floating_point_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_floating_point;
        };
        template <typename > struct is_array : public false_type {
            struct is_array;
        };
        struct is_array : public true_type {
            struct is_array;
        };
        struct is_array : public true_type {
            struct is_array;
        };
        template <typename > struct __is_pointer_helper : public false_type {
            struct __is_pointer_helper;
        };
        struct __is_pointer_helper : public integral_constant<bool, true> {
            struct __is_pointer_helper;
        };
        template <typename _Tp> struct is_pointer : public integral_constant<bool, (__is_pointer_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_pointer;
        };
        template <typename _Tp> struct is_reference;
        template <typename _Tp> struct is_function;
        template <typename > struct __is_member_object_pointer_helper : public false_type {
            struct __is_member_object_pointer_helper;
        };
        struct __is_member_object_pointer_helper : public integral_constant<bool, !is_function<_Tp>::value> {
            struct __is_member_object_pointer_helper;
        };
        template <typename _Tp> struct is_member_object_pointer : public integral_constant<bool, (__is_member_object_pointer_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_member_object_pointer;
        };
        template <typename > struct __is_member_function_pointer_helper : public false_type {
            struct __is_member_function_pointer_helper;
        };
        struct __is_member_function_pointer_helper : public integral_constant<bool, is_function<_Tp>::value> {
            struct __is_member_function_pointer_helper;
        };
        template <typename _Tp> struct is_member_function_pointer : public integral_constant<bool, (__is_member_function_pointer_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_member_function_pointer;
        };
        template <typename _Tp> struct is_enum : public integral_constant<bool, __is_enum(_Tp)> {
            struct is_enum;
        };
        template <typename _Tp> struct is_union : public integral_constant<bool, __is_union(_Tp)> {
            struct is_union;
        };
        template <typename _Tp> struct is_class : public integral_constant<bool, __is_class(_Tp)> {
            struct is_class;
        };
        template <typename > struct is_function : public false_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        struct is_function : public true_type {
            struct is_function;
        };
        template <typename _Tp> struct is_arithmetic : public integral_constant<bool, (is_integral<_Tp>::value || is_floating_point<_Tp>::value)> {
            struct is_arithmetic;
        };
        template <typename _Tp> struct is_fundamental : public integral_constant<bool, (is_arithmetic<_Tp>::value || is_void<_Tp>::value)> {
            struct is_fundamental;
        };
        template <typename _Tp> struct is_object : public integral_constant<bool, !(is_function<_Tp>::value || is_reference<_Tp>::value || is_void<_Tp>::value)> {
            struct is_object;
        };
        template <typename _Tp> struct is_member_pointer;
        template <typename _Tp> struct is_scalar : public integral_constant<bool, (is_arithmetic<_Tp>::value || is_enum<_Tp>::value || is_pointer<_Tp>::value || is_member_pointer<_Tp>::value)> {
            struct is_scalar;
        };
        template <typename _Tp> struct is_compound : public integral_constant<bool, !is_fundamental<_Tp>::value> {
            struct is_compound;
        };
        template <typename _Tp> struct __is_member_pointer_helper : public false_type {
            struct __is_member_pointer_helper;
        };
        struct __is_member_pointer_helper : public integral_constant<bool, true> {
            struct __is_member_pointer_helper;
        };
        template <typename _Tp> struct is_member_pointer : public integral_constant<bool, (__is_member_pointer_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_member_pointer;
        };
        template <typename > struct is_const : public false_type {
            struct is_const;
        };
        struct is_const : public true_type {
            struct is_const;
        };
        template <typename > struct is_volatile : public false_type {
            struct is_volatile;
        };
        struct is_volatile : public true_type {
            struct is_volatile;
        };
        template <typename _Tp> struct is_empty : public integral_constant<bool, __is_empty(_Tp)> {
            struct is_empty;
        };
        template <typename _Tp> struct is_polymorphic : public integral_constant<bool, __is_polymorphic(_Tp)> {
            struct is_polymorphic;
        };
        template <typename _Tp> struct is_abstract : public integral_constant<bool, __is_abstract(_Tp)> {
            struct is_abstract;
        };
        template <typename _Tp> struct has_virtual_destructor : public integral_constant<bool, __has_virtual_destructor(_Tp)> {
            struct has_virtual_destructor;
        };
        template <typename _Tp> struct alignment_of : public integral_constant<std::size_t, __alignof(_Tp)> {
            struct alignment_of;
        };
        template <typename > struct rank : public integral_constant<std::size_t, 0> {
            struct rank;
        };
        struct rank : public integral_constant<std::size_t, 1 + rank<_Tp>::value> {
            struct rank;
        };
        struct rank : public integral_constant<std::size_t, 1 + rank<_Tp>::value> {
            struct rank;
        };
        template <typename , unsigned int _Uint = (ImplicitCastExpr 0x943a9d0 </usr/include/c++/4.6/tr1/type_traits:370:39> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x943a968 <col:39> 'int' 0))
> struct extent : public integral_constant<std::size_t, 0> {
            struct extent;
        };
        struct extent : public integral_constant<std::size_t, _Uint == 0 ? _Size : extent<_Tp, _Uint - 1>::value> {
            struct extent;
        };
        struct extent : public integral_constant<std::size_t, _Uint == 0 ? 0 : extent<_Tp, _Uint - 1>::value> {
            struct extent;
        };
        template <typename , typename > struct is_same : public false_type {
            struct is_same;
        };
        struct is_same : public true_type {
            struct is_same;
        };
        template <typename _Tp> struct remove_const {
            struct remove_const;
            typedef _Tp type;
        };
        struct remove_const {
            struct remove_const;
            typedef _Tp type;
        };
        template <typename _Tp> struct remove_volatile {
            struct remove_volatile;
            typedef _Tp type;
        };
        struct remove_volatile {
            struct remove_volatile;
            typedef _Tp type;
        };
        template <typename _Tp> struct remove_cv {
            struct remove_cv;
            typedef typename remove_const<typename remove_volatile<_Tp>::type>::type type;
        };
        template <typename _Tp> struct add_const {
            struct add_const;
            typedef const _Tp type;
        };
        template <typename _Tp> struct add_volatile {
            struct add_volatile;
            typedef volatile _Tp type;
        };
        template <typename _Tp> struct add_cv {
            struct add_cv;
            typedef typename add_const<typename add_volatile<_Tp>::type>::type type;
        };
        template <typename _Tp> struct remove_extent {
            struct remove_extent;
            typedef _Tp type;
        };
        struct remove_extent {
            struct remove_extent;
            typedef _Tp type;
        };
        struct remove_extent {
            struct remove_extent;
            typedef _Tp type;
        };
        template <typename _Tp> struct remove_all_extents {
            struct remove_all_extents;
            typedef _Tp type;
        };
        struct remove_all_extents {
            struct remove_all_extents;
            typedef typename remove_all_extents<_Tp>::type type;
        };
        struct remove_all_extents {
            struct remove_all_extents;
            typedef typename remove_all_extents<_Tp>::type type;
        };
        template <typename _Tp, typename > struct __remove_pointer_helper {
            struct __remove_pointer_helper;
            typedef _Tp type;
        };
        struct __remove_pointer_helper {
            struct __remove_pointer_helper;
            typedef _Up type;
        };
        template <typename _Tp> struct remove_pointer : public __remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type> {
            struct remove_pointer;
        };
        template <typename > struct remove_reference;
        template <typename _Tp> struct add_pointer {
            struct add_pointer;
            typedef typename remove_reference<_Tp>::type *type;
        };
        template <typename > struct is_reference : public false_type {
            struct is_reference;
        };
        struct is_reference : public true_type {
            struct is_reference;
        };
        template <typename _Tp> struct is_pod : public integral_constant<bool, __is_pod(_Tp) || is_void<_Tp>::value> {
            struct is_pod;
        };
        template <typename _Tp> struct has_trivial_constructor : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_trivial_constructor;
        };
        template <typename _Tp> struct has_trivial_copy : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_trivial_copy;
        };
        template <typename _Tp> struct has_trivial_assign : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_trivial_assign;
        };
        template <typename _Tp> struct has_trivial_destructor : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_trivial_destructor;
        };
        template <typename _Tp> struct has_nothrow_constructor : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_nothrow_constructor;
        };
        template <typename _Tp> struct has_nothrow_copy : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_nothrow_copy;
        };
        template <typename _Tp> struct has_nothrow_assign : public integral_constant<bool, is_pod<_Tp>::value> {
            struct has_nothrow_assign;
        };
        template <typename  = short> struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        }
template <typename  = int> struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        }
template <typename  = long> struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        }
template <typename  = long long> struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        }
template <typename  = signed char> struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        }
template <typename > struct __is_signed_helper : public false_type {
            struct __is_signed_helper;
        };
        struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        };
        struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        };
        struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        };
        struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        };
        struct __is_signed_helper : public integral_constant<bool, true> {
            struct __is_signed_helper;
        };
        template <typename _Tp> struct is_signed : public integral_constant<bool, (__is_signed_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_signed;
        };
        template <typename  = unsigned short> struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        }
template <typename  = unsigned int> struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        }
template <typename  = unsigned char> struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        }
template <typename  = unsigned long long> struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        }
template <typename  = unsigned long> struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        }
template <typename > struct __is_unsigned_helper : public false_type {
            struct __is_unsigned_helper;
        };
        struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        };
        struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        };
        struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        };
        struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        };
        struct __is_unsigned_helper : public integral_constant<bool, true> {
            struct __is_unsigned_helper;
        };
        template <typename _Tp> struct is_unsigned : public integral_constant<bool, (__is_unsigned_helper<typename remove_cv<_Tp>::type>::value)> {
            struct is_unsigned;
        };
        template <typename _Base, typename _Derived> struct __is_base_of_helper {
            struct __is_base_of_helper;
            typedef typename remove_cv<_Base>::type _NoCv_Base;
            typedef typename remove_cv<_Derived>::type _NoCv_Derived;
            static const bool __value = (ParenExpr 0x9452730 </usr/include/c++/4.6/tr1/type_traits:580:35, line:583:46> '<dependent type>'
  (BinaryOperator 0x9452718 <line:580:36, line:583:45> '<dependent type>' '||'
    (DependentScopeDeclRefExpr 0x94524d8 <line:580:36, col:62> '<dependent type>' lvalue)
    (ParenExpr 0x9452700 <line:581:11, line:583:45> '<dependent type>'
      (BinaryOperator 0x94526e8 <line:581:12, line:583:40> '<dependent type>' '&&'
        (BinaryTypeTraitExpr 0x9452510 <line:581:12, col:40> '_Bool')
        (UnaryOperator 0x94526d0 <line:582:15, line:583:40> '<dependent type>' prefix '!'
          (DependentScopeDeclRefExpr 0x94526a8 <line:582:16, line:583:40> '<dependent type>' lvalue))))))
;
        };
        template <typename _Base, typename _Derived> struct is_base_of : public integral_constant<bool, __is_base_of_helper<_Base, _Derived>::__value> {
            struct is_base_of;
        };
        template <typename _From, typename _To> struct __is_convertible_simple : public std::tr1::__sfinae_types {
            struct __is_convertible_simple;
        private:
        private:
            static __one __test(_To);
            static __two __test(...);
            static _From __makeFrom();
        public:
        public:
            static const bool __value = (BinaryOperator 0x9453450 </usr/include/c++/4.6/tr1/type_traits:602:35, col:67> '_Bool' '=='
  (UnaryExprOrTypeTraitExpr 0x9453410 <col:35, col:62> 'unsigned int' sizeof 
    (ParenExpr 0x94533f8 <col:41, col:62> '<dependent type>'
      (CallExpr 0x94533d8 <col:42, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x9453368 <col:42> '<dependent type>' lvalue (no ADL) = '1' 0x94531f0 0x9453120)
        (CallExpr 0x94533b8 <col:49, col:60> '<dependent type>'
          (DeclRefExpr 0x94533a0 <col:49> '_From (void)' lvalue CXXMethod 0x9453280 '__makeFrom' '_From (void)')))))
  (ImplicitCastExpr 0x9453440 <col:67> 'unsigned int' <IntegralCast>
    (IntegerLiteral 0x9453428 <col:67> 'int' 1)))
;
        };
        template <typename _Tp> struct add_reference;
        template <typename _Tp> struct __is_int_or_cref {
            struct __is_int_or_cref;
            typedef typename remove_reference<_Tp>::type __rr_Tp;
            static const bool __value = (ParenExpr 0x9453e58 </usr/include/c++/4.6/tr1/type_traits:612:35, line:615:44> '<dependent type>'
  (BinaryOperator 0x9453e40 <line:612:36, line:615:43> '<dependent type>' '||'
    (DependentScopeDeclRefExpr 0x9453a80 <line:612:36, col:54> '<dependent type>' lvalue)
    (ParenExpr 0x9453e28 <line:613:11, line:615:43> '<dependent type>'
      (BinaryOperator 0x9453e10 <line:613:12, line:615:38> '<dependent type>' '&&'
        (BinaryOperator 0x9453cd8 <line:613:12, line:614:34> '<dependent type>' '&&'
          (DependentScopeDeclRefExpr 0x9453bb0 <line:613:12, col:34> '<dependent type>' lvalue)
          (DependentScopeDeclRefExpr 0x9453cb0 <line:614:15, col:34> '<dependent type>' lvalue))
        (UnaryOperator 0x9453df8 <line:615:15, col:38> '<dependent type>' prefix '!'
          (DependentScopeDeclRefExpr 0x9453dd0 <col:16, col:38> '<dependent type>' lvalue))))))
;
        };
        template <typename _From, typename _To, bool = (ParenExpr 0x9454690 </usr/include/c++/4.6/tr1/type_traits:619:12, line:624:44> '<dependent type>'
  (BinaryOperator 0x9454678 <line:619:13, line:624:43> '<dependent type>' '||'
    (BinaryOperator 0x9454338 <line:619:13, line:620:51> '<dependent type>' '||'
      (BinaryOperator 0x9454218 <line:619:13, line:620:27> '<dependent type>' '||'
        (BinaryOperator 0x94540f8 <line:619:13, col:52> '<dependent type>' '||'
          (DependentScopeDeclRefExpr 0x9453fd0 <col:13, col:29> '<dependent type>' lvalue)
          (DependentScopeDeclRefExpr 0x94540d0 <col:38, col:52> '<dependent type>' lvalue))
        (DependentScopeDeclRefExpr 0x94541f0 <line:620:9, col:27> '<dependent type>' lvalue))
      (DependentScopeDeclRefExpr 0x9454310 <col:36, col:51> '<dependent type>' lvalue))
    (ParenExpr 0x9454660 <line:622:9, line:624:43> '<dependent type>'
      (BinaryOperator 0x9454648 <line:622:10, line:624:36> '<dependent type>' '&&'
        (DependentScopeDeclRefExpr 0x9454520 <line:622:10, line:623:42> '<dependent type>' lvalue)
        (DependentScopeDeclRefExpr 0x9454620 <line:624:13, col:36> '<dependent type>' lvalue)))))
> struct __is_convertible_helper {
            struct __is_convertible_helper;
            static const bool __value = (ParenExpr 0x9454c50 </usr/include/c++/4.6/tr1/type_traits:628:35, line:629:49> '<dependent type>' lvalue
  (DependentScopeDeclRefExpr 0x9454c28 <line:628:36, line:629:42> '<dependent type>' lvalue))
;
        };
        struct __is_convertible_helper {
            struct __is_convertible_helper;
            static const bool __value = (ParenExpr 0x9455428 </usr/include/c++/4.6/tr1/type_traits:634:35, line:636:38> '<dependent type>'
  (BinaryOperator 0x9455410 <line:634:36, line:636:37> '<dependent type>' '||'
    (DependentScopeDeclRefExpr 0x94551f0 <line:634:36, col:50> '<dependent type>' lvalue)
    (ParenExpr 0x94553f8 <line:635:11, line:636:37> '<dependent type>'
      (BinaryOperator 0x94553e0 <line:635:12, line:636:32> '<dependent type>' '&&'
        (DependentScopeDeclRefExpr 0x94552d0 <line:635:12, col:35> '<dependent type>' lvalue)
        (UnaryOperator 0x94553c8 <line:636:15, col:32> '<dependent type>' prefix '!'
          (DependentScopeDeclRefExpr 0x94553a0 <col:16, col:32> '<dependent type>' lvalue))))))
;
        };
        template <typename _From, typename _To> struct is_convertible : public integral_constant<bool, __is_convertible_helper<_From, _To>::__value> {
            struct is_convertible;
        };
        template <typename _Tp> struct remove_reference {
            struct remove_reference;
            typedef _Tp type;
        };
        struct remove_reference {
            struct remove_reference;
            typedef _Tp type;
        };
        template <typename _Tp, bool = (ParenExpr 0x9458720 </usr/include/c++/4.6/tr1/type_traits:654:33, line:655:33> '<dependent type>'
  (BinaryOperator 0x9458708 <line:654:34, line:655:28> '<dependent type>' '||'
    (DependentScopeDeclRefExpr 0x9458610 <line:654:34, col:48> '<dependent type>' lvalue)
    (DependentScopeDeclRefExpr 0x94586e0 <line:655:9, col:28> '<dependent type>' lvalue)))
> struct __add_reference_helper {
            struct __add_reference_helper;
            typedef _Tp &type;
        };
        struct __add_reference_helper {
            struct __add_reference_helper;
            typedef _Tp type;
        };
        template <typename _Tp> struct add_reference : public __add_reference_helper<_Tp> {
            struct add_reference;
        };
        template <std::size_t _Len, std::size_t _Align> struct aligned_storage {
            struct aligned_storage;
            union type {
                union type;
                unsigned char __data[_Len];
                struct {
                };
                struct <anonymous struct at /usr/include/c++/4.6/tr1/type_traits:675:2> __align;
            };
        };
    }
}
namespace std {
    namespace tr1 {
        class bad_weak_ptr : public std::exception {
            class bad_weak_ptr;
        public:
        public:
            virtual const char *what() const throw() (CompoundStmt 0x9459f50 </usr/include/c++/4.6/tr1/shared_ptr.h:67:5, col:35>
  (ReturnStmt 0x9459f40 <col:7, col:14>
    (ImplicitCastExpr 0x9459f30 <col:14> 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0x9459f00 <col:14> 'const char [18]' lvalue "tr1::bad_weak_ptr"))))


            inline std::tr1::bad_weak_ptr &operator=(const std::tr1::bad_weak_ptr &) throw();
            inline void ~bad_weak_ptr() throw();
        };
        inline void __throw_bad_weak_ptr() (CompoundStmt 0x945a028 </usr/include/c++/4.6/tr1/shared_ptr.h:73:3, line:79:3>
  (CallExpr 0x945a008 <line:77:5, col:21> 'void'
    (ImplicitCastExpr 0x9459ff8 <col:5> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
      (DeclRefExpr 0x9459fdc <col:5> 'void (void) __attribute__((noreturn))' lvalue Function 0x93e0e90 '__builtin_abort' 'void (void) __attribute__((noreturn))'))))


        using __gnu_cxx::_Lock_policy;
        ;
        using __gnu_cxx::__default_lock_policy;
        ;
        using __gnu_cxx::_S_single;
        ;
        using __gnu_cxx::_S_mutex;
        ;
        using __gnu_cxx::_S_atomic;
        ;
        template <__gnu_cxx::_Lock_policy _Lp = 2> class _Mutex_base {
            class _Mutex_base;
        protected:
        protected:
            enum  {
                _S_need_barriers = (ImplicitCastExpr 0x9462778 </usr/include/c++/4.6/tr1/shared_ptr.h:93:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x945a580 <col:33> 'int' 0))

            };
        }
template <__gnu_cxx::_Lock_policy _Lp = 1> class _Mutex_base : public __gnu_cxx::__mutex {
            class _Mutex_base;
        protected:
        protected:
            enum  {
                _S_need_barriers = (ImplicitCastExpr 0x945a968 </usr/include/c++/4.6/tr1/shared_ptr.h:104:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x945a910 <col:33> 'int' 1))

            };
        }
template <__gnu_cxx::_Lock_policy _Lp = 0> class _Mutex_base {
            class _Mutex_base;
        protected:
        protected:
            enum  {
                _S_need_barriers = (ImplicitCastExpr 0x945fda8 </usr/include/c++/4.6/tr1/shared_ptr.h:93:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x945a580 <col:33> 'int' 0))

            };
        }
template <__gnu_cxx::_Lock_policy _Lp> class _Mutex_base {
            class _Mutex_base;
        protected:
        protected:
            enum  {
                _S_need_barriers = (IntegerLiteral 0x945a580 </usr/include/c++/4.6/tr1/shared_ptr.h:93:33> 'int' 0)

            };
        };
        class _Mutex_base : public __gnu_cxx::__mutex {
            class _Mutex_base;
        protected:
        protected:
            enum  {
                _S_need_barriers = (ImplicitCastExpr 0x945a968 </usr/include/c++/4.6/tr1/shared_ptr.h:104:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x945a910 <col:33> 'int' 1))

            };
        };
        template <__gnu_cxx::_Lock_policy _Lp = 2> class _Sp_counted_base : public _Mutex_base<(__gnu_cxx::_Lock_policy)2U> {
            class _Sp_counted_base;
        public:
        public:
            _Sp_counted_base();
            virtual void ~_Sp_counted_base();
            virtual void _M_dispose() = 0;
            virtual void _M_destroy();
            virtual void *_M_get_deleter(const std::type_info &) = 0;
            void _M_add_ref_copy();
            void _M_add_ref_lock();
            void _M_release();
            void _M_weak_add_ref();
            void _M_weak_release();
            long _M_get_use_count() const;
        private:
        private:
            _Sp_counted_base(const std::tr1::_Sp_counted_base<2> &);
            std::tr1::_Sp_counted_base<2> &operator=(const std::tr1::_Sp_counted_base<2> &);
            _Atomic_word _M_use_count;
            _Atomic_word _M_weak_count;
        }
template <__gnu_cxx::_Lock_policy _Lp = 1> class _Sp_counted_base : public _Mutex_base<(__gnu_cxx::_Lock_policy)1U> {
            class _Sp_counted_base;
        public:
        public:
            _Sp_counted_base();
            virtual void ~_Sp_counted_base();
            virtual void _M_dispose() = 0;
            virtual void _M_destroy();
            virtual void *_M_get_deleter(const std::type_info &) = 0;
            void _M_add_ref_copy();
            void _M_add_ref_lock();
            void _M_release();
            void _M_weak_add_ref();
            void _M_weak_release();
            long _M_get_use_count() const;
        private:
        private:
            _Sp_counted_base(const std::tr1::_Sp_counted_base<1> &);
            std::tr1::_Sp_counted_base<1> &operator=(const std::tr1::_Sp_counted_base<1> &);
            _Atomic_word _M_use_count;
            _Atomic_word _M_weak_count;
        }
template <__gnu_cxx::_Lock_policy _Lp = 0> class _Sp_counted_base : public _Mutex_base<(__gnu_cxx::_Lock_policy)0U> {
            class _Sp_counted_base;
        public:
        public:
            _Sp_counted_base();
            virtual void ~_Sp_counted_base();
            virtual void _M_dispose() = 0;
            virtual void _M_destroy();
            virtual void *_M_get_deleter(const std::type_info &) = 0;
            void _M_add_ref_copy();
            void _M_add_ref_lock();
            void _M_release();
            void _M_weak_add_ref();
            void _M_weak_release();
            long _M_get_use_count() const;
        private:
        private:
            _Sp_counted_base(const std::tr1::_Sp_counted_base<0> &);
            std::tr1::_Sp_counted_base<0> &operator=(const std::tr1::_Sp_counted_base<0> &);
            _Atomic_word _M_use_count;
            _Atomic_word _M_weak_count;
        }
template <__gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x945a990 </usr/include/c++/4.6/tr1/shared_ptr.h:107:31> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class _Sp_counted_base : public _Mutex_base<_Lp> {
            class _Sp_counted_base;
        public:
        public:
            _Sp_counted_base<_Lp>() : _M_use_count((IntegerLiteral 0x945b720 </usr/include/c++/4.6/tr1/shared_ptr.h:113:22> 'int' 1)
), _M_weak_count((IntegerLiteral 0x945b778 </usr/include/c++/4.6/tr1/shared_ptr.h:113:40> 'int' 1)
) (CompoundStmt 0x945b7d0 </usr/include/c++/4.6/tr1/shared_ptr.h:113:43, col:45>)


            virtual void ~_Sp_counted_base<_Lp>() (CompoundStmt 0x945b7e0 </usr/include/c++/4.6/tr1/shared_ptr.h:117:7, col:9>)


            virtual void _M_dispose() = 0;
            virtual void _M_destroy() (CompoundStmt 0x945b830 </usr/include/c++/4.6/tr1/shared_ptr.h:127:7, col:22>
  (CXXDeleteExpr 0x945b818 <col:9, col:16> 'void'
    (CXXThisExpr 0x945b808 <col:16> '_Sp_counted_base<_Lp> *' this)))


            virtual void *_M_get_deleter(const std::type_info &) = 0;
            void _M_add_ref_copy() (CompoundStmt 0x945b910 </usr/include/c++/4.6/tr1/shared_ptr.h:134:7, col:61>
  (CallExpr 0x945b8e8 <col:9, col:58> '<dependent type>'
    (DeclRefExpr 0x945b868 <col:9, col:20> 'void (_Atomic_word *, int)' lvalue Function 0x93df590 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
    (UnaryOperator 0x945b8b8 <col:42, col:43> '<dependent type>' prefix '&'
      (MemberExpr 0x945b898 <col:43> '_Atomic_word':'int' lvalue ->_M_use_count 0x945b6b0
        (CXXThisExpr 0x945b888 <col:43> '_Sp_counted_base<_Lp> *' this)))
    (IntegerLiteral 0x945b8d0 <col:57> 'int' 1)))


            void _M_add_ref_lock();
            void _M_release() (CompoundStmt 0x945f2b0 </usr/include/c++/4.6/tr1/shared_ptr.h:141:7, line:167:7>
  (NullStmt 0x945b928 <line:143:63>)
  (IfStmt 0x945f290 <line:144:2, line:166:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x945ed28 <line:144:6, col:67> '<dependent type>'
      (UnresolvedLookupExpr 0x945ecd8 <col:64, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x945b9f0 <col:6, col:62> '<dependent type>'
        (DeclRefExpr 0x945b958 <col:6, col:17> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
        (UnaryOperator 0x945b9a8 <col:45, col:46> '<dependent type>' prefix '&'
          (MemberExpr 0x945b988 <col:46> '_Atomic_word':'int' lvalue ->_M_use_count 0x945b6b0
            (CXXThisExpr 0x945b978 <col:46> '_Sp_counted_base<_Lp> *' this)))
        (UnaryOperator 0x945b9d8 <col:60, col:61> 'int' prefix '-'
          (IntegerLiteral 0x945b9c0 <col:61> 'int' 1)))
      (IntegerLiteral 0x945ecc0 <col:67> 'int' 1))
    (CompoundStmt 0x945f268 <line:145:4, line:166:4>
      (NullStmt 0x945ed50 <line:146:66>)
      (CallExpr 0x945ed90 <line:147:6, col:17> '<dependent type>'
        (MemberExpr 0x945ed70 <col:6> '<bound member function type>' ->_M_dispose 0x945aea0
          (CXXThisExpr 0x945ed60 <col:6> '_Sp_counted_base<_Lp> *' this)))
      (IfStmt 0x945f030 <line:152:6, line:156:8>
        <<<NULL>>>
        (CXXDependentScopeMemberExpr 0x945ee80 <line:152:10, col:28> '<dependent type>' lvalue)
        (CompoundStmt 0x945f018 <line:153:8, line:156:8>
          (AsmStmt 0x945ef68 </usr/include/c++/4.6/ext/atomicity.h:110:35, col:66>)
          (AsmStmt 0x945efe0 <line:113:36, col:67>))
        <<<NULL>>>)
      (NullStmt 0x945f050 </usr/include/c++/4.6/tr1/shared_ptr.h:159:68>)
      (IfStmt 0x945f248 <line:160:6, line:165:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x945f1a8 <line:160:10, line:161:21> '<dependent type>'
          (UnresolvedLookupExpr 0x945f158 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
          (CallExpr 0x945f118 <line:160:10, line:161:16> '<dependent type>'
            (DeclRefExpr 0x945f080 <line:160:10, col:21> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x945f0d0 <col:49, col:50> '<dependent type>' prefix '&'
              (MemberExpr 0x945f0b0 <col:50> '_Atomic_word':'int' lvalue ->_M_weak_count 0x945b6f0
                (CXXThisExpr 0x945f0a0 <col:50> '_Sp_counted_base<_Lp> *' this)))
            (UnaryOperator 0x945f100 <line:161:14, col:15> 'int' prefix '-'
              (IntegerLiteral 0x945f0e8 <col:15> 'int' 1)))
          (IntegerLiteral 0x945f140 <col:21> 'int' 1))
        (CompoundStmt 0x945f230 <line:162:15, line:165:15>
          (NullStmt 0x945f1d0 <line:163:71>)
          (CallExpr 0x945f210 <line:164:10, col:21> '<dependent type>'
            (MemberExpr 0x945f1f0 <col:10> '<bound member function type>' ->_M_destroy 0x945af30
              (CXXThisExpr 0x945f1e0 <col:10> '_Sp_counted_base<_Lp> *' this))))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_weak_add_ref() (CompoundStmt 0x945f398 </usr/include/c++/4.6/tr1/shared_ptr.h:171:7, col:62>
  (CallExpr 0x945f370 <col:9, col:59> '<dependent type>'
    (DeclRefExpr 0x945f2ec <col:9, col:20> 'void (_Atomic_word *, int)' lvalue Function 0x93df590 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
    (UnaryOperator 0x945f340 <col:42, col:43> '<dependent type>' prefix '&'
      (MemberExpr 0x945f320 <col:43> '_Atomic_word':'int' lvalue ->_M_weak_count 0x945b6f0
        (CXXThisExpr 0x945f310 <col:43> '_Sp_counted_base<_Lp> *' this)))
    (IntegerLiteral 0x945f358 <col:58> 'int' 1)))


            void _M_weak_release() (CompoundStmt 0x945f800 </usr/include/c++/4.6/tr1/shared_ptr.h:175:7, line:190:7>
  (NullStmt 0x945f3b0 <line:177:64>)
  (IfStmt 0x945f7e0 <line:178:2, line:189:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x945f508 <line:178:6, col:68> '<dependent type>'
      (UnresolvedLookupExpr 0x945f4b8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x945f478 <col:6, col:63> '<dependent type>'
        (DeclRefExpr 0x945f3e0 <col:6, col:17> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
        (UnaryOperator 0x945f430 <col:45, col:46> '<dependent type>' prefix '&'
          (MemberExpr 0x945f410 <col:46> '_Atomic_word':'int' lvalue ->_M_weak_count 0x945b6f0
            (CXXThisExpr 0x945f400 <col:46> '_Sp_counted_base<_Lp> *' this)))
        (UnaryOperator 0x945f460 <col:61, col:62> 'int' prefix '-'
          (IntegerLiteral 0x945f448 <col:62> 'int' 1)))
      (IntegerLiteral 0x945f4a0 <col:68> 'int' 1))
    (CompoundStmt 0x945f7c0 <line:179:4, line:189:4>
      (NullStmt 0x945f530 <line:180:67>)
      (IfStmt 0x945f750 <line:181:6, line:187:8>
        <<<NULL>>>
        (CXXDependentScopeMemberExpr 0x945f610 <line:181:10, col:28> '<dependent type>' lvalue)
        (CompoundStmt 0x945f738 <line:182:8, line:187:8>
          (AsmStmt 0x945f688 </usr/include/c++/4.6/ext/atomicity.h:110:35, col:66>)
          (AsmStmt 0x945f700 <line:113:36, col:67>))
        <<<NULL>>>)
      (CallExpr 0x945f7a0 </usr/include/c++/4.6/tr1/shared_ptr.h:188:6, col:17> '<dependent type>'
        (MemberExpr 0x945f780 <col:6> '<bound member function type>' ->_M_destroy 0x945af30
          (CXXThisExpr 0x945f770 <col:6> '_Sp_counted_base<_Lp> *' this))))
    <<<NULL>>>))


            long _M_get_use_count() const (CompoundStmt 0x945f900 </usr/include/c++/4.6/tr1/shared_ptr.h:194:7, line:198:7>
  (ReturnStmt 0x945f8f0 <line:197:9, col:69>
    (ImplicitCastExpr 0x945f8e0 <col:16, col:69> 'long' <IntegralCast>
      (ImplicitCastExpr 0x945f8d0 <col:16, col:69> '_Atomic_word':'int' <LValueToRValue>
        (CXXConstCastExpr 0x945f8b8 <col:16, col:69> 'const volatile _Atomic_word':'const volatile int' lvalue const_cast<const volatile _Atomic_word &> <NoOp>
          (MemberExpr 0x945f848 <col:57> 'const _Atomic_word':'const int' lvalue ->_M_use_count 0x945b6b0
            (CXXThisExpr 0x945f838 <col:57> 'const _Sp_counted_base<_Lp> *' this)))))))


        private:
        private:
            _Sp_counted_base<_Lp>(const _Sp_counted_base<_Lp> &);
            _Sp_counted_base<_Lp> &operator=(const _Sp_counted_base<_Lp> &);
            _Atomic_word _M_use_count;
            _Atomic_word _M_weak_count;
        };
        inline void _M_add_ref_lock() (CompoundStmt 0x9460e88 </usr/include/c++/4.6/tr1/shared_ptr.h:212:5, line:218:5>
  (IfStmt 0x9460e68 <line:213:7, line:217:2>
    <<<NULL>>>
    (BinaryOperator 0x9460d58 <line:213:11, col:71> '_Bool' '=='
      (CallExpr 0x9460d18 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9460d08 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9460c6c <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9460cd8 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9460cb8 <col:51> '_Atomic_word':'int' lvalue ->_M_use_count 0x9460b30
            (CXXThisExpr 0x9460ca8 <col:51> 'class std::tr1::_Sp_counted_base<0> *' this)))
        (IntegerLiteral 0x9460cf0 <col:65> 'int' 1))
      (IntegerLiteral 0x9460d40 <col:71> 'int' 0))
    (CompoundStmt 0x9460e50 <line:214:2, line:217:2>
      (BinaryOperator 0x9460db8 <line:215:4, col:19> '_Atomic_word':'int' lvalue '='
        (MemberExpr 0x9460d80 <col:4> '_Atomic_word':'int' lvalue ->_M_use_count 0x9460b30
          (CXXThisExpr 0x9460d70 <col:4> 'class std::tr1::_Sp_counted_base<0> *' this))
        (IntegerLiteral 0x9460da0 <col:19> 'int' 0))
      (CallExpr 0x9460e30 <line:216:4, col:25> 'void'
        (ImplicitCastExpr 0x9460e20 <col:4> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9460e04 <col:4> 'void (void)' lvalue Function 0x9459f80 '__throw_bad_weak_ptr' 'void (void)'))))
    <<<NULL>>>))


        inline void _M_add_ref_lock() (CompoundStmt 0x94622c8 </usr/include/c++/4.6/tr1/shared_ptr.h:224:5, line:231:5>
  (DeclStmt 0x9462090 <line:225:7, col:45>
    0x9461fd0 "__gnu_cxx::__scoped_lock sentry =
      (CXXConstructExpr 0x9462068 <col:32, col:44> '__gnu_cxx::__scoped_lock':'class __gnu_cxx::__scoped_lock''void (__mutex_type &)'
        (ImplicitCastExpr 0x9462050 <col:39, col:40> '__mutex_type':'class __gnu_cxx::__mutex' lvalue <DerivedToBase (_Mutex_base -> __mutex)>
          (UnaryOperator 0x9462038 <col:39, col:40> 'class std::tr1::_Sp_counted_base<1>' lvalue prefix '*'
            (CXXThisExpr 0x9462028 <col:40> 'class std::tr1::_Sp_counted_base<1> *' this))))")
  (IfStmt 0x94622a8 <line:226:7, line:230:2>
    <<<NULL>>>
    (BinaryOperator 0x9462198 <line:226:11, col:71> '_Bool' '=='
      (CallExpr 0x9462158 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9462148 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94620c4 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9462118 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x94620f8 <col:51> '_Atomic_word':'int' lvalue ->_M_use_count 0x9461e70
            (CXXThisExpr 0x94620e8 <col:51> 'class std::tr1::_Sp_counted_base<1> *' this)))
        (IntegerLiteral 0x9462130 <col:65> 'int' 1))
      (IntegerLiteral 0x9462180 <col:71> 'int' 0))
    (CompoundStmt 0x9462290 <line:227:2, line:230:2>
      (BinaryOperator 0x94621f8 <line:228:4, col:19> '_Atomic_word':'int' lvalue '='
        (MemberExpr 0x94621c0 <col:4> '_Atomic_word':'int' lvalue ->_M_use_count 0x9461e70
          (CXXThisExpr 0x94621b0 <col:4> 'class std::tr1::_Sp_counted_base<1> *' this))
        (IntegerLiteral 0x94621e0 <col:19> 'int' 0))
      (CallExpr 0x9462270 <line:229:4, col:25> 'void'
        (ImplicitCastExpr 0x9462260 <col:4> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9462244 <col:4> 'void (void)' lvalue Function 0x9459f80 '__throw_bad_weak_ptr' 'void (void)'))))
    <<<NULL>>>))


        inline void _M_add_ref_lock() (CompoundStmt 0x9463c08 </usr/include/c++/4.6/tr1/shared_ptr.h:237:5, line:251:5>
  (DeclStmt 0x94636c8 <line:239:7, col:27>
    0x9463690 "_Atomic_word __count")
  (DoStmt 0x9463bf0 <line:240:7, line:250:21>
    (CompoundStmt 0x9463858 <line:241:2, line:248:2>
      (BinaryOperator 0x9463748 <line:242:4, col:14> '_Atomic_word':'int' lvalue '='
        (DeclRefExpr 0x94636d8 <col:4> '_Atomic_word':'int' lvalue Var 0x9463690 '__count' '_Atomic_word':'int')
        (ImplicitCastExpr 0x9463738 <col:14> '_Atomic_word':'int' <LValueToRValue>
          (MemberExpr 0x9463718 <col:14> '_Atomic_word':'int' lvalue ->_M_use_count 0x9463570
            (CXXThisExpr 0x9463708 <col:14> 'class std::tr1::_Sp_counted_base<2> *' this))))
      (IfStmt 0x9463838 <line:243:4, line:244:27>
        <<<NULL>>>
        (BinaryOperator 0x94637a0 <line:243:8, col:19> '_Bool' '=='
          (ImplicitCastExpr 0x9463790 <col:8> '_Atomic_word':'int' <LValueToRValue>
            (DeclRefExpr 0x9463760 <col:8> '_Atomic_word':'int' lvalue Var 0x9463690 '__count' '_Atomic_word':'int'))
          (IntegerLiteral 0x9463778 <col:19> 'int' 0))
        (CallExpr 0x9463818 <line:244:6, col:27> 'void'
          (ImplicitCastExpr 0x9463808 <col:6> 'void (*)(void)' <FunctionToPointerDecay>
            (DeclRefExpr 0x94637ec <col:6> 'void (void)' lvalue Function 0x9459f80 '__throw_bad_weak_ptr' 'void (void)')))
        <<<NULL>>>))
    (UnaryOperator 0x9463bd8 <line:249:14, line:250:20> '_Bool' prefix '!'
      (CallExpr 0x94639b0 <line:249:15, line:250:20> '_Bool'
        (ImplicitCastExpr 0x9463bc8 <line:249:15> '_Bool (*)(volatile int *, int, int, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9463b94 <col:15> '_Bool (volatile int *, int, int, ...)' lvalue Function 0x9463a20 '__sync_bool_compare_and_swap_4' '_Bool (volatile int *, int, int, ...)'))
        (UnaryOperator 0x9463918 <col:44, col:45> '_Atomic_word *' prefix '&'
          (MemberExpr 0x94638f8 <col:45> '_Atomic_word':'int' lvalue ->_M_use_count 0x9463570
            (CXXThisExpr 0x94638e8 <col:45> 'class std::tr1::_Sp_counted_base<2> *' this)))
        (ImplicitCastExpr 0x9463b88 <col:59> '_Atomic_word':'int' <LValueToRValue>
          (DeclRefExpr 0x946392c <col:59> '_Atomic_word':'int' lvalue Var 0x9463690 '__count' '_Atomic_word':'int'))
        (BinaryOperator 0x9463988 <line:250:9, col:19> 'int' '+'
          (ImplicitCastExpr 0x9463978 <col:9> '_Atomic_word':'int' <LValueToRValue>
            (DeclRefExpr 0x9463944 <col:9> '_Atomic_word':'int' lvalue Var 0x9463690 '__count' '_Atomic_word':'int'))
          (IntegerLiteral 0x9463960 <col:19> 'int' 1))))))


        template <typename _Ptr, typename _Deleter, __gnu_cxx::_Lock_policy _Lp> class _Sp_counted_base_impl : public _Sp_counted_base<_Lp> {
            class _Sp_counted_base_impl;
        public:
        public:
            _Sp_counted_base_impl<_Ptr, _Deleter, _Lp>(_Ptr __p, _Deleter __d) : _M_ptr((DeclRefExpr 0x9464690 </usr/include/c++/4.6/tr1/shared_ptr.h:260:16> '_Ptr' lvalue ParmVar 0x94640e0 '__p' '_Ptr')
), _M_del((DeclRefExpr 0x94646e8 </usr/include/c++/4.6/tr1/shared_ptr.h:260:29> '_Deleter' lvalue ParmVar 0x9464120 '__d' '_Deleter')
) (CompoundStmt 0x9464740 </usr/include/c++/4.6/tr1/shared_ptr.h:260:34, col:36>)


            virtual void _M_dispose() (CompoundStmt 0x94647e8 </usr/include/c++/4.6/tr1/shared_ptr.h:264:7, col:25>
  (CallExpr 0x94647c8 <col:9, col:22> '<dependent type>'
    (MemberExpr 0x9464778 <col:9> '_Deleter' lvalue ->_M_del 0x9464660
      (CXXThisExpr 0x9464768 <col:9> '_Sp_counted_base_impl<_Ptr, _Deleter, _Lp> *' this))
    (MemberExpr 0x94647a8 <col:16> '_Ptr' lvalue ->_M_ptr 0x9464620
      (CXXThisExpr 0x9464798 <col:16> '_Sp_counted_base_impl<_Ptr, _Deleter, _Lp> *' this))))


            virtual void *_M_get_deleter(const std::type_info &__ti) (CompoundStmt 0x9464930 </usr/include/c++/4.6/tr1/shared_ptr.h:268:7, line:274:7>
  (ReturnStmt 0x9464920 <line:270:9, col:53>
    (ConditionalOperator 0x9464900 <col:16, col:53> '<dependent type>'
      (CXXOperatorCallExpr 0x9464878 <col:16, col:39> '_Bool'
        (ImplicitCastExpr 0x9464868 <col:21, <invalid sloc>> '_Bool (*)(const class std::type_info &) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9464838 <col:21, <invalid sloc>> '_Bool (const class std::type_info &) const' lvalue CXXMethod 0x9375fa0 'operator==' '_Bool (const class std::type_info &) const'))
        (DeclRefExpr 0x94647fc <col:16> 'const std::type_info':'const class std::type_info' lvalue ParmVar 0x94642d0 '__ti' 'const std::type_info &')
        (CXXTypeidExpr 0x9464820 <col:24, col:39> 'const class std::type_info' lvalue))
      (UnaryOperator 0x94648d0 <col:43, col:44> '<dependent type>' prefix '&'
        (MemberExpr 0x94648b0 <col:44> '_Deleter' lvalue ->_M_del 0x9464660
          (CXXThisExpr 0x94648a0 <col:44> '_Sp_counted_base_impl<_Ptr, _Deleter, _Lp> *' this)))
      (IntegerLiteral 0x94648e8 <col:53> 'int' 0))))


        private:
        private:
            _Sp_counted_base_impl<_Ptr, _Deleter, _Lp>(const _Sp_counted_base_impl<_Ptr, _Deleter, _Lp> &);
            _Sp_counted_base_impl<_Ptr, _Deleter, _Lp> &operator=(const _Sp_counted_base_impl<_Ptr, _Deleter, _Lp> &);
            _Ptr _M_ptr;
            _Deleter _M_del;
        };
        template <__gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x9464944 </usr/include/c++/4.6/tr1/shared_ptr.h:284:31> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __weak_count;
        template <typename _Tp> struct _Sp_deleter {
            struct _Sp_deleter;
            typedef void result_type;
            typedef _Tp *argument_type;
            void operator()(_Tp *__p) const (CompoundStmt 0x9464f60 </usr/include/c++/4.6/tr1/shared_ptr.h:292:39, col:53>
  (CXXDeleteExpr 0x9464f48 <col:41, col:48> 'void'
    (DeclRefExpr 0x9464f30 <col:48> '_Tp *' lvalue ParmVar 0x9464e10 '__p' '_Tp *')))


        };
        template <__gnu_cxx::_Lock_policy _Lp = 1> class __shared_count
template <__gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x9464f74 </usr/include/c++/4.6/tr1/shared_ptr.h:295:31> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __shared_count {
            class __shared_count;
        public:
        public:
            __shared_count<_Lp>() : _M_pi((IntegerLiteral 0x94666c0 </usr/include/c++/4.6/tr1/shared_ptr.h:300:15> 'int' 0)
) (CompoundStmt 0x9466720 </usr/include/c++/4.6/tr1/shared_ptr.h:301:7, col:9>)


            template <typename _Ptr> __shared_count<_Lp>(_Ptr __p) : _M_pi((IntegerLiteral 0x9466730 </usr/include/c++/4.6/tr1/shared_ptr.h:304:42> 'int' 0)
) (CompoundStmt 0x946a750 </usr/include/c++/4.6/tr1/shared_ptr.h:305:9, line:317:2>
  (IfStmt 0x946a6a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/tr1/shared_ptr.h:311:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9466790 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x946a690 </usr/include/c++/4.6/tr1/shared_ptr.h:307:6, line:311:6>
      (DeclStmt 0x9466940 <line:308:8, col:65>
        0x9466910 "typedef typename std::tr1::remove_pointer<_Ptr>::type _Tp")
      (BinaryOperator 0x946a678 <line:309:8, line:310:35> '<dependent type>' '='
        (MemberExpr 0x9466978 <line:309:8> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x9466968 <col:8> '__shared_count<_Lp> *' this))
        (CXXNewExpr 0x946a638 <col:16, line:310:35> '_Sp_counted_base_impl<_Ptr, _Sp_deleter<_Tp>, _Lp> *'
          (DeclRefExpr 0x9466c10 <col:12> '_Ptr' lvalue ParmVar 0x9465340 '__p' '_Ptr')
          (CXXUnresolvedConstructExpr 0x946a5a8 <col:17, col:34> '_Sp_deleter<_Tp>'))))
    <<<NULL>>>)
  (IfStmt 0x946a730 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/tr1/shared_ptr.h:316:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x946a6c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x946a718 </usr/include/c++/4.6/tr1/shared_ptr.h:313:6, line:316:6>
      (CXXDeleteExpr 0x946a6f0 <line:314:8, col:15> 'void'
        (DeclRefExpr 0x946a6d8 <col:15> '_Ptr' lvalue ParmVar 0x9465340 '__p' '_Ptr'))
      (NullStmt 0x946a708 <line:315:31>))
    <<<NULL>>>))

;
            template <typename _Ptr, typename _Deleter> __shared_count<_Lp>(_Ptr __p, _Deleter __d) : _M_pi((IntegerLiteral 0x946a768 </usr/include/c++/4.6/tr1/shared_ptr.h:320:56> 'int' 0)
) (CompoundStmt 0x946ab70 </usr/include/c++/4.6/tr1/shared_ptr.h:321:9, line:331:2>
  (IfStmt 0x946aaa8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/tr1/shared_ptr.h:325:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x946a7c0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x946aa90 </usr/include/c++/4.6/tr1/shared_ptr.h:323:6, line:325:6>
      (BinaryOperator 0x946aa78 <line:324:8, col:71> '<dependent type>' '='
        (MemberExpr 0x946a7e0 <col:8> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x946a7d0 <col:8> '__shared_count<_Lp> *' this))
        (CXXNewExpr 0x946aa38 <col:16, col:71> '_Sp_counted_base_impl<_Ptr, _Deleter, _Lp> *'
          (DeclRefExpr 0x946a990 <col:63> '_Ptr' lvalue ParmVar 0x9465540 '__p' '_Ptr')
          (DeclRefExpr 0x946a9a8 <col:68> '_Deleter' lvalue ParmVar 0x9465580 '__d' '_Deleter'))))
    <<<NULL>>>)
  (IfStmt 0x946ab50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/tr1/shared_ptr.h:330:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x946aac8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x946ab38 </usr/include/c++/4.6/tr1/shared_ptr.h:327:6, line:330:6>
      (CallExpr 0x946ab08 <line:328:8, col:15> '<dependent type>'
        (DeclRefExpr 0x946aad8 <col:8> '_Deleter' lvalue ParmVar 0x9465580 '__d' '_Deleter')
        (DeclRefExpr 0x946aaf0 <col:12> '_Ptr' lvalue ParmVar 0x9465540 '__p' '_Ptr'))
      (NullStmt 0x946ab28 <line:329:31>))
    <<<NULL>>>))

;
            template <typename _Tp> __shared_count<_Lp>(std::auto_ptr<_Tp> &__r) : _M_pi((CXXNewExpr 0x946afc8 </usr/include/c++/4.6/tr1/shared_ptr.h:337:10, line:338:56> '_Sp_counted_base_impl<_Tp *, _Sp_deleter<_Tp>, _Lp> *'
  (CallExpr 0x946ae60 <col:27, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x946ae28 <col:27, col:31> '<dependent type>' lvalue
      (DeclRefExpr 0x946ae10 <col:27> 'std::auto_ptr<_Tp>':'auto_ptr<_Tp>' lvalue ParmVar 0x9465810 '__r' 'std::auto_ptr<_Tp> &')))
  (CXXUnresolvedConstructExpr 0x946af30 <col:38, col:55> '_Sp_deleter<_Tp>'))
) (CompoundStmt 0x946b0c0 </usr/include/c++/4.6/tr1/shared_ptr.h:339:9, col:26>
  (CallExpr 0x946b0a0 <col:11, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x946b068 <col:11, col:15> '<dependent type>' lvalue
      (DeclRefExpr 0x946b04c <col:11> 'std::auto_ptr<_Tp>':'auto_ptr<_Tp>' lvalue ParmVar 0x9465810 '__r' 'std::auto_ptr<_Tp> &'))))

;
            __shared_count<_Lp>(const __weak_count<_Lp> &__r);
            void ~__shared_count<_Lp>() (CompoundStmt 0x946b240 </usr/include/c++/4.6/tr1/shared_ptr.h:346:7, line:349:7>
  (IfStmt 0x946b220 <line:347:2, line:348:22>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946b170 <line:347:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946b120 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x946b0e8 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
        (CXXThisExpr 0x946b0d8 <col:6> '__shared_count<_Lp> *' this))
      (IntegerLiteral 0x946b108 <col:15> 'int' 0))
    (CallExpr 0x946b200 <line:348:4, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946b1c8 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x946b1a8 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x946b198 <col:4> '__shared_count<_Lp> *' this))))
    <<<NULL>>>))


            __shared_count<_Lp>(const __shared_count<_Lp> &__r) : _M_pi((CXXDependentScopeMemberExpr 0x946b270 </usr/include/c++/4.6/tr1/shared_ptr.h:352:15, col:19> '<dependent type>' lvalue
  (DeclRefExpr 0x946b254 <col:15> 'const __shared_count<_Lp>' lvalue ParmVar 0x9465c10 '__r' 'const __shared_count<_Lp> &'))
) (CompoundStmt 0x946b458 </usr/include/c++/4.6/tr1/shared_ptr.h:353:7, line:356:7>
  (IfStmt 0x946b438 <line:354:2, line:355:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946b388 <line:354:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946b338 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x946b300 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
        (CXXThisExpr 0x946b2f0 <col:6> '__shared_count<_Lp> *' this))
      (IntegerLiteral 0x946b320 <col:15> 'int' 0))
    (CallExpr 0x946b418 <line:355:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946b3e0 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x946b3c0 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x946b3b0 <col:4> '__shared_count<_Lp> *' this))))
    <<<NULL>>>))


            __shared_count<_Lp> &operator=(const __shared_count<_Lp> &__r) (CompoundStmt 0x946ba20 </usr/include/c++/4.6/tr1/shared_ptr.h:360:7, line:371:7>
  (DeclStmt 0x946b5d8 <line:361:2, col:42>
    0x946b550 "_Sp_counted_base<_Lp> *__tmp =
      (CXXDependentScopeMemberExpr 0x946b5a0 <col:33, col:37> '<dependent type>' lvalue
        (DeclRefExpr 0x946b584 <col:33> 'const __shared_count<_Lp>' lvalue ParmVar 0x9465d10 '__r' 'const __shared_count<_Lp> &'))")
  (IfStmt 0x946b9c8 <line:362:2, line:369:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946b680 <line:362:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946b630 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (DeclRefExpr 0x946b5e8 <col:6> '_Sp_counted_base<_Lp> *' lvalue Var 0x946b550 '__tmp' '_Sp_counted_base<_Lp> *')
      (MemberExpr 0x946b610 <col:15> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
        (CXXThisExpr 0x946b600 <col:15> '__shared_count<_Lp> *' this)))
    (CompoundStmt 0x946b9a8 <line:363:4, line:369:4>
      (IfStmt 0x946b7c0 <line:364:6, line:365:31>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x946b728 <line:364:10, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x946b6d8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
          (DeclRefExpr 0x946b6a4 <col:10> '_Sp_counted_base<_Lp> *' lvalue Var 0x946b550 '__tmp' '_Sp_counted_base<_Lp> *')
          (IntegerLiteral 0x946b6c0 <col:19> 'int' 0))
        (CallExpr 0x946b7a0 <line:365:8, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x946b768 <col:8, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x946b74c <col:8> '_Sp_counted_base<_Lp> *' lvalue Var 0x946b550 '__tmp' '_Sp_counted_base<_Lp> *')))
        <<<NULL>>>)
      (IfStmt 0x946b928 <line:366:6, line:367:26>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x946b878 <line:366:10, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x946b828 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
          (MemberExpr 0x946b7f0 <col:10> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
            (CXXThisExpr 0x946b7e0 <col:10> '__shared_count<_Lp> *' this))
          (IntegerLiteral 0x946b810 <col:19> 'int' 0))
        (CallExpr 0x946b908 <line:367:8, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x946b8d0 <col:8, col:15> '<dependent type>' lvalue
            (MemberExpr 0x946b8b0 <col:8> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
              (CXXThisExpr 0x946b8a0 <col:8> '__shared_count<_Lp> *' this))))
        <<<NULL>>>)
      (BinaryOperator 0x946b990 <line:368:6, col:14> '<dependent type>' '='
        (MemberExpr 0x946b958 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x946b948 <col:6> '__shared_count<_Lp> *' this))
        (DeclRefExpr 0x946b978 <col:14> '_Sp_counted_base<_Lp> *' lvalue Var 0x946b550 '__tmp' '_Sp_counted_base<_Lp> *')))
    <<<NULL>>>)
  (ReturnStmt 0x946ba10 <line:370:2, col:10>
    (UnaryOperator 0x946b9f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x946b9e8 <col:10> '__shared_count<_Lp> *' this))))


            void _M_swap(__shared_count<_Lp> &__r) (CompoundStmt 0x946bcb0 </usr/include/c++/4.6/tr1/shared_ptr.h:375:7, line:379:7>
  (DeclStmt 0x946bba8 <line:376:2, col:42>
    0x946bb20 "_Sp_counted_base<_Lp> *__tmp =
      (CXXDependentScopeMemberExpr 0x946bb70 <col:33, col:37> '<dependent type>' lvalue
        (DeclRefExpr 0x946bb54 <col:33> '__shared_count<_Lp>' lvalue ParmVar 0x9465e30 '__r' '__shared_count<_Lp> &'))")
  (BinaryOperator 0x946bc38 <line:377:2, col:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x946bbd0 <col:2, col:6> '<dependent type>' lvalue
      (DeclRefExpr 0x946bbb8 <col:2> '__shared_count<_Lp>' lvalue ParmVar 0x9465e30 '__r' '__shared_count<_Lp> &'))
    (MemberExpr 0x946bc18 <col:14> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
      (CXXThisExpr 0x946bc08 <col:14> '__shared_count<_Lp> *' this)))
  (BinaryOperator 0x946bc98 <line:378:2, col:10> '<dependent type>' '='
    (MemberExpr 0x946bc60 <col:2> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
      (CXXThisExpr 0x946bc50 <col:2> '__shared_count<_Lp> *' this))
    (DeclRefExpr 0x946bc80 <col:10> '_Sp_counted_base<_Lp> *' lvalue Var 0x946bb20 '__tmp' '_Sp_counted_base<_Lp> *')))


            long _M_get_use_count() const (CompoundStmt 0x946be78 </usr/include/c++/4.6/tr1/shared_ptr.h:383:7, col:60>
  (ReturnStmt 0x946be68 <col:9, col:57>
    (ConditionalOperator 0x946be48 <col:16, col:57> '<dependent type>'
      (CXXOperatorCallExpr 0x946bd80 <col:16, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x946bd30 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
        (MemberExpr 0x946bcf8 <col:16> '_Sp_counted_base<_Lp> *const' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x946bce8 <col:16> 'const __shared_count<_Lp> *' this))
        (IntegerLiteral 0x946bd18 <col:25> 'int' 0))
      (CallExpr 0x946be10 <col:29, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x946bdd8 <col:29, col:36> '<dependent type>' lvalue
          (MemberExpr 0x946bdb8 <col:29> '_Sp_counted_base<_Lp> *const' lvalue ->_M_pi 0x9466690
            (CXXThisExpr 0x946bda8 <col:29> 'const __shared_count<_Lp> *' this))))
      (IntegerLiteral 0x946be30 <col:57> 'int' 0))))


            bool _M_unique() const (CompoundStmt 0x946bf98 </usr/include/c++/4.6/tr1/shared_ptr.h:387:7, col:47>
  (ReturnStmt 0x946bf88 <col:9, col:44>
    (CXXOperatorCallExpr 0x946bf60 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x946bf10 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x946bed8 <col:16, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x946bea0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x946be90 <col:16> 'const __shared_count<_Lp> *' this)))
      (IntegerLiteral 0x946bef8 <col:44> 'int' 1))))


            ;
            ;
            void *_M_get_deleter(const std::type_info &__ti) const (CompoundStmt 0x946c4f0 </usr/include/c++/4.6/tr1/shared_ptr.h:399:7, col:57>
  (ReturnStmt 0x946c4e0 <col:9, col:54>
    (ConditionalOperator 0x946c4c0 <col:16, col:54> '<dependent type>'
      (MemberExpr 0x946c3e8 <col:16> '_Sp_counted_base<_Lp> *const' lvalue ->_M_pi 0x9466690
        (CXXThisExpr 0x946c3d8 <col:16> 'const __shared_count<_Lp> *' this))
      (CallExpr 0x946c488 <col:24, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x946c438 <col:24, col:31> '<dependent type>' lvalue
          (MemberExpr 0x946c418 <col:24> '_Sp_counted_base<_Lp> *const' lvalue ->_M_pi 0x9466690
            (CXXThisExpr 0x946c408 <col:24> 'const __shared_count<_Lp> *' this)))
        (DeclRefExpr 0x946c46c <col:46> 'const std::type_info':'const class std::type_info' lvalue ParmVar 0x9466320 '__ti' 'const std::type_info &'))
      (IntegerLiteral 0x946c4a8 <col:54> 'int' 0))))


        private:
        private:
            ;
            _Sp_counted_base<_Lp> *_M_pi;
        };
        template <__gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x9464944 </usr/include/c++/4.6/tr1/shared_ptr.h:284:31> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __weak_count {
            class __weak_count;
        public:
        public:
            __weak_count<_Lp>() : _M_pi((IntegerLiteral 0x946dcd0 </usr/include/c++/4.6/tr1/shared_ptr.h:413:15> 'int' 0)
) (CompoundStmt 0x946dd30 </usr/include/c++/4.6/tr1/shared_ptr.h:414:7, col:9>)


            __weak_count<_Lp>(const __shared_count<_Lp> &__r) : _M_pi((CXXDependentScopeMemberExpr 0x946dd58 </usr/include/c++/4.6/tr1/shared_ptr.h:417:15, col:19> '<dependent type>' lvalue
  (DeclRefExpr 0x946dd40 <col:15> 'const __shared_count<_Lp>' lvalue ParmVar 0x946c870 '__r' 'const __shared_count<_Lp> &'))
) (CompoundStmt 0x946df50 </usr/include/c++/4.6/tr1/shared_ptr.h:418:7, line:421:7>
  (IfStmt 0x946df30 <line:419:2, line:420:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946de80 <line:419:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946de30 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x946ddf8 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
        (CXXThisExpr 0x946dde8 <col:6> '__weak_count<_Lp> *' this))
      (IntegerLiteral 0x946de18 <col:15> 'int' 0))
    (CallExpr 0x946df10 <line:420:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946ded8 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x946deb8 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
          (CXXThisExpr 0x946dea8 <col:4> '__weak_count<_Lp> *' this))))
    <<<NULL>>>))


            __weak_count<_Lp>(const __weak_count<_Lp> &__r) : _M_pi((CXXDependentScopeMemberExpr 0x946df80 </usr/include/c++/4.6/tr1/shared_ptr.h:424:15, col:19> '<dependent type>' lvalue
  (DeclRefExpr 0x946df64 <col:15> 'const __weak_count<_Lp>':'const __weak_count<_Lp>' lvalue ParmVar 0x946ca80 '__r' 'const __weak_count<_Lp> &'))
) (CompoundStmt 0x946e168 </usr/include/c++/4.6/tr1/shared_ptr.h:425:7, line:428:7>
  (IfStmt 0x946e148 <line:426:2, line:427:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946e098 <line:426:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946e048 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x946e010 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
        (CXXThisExpr 0x946e000 <col:6> '__weak_count<_Lp> *' this))
      (IntegerLiteral 0x946e030 <col:15> 'int' 0))
    (CallExpr 0x946e128 <line:427:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946e0f0 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x946e0d0 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
          (CXXThisExpr 0x946e0c0 <col:4> '__weak_count<_Lp> *' this))))
    <<<NULL>>>))


            void ~__weak_count<_Lp>() (CompoundStmt 0x946e2e8 </usr/include/c++/4.6/tr1/shared_ptr.h:431:7, line:434:7>
  (IfStmt 0x946e2c8 <line:432:2, line:433:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946e218 <line:432:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946e1c8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x946e190 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
        (CXXThisExpr 0x946e180 <col:6> '__weak_count<_Lp> *' this))
      (IntegerLiteral 0x946e1b0 <col:15> 'int' 0))
    (CallExpr 0x946e2a8 <line:433:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946e270 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x946e250 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
          (CXXThisExpr 0x946e240 <col:4> '__weak_count<_Lp> *' this))))
    <<<NULL>>>))


            __weak_count<_Lp> &operator=(const __shared_count<_Lp> &__r) (CompoundStmt 0x946fe50 </usr/include/c++/4.6/tr1/shared_ptr.h:438:7, line:446:7>
  (DeclStmt 0x946e468 <line:439:2, col:42>
    0x946e3e0 "_Sp_counted_base<_Lp> *__tmp =
      (CXXDependentScopeMemberExpr 0x946e430 <col:33, col:37> '<dependent type>' lvalue
        (DeclRefExpr 0x946e414 <col:33> 'const __shared_count<_Lp>' lvalue ParmVar 0x946cda0 '__r' 'const __shared_count<_Lp> &'))")
  (IfStmt 0x946fc30 <line:440:2, line:441:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946e4f8 <line:440:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946e4a8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (DeclRefExpr 0x946e478 <col:6> '_Sp_counted_base<_Lp> *' lvalue Var 0x946e3e0 '__tmp' '_Sp_counted_base<_Lp> *')
      (IntegerLiteral 0x946e490 <col:15> 'int' 0))
    (CallExpr 0x946fc10 <line:441:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946e538 <col:4, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x946e51c <col:4> '_Sp_counted_base<_Lp> *' lvalue Var 0x946e3e0 '__tmp' '_Sp_counted_base<_Lp> *')))
    <<<NULL>>>)
  (IfStmt 0x946fd98 <line:442:2, line:443:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x946fce8 <line:442:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x946fc98 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x946fc60 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
        (CXXThisExpr 0x946fc50 <col:6> '__weak_count<_Lp> *' this))
      (IntegerLiteral 0x946fc80 <col:15> 'int' 0))
    (CallExpr 0x946fd78 <line:443:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x946fd40 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x946fd20 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
          (CXXThisExpr 0x946fd10 <col:4> '__weak_count<_Lp> *' this))))
    <<<NULL>>>)
  (BinaryOperator 0x946fe00 <line:444:2, col:10> '<dependent type>' '='
    (MemberExpr 0x946fdc8 <col:2> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
      (CXXThisExpr 0x946fdb8 <col:2> '__weak_count<_Lp> *' this))
    (DeclRefExpr 0x946fde8 <col:10> '_Sp_counted_base<_Lp> *' lvalue Var 0x946e3e0 '__tmp' '_Sp_counted_base<_Lp> *'))
  (ReturnStmt 0x946fe40 <line:445:2, col:10>
    (UnaryOperator 0x946fe28 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x946fe18 <col:10> '__weak_count<_Lp> *' this))))


            __weak_count<_Lp> &operator=(const __weak_count<_Lp> &__r) (CompoundStmt 0x9470320 </usr/include/c++/4.6/tr1/shared_ptr.h:450:7, line:458:7>
  (DeclStmt 0x946ffd8 <line:451:2, col:42>
    0x946ff50 "_Sp_counted_base<_Lp> *__tmp =
      (CXXDependentScopeMemberExpr 0x946ffa0 <col:33, col:37> '<dependent type>' lvalue
        (DeclRefExpr 0x946ff84 <col:33> 'const __weak_count<_Lp>':'const __weak_count<_Lp>' lvalue ParmVar 0x946d080 '__r' 'const __weak_count<_Lp> &'))")
  (IfStmt 0x9470100 <line:452:2, line:453:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9470068 <line:452:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9470018 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (DeclRefExpr 0x946ffe8 <col:6> '_Sp_counted_base<_Lp> *' lvalue Var 0x946ff50 '__tmp' '_Sp_counted_base<_Lp> *')
      (IntegerLiteral 0x9470000 <col:15> 'int' 0))
    (CallExpr 0x94700e0 <line:453:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x94700a8 <col:4, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x947008c <col:4> '_Sp_counted_base<_Lp> *' lvalue Var 0x946ff50 '__tmp' '_Sp_counted_base<_Lp> *')))
    <<<NULL>>>)
  (IfStmt 0x9470268 <line:454:2, line:455:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x94701b8 <line:454:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9470168 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x9470130 <col:6> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
        (CXXThisExpr 0x9470120 <col:6> '__weak_count<_Lp> *' this))
      (IntegerLiteral 0x9470150 <col:15> 'int' 0))
    (CallExpr 0x9470248 <line:455:4, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9470210 <col:4, col:11> '<dependent type>' lvalue
        (MemberExpr 0x94701f0 <col:4> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
          (CXXThisExpr 0x94701e0 <col:4> '__weak_count<_Lp> *' this))))
    <<<NULL>>>)
  (BinaryOperator 0x94702d0 <line:456:2, col:10> '<dependent type>' '='
    (MemberExpr 0x9470298 <col:2> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
      (CXXThisExpr 0x9470288 <col:2> '__weak_count<_Lp> *' this))
    (DeclRefExpr 0x94702b8 <col:10> '_Sp_counted_base<_Lp> *' lvalue Var 0x946ff50 '__tmp' '_Sp_counted_base<_Lp> *'))
  (ReturnStmt 0x9470310 <line:457:2, col:10>
    (UnaryOperator 0x94702f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x94702e8 <col:10> '__weak_count<_Lp> *' this))))


            void _M_swap(__weak_count<_Lp> &__r) (CompoundStmt 0x94705b0 </usr/include/c++/4.6/tr1/shared_ptr.h:462:7, line:466:7>
  (DeclStmt 0x94704a8 <line:463:2, col:42>
    0x9470420 "_Sp_counted_base<_Lp> *__tmp =
      (CXXDependentScopeMemberExpr 0x9470470 <col:33, col:37> '<dependent type>' lvalue
        (DeclRefExpr 0x9470454 <col:33> '__weak_count<_Lp>':'__weak_count<_Lp>' lvalue ParmVar 0x946d2a0 '__r' '__weak_count<_Lp> &'))")
  (BinaryOperator 0x9470538 <line:464:2, col:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x94704d0 <col:2, col:6> '<dependent type>' lvalue
      (DeclRefExpr 0x94704b8 <col:2> '__weak_count<_Lp>':'__weak_count<_Lp>' lvalue ParmVar 0x946d2a0 '__r' '__weak_count<_Lp> &'))
    (MemberExpr 0x9470518 <col:14> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
      (CXXThisExpr 0x9470508 <col:14> '__weak_count<_Lp> *' this)))
  (BinaryOperator 0x9470598 <line:465:2, col:10> '<dependent type>' '='
    (MemberExpr 0x9470560 <col:2> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x946dca0
      (CXXThisExpr 0x9470550 <col:2> '__weak_count<_Lp> *' this))
    (DeclRefExpr 0x9470580 <col:10> '_Sp_counted_base<_Lp> *' lvalue Var 0x9470420 '__tmp' '_Sp_counted_base<_Lp> *')))


            long _M_get_use_count() const (CompoundStmt 0x9470778 </usr/include/c++/4.6/tr1/shared_ptr.h:470:7, col:60>
  (ReturnStmt 0x9470768 <col:9, col:57>
    (ConditionalOperator 0x9470748 <col:16, col:57> '<dependent type>'
      (CXXOperatorCallExpr 0x9470680 <col:16, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9470630 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
        (MemberExpr 0x94705f8 <col:16> '_Sp_counted_base<_Lp> *const' lvalue ->_M_pi 0x946dca0
          (CXXThisExpr 0x94705e8 <col:16> 'const __weak_count<_Lp> *' this))
        (IntegerLiteral 0x9470618 <col:25> 'int' 0))
      (CallExpr 0x9470710 <col:29, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x94706d8 <col:29, col:36> '<dependent type>' lvalue
          (MemberExpr 0x94706b8 <col:29> '_Sp_counted_base<_Lp> *const' lvalue ->_M_pi 0x946dca0
            (CXXThisExpr 0x94706a8 <col:29> 'const __weak_count<_Lp> *' this))))
      (IntegerLiteral 0x9470730 <col:57> 'int' 0))))


            ;
            ;
        private:
        private:
            ;
            _Sp_counted_base<_Lp> *_M_pi;
        };
        inline __shared_count<_Lp>::__shared_count<_Lp>(const __weak_count<_Lp> &__r) : _M_pi((CXXDependentScopeMemberExpr 0x9471020 </usr/include/c++/4.6/tr1/shared_ptr.h:491:13, col:17> '<dependent type>' lvalue
  (DeclRefExpr 0x9471004 <col:13> 'const __weak_count<_Lp>' lvalue ParmVar 0x9470ee0 '__r' 'const __weak_count<_Lp> &'))
) (CompoundStmt 0x9471288 </usr/include/c++/4.6/tr1/shared_ptr.h:492:5, line:497:5>
  (IfStmt 0x9471268 <line:493:7, line:496:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9471138 <line:493:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x94710e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (MemberExpr 0x94710b0 <col:11> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
        (CXXThisExpr 0x94710a0 <col:11> '__shared_count<_Lp> *' this))
      (IntegerLiteral 0x94710d0 <col:20> 'int' 0))
    (CallExpr 0x94711c8 <line:494:2, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9471190 <col:2, col:9> '<dependent type>' lvalue
        (MemberExpr 0x9471170 <col:2> '_Sp_counted_base<_Lp> *' lvalue ->_M_pi 0x9466690
          (CXXThisExpr 0x9471160 <col:2> '__shared_count<_Lp> *' this))))
    (CallExpr 0x9471248 <line:496:2, col:23> 'void'
      (ImplicitCastExpr 0x9471238 <col:2> 'void (*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x947121c <col:2> 'void (void)' lvalue Function 0x9459f80 '__throw_bad_weak_ptr' 'void (void)')))))


        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x94712e4 </usr/include/c++/4.6/tr1/shared_ptr.h:500:45> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __shared_ptr;
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x9471544 </usr/include/c++/4.6/tr1/shared_ptr.h:503:45> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __weak_ptr;
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x94717a4 </usr/include/c++/4.6/tr1/shared_ptr.h:506:45> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __enable_shared_from_this;
        template <typename _Tp = const io_data_t> class shared_ptr
template <typename _Tp = io_data_t> class shared_ptr
template <typename _Tp> class shared_ptr;
        template <typename _Tp> class weak_ptr;
        template <typename _Tp> class enable_shared_from_this;
        template <__gnu_cxx::_Lock_policy _Lp, typename _Tp1, typename _Tp2> void __enable_shared_from_this_helper(const __shared_count<_Lp> &, const __enable_shared_from_this<_Tp1, _Lp> *, const _Tp2 *);
        template <typename _Tp1, typename _Tp2> void __enable_shared_from_this_helper(const __shared_count<> &, const enable_shared_from_this<_Tp1> *, const _Tp2 *);
        template <__gnu_cxx::_Lock_policy _Lp> inline void __enable_shared_from_this_helper(const __shared_count<_Lp> &, ...) (CompoundStmt 0x9472b40 </usr/include/c++/4.6/tr1/shared_ptr.h:537:5, col:7>)

;
        struct __static_cast_tag {
            struct __static_cast_tag;
            inline __static_cast_tag() throw();
            inline __static_cast_tag(const std::tr1::__static_cast_tag &) throw();
        };
        struct __const_cast_tag {
            struct __const_cast_tag;
            inline __const_cast_tag() throw();
            inline __const_cast_tag(const std::tr1::__const_cast_tag &) throw();
        };
        struct __dynamic_cast_tag {
            struct __dynamic_cast_tag;
            inline __dynamic_cast_tag() throw();
            inline __dynamic_cast_tag(const std::tr1::__dynamic_cast_tag &) throw();
        };
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x94712e4 </usr/include/c++/4.6/tr1/shared_ptr.h:500:45> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __shared_ptr {
            class __shared_ptr;
        public:
        public:
            typedef _Tp element_type;
            __shared_ptr<_Tp, _Lp>() : _M_ptr((IntegerLiteral 0x94782b0 </usr/include/c++/4.6/tr1/shared_ptr.h:554:16> 'int' 0)
), _M_refcount() (CompoundStmt 0x9478340 </usr/include/c++/4.6/tr1/shared_ptr.h:555:7, col:9>)


            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(_Tp1 *__p) : _M_ptr((DeclRefExpr 0x9478350 </usr/include/c++/4.6/tr1/shared_ptr.h:560:11> '_Tp1 *' lvalue ParmVar 0x9473280 '__p' '_Tp1 *')
), _M_refcount((DeclRefExpr 0x94783a8 </usr/include/c++/4.6/tr1/shared_ptr.h:560:29> '_Tp1 *' lvalue ParmVar 0x9473280 '__p' '_Tp1 *')
) (CompoundStmt 0x9478580 </usr/include/c++/4.6/tr1/shared_ptr.h:561:9, line:565:2>
  (DeclStmt 0x9478490 <line:563:4, col:41>
    0x9478460 "typedef int [sizeof(_Tp1)] _IsComplete")
  (CallExpr 0x9478558 <line:564:4, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0x94784a0 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9472b10 0x94728a0 0x94723e0)
    (MemberExpr 0x9478508 <col:37> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
      (CXXThisExpr 0x94784f8 <col:37> '__shared_ptr<_Tp, _Lp> *' this))
    (DeclRefExpr 0x9478528 <col:50> '_Tp1 *' lvalue ParmVar 0x9473280 '__p' '_Tp1 *')
    (DeclRefExpr 0x9478540 <col:55> '_Tp1 *' lvalue ParmVar 0x9473280 '__p' '_Tp1 *')))

;
            template <typename _Tp1, typename _Deleter> __shared_ptr<_Tp, _Lp>(_Tp1 *__p, _Deleter __d) : _M_ptr((DeclRefExpr 0x9478598 </usr/include/c++/4.6/tr1/shared_ptr.h:569:18> '_Tp1 *' lvalue ParmVar 0x94734a0 '__p' '_Tp1 *')
), _M_refcount((DeclRefExpr 0x94785e8 </usr/include/c++/4.6/tr1/shared_ptr.h:569:36> '_Tp1 *' lvalue ParmVar 0x94734a0 '__p' '_Tp1 *')
, (DeclRefExpr 0x9478600 </usr/include/c++/4.6/tr1/shared_ptr.h:569:41> '_Deleter' lvalue ParmVar 0x94734e0 '__d' '_Deleter')
) (CompoundStmt 0x9478728 </usr/include/c++/4.6/tr1/shared_ptr.h:570:9, line:574:2>
  (CallExpr 0x9478700 <line:573:4, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0x9478660 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9472b10 0x94728a0 0x94723e0)
    (MemberExpr 0x94786b0 <col:37> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
      (CXXThisExpr 0x94786a0 <col:37> '__shared_ptr<_Tp, _Lp> *' this))
    (DeclRefExpr 0x94786d0 <col:50> '_Tp1 *' lvalue ParmVar 0x94734a0 '__p' '_Tp1 *')
    (DeclRefExpr 0x94786e8 <col:55> '_Tp1 *' lvalue ParmVar 0x94734a0 '__p' '_Tp1 *')))

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(const __shared_ptr<_Tp1, _Lp> &__r) : _M_ptr((CXXDependentScopeMemberExpr 0x9478758 </usr/include/c++/4.6/tr1/shared_ptr.h:580:11, col:15> '<dependent type>' lvalue
  (DeclRefExpr 0x947873c <col:11> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9473830 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
), _M_refcount((CXXDependentScopeMemberExpr 0x94787e0 </usr/include/c++/4.6/tr1/shared_ptr.h:580:36, col:40> '<dependent type>' lvalue
  (DeclRefExpr 0x94787c8 <col:36> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9473830 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x9478860 </usr/include/c++/4.6/tr1/shared_ptr.h:581:9, col:73>)

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(const __weak_ptr<_Tp1, _Lp> &__r) : _M_refcount((CXXDependentScopeMemberExpr 0x9478888 </usr/include/c++/4.6/tr1/shared_ptr.h:586:16, col:20> '<dependent type>' lvalue
  (DeclRefExpr 0x9478870 <col:16> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9473b80 '__r' 'const __weak_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x9478998 </usr/include/c++/4.6/tr1/shared_ptr.h:587:9, line:592:2>
  (BinaryOperator 0x9478980 <line:591:4, col:17> '<dependent type>' '='
    (MemberExpr 0x9478910 <col:4> '_Tp *' lvalue ->_M_ptr 0x9478160
      (CXXThisExpr 0x9478900 <col:4> '__shared_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x9478948 <col:13, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x9478930 <col:13> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9473b80 '__r' 'const __weak_ptr<_Tp1, _Lp> &'))))

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(std::auto_ptr<_Tp1> &__r) : _M_ptr((CallExpr 0x9478a00 </usr/include/c++/4.6/tr1/shared_ptr.h:599:11, col:19> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x94789c8 <col:11, col:15> '<dependent type>' lvalue
    (DeclRefExpr 0x94789ac <col:11> 'std::auto_ptr<_Tp1>':'auto_ptr<_Tp1>' lvalue ParmVar 0x9474c50 '__r' 'std::auto_ptr<_Tp1> &')))
), _M_refcount() (CompoundStmt 0x947c398 </usr/include/c++/4.6/tr1/shared_ptr.h:600:9, line:606:2>
  (DeclStmt 0x947c0a0 <line:602:4, col:41>
    0x947c070 "typedef int [sizeof(_Tp1)] _IsComplete")
  (DeclStmt 0x947c188 <line:603:4, col:27>
    0x947c0e0 "_Tp1 *__tmp =
      (CallExpr 0x947c168 <col:18, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x947c130 <col:18, col:22> '<dependent type>' lvalue
          (DeclRefExpr 0x947c114 <col:18> 'std::auto_ptr<_Tp1>':'auto_ptr<_Tp1>' lvalue ParmVar 0x9474c50 '__r' 'std::auto_ptr<_Tp1> &')))")
  (BinaryOperator 0x947c2b8 <line:604:4, col:41> '<dependent type>' '='
    (MemberExpr 0x947c1a8 <col:4> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
      (CXXThisExpr 0x947c198 <col:4> '__shared_ptr<_Tp, _Lp> *' this))
    (CXXUnresolvedConstructExpr 0x947c298 <col:18, col:41> '__shared_count<_Lp>'
      (DeclRefExpr 0x947c280 <col:38> 'std::auto_ptr<_Tp1>':'auto_ptr<_Tp1>' lvalue ParmVar 0x9474c50 '__r' 'std::auto_ptr<_Tp1> &')))
  (CallExpr 0x947c370 <line:605:4, col:62> '<dependent type>'
    (UnresolvedLookupExpr 0x947c2d0 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9472b10 0x94728a0 0x94723e0)
    (MemberExpr 0x947c320 <col:37> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
      (CXXThisExpr 0x947c310 <col:37> '__shared_ptr<_Tp, _Lp> *' this))
    (DeclRefExpr 0x947c340 <col:50> '_Tp1 *' lvalue Var 0x947c0e0 '__tmp' '_Tp1 *')
    (DeclRefExpr 0x947c358 <col:57> '_Tp1 *' lvalue Var 0x947c0e0 '__tmp' '_Tp1 *')))

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(const __shared_ptr<_Tp1, _Lp> &__r, std::tr1::__static_cast_tag) : _M_ptr((CXXStaticCastExpr 0x947c448 </usr/include/c++/4.6/tr1/shared_ptr.h:612:11, col:48> 'element_type *' static_cast<element_type *> <Dependent>
  (CXXDependentScopeMemberExpr 0x947c3e8 <col:38, col:42> '<dependent type>' lvalue
    (DeclRefExpr 0x947c3d0 <col:38> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9474f10 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
), _M_refcount((CXXDependentScopeMemberExpr 0x947c4b0 </usr/include/c++/4.6/tr1/shared_ptr.h:613:16, col:20> '<dependent type>' lvalue
  (DeclRefExpr 0x947c498 <col:16> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9474f10 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x947c530 </usr/include/c++/4.6/tr1/shared_ptr.h:614:9, col:11>)

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(const __shared_ptr<_Tp1, _Lp> &__r, std::tr1::__const_cast_tag) : _M_ptr((CXXConstCastExpr 0x947c5a0 </usr/include/c++/4.6/tr1/shared_ptr.h:618:11, col:47> 'element_type *' const_cast<element_type *> <NoOp>
  (CXXDependentScopeMemberExpr 0x947c558 <col:37, col:41> '<dependent type>' lvalue
    (DeclRefExpr 0x947c540 <col:37> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9475230 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
), _M_refcount((CXXDependentScopeMemberExpr 0x947c610 </usr/include/c++/4.6/tr1/shared_ptr.h:619:16, col:20> '<dependent type>' lvalue
  (DeclRefExpr 0x947c5f8 <col:16> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9475230 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x947c690 </usr/include/c++/4.6/tr1/shared_ptr.h:620:9, col:11>)

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp>(const __shared_ptr<_Tp1, _Lp> &__r, std::tr1::__dynamic_cast_tag) : _M_ptr((CXXDynamicCastExpr 0x947c700 </usr/include/c++/4.6/tr1/shared_ptr.h:624:11, col:49> 'element_type *' dynamic_cast<element_type *> <Dependent>
  (CXXDependentScopeMemberExpr 0x947c6b8 <col:39, col:43> '<dependent type>' lvalue
    (DeclRefExpr 0x947c6a0 <col:39> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9475550 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
), _M_refcount((CXXDependentScopeMemberExpr 0x947c770 </usr/include/c++/4.6/tr1/shared_ptr.h:625:16, col:20> '<dependent type>' lvalue
  (DeclRefExpr 0x947c758 <col:16> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9475550 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x947c9f0 </usr/include/c++/4.6/tr1/shared_ptr.h:626:9, line:629:2>
  (IfStmt 0x947c9d0 <line:627:4, line:628:40>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x947c888 <line:627:8, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x947c838 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (MemberExpr 0x947c800 <col:8> '_Tp *' lvalue ->_M_ptr 0x9478160
        (CXXThisExpr 0x947c7f0 <col:8> '__shared_ptr<_Tp, _Lp> *' this))
      (IntegerLiteral 0x947c820 <col:18> 'int' 0))
    (BinaryOperator 0x947c9b8 <line:628:6, col:40> '<dependent type>' '='
      (MemberExpr 0x947c8c0 <col:6> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
        (CXXThisExpr 0x947c8b0 <col:6> '__shared_ptr<_Tp, _Lp> *' this))
      (CXXUnresolvedConstructExpr 0x947c9a0 <col:20, col:40> '__shared_count<_Lp>'))
    <<<NULL>>>))

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp> &operator=(const __shared_ptr<_Tp1, _Lp> &__r) (CompoundStmt 0x947cb70 </usr/include/c++/4.6/tr1/shared_ptr.h:634:9, line:638:2>
  (BinaryOperator 0x947ca88 <line:635:4, col:17> '<dependent type>' '='
    (MemberExpr 0x947ca18 <col:4> '_Tp *' lvalue ->_M_ptr 0x9478160
      (CXXThisExpr 0x947ca08 <col:4> '__shared_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x947ca50 <col:13, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x947ca38 <col:13> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9475870 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
  (BinaryOperator 0x947cb20 <line:636:4, col:22> '<dependent type>' '='
    (MemberExpr 0x947cab0 <col:4> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
      (CXXThisExpr 0x947caa0 <col:4> '__shared_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x947cae8 <col:18, col:22> '<dependent type>' lvalue
      (DeclRefExpr 0x947cad0 <col:18> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9475870 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
  (ReturnStmt 0x947cb60 <line:637:4, col:12>
    (UnaryOperator 0x947cb48 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x947cb38 <col:12> '__shared_ptr<_Tp, _Lp> *' this))))

;
            template <typename _Tp1> __shared_ptr<_Tp, _Lp> &operator=(std::auto_ptr<_Tp1> &__r) (CompoundStmt 0x947cc88 </usr/include/c++/4.6/tr1/shared_ptr.h:644:9, line:647:2>
  (CallExpr 0x947cc30 <line:645:4, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x947cbd0 <col:4, col:22> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x947cbb0 <col:4, col:20> '__shared_ptr<_Tp, _Lp>'
        (DeclRefExpr 0x947cb98 <col:17> 'std::auto_ptr<_Tp1>':'auto_ptr<_Tp1>' lvalue ParmVar 0x9475b30 '__r' 'std::auto_ptr<_Tp1> &')))
    (UnaryOperator 0x947cc18 <col:27, col:28> '<dependent type>' prefix '*'
      (CXXThisExpr 0x947cc08 <col:28> '__shared_ptr<_Tp, _Lp> *' this)))
  (ReturnStmt 0x947cc78 <line:646:4, col:12>
    (UnaryOperator 0x947cc60 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x947cc50 <col:12> '__shared_ptr<_Tp, _Lp> *' this))))

;
            void reset() (CompoundStmt 0x947cd40 </usr/include/c++/4.6/tr1/shared_ptr.h:652:7, col:37>
  (CallExpr 0x947cd20 <col:9, col:34> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x947ccc0 <col:9, col:24> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x947cca8 <col:9, col:22> '__shared_ptr<_Tp, _Lp>'))
    (UnaryOperator 0x947cd08 <col:29, col:30> '<dependent type>' prefix '*'
      (CXXThisExpr 0x947ccf8 <col:30> '__shared_ptr<_Tp, _Lp> *' this))))


            template <typename _Tp1> void reset(_Tp1 *__p) (CompoundStmt 0x947ce28 </usr/include/c++/4.6/tr1/shared_ptr.h:657:9, line:661:2>
  (NullStmt 0x947cd58 <line:659:52>)
  (CallExpr 0x947ce08 <line:660:4, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x947cda8 <col:4, col:22> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x947cd88 <col:4, col:20> '__shared_ptr<_Tp, _Lp>'
        (DeclRefExpr 0x947cd70 <col:17> '_Tp1 *' lvalue ParmVar 0x9475d70 '__p' '_Tp1 *')))
    (UnaryOperator 0x947cdf0 <col:27, col:28> '<dependent type>' prefix '*'
      (CXXThisExpr 0x947cde0 <col:28> '__shared_ptr<_Tp, _Lp> *' this))))

;
            template <typename _Tp1, typename _Deleter> void reset(_Tp1 *__p, _Deleter __d) (CompoundStmt 0x947cf18 </usr/include/c++/4.6/tr1/shared_ptr.h:666:9, col:47>
  (CallExpr 0x947cef8 <col:11, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x947ce98 <col:11, col:34> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x947ce78 <col:11, col:32> '__shared_ptr<_Tp, _Lp>'
        (DeclRefExpr 0x947ce48 <col:24> '_Tp1 *' lvalue ParmVar 0x9475f60 '__p' '_Tp1 *')
        (DeclRefExpr 0x947ce60 <col:29> '_Deleter' lvalue ParmVar 0x9475fa0 '__d' '_Deleter')))
    (UnaryOperator 0x947cee0 <col:39, col:40> '<dependent type>' prefix '*'
      (CXXThisExpr 0x947ced0 <col:40> '__shared_ptr<_Tp, _Lp> *' this))))

;
            typename std::tr1::add_reference<_Tp>::type operator*() const (CompoundStmt 0x947cfb0 </usr/include/c++/4.6/tr1/shared_ptr.h:671:7, line:674:7>
  (NullStmt 0x947cf30 <line:672:36>)
  (ReturnStmt 0x947cfa0 <line:673:2, col:10>
    (UnaryOperator 0x947cf88 <col:9, col:10> '<dependent type>' prefix '*'
      (MemberExpr 0x947cf68 <col:10> '_Tp *const' lvalue ->_M_ptr 0x9478160
        (CXXThisExpr 0x947cf58 <col:10> 'const __shared_ptr<_Tp, _Lp> *' this)))))


            _Tp *operator->() const (CompoundStmt 0x947d018 </usr/include/c++/4.6/tr1/shared_ptr.h:678:7, line:681:7>
  (NullStmt 0x947cfc8 <line:679:36>)
  (ReturnStmt 0x947d008 <line:680:2, col:9>
    (MemberExpr 0x947cfe8 <col:9> '_Tp *const' lvalue ->_M_ptr 0x9478160
      (CXXThisExpr 0x947cfd8 <col:9> 'const __shared_ptr<_Tp, _Lp> *' this))))


            _Tp *get() const (CompoundStmt 0x947d070 </usr/include/c++/4.6/tr1/shared_ptr.h:685:7, col:24>
  (ReturnStmt 0x947d060 <col:9, col:16>
    (MemberExpr 0x947d040 <col:16> '_Tp *const' lvalue ->_M_ptr 0x9478160
      (CXXThisExpr 0x947d030 <col:16> 'const __shared_ptr<_Tp, _Lp> *' this))))


        private:
        private:
            typedef _Tp *__shared_ptr<_Tp, _Lp>::*__unspecified_bool_type;
        public:
        public:
            __unspecified_bool_type operator __unspecified_bool_type() const (CompoundStmt 0x947d1e8 </usr/include/c++/4.6/tr1/shared_ptr.h:693:7, col:57>
  (ReturnStmt 0x947d1d8 <col:9, col:49>
    (ConditionalOperator 0x947d1b8 <col:16, col:49> '<dependent type>'
      (CXXOperatorCallExpr 0x947d120 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x947d0d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
        (MemberExpr 0x947d098 <col:16> '_Tp *const' lvalue ->_M_ptr 0x9478160
          (CXXThisExpr 0x947d088 <col:16> 'const __shared_ptr<_Tp, _Lp> *' this))
        (IntegerLiteral 0x947d0b8 <col:26> 'int' 0))
      (IntegerLiteral 0x947d148 <col:30> 'int' 0)
      (UnaryOperator 0x947d1a0 <col:34, col:49> '<dependent type>' prefix '&'
        (DeclRefExpr 0x947d17c <col:35, col:49> '_Tp *' lvalue Field 0x9478160 '_M_ptr' '_Tp *')))))


            bool unique() const (CompoundStmt 0x947d298 </usr/include/c++/4.6/tr1/shared_ptr.h:697:7, col:41>
  (ReturnStmt 0x947d288 <col:9, col:38>
    (CallExpr 0x947d268 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x947d230 <col:16, col:28> '<dependent type>' lvalue
        (MemberExpr 0x947d210 <col:16> 'const __shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
          (CXXThisExpr 0x947d200 <col:16> 'const __shared_ptr<_Tp, _Lp> *' this))))))


            long use_count() const (CompoundStmt 0x947d348 </usr/include/c++/4.6/tr1/shared_ptr.h:701:7, col:48>
  (ReturnStmt 0x947d338 <col:9, col:45>
    (CallExpr 0x947d318 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x947d2e0 <col:16, col:28> '<dependent type>' lvalue
        (MemberExpr 0x947d2c0 <col:16> 'const __shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
          (CXXThisExpr 0x947d2b0 <col:16> 'const __shared_ptr<_Tp, _Lp> *' this))))))


            void swap(__shared_ptr<_Tp, _Lp> &__other) (CompoundStmt 0x947d540 </usr/include/c++/4.6/tr1/shared_ptr.h:705:7, line:708:7>
  (CallExpr 0x947d440 <line:706:2, col:34> '<dependent type>'
    (UnresolvedLookupExpr 0x947d380 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780 0x931c370)
    (MemberExpr 0x947d3d0 <col:12> '_Tp *' lvalue ->_M_ptr 0x9478160
      (CXXThisExpr 0x947d3c0 <col:12> '__shared_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x947d408 <col:20, col:28> '<dependent type>' lvalue
      (DeclRefExpr 0x947d3f0 <col:20> '__shared_ptr<_Tp, _Lp>':'__shared_ptr<_Tp, _Lp>' lvalue ParmVar 0x94767d0 '__other' '__shared_ptr<_Tp, _Lp> &')))
  (CallExpr 0x947d520 <line:707:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x947d498 <col:2, col:14> '<dependent type>' lvalue
      (MemberExpr 0x947d478 <col:2> '__shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
        (CXXThisExpr 0x947d468 <col:2> '__shared_ptr<_Tp, _Lp> *' this)))
    (CXXDependentScopeMemberExpr 0x947d4e8 <col:22, col:30> '<dependent type>' lvalue
      (DeclRefExpr 0x947d4cc <col:22> '__shared_ptr<_Tp, _Lp>':'__shared_ptr<_Tp, _Lp>' lvalue ParmVar 0x94767d0 '__other' '__shared_ptr<_Tp, _Lp> &'))))


        private:
        private:
            void *_M_get_deleter(const std::type_info &__ti) const (CompoundStmt 0x947d608 </usr/include/c++/4.6/tr1/shared_ptr.h:713:7, col:50>
  (ReturnStmt 0x947d5f8 <col:9, col:47>
    (CallExpr 0x947d5d8 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x947d588 <col:16, col:28> '<dependent type>' lvalue
        (MemberExpr 0x947d568 <col:16> 'const __shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
          (CXXThisExpr 0x947d558 <col:16> 'const __shared_ptr<_Tp, _Lp> *' this)))
      (DeclRefExpr 0x947d5bc <col:43> 'const std::type_info':'const class std::type_info' lvalue ParmVar 0x9476950 '__ti' 'const std::type_info &'))))


            template <typename _Tp1, __gnu_cxx::_Lock_policy _Lp1> bool _M_less(const __shared_ptr<_Tp1, _Lp1> &__rhs) const (CompoundStmt 0x947d718 </usr/include/c++/4.6/tr1/shared_ptr.h:718:9, col:51>
  (ReturnStmt 0x947d708 <col:11, col:38>
    (CXXOperatorCallExpr 0x947d6e0 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x947d6a0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (MemberExpr 0x947d630 <col:18> 'const __shared_count<_Lp>' lvalue ->_M_refcount 0x9478280
        (CXXThisExpr 0x947d620 <col:18> 'const __shared_ptr<_Tp, _Lp> *' this))
      (CXXDependentScopeMemberExpr 0x947d668 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x947d650 <col:32> 'const __shared_ptr<_Tp1, _Lp1>' lvalue ParmVar 0x9476c80 '__rhs' 'const __shared_ptr<_Tp1, _Lp1> &')))))

;
            ;
            ;
            ;
            ;
            ;
            ;
            _Tp *_M_ptr;
            __shared_count<_Lp> _M_refcount;
        };
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp> inline void swap(__shared_ptr<_Tp, _Lp> &__a, __shared_ptr<_Tp, _Lp> &__b) (CompoundStmt 0x947e028 </usr/include/c++/4.6/tr1/shared_ptr.h:750:5, col:22>
  (CallExpr 0x947e008 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x947dfb8 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x947dfa0 <col:7> '__shared_ptr<_Tp, _Lp>' lvalue ParmVar 0x947dcf0 '__a' '__shared_ptr<_Tp, _Lp> &'))
    (DeclRefExpr 0x947dfec <col:16> '__shared_ptr<_Tp, _Lp>' lvalue ParmVar 0x947de70 '__b' '__shared_ptr<_Tp, _Lp> &')))

;
        template <typename _Tp, typename _Tp1, __gnu_cxx::_Lock_policy _Lp> inline __shared_ptr<_Tp, _Lp> static_pointer_cast(const __shared_ptr<_Tp1, _Lp> &__r) (CompoundStmt 0x947e898 </usr/include/c++/4.6/tr1/shared_ptr.h:761:5, col:64>
  (ReturnStmt 0x947e888 <col:7, col:61>
    (CXXUnresolvedConstructExpr 0x947e868 <col:14, col:61> '__shared_ptr<_Tp, _Lp>'
      (DeclRefExpr 0x947e698 <col:37> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x947e430 '__r' 'const __shared_ptr<_Tp1, _Lp> &')
      (CXXTemporaryObjectExpr 0x947e840 <col:42, col:60> 'struct std::tr1::__static_cast_tag''void (void) throw()' zeroing))))

;
        template <typename _Tp, typename _Tp1, __gnu_cxx::_Lock_policy _Lp> inline __shared_ptr<_Tp, _Lp> const_pointer_cast(const __shared_ptr<_Tp1, _Lp> &__r) (CompoundStmt 0x947f028 </usr/include/c++/4.6/tr1/shared_ptr.h:771:5, col:63>
  (ReturnStmt 0x947f018 <col:7, col:60>
    (CXXUnresolvedConstructExpr 0x947eff8 <col:14, col:60> '__shared_ptr<_Tp, _Lp>'
      (DeclRefExpr 0x947ee28 <col:37> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x947ebe0 '__r' 'const __shared_ptr<_Tp1, _Lp> &')
      (CXXTemporaryObjectExpr 0x947efd0 <col:42, col:59> 'struct std::tr1::__const_cast_tag''void (void) throw()' zeroing))))

;
        template <typename _Tp, typename _Tp1, __gnu_cxx::_Lock_policy _Lp> inline __shared_ptr<_Tp, _Lp> dynamic_pointer_cast(const __shared_ptr<_Tp1, _Lp> &__r) (CompoundStmt 0x947f7b8 </usr/include/c++/4.6/tr1/shared_ptr.h:781:5, col:65>
  (ReturnStmt 0x947f7a8 <col:7, col:62>
    (CXXUnresolvedConstructExpr 0x947f788 <col:14, col:62> '__shared_ptr<_Tp, _Lp>'
      (DeclRefExpr 0x947f5b8 <col:37> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x947f370 '__r' 'const __shared_ptr<_Tp1, _Lp> &')
      (CXXTemporaryObjectExpr 0x947f760 <col:42, col:61> 'struct std::tr1::__dynamic_cast_tag''void (void) throw()' zeroing))))

;
        template <typename _Ch, typename _Tr, typename _Tp, __gnu_cxx::_Lock_policy _Lp> std::basic_ostream<_Ch, _Tr> &operator<<(std::basic_ostream<_Ch, _Tr> &__os, const __shared_ptr<_Tp, _Lp> &__p) (CompoundStmt 0x9481ce8 </usr/include/c++/4.6/tr1/shared_ptr.h:788:5, line:791:5>
  (CXXOperatorCallExpr 0x9481c98 <line:789:7, col:23> '<dependent type>'
    (UnresolvedLookupExpr 0x9481c60 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x947ff20)
    (DeclRefExpr 0x947ff50 <col:7> 'std::basic_ostream<_Ch, _Tr>':'basic_ostream<_Ch, _Tr>' lvalue ParmVar 0x947fbe0 '__os' 'std::basic_ostream<_Ch, _Tr> &')
    (CallExpr 0x9481c40 <col:15, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9481c08 <col:15, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x947ff68 <col:15> 'const __shared_ptr<_Tp, _Lp>' lvalue ParmVar 0x947fdd0 '__p' 'const __shared_ptr<_Tp, _Lp> &'))))
  (ReturnStmt 0x9481cd8 <line:790:7, col:14>
    (DeclRefExpr 0x9481cbc <col:14> 'std::basic_ostream<_Ch, _Tr>':'basic_ostream<_Ch, _Tr>' lvalue ParmVar 0x947fbe0 '__os' 'std::basic_ostream<_Ch, _Tr> &')))

;
        template <typename _Del, typename _Tp, __gnu_cxx::_Lock_policy _Lp> inline _Del *get_deleter(const __shared_ptr<_Tp, _Lp> &__p) (CompoundStmt 0x9482158 </usr/include/c++/4.6/tr1/shared_ptr.h:797:5, line:803:5>
  (ReturnStmt 0x9482148 <line:799:7, col:65>
    (CXXStaticCastExpr 0x9482130 <col:14, col:65> '_Del *' static_cast<_Del *> <Dependent>
      (CallExpr 0x9482100 <col:33, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x94820a8 <col:33, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x948208c <col:33> 'const __shared_ptr<_Tp, _Lp>' lvalue ParmVar 0x9481f40 '__p' 'const __shared_ptr<_Tp, _Lp> &'))
        (CXXTypeidExpr 0x94820e8 <col:52, col:63> 'const class std::type_info' lvalue)))))

;
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x9471544 </usr/include/c++/4.6/tr1/shared_ptr.h:503:45> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __weak_ptr {
            class __weak_ptr;
        public:
        public:
            typedef _Tp element_type;
            __weak_ptr<_Tp, _Lp>() : _M_ptr((IntegerLiteral 0x9484630 </usr/include/c++/4.6/tr1/shared_ptr.h:813:16> 'int' 0)
), _M_refcount() (CompoundStmt 0x94846c0 </usr/include/c++/4.6/tr1/shared_ptr.h:814:7, col:9>)


            template <typename _Tp1> __weak_ptr<_Tp, _Lp>(const __weak_ptr<_Tp1, _Lp> &__r) : _M_refcount((CXXDependentScopeMemberExpr 0x94846e8 </usr/include/c++/4.6/tr1/shared_ptr.h:834:16, col:20> '<dependent type>' lvalue
  (DeclRefExpr 0x94846d0 <col:16> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9482620 '__r' 'const __weak_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x9484888 </usr/include/c++/4.6/tr1/shared_ptr.h:835:9, line:838:2>
  (BinaryOperator 0x9484870 <line:837:4, col:28> '<dependent type>' '='
    (MemberExpr 0x9484788 <col:4> '_Tp *' lvalue ->_M_ptr 0x94844e0
      (CXXThisExpr 0x9484778 <col:4> '__weak_ptr<_Tp, _Lp> *' this))
    (CallExpr 0x9484850 <col:13, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9484818 <col:13, col:24> '<dependent type>' lvalue
        (CallExpr 0x94847f8 <col:13, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x94847c0 <col:13, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x94847a8 <col:13> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9482620 '__r' 'const __weak_ptr<_Tp1, _Lp> &')))))))

;
            template <typename _Tp1> __weak_ptr<_Tp, _Lp>(const __shared_ptr<_Tp1, _Lp> &__r) : _M_ptr((CXXDependentScopeMemberExpr 0x94848b8 </usr/include/c++/4.6/tr1/shared_ptr.h:842:11, col:15> '<dependent type>' lvalue
  (DeclRefExpr 0x948489c <col:11> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x94828e0 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
), _M_refcount((CXXDependentScopeMemberExpr 0x9484940 </usr/include/c++/4.6/tr1/shared_ptr.h:842:36, col:40> '<dependent type>' lvalue
  (DeclRefExpr 0x9484928 <col:36> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x94828e0 '__r' 'const __shared_ptr<_Tp1, _Lp> &'))
) (CompoundStmt 0x94849c0 </usr/include/c++/4.6/tr1/shared_ptr.h:843:9, col:73>)

;
            template <typename _Tp1> __weak_ptr<_Tp, _Lp> &operator=(const __weak_ptr<_Tp1, _Lp> &__r) (CompoundStmt 0x9484bb0 </usr/include/c++/4.6/tr1/shared_ptr.h:848:9, line:852:2>
  (BinaryOperator 0x9484ac8 <line:849:4, col:28> '<dependent type>' '='
    (MemberExpr 0x94849e0 <col:4> '_Tp *' lvalue ->_M_ptr 0x94844e0
      (CXXThisExpr 0x94849d0 <col:4> '__weak_ptr<_Tp, _Lp> *' this))
    (CallExpr 0x9484aa8 <col:13, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9484a70 <col:13, col:24> '<dependent type>' lvalue
        (CallExpr 0x9484a50 <col:13, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9484a18 <col:13, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9484a00 <col:13> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9482ba0 '__r' 'const __weak_ptr<_Tp1, _Lp> &'))))))
  (BinaryOperator 0x9484b60 <line:850:4, col:22> '<dependent type>' '='
    (MemberExpr 0x9484af0 <col:4> '__weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
      (CXXThisExpr 0x9484ae0 <col:4> '__weak_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x9484b28 <col:18, col:22> '<dependent type>' lvalue
      (DeclRefExpr 0x9484b10 <col:18> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9482ba0 '__r' 'const __weak_ptr<_Tp1, _Lp> &')))
  (ReturnStmt 0x9484ba0 <line:851:4, col:12>
    (UnaryOperator 0x9484b88 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9484b78 <col:12> '__weak_ptr<_Tp, _Lp> *' this))))

;
            template <typename _Tp1> __weak_ptr<_Tp, _Lp> &operator=(const __shared_ptr<_Tp1, _Lp> &__r) (CompoundStmt 0x9484d38 </usr/include/c++/4.6/tr1/shared_ptr.h:857:9, line:861:2>
  (BinaryOperator 0x9484c50 <line:858:4, col:17> '<dependent type>' '='
    (MemberExpr 0x9484be0 <col:4> '_Tp *' lvalue ->_M_ptr 0x94844e0
      (CXXThisExpr 0x9484bd0 <col:4> '__weak_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x9484c18 <col:13, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x9484c00 <col:13> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9482e90 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
  (BinaryOperator 0x9484ce8 <line:859:4, col:22> '<dependent type>' '='
    (MemberExpr 0x9484c78 <col:4> '__weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
      (CXXThisExpr 0x9484c68 <col:4> '__weak_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x9484cb0 <col:18, col:22> '<dependent type>' lvalue
      (DeclRefExpr 0x9484c98 <col:18> 'const __shared_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9482e90 '__r' 'const __shared_ptr<_Tp1, _Lp> &')))
  (ReturnStmt 0x9484d28 <line:860:4, col:12>
    (UnaryOperator 0x9484d10 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9484d00 <col:12> '__weak_ptr<_Tp, _Lp> *' this))))

;
            __shared_ptr<_Tp, _Lp> lock() const (CompoundStmt 0x9485288 </usr/include/c++/4.6/tr1/shared_ptr.h:865:7, line:889:7>
  (IfStmt 0x9484f20 <line:868:2, line:869:43>
    <<<NULL>>>
    (CallExpr 0x9484da8 <line:868:6, col:14> '<dependent type>'
      (MemberExpr 0x9484d88 <col:6> '<bound member function type>' ->expired 0x9483230
        (CXXThisExpr 0x9484d78 <col:6> 'const __weak_ptr<_Tp, _Lp> *' this)))
    (ReturnStmt 0x9484f10 <line:869:4, col:43>
      (CXXUnresolvedConstructExpr 0x9484ef8 <col:11, col:43> '__shared_ptr<element_type, _Lp>'))
    <<<NULL>>>)
  (IfStmt 0x94850d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/tr1/shared_ptr.h:874:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9484f40 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x94850c0 </usr/include/c++/4.6/tr1/shared_ptr.h:872:4, line:874:4>
      (ReturnStmt 0x94850b0 <line:873:6, col:50>
        (CXXUnresolvedConstructExpr 0x9485090 <col:13, col:50> '__shared_ptr<element_type, _Lp>'
          (UnaryOperator 0x9485078 <col:45, col:46> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9485068 <col:46> 'const __weak_ptr<_Tp, _Lp> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x9485268 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/tr1/shared_ptr.h:881:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x94850f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9485250 </usr/include/c++/4.6/tr1/shared_ptr.h:876:4, line:881:4>
      (ReturnStmt 0x9485240 <line:880:6, col:45>
        (CXXUnresolvedConstructExpr 0x9485228 <col:13, col:45> '__shared_ptr<element_type, _Lp>')))
    <<<NULL>>>))


            long use_count() const (CompoundStmt 0x9485340 </usr/include/c++/4.6/tr1/shared_ptr.h:893:7, col:48>
  (ReturnStmt 0x9485330 <col:9, col:45>
    (CallExpr 0x9485310 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x94852d8 <col:16, col:28> '<dependent type>' lvalue
        (MemberExpr 0x94852b8 <col:16> 'const __weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
          (CXXThisExpr 0x94852a8 <col:16> 'const __weak_ptr<_Tp, _Lp> *' this))))))


            bool expired() const (CompoundStmt 0x9485480 </usr/include/c++/4.6/tr1/shared_ptr.h:897:7, col:53>
  (ReturnStmt 0x9485470 <col:9, col:50>
    (CXXOperatorCallExpr 0x9485448 <col:16, col:50> '<dependent type>'
      (UnresolvedLookupExpr 0x94853f8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x94853c0 <col:16, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9485388 <col:16, col:28> '<dependent type>' lvalue
          (MemberExpr 0x9485368 <col:16> 'const __weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
            (CXXThisExpr 0x9485358 <col:16> 'const __weak_ptr<_Tp, _Lp> *' this))))
      (IntegerLiteral 0x94853e0 <col:50> 'int' 0))))


            void reset() (CompoundStmt 0x9485538 </usr/include/c++/4.6/tr1/shared_ptr.h:901:7, col:35>
  (CallExpr 0x9485518 <col:9, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x94854b8 <col:9, col:22> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x94854a0 <col:9, col:20> '__weak_ptr<_Tp, _Lp>'))
    (UnaryOperator 0x9485500 <col:27, col:28> '<dependent type>' prefix '*'
      (CXXThisExpr 0x94854f0 <col:28> '__weak_ptr<_Tp, _Lp> *' this))))


            void swap(__weak_ptr<_Tp, _Lp> &__s) (CompoundStmt 0x9485730 </usr/include/c++/4.6/tr1/shared_ptr.h:905:7, line:908:7>
  (CallExpr 0x9485630 <line:906:2, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9485570 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780 0x931c370)
    (MemberExpr 0x94855c0 <col:12> '_Tp *' lvalue ->_M_ptr 0x94844e0
      (CXXThisExpr 0x94855b0 <col:12> '__weak_ptr<_Tp, _Lp> *' this))
    (CXXDependentScopeMemberExpr 0x94855f8 <col:20, col:24> '<dependent type>' lvalue
      (DeclRefExpr 0x94855e0 <col:20> '__weak_ptr<_Tp, _Lp>' lvalue ParmVar 0x9483320 '__s' '__weak_ptr<_Tp, _Lp> &')))
  (CallExpr 0x9485710 <line:907:2, col:37> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9485688 <col:2, col:14> '<dependent type>' lvalue
      (MemberExpr 0x9485668 <col:2> '__weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
        (CXXThisExpr 0x9485658 <col:2> '__weak_ptr<_Tp, _Lp> *' this)))
    (CXXDependentScopeMemberExpr 0x94856d8 <col:22, col:26> '<dependent type>' lvalue
      (DeclRefExpr 0x94856bc <col:22> '__weak_ptr<_Tp, _Lp>' lvalue ParmVar 0x9483320 '__s' '__weak_ptr<_Tp, _Lp> &'))))


        private:
        private:
            void _M_assign(_Tp *__ptr, const __shared_count<_Lp> &__refcount) (CompoundStmt 0x9485808 </usr/include/c++/4.6/tr1/shared_ptr.h:914:7, line:917:7>
  (BinaryOperator 0x9485790 <line:915:2, col:11> '<dependent type>' '='
    (MemberExpr 0x9485758 <col:2> '_Tp *' lvalue ->_M_ptr 0x94844e0
      (CXXThisExpr 0x9485748 <col:2> '__weak_ptr<_Tp, _Lp> *' this))
    (DeclRefExpr 0x9485778 <col:11> '_Tp *' lvalue ParmVar 0x9483480 '__ptr' '_Tp *'))
  (BinaryOperator 0x94857f0 <line:916:2, col:16> '<dependent type>' '='
    (MemberExpr 0x94857b8 <col:2> '__weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
      (CXXThisExpr 0x94857a8 <col:2> '__weak_ptr<_Tp, _Lp> *' this))
    (DeclRefExpr 0x94857d8 <col:16> 'const __shared_count<_Lp>' lvalue ParmVar 0x94835b0 '__refcount' 'const __shared_count<_Lp> &')))


            template <typename _Tp1> bool _M_less(const __weak_ptr<_Tp1, _Lp> &__rhs) const (CompoundStmt 0x9485918 </usr/include/c++/4.6/tr1/shared_ptr.h:922:9, col:51>
  (ReturnStmt 0x9485908 <col:11, col:38>
    (CXXOperatorCallExpr 0x94858e0 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x94858a0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (MemberExpr 0x9485830 <col:18> 'const __weak_count<_Lp>' lvalue ->_M_refcount 0x9484600
        (CXXThisExpr 0x9485820 <col:18> 'const __weak_ptr<_Tp, _Lp> *' this))
      (CXXDependentScopeMemberExpr 0x9485868 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9485850 <col:32> 'const __weak_ptr<_Tp1, _Lp>' lvalue ParmVar 0x9483860 '__rhs' 'const __weak_ptr<_Tp1, _Lp> &')))))

;
            ;
            ;
            ;
            ;
            ;
            _Tp *_M_ptr;
            __weak_count<_Lp> _M_refcount;
        };
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp> inline void swap(__weak_ptr<_Tp, _Lp> &__a, __weak_ptr<_Tp, _Lp> &__b) (CompoundStmt 0x94879e8 </usr/include/c++/4.6/tr1/shared_ptr.h:943:5, col:22>
  (CallExpr 0x94879c8 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9487978 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9487960 <col:7> '__weak_ptr<_Tp, _Lp>' lvalue ParmVar 0x94876b0 '__a' '__weak_ptr<_Tp, _Lp> &'))
    (DeclRefExpr 0x94879ac <col:16> '__weak_ptr<_Tp, _Lp>' lvalue ParmVar 0x9487830 '__b' '__weak_ptr<_Tp, _Lp> &')))

;
        template <typename _Tp, __gnu_cxx::_Lock_policy _Lp = (DeclRefExpr 0x94717a4 </usr/include/c++/4.6/tr1/shared_ptr.h:506:45> 'const enum __gnu_cxx::_Lock_policy' lvalue Var 0x93dfb10 '__default_lock_policy' 'const enum __gnu_cxx::_Lock_policy')
> class __enable_shared_from_this {
            class __enable_shared_from_this;
        protected:
        protected:
            __enable_shared_from_this<_Tp, _Lp>() (CompoundStmt 0x9488c00 </usr/include/c++/4.6/tr1/shared_ptr.h:950:35, col:37>)


            __enable_shared_from_this<_Tp, _Lp>(const __enable_shared_from_this<_Tp, _Lp> &) (CompoundStmt 0x9488c10 </usr/include/c++/4.6/tr1/shared_ptr.h:952:67, col:69>)


            __enable_shared_from_this<_Tp, _Lp> &operator=(const __enable_shared_from_this<_Tp, _Lp> &) (CompoundStmt 0x9488c70 </usr/include/c++/4.6/tr1/shared_ptr.h:956:7, col:23>
  (ReturnStmt 0x9488c60 <col:9, col:17>
    (UnaryOperator 0x9488c48 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9488c38 <col:17> '__enable_shared_from_this<_Tp, _Lp> *' this))))


            void ~__enable_shared_from_this<_Tp, _Lp>() (CompoundStmt 0x9488c88 </usr/include/c++/4.6/tr1/shared_ptr.h:958:36, col:38>)


        public:
        public:
            __shared_ptr<_Tp, _Lp> shared_from_this() (CompoundStmt 0x9488e30 </usr/include/c++/4.6/tr1/shared_ptr.h:963:7, col:60>
  (ReturnStmt 0x9488e20 <col:9, col:57>
    (CXXUnresolvedConstructExpr 0x9488e00 <col:16, col:57> '__shared_ptr<_Tp, _Lp>'
      (CXXDependentScopeMemberExpr 0x9488dc8 <col:39, col:45> '<dependent type>' lvalue
        (CXXThisExpr 0x9488db8 <col:39> '__enable_shared_from_this<_Tp, _Lp> *' this)))))


            __shared_ptr<const _Tp, _Lp> shared_from_this() const (CompoundStmt 0x9488fe0 </usr/include/c++/4.6/tr1/shared_ptr.h:967:7, col:66>
  (ReturnStmt 0x9488fd0 <col:9, col:63>
    (CXXUnresolvedConstructExpr 0x9488fb0 <col:16, col:63> '__shared_ptr<const _Tp, _Lp>'
      (CXXDependentScopeMemberExpr 0x9488f78 <col:45, col:51> '<dependent type>' lvalue
        (CXXThisExpr 0x9488f68 <col:45> 'const __enable_shared_from_this<_Tp, _Lp> *' this)))))


        private:
        private:
            template <typename _Tp1> void _M_weak_assign(_Tp1 *__p, const __shared_count<_Lp> &__n) const (CompoundStmt 0x94890b8 </usr/include/c++/4.6/tr1/shared_ptr.h:973:9, col:45>
  (CallExpr 0x9489090 <col:11, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9489028 <col:11, col:24> '<dependent type>' lvalue
      (MemberExpr 0x9489008 <col:11> '__weak_ptr<_Tp, _Lp>' lvalue ->_M_weak_this 0x9488bd0
        (CXXThisExpr 0x9488ff8 <col:11> 'const __enable_shared_from_this<_Tp, _Lp> *' this)))
    (DeclRefExpr 0x948905c <col:34> '_Tp1 *' lvalue ParmVar 0x94884b0 '__p' '_Tp1 *')
    (DeclRefExpr 0x9489074 <col:39> 'const __shared_count<_Lp>' lvalue ParmVar 0x94885c0 '__n' 'const __shared_count<_Lp> &')))

;
            ;
            mutable __weak_ptr<_Tp, _Lp> _M_weak_this;
        };
        template <typename _Tp = const io_data_t> class shared_ptr
template <typename _Tp = io_data_t> class shared_ptr
template <typename _Tp> class shared_ptr : public __shared_ptr<_Tp> {
            class shared_ptr;
        public:
        public:
            shared_ptr<_Tp>() : __shared_ptr<_Tp>() (CompoundStmt 0x948b000 </usr/include/c++/4.6/tr1/shared_ptr.h:997:29, col:31>)


            template <typename _Tp1> shared_ptr<_Tp>(_Tp1 *__p) : __shared_ptr<_Tp>((DeclRefExpr 0x948b0c0 </usr/include/c++/4.6/tr1/shared_ptr.h:1002:22> '_Tp1 *' lvalue ParmVar 0x94896e0 '__p' '_Tp1 *')
) (CompoundStmt 0x948b120 </usr/include/c++/4.6/tr1/shared_ptr.h:1002:27, col:29>)

;
            template <typename _Tp1, typename _Deleter> shared_ptr<_Tp>(_Tp1 *__p, _Deleter __d) : __shared_ptr<_Tp>((DeclRefExpr 0x948b1e0 </usr/include/c++/4.6/tr1/shared_ptr.h:1006:22> '_Tp1 *' lvalue ParmVar 0x94898e0 '__p' '_Tp1 *')
, (DeclRefExpr 0x948b1f8 </usr/include/c++/4.6/tr1/shared_ptr.h:1006:27> '_Deleter' lvalue ParmVar 0x9489920 '__d' '_Deleter')
) (CompoundStmt 0x948b250 </usr/include/c++/4.6/tr1/shared_ptr.h:1006:32, col:34>)

;
            template <typename _Tp1> shared_ptr<_Tp>(const shared_ptr<_Tp1> &__r) : __shared_ptr<_Tp>((DeclRefExpr 0x948b310 </usr/include/c++/4.6/tr1/shared_ptr.h:1010:22> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x9489bb0 '__r' 'const shared_ptr<_Tp1> &')
) (CompoundStmt 0x948b370 </usr/include/c++/4.6/tr1/shared_ptr.h:1010:27, col:29>)

;
            template <typename _Tp1> shared_ptr<_Tp>(const weak_ptr<_Tp1> &__r) : __shared_ptr<_Tp>((DeclRefExpr 0x948b430 </usr/include/c++/4.6/tr1/shared_ptr.h:1015:22> 'const weak_ptr<_Tp1>' lvalue ParmVar 0x9489e60 '__r' 'const weak_ptr<_Tp1> &')
) (CompoundStmt 0x948b490 </usr/include/c++/4.6/tr1/shared_ptr.h:1015:27, col:29>)

;
            template <typename _Tp1> shared_ptr<_Tp>(std::auto_ptr<_Tp1> &__r) : __shared_ptr<_Tp>((DeclRefExpr 0x948b550 </usr/include/c++/4.6/tr1/shared_ptr.h:1021:22> 'std::auto_ptr<_Tp1>':'auto_ptr<_Tp1>' lvalue ParmVar 0x948a100 '__r' 'std::auto_ptr<_Tp1> &')
) (CompoundStmt 0x948b5b0 </usr/include/c++/4.6/tr1/shared_ptr.h:1021:27, col:29>)

;
            template <typename _Tp1> shared_ptr<_Tp>(const shared_ptr<_Tp1> &__r, std::tr1::__static_cast_tag) : __shared_ptr<_Tp>((DeclRefExpr 0x948b670 </usr/include/c++/4.6/tr1/shared_ptr.h:1026:22> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948a340 '__r' 'const shared_ptr<_Tp1> &')
, (CXXTemporaryObjectExpr 0x948bed0 </usr/include/c++/4.6/tr1/shared_ptr.h:1026:27, col:45> 'struct std::tr1::__static_cast_tag''void (void) throw()' zeroing)
) (CompoundStmt 0x948bf40 </usr/include/c++/4.6/tr1/shared_ptr.h:1026:48, col:50>)

;
            template <typename _Tp1> shared_ptr<_Tp>(const shared_ptr<_Tp1> &__r, std::tr1::__const_cast_tag) : __shared_ptr<_Tp>((DeclRefExpr 0x948c000 </usr/include/c++/4.6/tr1/shared_ptr.h:1030:22> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948a5e0 '__r' 'const shared_ptr<_Tp1> &')
, (CXXTemporaryObjectExpr 0x948c020 </usr/include/c++/4.6/tr1/shared_ptr.h:1030:27, col:44> 'struct std::tr1::__const_cast_tag''void (void) throw()' zeroing)
) (CompoundStmt 0x948c090 </usr/include/c++/4.6/tr1/shared_ptr.h:1030:47, col:49>)

;
            template <typename _Tp1> shared_ptr<_Tp>(const shared_ptr<_Tp1> &__r, std::tr1::__dynamic_cast_tag) : __shared_ptr<_Tp>((DeclRefExpr 0x948c150 </usr/include/c++/4.6/tr1/shared_ptr.h:1034:22> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948a880 '__r' 'const shared_ptr<_Tp1> &')
, (CXXTemporaryObjectExpr 0x948c170 </usr/include/c++/4.6/tr1/shared_ptr.h:1034:27, col:46> 'struct std::tr1::__dynamic_cast_tag''void (void) throw()' zeroing)
) (CompoundStmt 0x948c1e0 </usr/include/c++/4.6/tr1/shared_ptr.h:1034:49, col:51>)

;
            template <typename _Tp1> shared_ptr<_Tp> &operator=(const shared_ptr<_Tp1> &__r) (CompoundStmt 0x948c378 </usr/include/c++/4.6/tr1/shared_ptr.h:1039:9, line:1042:2>
  (CallExpr 0x948c320 <line:1040:4, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x948c2d0 <col:4, col:37> '<dependent type>' lvalue
      (CXXThisExpr 0x948c208 <col:4> 'shared_ptr<_Tp> *' this))
    (DeclRefExpr 0x948c304 <col:39> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948ab20 '__r' 'const shared_ptr<_Tp1> &'))
  (ReturnStmt 0x948c368 <line:1041:4, col:12>
    (UnaryOperator 0x948c350 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x948c340 <col:12> 'shared_ptr<_Tp> *' this))))

;
            template <typename _Tp1> shared_ptr<_Tp> &operator=(std::auto_ptr<_Tp1> &__r) (CompoundStmt 0x948c508 </usr/include/c++/4.6/tr1/shared_ptr.h:1048:9, line:1051:2>
  (CallExpr 0x948c4b0 <line:1049:4, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x948c460 <col:4, col:37> '<dependent type>' lvalue
      (CXXThisExpr 0x948c390 <col:4> 'shared_ptr<_Tp> *' this))
    (DeclRefExpr 0x948c494 <col:39> 'std::auto_ptr<_Tp1>':'auto_ptr<_Tp1>' lvalue ParmVar 0x948ade0 '__r' 'std::auto_ptr<_Tp1> &'))
  (ReturnStmt 0x948c4f8 <line:1050:4, col:12>
    (UnaryOperator 0x948c4e0 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x948c4d0 <col:12> 'shared_ptr<_Tp> *' this))))

;
        };
        template <typename _Tp> inline void swap(__shared_ptr<_Tp> &__a, __shared_ptr<_Tp> &__b) (CompoundStmt 0x948c958 </usr/include/c++/4.6/tr1/shared_ptr.h:1059:5, col:22>
  (CallExpr 0x948c938 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x948c8e8 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x948c8d0 <col:7> '__shared_ptr<_Tp>' lvalue ParmVar 0x948c680 '__a' '__shared_ptr<_Tp> &'))
    (DeclRefExpr 0x948c91c <col:16> '__shared_ptr<_Tp>' lvalue ParmVar 0x948c7a0 '__b' '__shared_ptr<_Tp> &')))

;
        template <typename _Tp, typename _Tp1> inline shared_ptr<_Tp> static_pointer_cast(const shared_ptr<_Tp1> &__r) (CompoundStmt 0x948ce38 </usr/include/c++/4.6/tr1/shared_ptr.h:1064:5, col:57>
  (ReturnStmt 0x948ce28 <col:7, col:54>
    (CXXUnresolvedConstructExpr 0x948ce08 <col:14, col:54> 'shared_ptr<_Tp>'
      (DeclRefExpr 0x948cdc0 <col:30> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948cbd0 '__r' 'const shared_ptr<_Tp1> &')
      (CXXTemporaryObjectExpr 0x948cde0 <col:35, col:53> 'struct std::tr1::__static_cast_tag''void (void) throw()' zeroing))))

;
        template <typename _Tp, typename _Tp1> inline shared_ptr<_Tp> const_pointer_cast(const shared_ptr<_Tp1> &__r) (CompoundStmt 0x948d2a8 </usr/include/c++/4.6/tr1/shared_ptr.h:1069:5, col:56>
  (ReturnStmt 0x948d298 <col:7, col:53>
    (CXXUnresolvedConstructExpr 0x948d278 <col:14, col:53> 'shared_ptr<_Tp>'
      (DeclRefExpr 0x948d230 <col:30> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948d060 '__r' 'const shared_ptr<_Tp1> &')
      (CXXTemporaryObjectExpr 0x948d250 <col:35, col:52> 'struct std::tr1::__const_cast_tag''void (void) throw()' zeroing))))

;
        template <typename _Tp, typename _Tp1> inline shared_ptr<_Tp> dynamic_pointer_cast(const shared_ptr<_Tp1> &__r) (CompoundStmt 0x948d718 </usr/include/c++/4.6/tr1/shared_ptr.h:1074:5, col:58>
  (ReturnStmt 0x948d708 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x948d6e8 <col:14, col:55> 'shared_ptr<_Tp>'
      (DeclRefExpr 0x948d6a0 <col:30> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948d4d0 '__r' 'const shared_ptr<_Tp1> &')
      (CXXTemporaryObjectExpr 0x948d6c0 <col:35, col:54> 'struct std::tr1::__dynamic_cast_tag''void (void) throw()' zeroing))))

;
        template <typename _Tp> class weak_ptr : public __weak_ptr<_Tp> {
            class weak_ptr;
        public:
        public:
            weak_ptr<_Tp>() : __weak_ptr<_Tp>() (CompoundStmt 0x948e670 </usr/include/c++/4.6/tr1/shared_ptr.h:1085:27, col:29>)


            template <typename _Tp1> weak_ptr<_Tp>(const weak_ptr<_Tp1> &__r) : __weak_ptr<_Tp>((DeclRefExpr 0x948e730 </usr/include/c++/4.6/tr1/shared_ptr.h:1089:20> 'const weak_ptr<_Tp1>' lvalue ParmVar 0x948dc00 '__r' 'const weak_ptr<_Tp1> &')
) (CompoundStmt 0x948e790 </usr/include/c++/4.6/tr1/shared_ptr.h:1089:25, col:27>)

;
            template <typename _Tp1> weak_ptr<_Tp>(const shared_ptr<_Tp1> &__r) : __weak_ptr<_Tp>((DeclRefExpr 0x948e850 </usr/include/c++/4.6/tr1/shared_ptr.h:1093:20> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948de40 '__r' 'const shared_ptr<_Tp1> &')
) (CompoundStmt 0x948e8b0 </usr/include/c++/4.6/tr1/shared_ptr.h:1093:25, col:27>)

;
            template <typename _Tp1> weak_ptr<_Tp> &operator=(const weak_ptr<_Tp1> &__r) (CompoundStmt 0x948ea48 </usr/include/c++/4.6/tr1/shared_ptr.h:1098:9, line:1101:2>
  (CallExpr 0x948e9f0 <line:1099:4, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x948e9a0 <col:4, col:35> '<dependent type>' lvalue
      (CXXThisExpr 0x948e8d8 <col:4> 'weak_ptr<_Tp> *' this))
    (DeclRefExpr 0x948e9d4 <col:37> 'const weak_ptr<_Tp1>' lvalue ParmVar 0x948e080 '__r' 'const weak_ptr<_Tp1> &'))
  (ReturnStmt 0x948ea38 <line:1100:4, col:12>
    (UnaryOperator 0x948ea20 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x948ea10 <col:12> 'weak_ptr<_Tp> *' this))))

;
            template <typename _Tp1> weak_ptr<_Tp> &operator=(const shared_ptr<_Tp1> &__r) (CompoundStmt 0x948ebd8 </usr/include/c++/4.6/tr1/shared_ptr.h:1106:9, line:1109:2>
  (CallExpr 0x948eb80 <line:1107:4, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x948eb30 <col:4, col:35> '<dependent type>' lvalue
      (CXXThisExpr 0x948ea60 <col:4> 'weak_ptr<_Tp> *' this))
    (DeclRefExpr 0x948eb64 <col:37> 'const shared_ptr<_Tp1>' lvalue ParmVar 0x948e2f0 '__r' 'const shared_ptr<_Tp1> &'))
  (ReturnStmt 0x948ebc8 <line:1108:4, col:12>
    (UnaryOperator 0x948ebb0 <col:11, col:12> '<dependent type>' prefix '*'
      (CXXThisExpr 0x948eba0 <col:12> 'weak_ptr<_Tp> *' this))))

;
            shared_ptr<_Tp> lock() const (CompoundStmt 0x948efd0 </usr/include/c++/4.6/tr1/shared_ptr.h:1113:7, line:1130:7>
  (IfStmt 0x948ed48 <line:1115:2, line:1116:27>
    <<<NULL>>>
    (CallExpr 0x948ec50 <line:1115:6, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x948ec18 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0x948ec08 <col:6> 'const weak_ptr<_Tp> *' this)))
    (ReturnStmt 0x948ed38 <line:1116:4, col:27>
      (CXXUnresolvedConstructExpr 0x948ed20 <col:11, col:27> 'shared_ptr<_Tp>'))
    <<<NULL>>>)
  (IfStmt 0x948ee90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/tr1/shared_ptr.h:1121:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x948ed68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x948ee78 </usr/include/c++/4.6/tr1/shared_ptr.h:1119:4, line:1121:4>
      (ReturnStmt 0x948ee68 <line:1120:6, col:34>
        (CXXUnresolvedConstructExpr 0x948ee48 <col:13, col:34> 'shared_ptr<_Tp>'
          (UnaryOperator 0x948ee30 <col:29, col:30> '<dependent type>' prefix '*'
            (CXXThisExpr 0x948ee20 <col:30> 'const weak_ptr<_Tp> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x948efb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/tr1/shared_ptr.h:1125:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x948eeb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x948ef98 </usr/include/c++/4.6/tr1/shared_ptr.h:1123:4, line:1125:4>
      (ReturnStmt 0x948ef88 <line:1124:6, col:29>
        (CXXUnresolvedConstructExpr 0x948ef70 <col:13, col:29> 'shared_ptr<_Tp>')))
    <<<NULL>>>))


        };
        template <typename _Tp> class enable_shared_from_this {
            class enable_shared_from_this;
        protected:
        protected:
            enable_shared_from_this<_Tp>() (CompoundStmt 0x9492450 </usr/include/c++/4.6/tr1/shared_ptr.h:1137:33, col:35>)


            enable_shared_from_this<_Tp>(const enable_shared_from_this<_Tp> &) (CompoundStmt 0x9492460 </usr/include/c++/4.6/tr1/shared_ptr.h:1139:63, col:65>)


            enable_shared_from_this<_Tp> &operator=(const enable_shared_from_this<_Tp> &) (CompoundStmt 0x94924c0 </usr/include/c++/4.6/tr1/shared_ptr.h:1143:7, col:23>
  (ReturnStmt 0x94924b0 <col:9, col:17>
    (UnaryOperator 0x9492498 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9492488 <col:17> 'enable_shared_from_this<_Tp> *' this))))


            void ~enable_shared_from_this<_Tp>() (CompoundStmt 0x94924d8 </usr/include/c++/4.6/tr1/shared_ptr.h:1145:34, col:36>)


        public:
        public:
            shared_ptr<_Tp> shared_from_this() (CompoundStmt 0x9492608 </usr/include/c++/4.6/tr1/shared_ptr.h:1150:7, col:53>
  (ReturnStmt 0x94925f8 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x94925d8 <col:16, col:50> 'shared_ptr<_Tp>'
      (CXXDependentScopeMemberExpr 0x94925a0 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0x9492590 <col:32> 'enable_shared_from_this<_Tp> *' this)))))


            shared_ptr<const _Tp> shared_from_this() const (CompoundStmt 0x9492748 </usr/include/c++/4.6/tr1/shared_ptr.h:1154:7, col:59>
  (ReturnStmt 0x9492738 <col:9, col:56>
    (CXXUnresolvedConstructExpr 0x9492718 <col:16, col:56> 'shared_ptr<const _Tp>'
      (CXXDependentScopeMemberExpr 0x94926e0 <col:38, col:44> '<dependent type>' lvalue
        (CXXThisExpr 0x94926d0 <col:38> 'const enable_shared_from_this<_Tp> *' this)))))


        private:
        private:
            template <typename _Tp1> void _M_weak_assign(_Tp1 *__p, const __shared_count<> &__n) const (CompoundStmt 0x9492820 </usr/include/c++/4.6/tr1/shared_ptr.h:1160:9, col:45>
  (CallExpr 0x94927f8 <col:11, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9492790 <col:11, col:24> '<dependent type>' lvalue
      (MemberExpr 0x9492770 <col:11> 'weak_ptr<_Tp>' lvalue ->_M_weak_this 0x9492420
        (CXXThisExpr 0x9492760 <col:11> 'const enable_shared_from_this<_Tp> *' this)))
    (DeclRefExpr 0x94927c4 <col:34> '_Tp1 *' lvalue ParmVar 0x948f950 '__p' '_Tp1 *')
    (DeclRefExpr 0x94927dc <col:39> 'const __shared_count<>':'const class std::tr1::__shared_count<1>' lvalue ParmVar 0x948f9f0 '__n' 'const __shared_count<> &')))

;
            ;
            mutable weak_ptr<_Tp> _M_weak_this;
        };
    }
}
extern void __sync_bool_compare_and_swap();
extern bool __sync_bool_compare_and_swap_4(volatile int *, int, int, ...);
using std::tr1::shared_ptr;
;
enum io_mode_t {
    IO_FILE,
    IO_PIPE,
    IO_FD,
    IO_BUFFER,
    IO_CLOSE
};
class io_data_t {
    class io_data_t;
private:
private:
    io_data_t(const io_data_t &rhs);
    void operator=(const io_data_t &rhs);
protected:
protected:
    io_data_t(io_mode_t m, int f) : io_mode((ImplicitCastExpr 0x9493358 <../codeBase/fish-shell-master/io.h:37:17> 'enum io_mode_t' <LValueToRValue>
  (DeclRefExpr 0x9493340 <col:17> 'enum io_mode_t' lvalue ParmVar 0x9492fe0 'm' 'enum io_mode_t'))
), fd((ImplicitCastExpr 0x94933a0 <../codeBase/fish-shell-master/io.h:38:12> 'int' <LValueToRValue>
  (DeclRefExpr 0x9493388 <col:12> 'int' lvalue ParmVar 0x9493030 'f' 'int'))
) (CompoundStmt 0x94933d0 <../codeBase/fish-shell-master/io.h:39:5, line:40:5>)


public:
public:
    const io_mode_t io_mode;
    const int fd;
    virtual void print() const = 0;
    virtual void ~io_data_t() = 0;
};
class io_close_t : public io_data_t {
    class io_close_t;
public:
public:
    io_close_t(int f) : io_data_t((DeclRefExpr 0x949389c <../codeBase/fish-shell-master/io.h:56:19> 'enum io_mode_t' EnumConstant 0x9492bf0 'IO_CLOSE' 'enum io_mode_t')
, (ImplicitCastExpr 0x94938d8 <../codeBase/fish-shell-master/io.h:56:29> 'int' <LValueToRValue>
  (DeclRefExpr 0x94938b4 <col:29> 'int' lvalue ParmVar 0x9493590 'f' 'int'))
) (CompoundStmt 0x9493930 <../codeBase/fish-shell-master/io.h:57:5, line:58:5>)


    virtual void print() const;
    inline io_close_t &operator=(const io_close_t &);
    inline void ~io_close_t();
};
class io_fd_t : public io_data_t {
    class io_fd_t;
public:
public:
    const int old_fd;
    const bool close_old;
    virtual void print() const;
    io_fd_t(int f, int old, bool close = (CXXBoolLiteralExpr 0x9493f30 <../codeBase/fish-shell-master/io.h:73:42> '_Bool' false)
) : io_data_t((DeclRefExpr 0x9493f40 <../codeBase/fish-shell-master/io.h:74:19> 'enum io_mode_t' EnumConstant 0x9492b70 'IO_FD' 'enum io_mode_t')
, (ImplicitCastExpr 0x9493f78 <../codeBase/fish-shell-master/io.h:74:26> 'int' <LValueToRValue>
  (DeclRefExpr 0x9493f58 <col:26> 'int' lvalue ParmVar 0x9493bf0 'f' 'int'))
), old_fd((ImplicitCastExpr 0x9493fe0 <../codeBase/fish-shell-master/io.h:75:16> 'int' <LValueToRValue>
  (DeclRefExpr 0x9493fc8 <col:16> 'int' lvalue ParmVar 0x9493c40 'old' 'int'))
), close_old((ImplicitCastExpr 0x9494020 <../codeBase/fish-shell-master/io.h:76:19> '_Bool' <LValueToRValue>
  (DeclRefExpr 0x9494008 <col:19> '_Bool' lvalue ParmVar 0x9493c80 'close' '_Bool'))
) (CompoundStmt 0x9494058 <../codeBase/fish-shell-master/io.h:77:5, line:78:5>)


    inline io_fd_t &operator=(const io_fd_t &);
    inline void ~io_fd_t();
};
class io_file_t;
class io_pipe_t : public io_data_t {
    class io_pipe_t;
protected:
protected:
    io_pipe_t(io_mode_t m, int f, bool i) : io_data_t((ImplicitCastExpr 0x9494fe8 <../codeBase/fish-shell-master/io.h:108:19> 'enum io_mode_t' <LValueToRValue>
  (DeclRefExpr 0x9494fac <col:19> 'enum io_mode_t' lvalue ParmVar 0x94949d0 'm' 'enum io_mode_t'))
, (ImplicitCastExpr 0x9494ff8 <../codeBase/fish-shell-master/io.h:108:22> 'int' <LValueToRValue>
  (DeclRefExpr 0x9494fc4 <col:22> 'int' lvalue ParmVar 0x9494a20 'f' 'int'))
), is_input((ImplicitCastExpr 0x9495060 <../codeBase/fish-shell-master/io.h:109:18> '_Bool' <LValueToRValue>
  (DeclRefExpr 0x9495048 <col:18> '_Bool' lvalue ParmVar 0x9494a60 'i' '_Bool'))
) (CompoundStmt 0x94951f8 <../codeBase/fish-shell-master/io.h:110:5, line:112:5>
  (BinaryOperator 0x94951e0 <line:111:9, col:36> 'int' lvalue '='
    (ArraySubscriptExpr 0x9495100 <col:9, col:18> 'int' lvalue
      (ImplicitCastExpr 0x94950f0 <col:9> 'int *' <ArrayToPointerDecay>
        (MemberExpr 0x94950b8 <col:9> 'int [2]' lvalue ->pipe_fd 0x9494bf0
          (CXXThisExpr 0x94950a8 <col:9> 'class io_pipe_t *' this)))
      (IntegerLiteral 0x94950d8 <col:17> 'int' 0))
    (ImplicitCastExpr 0x94951d0 <col:22, col:36> 'int' <LValueToRValue>
      (BinaryOperator 0x94951b8 <col:22, col:36> 'int' lvalue '='
        (ArraySubscriptExpr 0x9495170 <col:22, col:31> 'int' lvalue
          (ImplicitCastExpr 0x9495160 <col:22> 'int *' <ArrayToPointerDecay>
            (MemberExpr 0x9495128 <col:22> 'int [2]' lvalue ->pipe_fd 0x9494bf0
              (CXXThisExpr 0x9495118 <col:22> 'class io_pipe_t *' this)))
          (IntegerLiteral 0x9495148 <col:30> 'int' 1))
        (UnaryOperator 0x94951a0 <col:35, col:36> 'int' prefix '-'
          (IntegerLiteral 0x9495188 <col:36> 'int' 1))))))


public:
public:
    int pipe_fd[2];
    const bool is_input;
    virtual void print() const;
    io_pipe_t(int f, bool i) : io_data_t((DeclRefExpr 0x949520c <../codeBase/fish-shell-master/io.h:121:19> 'enum io_mode_t' EnumConstant 0x9492b30 'IO_PIPE' 'enum io_mode_t')
, (ImplicitCastExpr 0x9495248 <../codeBase/fish-shell-master/io.h:121:28> 'int' <LValueToRValue>
  (DeclRefExpr 0x9495224 <col:28> 'int' lvalue ParmVar 0x9494cf0 'f' 'int'))
), is_input((ImplicitCastExpr 0x94952b0 <../codeBase/fish-shell-master/io.h:122:18> '_Bool' <LValueToRValue>
  (DeclRefExpr 0x9495298 <col:18> '_Bool' lvalue ParmVar 0x9494d30 'i' '_Bool'))
) (CompoundStmt 0x9495430 <../codeBase/fish-shell-master/io.h:123:5, line:125:5>
  (BinaryOperator 0x9495418 <line:124:9, col:36> 'int' lvalue '='
    (ArraySubscriptExpr 0x9495338 <col:9, col:18> 'int' lvalue
      (ImplicitCastExpr 0x9495328 <col:9> 'int *' <ArrayToPointerDecay>
        (MemberExpr 0x94952f0 <col:9> 'int [2]' lvalue ->pipe_fd 0x9494bf0
          (CXXThisExpr 0x94952e0 <col:9> 'class io_pipe_t *' this)))
      (IntegerLiteral 0x9495310 <col:17> 'int' 0))
    (ImplicitCastExpr 0x9495408 <col:22, col:36> 'int' <LValueToRValue>
      (BinaryOperator 0x94953f0 <col:22, col:36> 'int' lvalue '='
        (ArraySubscriptExpr 0x94953a8 <col:22, col:31> 'int' lvalue
          (ImplicitCastExpr 0x9495398 <col:22> 'int *' <ArrayToPointerDecay>
            (MemberExpr 0x9495360 <col:22> 'int [2]' lvalue ->pipe_fd 0x9494bf0
              (CXXThisExpr 0x9495350 <col:22> 'class io_pipe_t *' this)))
          (IntegerLiteral 0x9495380 <col:30> 'int' 1))
        (UnaryOperator 0x94953d8 <col:35, col:36> 'int' prefix '-'
          (IntegerLiteral 0x94953c0 <col:36> 'int' 1))))))


    inline io_pipe_t &operator=(const io_pipe_t &);
    inline void ~io_pipe_t() (CompoundStmt 0x949be58 <../codeBase/fish-shell-master/io.h:104:7>)


    inline io_pipe_t(const io_pipe_t &);
};
class io_buffer_t : public io_pipe_t {
    class io_buffer_t;
private:
private:
    std::vector<char> out_buffer;
    io_buffer_t(int f, bool i) : io_pipe_t((DeclRefExpr 0x949bc4c <../codeBase/fish-shell-master/io.h:135:19> 'enum io_mode_t' EnumConstant 0x9492bb0 'IO_BUFFER' 'enum io_mode_t')
, (ImplicitCastExpr 0x949bd90 <../codeBase/fish-shell-master/io.h:135:30> 'int' <LValueToRValue>
  (DeclRefExpr 0x949bc64 <col:30> 'int' lvalue ParmVar 0x949b2c0 'f' 'int'))
, (ImplicitCastExpr 0x949bda0 <../codeBase/fish-shell-master/io.h:135:33> '_Bool' <LValueToRValue>
  (DeclRefExpr 0x949bc7c <col:33> '_Bool' lvalue ParmVar 0x949b300 'i' '_Bool'))
), out_buffer() (CompoundStmt 0x949be68 <../codeBase/fish-shell-master/io.h:137:5, line:138:5>)


public:
public:
    virtual void print() const;
    virtual void ~io_buffer_t();
    void out_buffer_append(const char *ptr, size_t count) (CompoundStmt 0x949fd18 <../codeBase/fish-shell-master/io.h:147:5, line:149:5>
  (CXXMemberCallExpr 0x949f1f0 <line:148:9, col:61> 'void'
    (MemberExpr 0x949f1c4 <col:9, col:20> '<bound member function type>' .insert 0x949f120
      (MemberExpr 0x949be88 <col:9> 'std::vector<char>':'class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
        (CXXThisExpr 0x949be78 <col:9> 'class io_buffer_t *' this)))
    (CXXConstructExpr 0x949fce0 <col:27, col:42> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >''void (const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x949fc50 <col:27, col:42> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' lvalue
        (ImplicitCastExpr 0x949fc40 <col:27, col:42> 'const class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >' <NoOp>
          (CXXMemberCallExpr 0x949bf80 <col:27, col:42> 'iterator':'class __gnu_cxx::__normal_iterator<char *, class std::vector<char, class std::allocator<char> > >'
            (MemberExpr 0x949bf60 <col:27, col:38> '<bound member function type>' .end 0x932a340
              (MemberExpr 0x949bf00 <col:27> 'std::vector<char>':'class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
                (CXXThisExpr 0x949bef0 <col:27> 'class io_buffer_t *' this)))))))
    (ImplicitCastExpr 0x949fd08 <col:45> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x949ef04 <col:45> 'const char *' lvalue ParmVar 0x949b550 'ptr' 'const char *'))
    (BinaryOperator 0x949ef70 <col:50, col:56> 'const char *' '+'
      (ImplicitCastExpr 0x949ef50 <col:50> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x949ef1c <col:50> 'const char *' lvalue ParmVar 0x949b550 'ptr' 'const char *'))
      (ImplicitCastExpr 0x949ef60 <col:56> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x949ef34 <col:56> 'size_t':'unsigned int' lvalue ParmVar 0x949b590 'count' 'size_t':'unsigned int')))))


    char *out_buffer_ptr() (CompoundStmt 0x949ff20 <../codeBase/fish-shell-master/io.h:153:5, line:155:5>
  (ReturnStmt 0x949ff10 <line:154:9, col:60>
    (ConditionalOperator 0x949fef0 <col:16, col:60> 'char *'
      (CXXMemberCallExpr 0x949fd80 <col:16, col:33> '_Bool'
        (MemberExpr 0x949fd60 <col:16, col:27> '<bound member function type>' .empty 0x932ae50
          (ImplicitCastExpr 0x949fdb8 <col:16> 'const class std::vector<char, class std::allocator<char> >' lvalue <NoOp>
            (MemberExpr 0x949fd40 <col:16> 'std::vector<char>':'class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
              (CXXThisExpr 0x949fd30 <col:16> 'class io_buffer_t *' this)))))
      (ImplicitCastExpr 0x949fee0 </usr/include/linux/stddef.h:8:14> 'char *' <NullToPointer>
        (IntegerLiteral 0x949fdc8 <col:14> 'int' 0))
      (UnaryOperator 0x949fec8 <../codeBase/fish-shell-master/io.h:154:44, col:60> 'char *' prefix '&'
        (CXXMemberCallExpr 0x949fe98 <col:45, col:60> 'char':'char' lvalue
          (MemberExpr 0x949fe78 <col:45, col:56> '<bound member function type>' .at 0x932b5a0
            (MemberExpr 0x949fdf0 <col:45> 'std::vector<char>':'class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
              (CXXThisExpr 0x949fde0 <col:45> 'class io_buffer_t *' this)))
          (ImplicitCastExpr 0x949feb8 <col:59> 'size_type':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x949fe60 <col:59> 'int' 0)))))))


    const char *out_buffer_ptr() const (CompoundStmt 0x94a0110 <../codeBase/fish-shell-master/io.h:158:5, line:160:5>
  (ReturnStmt 0x94a0100 <line:159:9, col:60>
    (ConditionalOperator 0x94a00e0 <col:16, col:60> 'const char *'
      (CXXMemberCallExpr 0x949ffa8 <col:16, col:33> '_Bool'
        (MemberExpr 0x949ff88 <col:16, col:27> '<bound member function type>' .empty 0x932ae50
          (MemberExpr 0x949ff68 <col:16> 'const std::vector<char>':'const class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
            (CXXThisExpr 0x949ff58 <col:16> 'const class io_buffer_t *' this))))
      (ImplicitCastExpr 0x94a00d0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
        (IntegerLiteral 0x949ffc8 <col:14> 'int' 0))
      (UnaryOperator 0x94a00b8 <../codeBase/fish-shell-master/io.h:159:44, col:60> 'const char *' prefix '&'
        (CXXMemberCallExpr 0x94a0088 <col:45, col:60> 'const char':'const char' lvalue
          (MemberExpr 0x94a0068 <col:45, col:56> '<bound member function type>' .at 0x932b730
            (MemberExpr 0x949fff0 <col:45> 'const std::vector<char>':'const class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
              (CXXThisExpr 0x949ffe0 <col:45> 'const class io_buffer_t *' this)))
          (ImplicitCastExpr 0x94a00a8 <col:59> 'size_type':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x94a0050 <col:59> 'int' 0)))))))


    size_t out_buffer_size() const (CompoundStmt 0x94a01a8 <../codeBase/fish-shell-master/io.h:164:5, line:166:5>
  (ReturnStmt 0x94a0198 <line:165:9, col:32>
    (CXXMemberCallExpr 0x94a0178 <col:16, col:32> 'size_type':'unsigned int'
      (MemberExpr 0x94a0158 <col:16, col:27> '<bound member function type>' .size 0x932aae0
        (MemberExpr 0x94a0138 <col:16> 'const std::vector<char>':'const class std::vector<char, class std::allocator<char> >' lvalue ->out_buffer 0x949b280
          (CXXThisExpr 0x94a0128 <col:16> 'const class io_buffer_t *' this))))))


    void read();
    static io_buffer_t *create(bool is_input, int fd = (UnaryOperator 0x949bc38 <../codeBase/fish-shell-master/io.h:184:56, col:57> 'int' prefix '-'
  (IntegerLiteral 0x949bc20 <col:57> 'int' 1))
);
    inline io_buffer_t &operator=(const io_buffer_t &);
};
class io_chain_t : public std::vector<shared_ptr<io_data_t> > {
    class io_chain_t;
public:
public:
    io_chain_t();
    io_chain_t(const shared_ptr<io_data_t> &);
    void remove(const shared_ptr<const io_data_t> &element);
    void push_back(const shared_ptr<io_data_t> &element);
    void push_front(const shared_ptr<io_data_t> &element);
    void append(const io_chain_t &chain);
    shared_ptr<const io_data_t> get_io_for_fd(int fd) const;
    shared_ptr<io_data_t> get_io_for_fd(int fd);
};
void io_remove(io_chain_t &list, const shared_ptr<const io_data_t> &element);
void io_chain_destroy(io_chain_t &chain);
shared_ptr<const io_data_t> io_chain_get(const io_chain_t &src, int fd);
shared_ptr<io_data_t> io_chain_get(io_chain_t &src, int fd);
void io_print(const io_chain_t &chain);
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94d14d8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x94d14c0 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x94d1490 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x94cffd0 '__c1' 'char_type &')
    (DeclRefExpr 0x94d14a8 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x94d0040 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94d1598 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x94d1588 <col:9, col:24>
    (CXXOperatorCallExpr 0x94d1560 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x94d1520 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929c970 0x929d900 0x92dc7c0)
      (DeclRefExpr 0x94d14ec <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x94d0160 '__c1' 'const char_type &')
      (DeclRefExpr 0x94d1504 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x94d01b0 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94d1650 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x94d1640 <col:9, col:23>
    (CXXOperatorCallExpr 0x94d1618 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x94d15e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929eb40 0x929f110)
      (DeclRefExpr 0x94d15ac <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x94d02b0 '__c1' 'const char_type &')
      (DeclRefExpr 0x94d15c4 <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x94d0300 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94d16b0 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x94d16a0 <col:9, col:42>
    (CXXStaticCastExpr 0x94d1688 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x94d1664 <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x94d0f10 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94d1710 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x94d1700 <col:9, col:41>
    (CXXStaticCastExpr 0x94d16e8 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x94d16c4 <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x94d1030 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94d17d0 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x94d17c0 <col:9, col:24>
    (CXXOperatorCallExpr 0x94d1798 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x94d1758 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x929c970 0x929d900 0x92dc7c0)
      (DeclRefExpr 0x94d1724 <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x94d1150 '__c1' 'const int_type &')
      (DeclRefExpr 0x94d173c <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x94d11a0 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x94d1848 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x94d1838 <col:9, col:56>
    (CXXStaticCastExpr 0x94d1820 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x94d1800 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x94d17e8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94d19a8 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x94d1998 <col:9, col:72>
    (ConditionalOperator 0x94d1978 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x94d18f0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x94d18c8 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x94d185c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x94d1240 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x94d1874 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x94d1370 '__c' 'const int_type &')
          (CallExpr 0x94d18a8 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x94d188c <col:34> 'int_type (void)' lvalue CXXMethod 0x94d1300 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x94d1904 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x94d1370 '__c' 'const int_type &')
      (CallExpr 0x94d1958 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x94d191c <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x94d10d0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x94d1940 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x90cf5a0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x90cf550 <line:148:7, line:152:11>
    (DeclStmt 0x90cf260 <line:148:12, col:31>
      0x90cf200 "std::size_t __i =
        (ImplicitCastExpr 0x90cf250 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x90cf238 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x90cf2c0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x90cf2a0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x90cf270 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x90cf200 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x90cf2b0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x90cf288 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x90cf0d0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x90cf2f0 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x90cf2d8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x90cf200 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x90cf530 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x90cf3b0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x90cf304 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x94d0360 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x90cf350 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x90cf31c <col:9> 'const char_type *' lvalue ParmVar 0x90cf020 '__s1' 'const char_type *')
          (DeclRefExpr 0x90cf334 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x90cf200 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x90cf398 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x90cf364 <col:20> 'const char_type *' lvalue ParmVar 0x90cf070 '__s2' 'const char_type *')
          (DeclRefExpr 0x90cf37c <col:25> 'std::size_t':'unsigned int' lvalue Var 0x90cf200 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x90cf408 <line:150:4, col:12>
        (UnaryOperator 0x90cf3f0 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x90cf3d8 <col:12> 'int' 1)))
      (IfStmt 0x90cf510 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x90cf4c0 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x90cf418 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x94d0360 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x90cf460 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x90cf430 <col:14> 'const char_type *' lvalue ParmVar 0x90cf070 '__s2' 'const char_type *')
            (DeclRefExpr 0x90cf448 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x90cf200 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x90cf4a8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x90cf474 <col:25> 'const char_type *' lvalue ParmVar 0x90cf020 '__s1' 'const char_type *')
            (DeclRefExpr 0x90cf48c <col:30> 'std::size_t':'unsigned int' lvalue Var 0x90cf200 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x90cf500 <line:152:4, col:11>
          (IntegerLiteral 0x90cf4e8 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x90cf590 <line:153:7, col:14>
    (IntegerLiteral 0x90cf578 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x90cfa60 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x90cf910 <line:161:7, col:26>
    0x90cf8b0 "std::size_t __i =
      (ImplicitCastExpr 0x90cf900 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x90cf8e8 <col:25> 'int' 0))")
  (WhileStmt 0x90cfa10 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x90cf9c8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x90cf9a0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x90cf920 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x94d0230 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x90cf968 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x90cf938 <col:18> 'const char_type *' lvalue ParmVar 0x90cf790 '__p' 'const char_type *')
          (DeclRefExpr 0x90cf950 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x90cf8b0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x90cf988 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x90cf9f8 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x90cf9dc <col:11> 'std::size_t':'unsigned int' lvalue Var 0x90cf8b0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x90cfa50 <line:164:7, col:14>
    (ImplicitCastExpr 0x90cfa40 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x90cfa24 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x90cf8b0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x90d02f8 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x90d02a8 <line:172:7, line:174:24>
    (DeclStmt 0x90d00a0 <line:172:12, col:31>
      0x90d0040 "std::size_t __i =
        (ImplicitCastExpr 0x90d0090 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x90d0078 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x90d0100 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x90d00e0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x90d00b0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x90d0040 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x90d00f0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x90d00c8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x90cfd90 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x90d0130 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x90d0118 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x90d0040 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x90d0288 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x90d01c0 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x90d0144 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x94d0230 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x90d0190 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x90d015c <col:16> 'const char_type *' lvalue ParmVar 0x90cfd30 '__s' 'const char_type *')
          (DeclRefExpr 0x90d0174 <col:20> 'std::size_t':'unsigned int' lvalue Var 0x90d0040 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x90d01a4 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x90cfde0 '__a' 'const char_type &'))
      (ReturnStmt 0x90d0278 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x90d0250 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x90d0218 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a47f0)
          (DeclRefExpr 0x90d01e4 <col:18> 'const char_type *' lvalue ParmVar 0x90cfd30 '__s' 'const char_type *')
          (DeclRefExpr 0x90d01fc <col:24> 'std::size_t':'unsigned int' lvalue Var 0x90d0040 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x90d02e8 <line:175:7, col:14>
    (IntegerLiteral 0x90d02d0 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x90d0990 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x90d0980 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x90d0968 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x90d0918 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x90d086c <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x90d0884 <col:53> 'char_type *' lvalue ParmVar 0x90d0590 '__s1' 'char_type *')
        (DeclRefExpr 0x90d089c <col:59> 'const char_type *' lvalue ParmVar 0x90d05e0 '__s2' 'const char_type *')
        (BinaryOperator 0x90d0900 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x90d08f0 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x90d08b4 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x90d0640 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x90d08d8 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x90d1078 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x90d1028 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x90d0f30 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92b4db0)
    (DeclRefExpr 0x90d0f64 <col:17> 'const char_type *' lvalue ParmVar 0x90d0c80 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x90d0fe8 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x90d0fb0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92a47f0)
      (DeclRefExpr 0x90d0f7c <col:23> 'const char_type *' lvalue ParmVar 0x90d0c80 '__s2' 'const char_type *')
      (DeclRefExpr 0x90d0f94 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x90d0ce0 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x90d100c <col:35> 'char_type *' lvalue ParmVar 0x90d0c30 '__s1' 'char_type *'))
  (ReturnStmt 0x90d1068 <line:194:7, col:14>
    (DeclRefExpr 0x90d1050 <col:14> 'char_type *' lvalue ParmVar 0x90d0c30 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x90d16d0 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x90d1680 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x90d1600 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92be5a0)
    (DeclRefExpr 0x90d1634 <col:19> 'char_type *' lvalue ParmVar 0x90d1310 '__s' 'char_type *')
    (DeclRefExpr 0x90d164c <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x90d1370 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x90d1664 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x90d13b0 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x90d16c0 <line:204:7, col:14>
    (DeclRefExpr 0x90d16a8 <col:14> 'char_type *' lvalue ParmVar 0x90d1310 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8dd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x94f8dc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x94f8d80 <col:9> 'char_type':'char' lvalue ParmVar 0x90d1dc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94f8db0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x94f8d98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1e30 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8e88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x94f8e78 <col:9, col:24>
    (BinaryOperator 0x94f8e60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f8e30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8dec <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1f50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8e50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x90d1fa0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8f38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x94f8f28 <col:9, col:23>
    (BinaryOperator 0x94f8f10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94f8ee0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ed0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d20c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8f00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ef0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8eb4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x90d2110 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9060 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x94f9050 <col:9, col:48>
    (CallExpr 0x94f8fd8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x94f8fc8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f8f4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x94f9010 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9000 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f64 <col:33> 'const char_type *' lvalue ParmVar 0x90d2210 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x94f9030 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9020 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f7c <col:39> 'const char_type *' lvalue ParmVar 0x90d2260 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x94f9040 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94f8f94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x90d22a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94f91f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x94f91e8 <col:9, col:36>
    (CallExpr 0x94f91b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x94f91a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f9154 <col:16> 'unsigned int (const char *)' lvalue Function 0x94f9080 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x94f91d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94f916c <col:33> 'const char_type *' lvalue ParmVar 0x90d23e0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94f94e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x94f94d8 <col:9, col:77>
    (CXXStaticCastExpr 0x94f94c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x94f9438 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x94f9428 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f93a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x94f9240 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9470 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f9460 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f93bc <col:63> 'const char_type *' lvalue ParmVar 0x90d2500 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x94f9490 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9480 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f93d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x90d2590 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x94f94a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f93ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x90d2540 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9620 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x94f9610 <col:9, col:74>
    (CXXStaticCastExpr 0x94f95f8 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f9570 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x94f9560 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f94fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f95a8 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9598 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9514 <col:58> 'char_type *' lvalue ParmVar 0x90d26f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f95c8 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f95b8 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f952c <col:64> 'const char_type *' lvalue ParmVar 0x90d2740 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f95d8 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f9544 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x90d2780 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9758 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x94f9748 <col:9, col:73>
    (CXXStaticCastExpr 0x94f9730 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f96a8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x94f9698 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f9634 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f96e0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f96d0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f964c <col:57> 'char_type *' lvalue ParmVar 0x90d28c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f9700 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f96f0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9664 <col:63> 'const char_type *' lvalue ParmVar 0x90d2910 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f9710 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f967c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x90d2950 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94f98a8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x94f9898 <col:9, col:71>
    (CXXStaticCastExpr 0x94f9880 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f97f8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x94f97e8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f976c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x92bb4c0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9830 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9820 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9784 <col:57> 'char_type *' lvalue ParmVar 0x90d2a30 '__s' 'char_type *')))
        (ImplicitCastExpr 0x94f9850 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9840 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f979c <col:62> 'char_type':'char' lvalue ParmVar 0x90d2ab0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x94f9860 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f97b4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x90d2a70 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94f9928 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x94f9918 <col:9, col:42>
    (CXXStaticCastExpr 0x94f9900 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x94f98f0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x94f98e0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x94f98bc <col:39> 'const int_type':'const int' lvalue ParmVar 0x90d2c20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94f99e0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x94f99d0 <col:9, col:69>
    (CXXStaticCastExpr 0x94f99b8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x94f99a8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x94f9988 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x94f9978 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x94f9968 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x94f993c <col:65> 'const char_type':'const char' lvalue ParmVar 0x90d2d40 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94f9a70 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x94f9a60 <col:9, col:24>
    (BinaryOperator 0x94f9a48 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f9a28 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f99f4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x90d2e60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94f9a38 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9a0c <col:24> 'const int_type':'const int' lvalue ParmVar 0x90d2eb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94f9ae8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x94f9ad8 <col:9, col:56>
    (CXXStaticCastExpr 0x94f9ac0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x94f9aa0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x94f9a88 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94f9c28 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x94f9c18 <col:9, col:37>
    (ConditionalOperator 0x94f9bf8 <col:16, col:37> 'int'
      (ParenExpr 0x94f9ba0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x94f9b88 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x94f9b78 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x94f9afc <col:17> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &'))
          (CallExpr 0x94f9b58 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x94f9b48 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94f9b14 <col:24> 'int_type (void)' lvalue CXXMethod 0x94f8bf0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x94f9bb8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x94f9be8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9bd0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb358 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x94fb340 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x94fb300 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x94f9fc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94fb330 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x94fb318 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa030 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb3e8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x94fb3d8 <col:9, col:24>
    (BinaryOperator 0x94fb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fb3a0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb36c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa150 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb3b0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb384 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa1a0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb478 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x94fb468 <col:9, col:23>
    (BinaryOperator 0x94fb450 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94fb430 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb3fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa2c0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb440 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb414 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa310 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb5e0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x94fb5d0 <col:9, col:39>
    (CallExpr 0x94fb578 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x94fb568 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb50c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x91861e0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f7d0 'wmemcmp')))
      (ImplicitCastExpr 0x94fb5a0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4c4 <col:24> 'const char_type *' lvalue ParmVar 0x94fa410 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4dc <col:30> 'const char_type *' lvalue ParmVar 0x94fa460 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb4f4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94fa4a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94fb6e8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x94fb6d8 <col:9, col:26>
    (CallExpr 0x94fb6a8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x94fb698 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb644 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9185b20 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x937f220 'wcslen')))
      (ImplicitCastExpr 0x94fb6c8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb62c <col:23> 'const char_type *' lvalue ParmVar 0x94fa5b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94fb828 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x94fb818 <col:9, col:37>
    (ImplicitCastExpr 0x94fb808 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x94fb7b0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x94fb7a0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fb780 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186030 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9385f20 'wmemchr')))
        (ImplicitCastExpr 0x94fb7d8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94fb738 <col:24> 'const char_type *' lvalue ParmVar 0x94fa6b0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x94fb7e8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fb750 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa740 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x94fb7f8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fb768 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fa6f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb990 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x94fb980 <col:9, col:40>
    (CallExpr 0x94fb928 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x94fb918 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb8bc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9186570 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f8b0 'wmemmove')))
      (ImplicitCastExpr 0x94fb950 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb874 <col:25> 'char_type *' lvalue ParmVar 0x94fa8a0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fb960 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb88c <col:31> 'const char_type *' lvalue ParmVar 0x94fa8f0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb970 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb8a4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x94fa930 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fbad0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x94fbac0 <col:9, col:39>
    (CallExpr 0x94fba68 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x94fba58 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fba24 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9186390 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x937f840 'wmemcpy')))
      (ImplicitCastExpr 0x94fba90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9dc <col:24> 'char_type *' lvalue ParmVar 0x94faa40 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fbaa0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9f4 <col:30> 'const char_type *' lvalue ParmVar 0x94faa90 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fbab0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fba0c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94faad0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94fbc30 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x94fbc20 <col:9, col:37>
    (CallExpr 0x94fbbc8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x94fbbb8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fbb64 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186730 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x937f920 'wmemset')))
      (ImplicitCastExpr 0x94fbbf0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fbb1c <col:24> 'char_type *' lvalue ParmVar 0x94fabb0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x94fbc00 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fbb34 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x94fac30 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x94fbc10 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbb4c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fabf0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94fbcb0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x94fbca0 <col:9, col:29>
    (CXXFunctionalCastExpr 0x94fbc88 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x94fbc78 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x94fbc68 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fbc50 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fada0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94fbd30 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x94fbd20 <col:9, col:28>
    (CXXFunctionalCastExpr 0x94fbd08 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x94fbcf8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x94fbce8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fbcd0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x94faec0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94fbdc0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x94fbdb0 <col:9, col:24>
    (BinaryOperator 0x94fbd98 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fbd78 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd44 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fafe0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94fbd88 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd5c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb030 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94fbe38 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x94fbe28 <col:9, col:42>
    (CXXStaticCastExpr 0x94fbe10 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x94fbdf0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x94fbdd8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94fc010 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x94fc000 <col:9, col:46>
    (ConditionalOperator 0x94fbfe0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x94fbf58 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x94fbf48 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fbe4c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x94fb0d0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x94fbe64 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x94fbf80 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x94fbee8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x94fbed8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94fbe7c <col:33> 'int_type (void)' lvalue CXXMethod 0x94fb170 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x94fbfd0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x94fbf90 <col:42> 'int' 0))
      (ImplicitCastExpr 0x94fbfc0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbfa8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8dd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x94f8dc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x94f8d80 <col:9> 'char_type':'char' lvalue ParmVar 0x90d1dc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94f8db0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x94f8d98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1e30 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8e88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x94f8e78 <col:9, col:24>
    (BinaryOperator 0x94f8e60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f8e30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8dec <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d1f50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8e50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8e40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x90d1fa0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94f8f38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x94f8f28 <col:9, col:23>
    (BinaryOperator 0x94f8f10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94f8ee0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ed0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8e9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x90d20c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x94f8f00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x94f8ef0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x94f8eb4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x90d2110 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9060 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x94f9050 <col:9, col:48>
    (CallExpr 0x94f8fd8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x94f8fc8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f8f4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x92bfda0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x94f9010 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9000 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f64 <col:33> 'const char_type *' lvalue ParmVar 0x90d2210 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x94f9030 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x94f9020 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94f8f7c <col:39> 'const char_type *' lvalue ParmVar 0x90d2260 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x94f9040 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94f8f94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x90d22a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94f91f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x94f91e8 <col:9, col:36>
    (CallExpr 0x94f91b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x94f91a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x94f9154 <col:16> 'unsigned int (const char *)' lvalue Function 0x94f9080 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x94f91d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94f916c <col:33> 'const char_type *' lvalue ParmVar 0x90d23e0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94f94e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x94f94d8 <col:9, col:77>
    (CXXStaticCastExpr 0x94f94c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x94f9438 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x94f9428 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f93a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x94f9240 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9470 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f9460 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f93bc <col:63> 'const char_type *' lvalue ParmVar 0x90d2500 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x94f9490 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9480 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f93d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x90d2590 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x94f94a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f93ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x90d2540 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9620 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x94f9610 <col:9, col:74>
    (CXXStaticCastExpr 0x94f95f8 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f9570 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x94f9560 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f94fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x92afc80 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f95a8 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9598 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9514 <col:58> 'char_type *' lvalue ParmVar 0x90d26f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f95c8 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f95b8 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f952c <col:64> 'const char_type *' lvalue ParmVar 0x90d2740 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f95d8 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f9544 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x90d2780 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94f9758 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x94f9748 <col:9, col:73>
    (CXXStaticCastExpr 0x94f9730 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f96a8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x94f9698 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f9634 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x94f96e0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f96d0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f964c <col:57> 'char_type *' lvalue ParmVar 0x90d28c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x94f9700 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x94f96f0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9664 <col:63> 'const char_type *' lvalue ParmVar 0x90d2910 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x94f9710 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f967c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x90d2950 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94f98a8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x94f9898 <col:9, col:71>
    (CXXStaticCastExpr 0x94f9880 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x94f97f8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x94f97e8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94f976c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x92bb4c0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x94f9830 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x94f9820 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x94f9784 <col:57> 'char_type *' lvalue ParmVar 0x90d2a30 '__s' 'char_type *')))
        (ImplicitCastExpr 0x94f9850 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x94f9840 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x94f979c <col:62> 'char_type':'char' lvalue ParmVar 0x90d2ab0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x94f9860 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94f97b4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x90d2a70 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94f9928 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x94f9918 <col:9, col:42>
    (CXXStaticCastExpr 0x94f9900 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x94f98f0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x94f98e0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x94f98bc <col:39> 'const int_type':'const int' lvalue ParmVar 0x90d2c20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94f99e0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x94f99d0 <col:9, col:69>
    (CXXStaticCastExpr 0x94f99b8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x94f99a8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x94f9988 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x94f9978 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x94f9968 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x94f993c <col:65> 'const char_type':'const char' lvalue ParmVar 0x90d2d40 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94f9a70 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x94f9a60 <col:9, col:24>
    (BinaryOperator 0x94f9a48 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94f9a28 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f99f4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x90d2e60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94f9a38 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9a0c <col:24> 'const int_type':'const int' lvalue ParmVar 0x90d2eb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94f9ae8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x94f9ad8 <col:9, col:56>
    (CXXStaticCastExpr 0x94f9ac0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x94f9aa0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x94f9a88 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94f9c28 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x94f9c18 <col:9, col:37>
    (ConditionalOperator 0x94f9bf8 <col:16, col:37> 'int'
      (ParenExpr 0x94f9ba0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x94f9b88 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x94f9b78 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x94f9afc <col:17> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &'))
          (CallExpr 0x94f9b58 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x94f9b48 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94f9b14 <col:24> 'int_type (void)' lvalue CXXMethod 0x94f8bf0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x94f9bb8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x94f9be8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x94f9bd0 <col:37> 'const int_type':'const int' lvalue ParmVar 0x94f8c60 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb358 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x94fb340 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x94fb300 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x94f9fc0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x94fb330 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x94fb318 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa030 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb3e8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x94fb3d8 <col:9, col:24>
    (BinaryOperator 0x94fb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fb3a0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb36c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa150 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb3b0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb384 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa1a0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x94fb478 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x94fb468 <col:9, col:23>
    (BinaryOperator 0x94fb450 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x94fb430 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb3fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa2c0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x94fb440 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fb414 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa310 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb5e0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x94fb5d0 <col:9, col:39>
    (CallExpr 0x94fb578 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x94fb568 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb50c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x91861e0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f7d0 'wmemcmp')))
      (ImplicitCastExpr 0x94fb5a0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4c4 <col:24> 'const char_type *' lvalue ParmVar 0x94fa410 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb4dc <col:30> 'const char_type *' lvalue ParmVar 0x94fa460 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb5c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb4f4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94fa4a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x94fb6e8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x94fb6d8 <col:9, col:26>
    (CallExpr 0x94fb6a8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x94fb698 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb644 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9185b20 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x937f220 'wcslen')))
      (ImplicitCastExpr 0x94fb6c8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb62c <col:23> 'const char_type *' lvalue ParmVar 0x94fa5b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x94fb828 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x94fb818 <col:9, col:37>
    (ImplicitCastExpr 0x94fb808 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x94fb7b0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x94fb7a0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fb780 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186030 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9385f20 'wmemchr')))
        (ImplicitCastExpr 0x94fb7d8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x94fb738 <col:24> 'const char_type *' lvalue ParmVar 0x94fa6b0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x94fb7e8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fb750 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x94fa740 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x94fb7f8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fb768 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fa6f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fb990 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x94fb980 <col:9, col:40>
    (CallExpr 0x94fb928 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x94fb918 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fb8bc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9186570 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x937f8b0 'wmemmove')))
      (ImplicitCastExpr 0x94fb950 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb874 <col:25> 'char_type *' lvalue ParmVar 0x94fa8a0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fb960 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb88c <col:31> 'const char_type *' lvalue ParmVar 0x94fa8f0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fb970 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fb8a4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x94fa930 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x94fbad0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x94fbac0 <col:9, col:39>
    (CallExpr 0x94fba68 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x94fba58 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fba24 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9186390 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x937f840 'wmemcpy')))
      (ImplicitCastExpr 0x94fba90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9dc <col:24> 'char_type *' lvalue ParmVar 0x94faa40 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x94fbaa0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fb9f4 <col:30> 'const char_type *' lvalue ParmVar 0x94faa90 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x94fbab0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fba0c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x94faad0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x94fbc30 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x94fbc20 <col:9, col:37>
    (CallExpr 0x94fbbc8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x94fbbb8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x94fbb64 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9186730 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x937f920 'wmemset')))
      (ImplicitCastExpr 0x94fbbf0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x94fbb1c <col:24> 'char_type *' lvalue ParmVar 0x94fabb0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x94fbc00 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x94fbb34 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x94fac30 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x94fbc10 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbb4c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x94fabf0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x94fbcb0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x94fbca0 <col:9, col:29>
    (CXXFunctionalCastExpr 0x94fbc88 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x94fbc78 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x94fbc68 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x94fbc50 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fada0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x94fbd30 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x94fbd20 <col:9, col:28>
    (CXXFunctionalCastExpr 0x94fbd08 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x94fbcf8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x94fbce8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x94fbcd0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x94faec0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x94fbdc0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x94fbdb0 <col:9, col:24>
    (BinaryOperator 0x94fbd98 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x94fbd78 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd44 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fafe0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x94fbd88 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbd5c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb030 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x94fbe38 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x94fbe28 <col:9, col:42>
    (CXXStaticCastExpr 0x94fbe10 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x94fbdf0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x94fbdd8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x94fc010 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x94fc000 <col:9, col:46>
    (ConditionalOperator 0x94fbfe0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x94fbf58 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x94fbf48 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x94fbe4c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x94fb0d0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x94fbe64 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x94fbf80 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x94fbee8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x94fbed8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x94fbe7c <col:33> 'int_type (void)' lvalue CXXMethod 0x94fb170 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x94fbfd0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x94fbf90 <col:42> 'int' 0))
      (ImplicitCastExpr 0x94fbfc0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x94fbfa8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x94fb1e0 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0x94fc4a8 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc090 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0x94fc4b8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc0e8 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0x94fc4c8 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc138 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0x94fc4d8 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc188 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0x94fc4e8 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc1d8 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0x94fc4f8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc228 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0x94fc508 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc278 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0x94fc518 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc2c8 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0x94fc528 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc318 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0x94fc538 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc368 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0x94fc548 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc3b8 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0x94fc558 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc408 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0x94fc568 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x94fc458 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0x9503210 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0x9502988 <line:75:5, col:54>
    0x9502880 "__c_locale __old =
      (CallExpr 0x9502958 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0x9502948 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x95028d8 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x95023d0 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0x9502978 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0x95028f8 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0x95025d0 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0x95029d8 <line:88:5, col:29>
    0x95029a0 "__builtin_va_list __args")
  (CallExpr 0x9502bd8 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0x9502bc8 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9502b44 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0x9502a70 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0x9502b5c <col:24> '__builtin_va_list':'char *' lvalue Var 0x95029a0 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0x9502b74 <col:32> 'const char *' lvalue ParmVar 0x9502740 '__fmt' 'const char *'))
  (DeclStmt 0x9502f68 <line:92:5, col:72>
    0x9502c10 "const int __ret =
      (CallExpr 0x9502ee8 <col:23, col:71> 'int'
        (ImplicitCastExpr 0x9502ed8 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9502e20 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0x9502c50 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0x9502f18 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0x9502e38 <col:43> 'char *' lvalue ParmVar 0x9502660 '__out' 'char *'))
        (ImplicitCastExpr 0x9502f38 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9502f28 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9502e50 <col:50> 'const int' lvalue ParmVar 0x95026b0 '__size' 'const int')))
        (ImplicitCastExpr 0x9502f48 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9502e68 <col:58> 'const char *' lvalue ParmVar 0x9502740 '__fmt' 'const char *'))
        (ImplicitCastExpr 0x9502f58 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0x9502e80 <col:65> '__builtin_va_list':'char *' lvalue Var 0x95029a0 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0x9503118 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0x9503108 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9503094 <col:5> 'void (__builtin_va_list &)' lvalue Function 0x9502fc0 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0x95030ac <col:22> '__builtin_va_list':'char *' lvalue Var 0x95029a0 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0x95031a8 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0x9503198 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0x950315c <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x95023d0 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0x95031c8 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0x950317c <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0x9502880 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0x9503200 <line:108:5, col:12>
    (ImplicitCastExpr 0x95031f0 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x95031d4 <col:12> 'const int' lvalue Var 0x9502c10 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x9504ea8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x95034e0 <col:23, col:77> 'int'
    (ConditionalOperator 0x95034c0 <col:24, col:76> 'int'
      (BinaryOperator 0x9503328 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x95032f8 <col:24, col:28> 'int'
          (IntegerLiteral 0x95032e0 <line:50:22> 'int' 0))
        (IntegerLiteral 0x9503310 <line:45:32> 'int' 8))
      (ParenExpr 0x95033e8 <col:36, col:54> 'int'
        (BinaryOperator 0x95033d0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x95033a0 <col:37, col:48> 'int'
            (BinaryOperator 0x9503388 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9503340 <col:38> 'int' 1)
              (ParenExpr 0x9503370 <col:43, col:47> 'int'
                (IntegerLiteral 0x9503358 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x95033b8 <line:45:53> 'int' 8)))
      (ParenExpr 0x95034a8 <col:58, col:76> 'int'
        (BinaryOperator 0x9503490 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9503460 <col:59, col:70> 'int'
            (BinaryOperator 0x9503448 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9503400 <col:60> 'int' 1)
              (ParenExpr 0x9503430 <col:65, col:69> 'int'
                (IntegerLiteral 0x9503418 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9503478 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x9504eb8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9503738 <col:23, col:77> 'int'
    (ConditionalOperator 0x9503718 <col:24, col:76> 'int'
      (BinaryOperator 0x9503580 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9503550 <col:24, col:28> 'int'
          (IntegerLiteral 0x9503538 <line:51:22> 'int' 1))
        (IntegerLiteral 0x9503568 <line:45:32> 'int' 8))
      (ParenExpr 0x9503640 <col:36, col:54> 'int'
        (BinaryOperator 0x9503628 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x95035f8 <col:37, col:48> 'int'
            (BinaryOperator 0x95035e0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9503598 <col:38> 'int' 1)
              (ParenExpr 0x95035c8 <col:43, col:47> 'int'
                (IntegerLiteral 0x95035b0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9503610 <line:45:53> 'int' 8)))
      (ParenExpr 0x9503700 <col:58, col:76> 'int'
        (BinaryOperator 0x95036e8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x95036b8 <col:59, col:70> 'int'
            (BinaryOperator 0x95036a0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9503658 <col:60> 'int' 1)
              (ParenExpr 0x9503688 <col:65, col:69> 'int'
                (IntegerLiteral 0x9503670 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x95036d0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x9504ec8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9503988 <col:23, col:77> 'int'
    (ConditionalOperator 0x9503968 <col:24, col:76> 'int'
      (BinaryOperator 0x95037d0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x95037a0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9503788 <line:52:22> 'int' 2))
        (IntegerLiteral 0x95037b8 <line:45:32> 'int' 8))
      (ParenExpr 0x9503890 <col:36, col:54> 'int'
        (BinaryOperator 0x9503878 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9503848 <col:37, col:48> 'int'
            (BinaryOperator 0x9503830 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x95037e8 <col:38> 'int' 1)
              (ParenExpr 0x9503818 <col:43, col:47> 'int'
                (IntegerLiteral 0x9503800 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9503860 <line:45:53> 'int' 8)))
      (ParenExpr 0x9503950 <col:58, col:76> 'int'
        (BinaryOperator 0x9503938 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9503908 <col:59, col:70> 'int'
            (BinaryOperator 0x95038f0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x95038a8 <col:60> 'int' 1)
              (ParenExpr 0x95038d8 <col:65, col:69> 'int'
                (IntegerLiteral 0x95038c0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9503920 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x9504ed8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9503bd8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9503bb8 <col:24, col:76> 'int'
      (BinaryOperator 0x9503a20 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x95039f0 <col:24, col:28> 'int'
          (IntegerLiteral 0x95039d8 <line:53:22> 'int' 3))
        (IntegerLiteral 0x9503a08 <line:45:32> 'int' 8))
      (ParenExpr 0x9503ae0 <col:36, col:54> 'int'
        (BinaryOperator 0x9503ac8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9503a98 <col:37, col:48> 'int'
            (BinaryOperator 0x9503a80 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9503a38 <col:38> 'int' 1)
              (ParenExpr 0x9503a68 <col:43, col:47> 'int'
                (IntegerLiteral 0x9503a50 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9503ab0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9503ba0 <col:58, col:76> 'int'
        (BinaryOperator 0x9503b88 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9503b58 <col:59, col:70> 'int'
            (BinaryOperator 0x9503b40 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9503af8 <col:60> 'int' 1)
              (ParenExpr 0x9503b28 <col:65, col:69> 'int'
                (IntegerLiteral 0x9503b10 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9503b70 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x9504ee8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9503e28 <col:23, col:77> 'int'
    (ConditionalOperator 0x9503e08 <col:24, col:76> 'int'
      (BinaryOperator 0x9503c70 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9503c40 <col:24, col:28> 'int'
          (IntegerLiteral 0x9503c28 <line:54:23> 'int' 4))
        (IntegerLiteral 0x9503c58 <line:45:32> 'int' 8))
      (ParenExpr 0x9503d30 <col:36, col:54> 'int'
        (BinaryOperator 0x9503d18 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9503ce8 <col:37, col:48> 'int'
            (BinaryOperator 0x9503cd0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9503c88 <col:38> 'int' 1)
              (ParenExpr 0x9503cb8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9503ca0 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9503d00 <line:45:53> 'int' 8)))
      (ParenExpr 0x9503df0 <col:58, col:76> 'int'
        (BinaryOperator 0x9503dd8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9503da8 <col:59, col:70> 'int'
            (BinaryOperator 0x9503d90 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9503d48 <col:60> 'int' 1)
              (ParenExpr 0x9503d78 <col:65, col:69> 'int'
                (IntegerLiteral 0x9503d60 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9503dc0 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x9504ef8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9504078 <col:23, col:77> 'int'
    (ConditionalOperator 0x9504058 <col:24, col:76> 'int'
      (BinaryOperator 0x9503ec0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9503e90 <col:24, col:28> 'int'
          (IntegerLiteral 0x9503e78 <line:55:22> 'int' 5))
        (IntegerLiteral 0x9503ea8 <line:45:32> 'int' 8))
      (ParenExpr 0x9503f80 <col:36, col:54> 'int'
        (BinaryOperator 0x9503f68 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9503f38 <col:37, col:48> 'int'
            (BinaryOperator 0x9503f20 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9503ed8 <col:38> 'int' 1)
              (ParenExpr 0x9503f08 <col:43, col:47> 'int'
                (IntegerLiteral 0x9503ef0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9503f50 <line:45:53> 'int' 8)))
      (ParenExpr 0x9504040 <col:58, col:76> 'int'
        (BinaryOperator 0x9504028 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9503ff8 <col:59, col:70> 'int'
            (BinaryOperator 0x9503fe0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9503f98 <col:60> 'int' 1)
              (ParenExpr 0x9503fc8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9503fb0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9504010 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x9504f08 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x95042c8 <col:23, col:77> 'int'
    (ConditionalOperator 0x95042a8 <col:24, col:76> 'int'
      (BinaryOperator 0x9504110 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x95040e0 <col:24, col:28> 'int'
          (IntegerLiteral 0x95040c8 <line:56:22> 'int' 6))
        (IntegerLiteral 0x95040f8 <line:45:32> 'int' 8))
      (ParenExpr 0x95041d0 <col:36, col:54> 'int'
        (BinaryOperator 0x95041b8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9504188 <col:37, col:48> 'int'
            (BinaryOperator 0x9504170 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9504128 <col:38> 'int' 1)
              (ParenExpr 0x9504158 <col:43, col:47> 'int'
                (IntegerLiteral 0x9504140 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x95041a0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9504290 <col:58, col:76> 'int'
        (BinaryOperator 0x9504278 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9504248 <col:59, col:70> 'int'
            (BinaryOperator 0x9504230 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x95041e8 <col:60> 'int' 1)
              (ParenExpr 0x9504218 <col:65, col:69> 'int'
                (IntegerLiteral 0x9504200 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9504260 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x9504f18 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9504518 <col:23, col:77> 'int'
    (ConditionalOperator 0x95044f8 <col:24, col:76> 'int'
      (BinaryOperator 0x9504360 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9504330 <col:24, col:28> 'int'
          (IntegerLiteral 0x9504318 <line:57:22> 'int' 7))
        (IntegerLiteral 0x9504348 <line:45:32> 'int' 8))
      (ParenExpr 0x9504420 <col:36, col:54> 'int'
        (BinaryOperator 0x9504408 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x95043d8 <col:37, col:48> 'int'
            (BinaryOperator 0x95043c0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9504378 <col:38> 'int' 1)
              (ParenExpr 0x95043a8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9504390 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x95043f0 <line:45:53> 'int' 8)))
      (ParenExpr 0x95044e0 <col:58, col:76> 'int'
        (BinaryOperator 0x95044c8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9504498 <col:59, col:70> 'int'
            (BinaryOperator 0x9504480 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9504438 <col:60> 'int' 1)
              (ParenExpr 0x9504468 <col:65, col:69> 'int'
                (IntegerLiteral 0x9504450 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x95044b0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x9504f28 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9504768 <col:23, col:77> 'int'
    (ConditionalOperator 0x9504748 <col:24, col:76> 'int'
      (BinaryOperator 0x95045b0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9504580 <col:24, col:28> 'int'
          (IntegerLiteral 0x9504568 <line:58:22> 'int' 8))
        (IntegerLiteral 0x9504598 <line:45:32> 'int' 8))
      (ParenExpr 0x9504670 <col:36, col:54> 'int'
        (BinaryOperator 0x9504658 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9504628 <col:37, col:48> 'int'
            (BinaryOperator 0x9504610 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x95045c8 <col:38> 'int' 1)
              (ParenExpr 0x95045f8 <col:43, col:47> 'int'
                (IntegerLiteral 0x95045e0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9504640 <line:45:53> 'int' 8)))
      (ParenExpr 0x9504730 <col:58, col:76> 'int'
        (BinaryOperator 0x9504718 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x95046e8 <col:59, col:70> 'int'
            (BinaryOperator 0x95046d0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9504688 <col:60> 'int' 1)
              (ParenExpr 0x95046b8 <col:65, col:69> 'int'
                (IntegerLiteral 0x95046a0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9504700 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x9504f38 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x95049b8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9504998 <col:24, col:76> 'int'
      (BinaryOperator 0x9504800 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x95047d0 <col:24, col:28> 'int'
          (IntegerLiteral 0x95047b8 <line:59:22> 'int' 9))
        (IntegerLiteral 0x95047e8 <line:45:32> 'int' 8))
      (ParenExpr 0x95048c0 <col:36, col:54> 'int'
        (BinaryOperator 0x95048a8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9504878 <col:37, col:48> 'int'
            (BinaryOperator 0x9504860 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9504818 <col:38> 'int' 1)
              (ParenExpr 0x9504848 <col:43, col:47> 'int'
                (IntegerLiteral 0x9504830 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9504890 <line:45:53> 'int' 8)))
      (ParenExpr 0x9504980 <col:58, col:76> 'int'
        (BinaryOperator 0x9504968 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9504938 <col:59, col:70> 'int'
            (BinaryOperator 0x9504920 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x95048d8 <col:60> 'int' 1)
              (ParenExpr 0x9504908 <col:65, col:69> 'int'
                (IntegerLiteral 0x95048f0 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9504950 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x9504f48 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9504c08 <col:23, col:77> 'int'
    (ConditionalOperator 0x9504be8 <col:24, col:76> 'int'
      (BinaryOperator 0x9504a50 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9504a20 <col:24, col:28> 'int'
          (IntegerLiteral 0x9504a08 <line:60:22> 'int' 10))
        (IntegerLiteral 0x9504a38 <line:45:32> 'int' 8))
      (ParenExpr 0x9504b10 <col:36, col:54> 'int'
        (BinaryOperator 0x9504af8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9504ac8 <col:37, col:48> 'int'
            (BinaryOperator 0x9504ab0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9504a68 <col:38> 'int' 1)
              (ParenExpr 0x9504a98 <col:43, col:47> 'int'
                (IntegerLiteral 0x9504a80 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9504ae0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9504bd0 <col:58, col:76> 'int'
        (BinaryOperator 0x9504bb8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9504b88 <col:59, col:70> 'int'
            (BinaryOperator 0x9504b70 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9504b28 <col:60> 'int' 1)
              (ParenExpr 0x9504b58 <col:65, col:69> 'int'
                (IntegerLiteral 0x9504b40 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9504ba0 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x9504f58 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9504e58 <col:23, col:77> 'int'
    (ConditionalOperator 0x9504e38 <col:24, col:76> 'int'
      (BinaryOperator 0x9504ca0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9504c70 <col:24, col:28> 'int'
          (IntegerLiteral 0x9504c58 <line:61:22> 'int' 11))
        (IntegerLiteral 0x9504c88 <line:45:32> 'int' 8))
      (ParenExpr 0x9504d60 <col:36, col:54> 'int'
        (BinaryOperator 0x9504d48 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9504d18 <col:37, col:48> 'int'
            (BinaryOperator 0x9504d00 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9504cb8 <col:38> 'int' 1)
              (ParenExpr 0x9504ce8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9504cd0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9504d30 <line:45:53> 'int' 8)))
      (ParenExpr 0x9504e20 <col:58, col:76> 'int'
        (BinaryOperator 0x9504e08 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9504dd8 <col:59, col:70> 'int'
            (BinaryOperator 0x9504dc0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9504d78 <col:60> 'int' 1)
              (ParenExpr 0x9504da8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9504d90 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9504df0 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x966e9e0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x966e9c8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x966e938 <col:45> 'int' 1)
    (ImplicitCastExpr 0x966e9b8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x966e9a0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x966e990 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x966e968 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x966e950 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9670e68 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9670e50 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9670e78 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9670ea0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9670e88 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9670ec8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9670eb0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9670ed8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9670f00 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9670ee8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9670ff0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9670fe0 <col:9, col:36>
    (CXXMemberCallExpr 0x9670fb0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9670f90 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9670220
        (CXXThisExpr 0x9670f28 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9670fd0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9670f78 <col:33> 'char_type':'char' lvalue ParmVar 0x966f490 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9671100 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x96710f0 <col:9, col:43>
    (CXXMemberCallExpr 0x96710a8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9671088 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9670350
        (CXXThisExpr 0x9671008 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96710d0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671058 <col:33> 'char_type *' lvalue ParmVar 0x966f5d0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x96710e0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671070 <col:39> 'const char_type *' lvalue ParmVar 0x966f640 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x96711e0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x96711d0 <col:9, col:36>
    (CXXMemberCallExpr 0x96711a0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9671180 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9670410
        (CXXThisExpr 0x9671118 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96711c0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9671168 <col:33> 'char_type':'char' lvalue ParmVar 0x966f750 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x96712f0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x96712e0 <col:9, col:43>
    (CXXMemberCallExpr 0x9671298 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9671278 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9670540
        (CXXThisExpr 0x96711f8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96712c0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671248 <col:33> 'char_type *' lvalue ParmVar 0x966f820 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x96712d0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671260 <col:39> 'const char_type *' lvalue ParmVar 0x966f870 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9671588 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9671450 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9671368 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9671358 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9671334 <col:6> 'char' lvalue ->_M_widen_ok 0x966e5d0
          (CXXThisExpr 0x9671308 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9671440 <line:868:4, col:51>
      (ImplicitCastExpr 0x9671430 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671418 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9671408 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9671388 <col:11> 'char [256]' lvalue ->_M_widen 0x966e6f0
              (CXXThisExpr 0x9671378 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x96713f0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x96713e0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x96713d0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x96713a8 <col:47> 'char' lvalue ParmVar 0x966f940 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x96714a0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9671480 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9670bb0
      (CXXThisExpr 0x9671470 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9671578 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9671548 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9671528 <col:9, col:15> '<bound member function type>' ->do_widen 0x9670600
        (CXXThisExpr 0x96714c0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9671568 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9671510 <col:24> 'char' lvalue ParmVar 0x966f940 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x96719c8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x96717b0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9671610 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9671600 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96715f0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x96715b8 <col:6> 'char' lvalue ->_M_widen_ok 0x966e5d0
            (CXXThisExpr 0x96715a8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x96715d8 <col:21> 'int' 1))
    (CompoundStmt 0x9671798 <line:895:4, line:898:4>
      (CallExpr 0x96716e8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x96716d8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9671628 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9671720 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9671710 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9671640 <col:23> 'char_type *' lvalue ParmVar 0x966fae0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9671740 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9671730 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9671658 <col:29> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9671750 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x96716c0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x96716a0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9671670 <col:35> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))
            (ImplicitCastExpr 0x96716b0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9671688 <col:42> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *')))))
      (ReturnStmt 0x9671788 <line:897:6, col:13>
        (ImplicitCastExpr 0x9671778 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967175c <col:13> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9671888 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9671820 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9671810 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9671800 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x96717e0 <col:7> 'char' lvalue ->_M_widen_ok 0x966e5d0
            (CXXThisExpr 0x96717d0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9671868 <line:900:4, col:18> 'void'
      (MemberExpr 0x9671848 <col:4> '<bound member function type>' ->_M_widen_init 0x9670bb0
        (CXXThisExpr 0x9671838 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x96719b8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9671960 <col:9, col:40> 'const char *'
      (MemberExpr 0x9671940 <col:9, col:15> '<bound member function type>' ->do_widen 0x9670780
        (CXXThisExpr 0x96718a8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9671988 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x96718f8 <col:24> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9671998 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9671910 <col:30> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))
      (ImplicitCastExpr 0x96719a8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671928 <col:36> 'char_type *' lvalue ParmVar 0x966fae0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9674700 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9671b98 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9671ab0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9671aa0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671a88 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9671a78 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x96719f8 <col:6> 'char [256]' lvalue ->_M_narrow 0x966e7e0
              (CXXThisExpr 0x96719e8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9671a60 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9671a50 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9671a40 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9671a18 <col:43> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9671b88 <line:926:4, col:52>
      (ImplicitCastExpr 0x9671b78 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671b60 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9671b50 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9671ad0 <col:11> 'char [256]' lvalue ->_M_narrow 0x966e7e0
              (CXXThisExpr 0x9671ac0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9671b38 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9671b28 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9671b18 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9671af0 <col:48> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x96744e8 <line:927:2, col:43>
    0x9671bc0 "const char __t =
      (CXXMemberCallExpr 0x96744a0 <col:19, col:42> 'char'
        (MemberExpr 0x9674480 <col:19> '<bound member function type>' ->do_narrow 0x96708a0
          (CXXThisExpr 0x9671c78 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x96744c8 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9671c48 <col:29> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x96744d8 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9671c60 <col:34> 'char' lvalue ParmVar 0x966fc60 '__dfault' 'char')))")
  (IfStmt 0x96746a8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9674568 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9674538 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9674528 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x96744f8 <col:6> 'const char' lvalue Var 0x9671bc0 '__t' 'const char')))
      (ImplicitCastExpr 0x9674558 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9674548 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9674510 <col:13> 'char' lvalue ParmVar 0x966fc60 '__dfault' 'char'))))
    (BinaryOperator 0x9674690 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9674650 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9674640 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x96745c0 <col:4> 'char [256]' lvalue ->_M_narrow 0x966e7e0
            (CXXThisExpr 0x96745b0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9674628 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9674618 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9674608 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x96745e0 <col:41> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9674680 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9674664 <col:49> 'const char' lvalue Var 0x9671bc0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x96746f0 <line:930:2, col:9>
    (ImplicitCastExpr 0x96746e0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x96746c4 <col:9> 'const char' lvalue Var 0x9671bc0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9674c00 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x96749b8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9674820 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x96747d8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x96747c8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9674720 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9674800 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x96747a0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9674790 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9674780 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9674748 <col:23> 'char' lvalue ->_M_narrow_ok 0x966e820
                  (CXXThisExpr 0x9674738 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9674768 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9674810 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x96747b8 <col:42> '_Bool' true))))
    (CompoundStmt 0x96749a0 <line:960:4, line:963:4>
      (CallExpr 0x96748f0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x96748e0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x967482c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9674928 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9674918 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9674844 <col:23> 'char *' lvalue ParmVar 0x966fe60 '__to' 'char *')))
        (ImplicitCastExpr 0x9674948 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9674938 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x967485c <col:29> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9674958 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x96748c8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x96748a8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9674874 <col:35> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x96748b8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x967488c <col:42> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9674990 <line:962:6, col:13>
        (ImplicitCastExpr 0x9674980 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674964 <col:13> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9674a90 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9674a28 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9674a18 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9674a08 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x96749e8 <col:7> 'char' lvalue ->_M_narrow_ok 0x966e820
            (CXXThisExpr 0x96749d8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9674a70 <line:965:4, col:19> 'void'
      (MemberExpr 0x9674a50 <col:4> '<bound member function type>' ->_M_narrow_init 0x9670b30
        (CXXThisExpr 0x9674a40 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9674bf0 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9674b80 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9674b60 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9670a60
        (CXXThisExpr 0x9674ab0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9674bb0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674b00 <col:25> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9674bc0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674b18 <col:31> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9674bd0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9674b30 <col:37> 'char' lvalue ParmVar 0x966fe10 '__dfault' 'char'))
      (ImplicitCastExpr 0x9674be0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9674b48 <col:47> 'char *' lvalue ParmVar 0x966fe60 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9674c70 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9674c60 <col:9, col:16>
    (ImplicitCastExpr 0x9674c50 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9674c30 <col:16> 'const mask *const' lvalue ->_M_table 0x966e590
        (CXXThisExpr 0x9674c20 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9674cc0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9674cb0 <col:9, col:16>
    (ImplicitCastExpr 0x9674ca0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9674c84 <col:16> 'char' lvalue ParmVar 0x96705b0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9674e48 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9674d98 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9674d88 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9674cd4 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9674dd0 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9674dc0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674cec <col:19> 'char_type *' lvalue ParmVar 0x9670720 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9674df0 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9674de0 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9674d04 <col:27> 'const char *' lvalue ParmVar 0x9670680 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9674e00 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9674d70 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9674d50 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9674d1c <col:33> 'const char *' lvalue ParmVar 0x96706d0 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9674d60 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9674d34 <col:40> 'const char *' lvalue ParmVar 0x9670680 '__lo' 'const char *')))))
  (ReturnStmt 0x9674e38 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9674e28 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9674e0c <col:9> 'const char *' lvalue ParmVar 0x96706d0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9674e98 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9674e88 <col:9, col:16>
    (ImplicitCastExpr 0x9674e78 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9674e60 <col:16> 'char_type':'char' lvalue ParmVar 0x9670800 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9675020 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9674f70 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9674f60 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9674eac <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9674fa8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9674f98 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9674ec4 <col:19> 'char *' lvalue ParmVar 0x9670a00 '__dest' 'char *')))
    (ImplicitCastExpr 0x9674fc8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9674fb8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674edc <col:27> 'const char_type *' lvalue ParmVar 0x9670920 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9674fd8 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9674f48 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9674f28 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674ef4 <col:33> 'const char_type *' lvalue ParmVar 0x9670970 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9674f38 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674f0c <col:40> 'const char_type *' lvalue ParmVar 0x9670920 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9675010 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9675000 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9674fe4 <col:9> 'const char_type *' lvalue ParmVar 0x9670970 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x967af38 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967af20 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x967af60 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967af48 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9514928 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9514b78 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x951b840 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0x951b490 <line:46:7, col:66>
    0x951b460 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x951b580 <line:47:7, col:62>
    0x951b550 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x951b6d8 <line:49:7, col:62>
    0x951b5a0 "const streamsize __put =
      (CallExpr 0x951b6b0 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x951b648 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0x951b628 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x951b5f0 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x951b5d4 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951b120 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0x951b67c <col:53> 'const _CharT *' lvalue ParmVar 0x951b190 '__s' 'const _CharT *')
        (DeclRefExpr 0x951b694 <col:58> 'streamsize':'int' lvalue ParmVar 0x951b1f0 '__n' 'streamsize':'int'))")
  (IfStmt 0x951b820 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0x951b738 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0x951b718 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x951b6e8 <col:11> 'const streamsize':'const int' lvalue Var 0x951b5a0 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x951b728 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x951b700 <col:20> 'streamsize':'int' lvalue ParmVar 0x951b1f0 '__n' 'streamsize':'int')))
    (CallExpr 0x951b800 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x951b768 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x951b750 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951b120 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0x951b7d8 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0x951c310 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0x951bcf0 <line:58:7, col:66>
    0x951bcc0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x951bdb0 <line:59:7, col:62>
    0x951bd80 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x951be78 <line:61:7, col:38>
    0x951bdd0 "const _CharT __c =
      (CallExpr 0x951be58 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x951be20 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x951be04 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951ba40 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0x951c2e8 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x951bec8 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0x951beb8 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x951be88 <col:14> 'streamsize':'int' lvalue ParmVar 0x951ba80 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x951bea0 <col:20> 'int' 0))
    (UnaryOperator 0x951bef8 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0x951bee0 <col:25> 'streamsize':'int' lvalue ParmVar 0x951ba80 '__n' 'streamsize':'int'))
    (CompoundStmt 0x951c2d0 <line:63:2, line:70:2>
      (DeclStmt 0x951c0b8 <line:64:4, col:70>
        0x951bfa0 "const typename _Traits::int_type __put =
          (CallExpr 0x951c098 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x951c048 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0x951c028 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x951bff0 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0x951bfd4 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951ba40 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0x951c07c <col:66> 'const _CharT' lvalue Var 0x951bdd0 '__c' 'const _CharT'))")
      (IfStmt 0x951c2b0 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0x951c198 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0x951c0f0 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x951c114 <col:29> 'const typename _Traits::int_type' lvalue Var 0x951bfa0 '__put' 'const typename _Traits::int_type')
          (CallExpr 0x951c178 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0x951c150 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0x951c298 <line:66:6, line:69:6>
          (CallExpr 0x951c270 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x951c1d8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x951c1bc <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951ba40 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x951c248 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0x951c290 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x951d728 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0x951c990 <line:78:7, col:66>
    0x951c960 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x951ca50 <line:79:7, col:62>
    0x951ca20 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x951cb50 <line:81:7, col:52>
    0x951cae0 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0x951cb30 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0x951cb14 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0x951d6e0 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0x951cb60 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0x951cae0 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0x951d6c0 <line:83:2, line:110:2>
      (IfStmt 0x951d490 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x951cb78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x951d470 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0x951cc38 <line:86:8, col:44>
            0x951cb90 "const streamsize __w =
              (CallExpr 0x951cc18 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x951cbe0 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x951cbc4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0x951d3c8 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0x951cc98 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x951cc78 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x951cc48 <col:12> 'const streamsize':'const int' lvalue Var 0x951cb90 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0x951cc88 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x951cc60 <col:18> 'streamsize':'int' lvalue ParmVar 0x951c6a0 '__n' 'streamsize':'int')))
            (CompoundStmt 0x951d300 <line:88:3, line:98:3>
              (DeclStmt 0x951ced8 <line:89:5, line:91:32>
                0x951ccc0 "const bool __left =
                  (ParenExpr 0x951cec0 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0x951ce98 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0x951ce48 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
                      (ParenExpr 0x951cde8 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0x951cdd0 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0x951cd48 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0x951cd10 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0x951ccf4 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0x951cda8 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0x951ce20 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0x951d008 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0x951cf10 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x951cf00 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x951cee8 <col:10> 'const _Bool' lvalue Var 0x951ccc0 '__left' 'const _Bool')))
                (CallExpr 0x951cfe0 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x951cf28 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x951bb80)
                  (DeclRefExpr 0x951cf5c <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x951cfc8 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x951cfa8 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x951cf74 <col:29> 'const streamsize':'const int' lvalue Var 0x951cb90 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x951cfb8 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x951cf8c <col:35> 'streamsize':'int' lvalue ParmVar 0x951c6a0 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0x951d140 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0x951d078 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x951d040 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0x951d024 <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0x951d118 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x951d098 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x951b310)
                  (DeclRefExpr 0x951d0cc <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0x951d0e4 <col:30> 'const _CharT *' lvalue ParmVar 0x951c660 '__s' 'const _CharT *')
                  (DeclRefExpr 0x951d0fc <col:35> 'streamsize':'int' lvalue ParmVar 0x951c6a0 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0x951d2e0 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0x951d1e8 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0x951d15c <col:9> 'const _Bool' lvalue Var 0x951ccc0 '__left' 'const _Bool')
                  (CallExpr 0x951d1c8 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x951d190 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0x951d174 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0x951d2b8 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x951d200 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x951bb80)
                  (DeclRefExpr 0x951d234 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x951d2a0 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x951d280 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x951d24c <col:29> 'const streamsize':'const int' lvalue Var 0x951cb90 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x951d290 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x951d264 <col:35> 'streamsize':'int' lvalue ParmVar 0x951c6a0 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0x951d3a0 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x951d320 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0x951b310)
              (DeclRefExpr 0x951d354 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0x951d36c <col:26> 'const _CharT *' lvalue ParmVar 0x951c660 '__s' 'const _CharT *')
              (DeclRefExpr 0x951d384 <col:31> 'streamsize':'int' lvalue ParmVar 0x951c6a0 '__n' 'streamsize':'int')))
          (CallExpr 0x951d450 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x951d400 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x951d3e4 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0x951d438 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x951d5a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x951d4b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x951d588 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0x951d558 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x951d4d8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x951d4c0 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x951d530 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0x951d578 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0x951d6a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x951d5c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x951d688 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0x951d668 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x951d5e8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x951d5d0 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x951d640 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x951d718 <line:111:7, col:14>
    (DeclRefExpr 0x951d6fc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x951c5f0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9822f88 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9822de8 <line:180:4, col:62>
    0x9822c10 "void *__p =
      (CXXReinterpretCastExpr 0x9822dd0 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x9822db8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x9822d60 <col:41> 'size_type []' lvalue Var 0x95dfdc0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9822f78 <line:181:4, col:39>
    (UnaryOperator 0x9822f60 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x9822f48 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x9822f38 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9822f1c <col:36> 'void *' lvalue Var 0x9822c10 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x9822bf8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9822bd8 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9822900 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x98228b8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x98228a8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x95420ac <col:8> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x98228e0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9822890 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x98226e8 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9822878 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9822858 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9822848 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9822810 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x95dff40 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x98228f0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x95421a0 <col:50> '_Bool' false))))
    (CompoundStmt 0x9822bc0 <line:236:6, line:245:6>
      (NullStmt 0x95421d8 <line:238:67>)
      (IfStmt 0x9822ba0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x98229f8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x98229d0 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x98229c0 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9542208 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x98229a8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x9822988 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x95df590
                (ImplicitCastExpr 0x9822978 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x9822950 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x95422a0 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9542288 <col:10> 'int' 1)))
          (IntegerLiteral 0x95422e0 <col:16> 'int' 0))
        (CompoundStmt 0x9822b88 <line:241:3, line:244:3>
          (NullStmt 0x9542360 <line:242:63>)
          (CXXMemberCallExpr 0x9822b68 <line:243:5, col:19> 'void'
            (MemberExpr 0x9822b30 <col:5> '<bound member function type>' ->_M_destroy 0x95e0c00
              (CXXThisExpr 0x9822a10 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x9822b50 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x95e0ae0 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x9821e40 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x95befc8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x95befb8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9528068 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x9822680 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9822670 <col:9, col:29>
    (ImplicitCastExpr 0x9822660 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x9822640 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x95bf550
        (MemberExpr 0x9822620 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x95bf580
          (CXXThisExpr 0x9822500 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x98224e8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x98224d8 <col:9, col:59>
    (UnaryOperator 0x98224c0 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x98224a8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9822490 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x9822478 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x9822460 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9822440 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x9822420 <col:44> '<bound member function type>' ->_M_data 0x95bf600
                  (CXXThisExpr 0x9822410 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x9821d90 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x9821d70 <col:9, col:51> 'void'
    (CXXTemporary 0x9821cf0)
    (CXXMemberCallExpr 0x9821d08 <col:9, col:51> 'void'
      (MemberExpr 0x9821c6c <col:9, col:19> '<bound member function type>' ->_M_dispose 0x95e0b30
        (CXXMemberCallExpr 0x9821c40 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x9821c20 <col:9> '<bound member function type>' ->_M_rep 0x95bf8f0
            (ImplicitCastExpr 0x9821c60 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9821b00 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x9821d60 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x9821d50 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x9821cf8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x9821cf0)
            (CXXMemberCallExpr 0x9821cc0 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x9821ca0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x95d7370
                (ImplicitCastExpr 0x9821ce0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9821c90 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x987ea70 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x987ea60 <col:9, col:26>
    (ImplicitCastExpr 0x987ea50 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x987ea30 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x95df410
        (ImplicitCastExpr 0x987ea20 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x987ea00 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x987e9e0 <col:16> '<bound member function type>' ->_M_rep 0x95bf8f0
              (CXXThisExpr 0x987e8b8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x987e8a0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x987e890 <col:9, col:32>
    (BinaryOperator 0x987e878 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x987e848 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x987e828 <col:16, col:22> '<bound member function type>' ->size 0x95c67c0
          (CXXThisExpr 0x987e818 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x987e868 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x954a558 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x987f110 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x987eb98 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x987eb40 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x987eb30 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x987eac8 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x95c7d20 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x987eb10 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x987eaf0 <col:13, col:19> '<bound member function type>' ->size 0x95c67c0
          (CXXThisExpr 0x987eae0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x987eb68 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x987eb58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x987eb88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x987f100 <line:859:2, col:22>
    (ImplicitCastExpr 0x987f0f0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x987f0d8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x987f090 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x987f070 <col:9> '<bound member function type>' ->_M_data 0x95bf600
            (CXXThisExpr 0x987f060 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x987f0c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x987f0ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x95c7d20 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x987f640 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x987f630 <col:9, col:24>
    (ImplicitCastExpr 0x987f620 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x987f600 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x987f5e0 <col:16> '<bound member function type>' ->_M_data 0x95bf600
          (CXXThisExpr 0x987f5d0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x9823160 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9823150 <col:9, col:16>
    (CXXConstructExpr 0x9823128 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x9823118 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x9823108 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x98230c0 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x95bf580
            (CXXThisExpr 0x9822fa0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9599c08 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9599bf8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9528068 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x9823f80 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9823f70 <col:9, col:29>
    (ImplicitCastExpr 0x9823f60 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x9823f40 <col:17, col:29> 'char *' lvalue ._M_p 0x959a190
        (MemberExpr 0x9823f20 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x959a1c0
          (CXXThisExpr 0x9823e00 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x9823de8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9823dd8 <col:9, col:59>
    (UnaryOperator 0x9823dc0 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x9823da8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9823d90 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x9823d78 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x9823d60 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9823d40 <col:44, col:52> 'char *'
                (MemberExpr 0x9823d20 <col:44> '<bound member function type>' ->_M_data 0x959a220
                  (CXXThisExpr 0x9823d10 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9823738 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9823728 <col:9, col:26>
    (ImplicitCastExpr 0x9823718 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x98236f8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x95b9f80
        (ImplicitCastExpr 0x98236e8 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x98236b0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x9823690 <col:16> '<bound member function type>' ->_M_rep 0x959a4f0
              (CXXThisExpr 0x9823570 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9823558 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9823548 <col:9, col:32>
    (BinaryOperator 0x9823530 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9823500 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x98234e0 <col:16, col:22> '<bound member function type>' ->size 0x95a1440
          (CXXThisExpr 0x98234d0 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x9823520 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x954a558 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x987e7b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x98240a8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9824050 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9824040 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9823fd8 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x95a2940 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9824020 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9824000 <col:13, col:19> '<bound member function type>' ->size 0x95a1440
          (CXXThisExpr 0x9823ff0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x9824078 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9824068 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9824098 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x987e7a0 <line:859:2, col:22>
    (ImplicitCastExpr 0x987e790 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x987e778 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x987e730 <col:9, col:17> 'char *'
          (MemberExpr 0x987e710 <col:9> '<bound member function type>' ->_M_data 0x959a220
            (CXXThisExpr 0x987e700 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x987e768 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x987e74c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x95a2940 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9541538 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x95414c0 <line:180:4, col:62>
    0x9541430 "void *__p =
      (CXXReinterpretCastExpr 0x95414a8 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0x9541480 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0x9541464 <col:41> 'size_type []' lvalue Var 0x95270a0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9541528 <line:181:4, col:39>
    (UnaryOperator 0x9541510 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0x95414f8 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0x95414d0 <col:36> 'void *' lvalue Var 0x9541430 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0x9541640 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0x9541630 <col:11, col:38>
    (CXXOperatorCallExpr 0x9541608 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x95415c8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CXXDependentScopeMemberExpr 0x9541578 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9541568 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x95415b0 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0x9541730 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9541720 <col:11, col:38>
    (CXXOperatorCallExpr 0x95416f8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x95416b8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (CXXDependentScopeMemberExpr 0x9541668 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9541658 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x95416a0 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0x95417d8 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0x95417c0 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9541758 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9541748 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0x95417a8 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0x9541790 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0x9541868 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9541850 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9541800 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x95417f0 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0x9541838 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9541d78 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9541d58 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0x9541ad0 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0x95419d0 <col:8> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9541a98 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9541a48 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
        (CXXThisExpr 0x95419e8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9541a30 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9541a10 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x95419f8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9527130 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9541ac0 <col:50> '_Bool' false))
    (CompoundStmt 0x9541d38 <line:206:6, line:212:6>
      (CallExpr 0x9541b40 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9541b08 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9541af8 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0x9541bc0 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9541b70 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9541b60 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9541ba4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95273a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9541d10 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9541c28 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0x9541ce0 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0x9541ca8 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9541c70 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0x9541c60 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0x9541cc4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95273a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9541cf4 <col:53> 'const _CharT' lvalue Var 0x9527010 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0x9541e58 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9541e48 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9541e30 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0x9541df8 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9541db8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CXXThisExpr 0x9541d90 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0x9541da0 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0x9542098 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0x9542088 <line:222:4, line:223:46>
    (ConditionalOperator 0x9542068 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0x9541f98 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0x9541f80 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0x9541ec0 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0x9541ea0 <col:13, col:26> '<dependent type>'
              (MemberExpr 0x9541e80 <col:13> '<bound member function type>' ->_M_is_leaked 0x95271b0
                (CXXThisExpr 0x9541e70 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0x9541f58 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0x9541f08 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
            (DeclRefExpr 0x9541ed4 <col:31> 'const _Alloc' lvalue ParmVar 0x9527590 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0x9541eec <col:43> 'const _Alloc' lvalue ParmVar 0x95275e0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0x9541fe0 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0x9541fc0 <col:14> '<bound member function type>' ->_M_refcopy 0x9527b00
          (CXXThisExpr 0x9541fb0 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0x9542048 <col:29, col:46> '<dependent type>'
        (MemberExpr 0x9542010 <col:29> '<bound member function type>' ->_M_clone 0x9527c50
          (CXXThisExpr 0x9542000 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9542030 <col:38> 'const _Alloc' lvalue ParmVar 0x9527590 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0x9542448 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9542428 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0x95421b0 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0x95420ac <col:8> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9542178 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9542128 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
        (CXXThisExpr 0x95420c8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9542110 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x95420f0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x95420d8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9527130 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x95421a0 <col:50> '_Bool' false))
    (CompoundStmt 0x9542410 <line:236:6, line:245:6>
      (NullStmt 0x95421d8 <line:238:67>)
      (IfStmt 0x95423f0 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9542338 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0x95422f8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890)
          (CallExpr 0x95422b8 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0x9542208 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x9542270 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0x9542238 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0x9542228 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0x95422a0 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9542288 <col:10> 'int' 1)))
          (IntegerLiteral 0x95422e0 <col:16> 'int' 0))
        (CompoundStmt 0x95423d8 <line:241:3, line:244:3>
          (NullStmt 0x9542360 <line:242:63>)
          (CallExpr 0x95423b8 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0x9542380 <col:5> '<bound member function type>' ->_M_destroy 0x9527a80
              (CXXThisExpr 0x9542370 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0x95423a0 <col:16> 'const _Alloc' lvalue ParmVar 0x95278e0 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0x95426e8 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0x9542668 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0x9542560 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0x954245c <col:8> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9542528 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x95424d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
        (CXXThisExpr 0x9542478 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x95424c0 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x95424a0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9542488 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9527130 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9542550 <col:50> '_Bool' false))
    (CallExpr 0x9542640 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0x95425a8 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0x93df590 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0x9542610 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0x95425d8 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x95425c8 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0x9542628 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0x95426d8 <line:258:4, col:22>
    (CallExpr 0x95426b8 <col:11, col:22> '<dependent type>'
      (MemberExpr 0x9542698 <col:11> '<bound member function type>' ->_M_refdata 0x9527500
        (CXXThisExpr 0x9542688 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0x9541120 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0x9542700 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0x9527e80 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0x9542758 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0x9527e30 '__dat' '_CharT *')
) (CompoundStmt 0x95427b0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x95280a0 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0x9528068 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0x9542870 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9542860 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0x9542828 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0x9542804 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9528110
        (CXXThisExpr 0x95427d8 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0x9542948 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0x9542938 <col:9, col:39>
    (ParenExpr 0x9542920 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0x9542908 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x95428b8 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0x9542898 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9528110
            (CXXThisExpr 0x9542888 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x95428ec <col:36> '_CharT *' lvalue ParmVar 0x95281e0 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0x9542a98 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9542a88 <col:9, col:59>
    (UnaryOperator 0x9542a70 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0x9542a58 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0x9542a40 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0x95429f8 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0x95429e0 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0x95429b0 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0x9542970 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0x9542b58 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0x9542b48 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0x9542b28 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9542b08 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9542ac8 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0x9542ce8 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0x9542cd8 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0x9542cb8 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9542c90 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9542c50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x9542bc8 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0x9542b88 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0x9542c30 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9542bf8 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9542be8 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0x9542e30 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0x9542e10 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0x9542da8 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0x9542d88 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9542d50 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0x9542d30 <col:7, col:14> '<dependent type>'
            (MemberExpr 0x9542d10 <col:7> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9542d00 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9542df0 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0x9542dd0 <col:4> '<bound member function type>' ->_M_leak_hard 0x9529cc0
        (CXXThisExpr 0x9542dc0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9543038 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9542ff0 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9542f08 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9542ec8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x9542e44 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528540 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9542ea8 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9542e70 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0x9542e60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9542fc0 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9542fb0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9542f94 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9542fe0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9542f80 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9542f64 </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9528590 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9543028 <line:319:2, col:9>
    (DeclRefExpr 0x954300c <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528540 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0x9547708 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0x95476e8 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9547600 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0x95475c0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CXXOperatorCallExpr 0x9547580 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9547540 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CallExpr 0x9543098 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9543060 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9543050 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0x9547528 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0x9547500 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9543138 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (CallExpr 0x9543100 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x95430c8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x95430b8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x954311c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95286a0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0x95475a4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95286e0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x95476b8 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0x95476a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954768c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x95476d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9547678 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x954765c </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0x9528730 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9547a38 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x95478d0 <line:333:2, col:54>
    0x9547730 "const bool __testoff =
      (CXXOperatorCallExpr 0x95478a8 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9547868 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
        (DeclRefExpr 0x9547764 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95288b0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9547840 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9547800 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CallExpr 0x95477c8 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9547790 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9547780 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0x95477e4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0x9547a28 <line:334:2, col:44>
    (ConditionalOperator 0x9547a08 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0x95479f8 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x95478e0 <col:9> 'const _Bool' lvalue Var 0x9547730 '__testoff' 'const _Bool'))
      (DeclRefExpr 0x95478f8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95288b0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x95479d0 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9547990 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CallExpr 0x9547958 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9547920 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9547910 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9547974 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0x9547e88 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0x9547e78 <line:341:2, line:342:58>
    (ParenExpr 0x9547e60 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0x9547e48 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0x9547bd0 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9547b30 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0x9547b48 <col:32> 'const _CharT *' lvalue ParmVar 0x95289f0 '__s' 'const _CharT *')
          (CallExpr 0x9547bb0 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0x9547b70 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0x9547e20 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9547cb0 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0x9547de0 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x9547da0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
            (CallExpr 0x9547d18 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0x9547cd8 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0x9547d80 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9547d48 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9547d38 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0x9547e04 <col:54> 'const _CharT *' lvalue ParmVar 0x95289f0 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9548100 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0x95480e0 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9547f20 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9547ed0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (DeclRefExpr 0x9547e9c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528ba0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9547eb8 <col:13> 'int' 1))
    (CallExpr 0x9547ff8 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9547f70 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9547fb0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9547f94 <col:25> '_CharT *' lvalue ParmVar 0x9528b10 '__d' '_CharT *'))
      (UnaryOperator 0x9547fe0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9547fc4 <col:31> 'const _CharT *' lvalue ParmVar 0x9528b60 '__s' 'const _CharT *')))
    (CallExpr 0x95480b8 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9548048 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x954806c <col:22> '_CharT *' lvalue ParmVar 0x9528b10 '__d' '_CharT *')
      (DeclRefExpr 0x9548084 <col:27> 'const _CharT *' lvalue ParmVar 0x9528b60 '__s' 'const _CharT *')
      (DeclRefExpr 0x954809c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528ba0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9548378 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0x9548358 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9548198 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9548148 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (DeclRefExpr 0x9548114 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528d70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9548130 <col:13> 'int' 1))
    (CallExpr 0x9548270 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x95481e8 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9548228 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x954820c <col:25> '_CharT *' lvalue ParmVar 0x9528ce0 '__d' '_CharT *'))
      (UnaryOperator 0x9548258 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x954823c <col:31> 'const _CharT *' lvalue ParmVar 0x9528d30 '__s' 'const _CharT *')))
    (CallExpr 0x9548330 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x95482c0 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x95482e4 <col:22> '_CharT *' lvalue ParmVar 0x9528ce0 '__d' '_CharT *')
      (DeclRefExpr 0x95482fc <col:27> 'const _CharT *' lvalue ParmVar 0x9528d30 '__s' 'const _CharT *')
      (DeclRefExpr 0x9548314 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528d70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0x95485d8 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0x95485b8 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9548410 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x95483c0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (DeclRefExpr 0x954838c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x95483a8 <col:13> 'int' 1))
    (CallExpr 0x95484d0 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9548460 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x95484a0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9548484 <col:25> '_CharT *' lvalue ParmVar 0x9528e50 '__d' '_CharT *'))
      (DeclRefExpr 0x95484b4 <col:30> '_CharT' lvalue ParmVar 0x9528ed0 '__c' '_CharT'))
    (CallExpr 0x9548590 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9548520 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9548544 <col:24> '_CharT *' lvalue ParmVar 0x9528e50 '__d' '_CharT *')
      (DeclRefExpr 0x954855c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9528e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9548574 <col:34> '_CharT' lvalue ParmVar 0x9528ed0 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0x9548810 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0x95487e8 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9548670 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9548620 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0)
      (DeclRefExpr 0x95485ec <col:11> '_Iterator' lvalue ParmVar 0x95290b0 '__k1' '_Iterator')
      (DeclRefExpr 0x9548604 <col:19> '_Iterator' lvalue ParmVar 0x95290f0 '__k2' '_Iterator'))
    (BinaryOperator 0x95486f8 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0x95486b0 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9548694 <col:27> '_Iterator' lvalue ParmVar 0x95290b0 '__k1' '_Iterator'))
      (UnaryOperator 0x95486e0 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0x95486c4 <col:35> '_CharT *' lvalue ParmVar 0x9529070 '__p' '_CharT *')))
    (CallExpr 0x95487c0 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9548738 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0x9548778 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0x954875c <col:27> '_CharT *' lvalue ParmVar 0x9529070 '__p' '_CharT *'))
      (UnaryOperator 0x95487a8 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x954878c <col:33> '_Iterator' lvalue ParmVar 0x95290b0 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0x9548990 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0x9548968 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9548828 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9529920 0x9529740 0x9529560 0x95293a0 0x9529210)
    (DeclRefExpr 0x954886c <col:23> '_CharT *' lvalue ParmVar 0x9529260 '__p' '_CharT *')
    (CallExpr 0x95488d8 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95488a0 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9548884 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95292a0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9548948 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9548910 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x95488f4 <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95292e0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9548b10 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0x9548ae8 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x95489a8 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9529920 0x9529740 0x9529560 0x95293a0 0x9529210)
    (DeclRefExpr 0x95489ec <col:23> '_CharT *' lvalue ParmVar 0x9529420 '__p' '_CharT *')
    (CallExpr 0x9548a58 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9548a20 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9548a04 <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9529460 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9548ac8 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9548a90 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9548a74 <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95294a0 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9548c30 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0x9548c08 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9548b24 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9548b3c <col:17> '_CharT *' lvalue ParmVar 0x95295e0 '__p' '_CharT *')
    (DeclRefExpr 0x9548b54 <col:22> '_CharT *' lvalue ParmVar 0x9529630 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0x9548be0 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9548ba0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (DeclRefExpr 0x9548b6c <col:28> '_CharT *' lvalue ParmVar 0x9529680 '__k2' '_CharT *')
      (DeclRefExpr 0x9548b84 <col:35> '_CharT *' lvalue ParmVar 0x9529630 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9548d50 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0x9548d28 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9548c44 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9548c5c <col:17> '_CharT *' lvalue ParmVar 0x95297c0 '__p' '_CharT *')
    (DeclRefExpr 0x9548c74 <col:22> 'const _CharT *' lvalue ParmVar 0x9529810 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0x9548d00 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9548cc0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (DeclRefExpr 0x9548c8c <col:28> 'const _CharT *' lvalue ParmVar 0x9529860 '__k2' 'const _CharT *')
      (DeclRefExpr 0x9548ca4 <col:35> 'const _CharT *' lvalue ParmVar 0x9529810 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0x9549358 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0x9548e88 <line:403:2, col:58>
    0x9548d90 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0x9548e68 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0x9548e40 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9548e00 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (DeclRefExpr 0x9548dd0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95299a0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9548de8 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95299e0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0x9549338 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9548fb0 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9548f70 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (DeclRefExpr 0x9548e98 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9548d90 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0x9548f50 <col:12, col:46> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
    (ReturnStmt 0x95490a0 <line:406:4, col:45>
      (ImplicitCastExpr 0x9549090 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9549070 <col:11, col:45> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int')))
    (IfStmt 0x9549318 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x95491c0 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9549180 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230)
        (DeclRefExpr 0x95490b0 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9548d90 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0x9549160 <col:17, col:51> 'const int':'const int' lvalue Var 0x9343d00 '__min' 'const int':'const int'))
      (ReturnStmt 0x95492b0 <line:408:4, col:45>
        (ImplicitCastExpr 0x95492a0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9549280 <col:11, col:45> 'const int':'const int' lvalue Var 0x9343d00 '__min' 'const int':'const int')))
      (ReturnStmt 0x9549308 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0x95492e8 <col:11, col:18> 'int'
          (DeclRefExpr 0x95492cc <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9548d90 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x95493f0 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x95493e0 <col:9, col:35>
    (CallExpr 0x95493c0 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9549398 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0x9549478 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9549440 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0x9549420 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0x9549404 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9529d40 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0x95494a0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0x9549500 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9541138 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9541158 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9541178 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9541198 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x95411b8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9549620 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0x9549600 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9549560 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0x9549540 <col:9, col:16> '<dependent type>'
        (MemberExpr 0x9549520 <col:9> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x9549510 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x95495e0 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95495a8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0x9549598 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x95496c8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0x95496b8 <col:9, col:34>
    (CallExpr 0x9549698 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9549648 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9549638 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954967c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952c940 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0x9549770 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0x9549760 <col:9, col:32>
    (CallExpr 0x9549740 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95496f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95496e0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9549724 <col:29> 'const _CharT *' lvalue ParmVar 0x952ca60 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0x9549860 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0x9549800 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9549798 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9549788 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x95497d0 <col:15> 'int' 1)
    (DeclRefExpr 0x95497e8 <col:18> '_CharT' lvalue ParmVar 0x952cb70 '__c' '_CharT'))
  (ReturnStmt 0x9549850 <line:562:2, col:10>
    (UnaryOperator 0x9549838 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9549828 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0x9549970 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0x95498a8 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0x9549888 <col:2> '<bound member function type>' ->_M_leak 0x95284d0
      (CXXThisExpr 0x9549878 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9549960 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0x9549940 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9549920 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x95498e0 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0x9549a30 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0x9549a20 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9549a00 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x95499e0 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x95499a0 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0x9549c10 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0x9549a78 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0x9549a58 <col:2> '<bound member function type>' ->_M_leak 0x95284d0
      (CXXThisExpr 0x9549a48 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9549c00 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0x9549be0 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9549bb8 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9549b78 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x9549af0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9549ab0 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0x9549b58 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9549b20 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9549b10 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0x9549da0 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0x9549d90 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0x9549d70 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9549d48 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9549d08 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x9549c80 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9549c40 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0x9549ce8 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9549cb0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9549ca0 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0x9549e58 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0x9549e48 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9549e28 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9549e08 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9549dd0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9549dc0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9549f10 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0x9549f00 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9549ee0 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9549ec0 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9549e88 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9549e78 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0x9549fc8 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0x9549fb8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9549f98 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9549f78 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9549f40 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9549f30 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0x954a080 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0x954a070 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x954a050 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x954a030 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9549ff8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9549fe8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0x954a130 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x954a120 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x954a0e8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x954a0c8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x954a0a8 <col:16> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x954a098 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0x954a1e0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x954a1d0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x954a198 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x954a178 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x954a158 <col:16> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x954a148 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0x954a260 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0x954a250 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0x954a218 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0x954a320 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0x954a2f8 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954a288 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x954a278 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x954a2bc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952d4b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x954a2e0 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0x954a3d0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x954a3c0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x954a388 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x954a368 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x954a348 <col:16> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x954a338 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0x95411d0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0x954a4d8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0x954a4b0 <col:9, col:37> '<dependent type>'
    (MemberExpr 0x954a3f8 <col:9> '<bound member function type>' ->_M_mutate 0x9529c30
      (CXXThisExpr 0x954a3e8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x954a418 <col:19> 'int' 0)
    (CallExpr 0x954a478 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954a440 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0x954a430 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0x954a498 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0x954a5f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x954a5e8 <col:9, col:32>
    (CXXOperatorCallExpr 0x954a5c0 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x954a570 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x954a538 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954a500 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x954a4f0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0x954a558 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0x954a6d0 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0x954a610 <line:819:40>)
  (ReturnStmt 0x954a6c0 <line:820:2, col:24>
    (ArraySubscriptExpr 0x954a6a8 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x954a670 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x954a630 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x954a68c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952d7c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0x954a808 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0x954a6e8 <line:837:40>)
  (NullStmt 0x954a6f8 <line:839:42>)
  (CallExpr 0x954a738 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0x954a718 <col:2> '<bound member function type>' ->_M_leak 0x95284d0
      (CXXThisExpr 0x954a708 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x954a7f8 <line:841:2, col:24>
    (ArraySubscriptExpr 0x954a7e0 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x954a7a8 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x954a768 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x954a7c4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952d8f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0x954ab00 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x954aa30 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x954a8e8 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x954a8a8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (DeclRefExpr 0x954a828 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952da00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x954a888 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954a850 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x954a840 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x954aa00 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x954a9f0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x954aa20 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x954aaf0 <line:859:2, col:22>
    (ArraySubscriptExpr 0x954aad8 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x954aaa0 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x954aa60 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x954aabc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952da00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0x954add8 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0x954acb8 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x954abc0 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x954ab80 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (DeclRefExpr 0x954ab18 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952dac0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x954ab60 <col:13, col:18> '<dependent type>'
        (MemberExpr 0x954ab40 <col:13> '<bound member function type>' ->size 0x952d1f0
          (CXXThisExpr 0x954ab30 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x954ac88 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0x954ac78 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954ac5c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x954aca8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954ac48 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954ac1c </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0x954ad08 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0x954ace8 <col:2> '<bound member function type>' ->_M_leak 0x95284d0
      (CXXThisExpr 0x954acd8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x954adc8 <line:913:2, col:22>
    (ArraySubscriptExpr 0x954adb0 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x954ad78 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x954ad38 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x954ad94 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952dac0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x954ae88 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0x954ae78 <col:9, col:34>
    (CallExpr 0x954ae58 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954ae08 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x954adf8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954ae3c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952db90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0x954af30 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0x954af20 <col:9, col:32>
    (CallExpr 0x954af00 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954aeb0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x954aea0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954aee4 <col:29> 'const _CharT *' lvalue ParmVar 0x952dc70 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0x954b000 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0x954afa8 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954af58 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x954af48 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x954af8c <col:18> '_CharT' lvalue ParmVar 0x952dd40 '__c' '_CharT'))
  (ReturnStmt 0x954aff0 <line:944:2, col:10>
    (UnaryOperator 0x954afd8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x954afc8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0x954b150 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x954b018 <line:998:32>)
  (ReturnStmt 0x954b140 <line:999:2, col:51>
    (CallExpr 0x954b118 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954b038 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x954b028 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954b06c <col:22> 'const _CharT *' lvalue ParmVar 0x952e220 '__s' 'const _CharT *')
      (CallExpr 0x954b0f8 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954b0a8 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x954b0dc <col:47> 'const _CharT *' lvalue ParmVar 0x952e220 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x954b2c0 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0x954b2b0 <col:11, col:69>
    (CallExpr 0x954b280 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954b178 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x954b168 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x954b1e0 <col:32, col:40> '<dependent type>'
        (MemberExpr 0x954b1c0 <col:32> '<bound member function type>' ->_M_iend 0x9528450
          (CXXThisExpr 0x954b1b0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x954b230 <col:43, col:51> '<dependent type>'
        (MemberExpr 0x954b210 <col:43> '<bound member function type>' ->_M_iend 0x9528450
          (CXXThisExpr 0x954b200 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x954b24c <col:54> '_InputIterator' lvalue ParmVar 0x952e4a0 '__first' '_InputIterator')
      (DeclRefExpr 0x954b264 <col:63> '_InputIterator' lvalue ParmVar 0x952e4e0 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0x954e4a0 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x954b400 <line:1044:2, col:42>
    0x954b2e0 "const size_type __len =
      (CXXOperatorCallExpr 0x954b3d8 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x954b398 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (IntegerLiteral 0x954b318 <col:26> 'int' 1)
        (CallExpr 0x954b378 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x954b340 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x954b330 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x954e230 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x954e198 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x954b4d0 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x954b490 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
        (DeclRefExpr 0x954b410 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954b2e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x954b470 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x954b438 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0x954b428 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x954e178 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954e140 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0x954e120 <col:34, col:41> '<dependent type>'
            (MemberExpr 0x954e100 <col:34> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x954e0f0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x954e210 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954e1c0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x954e1b0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954e1f4 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954b2e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0x954e3b8 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954e278 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0x954e388 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0x954e300 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0x954e2c0 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0x954e368 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954e330 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x954e320 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x954e39c <col:47> '_CharT' lvalue ParmVar 0x952e620 '__c' '_CharT'))
  (CallExpr 0x954e480 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954e430 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x954e410 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x954e3f0 <col:2> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x954e3e0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x954e464 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954b2e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x954e780 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0x954e770 <line:1090:9, line:1092:34>
    (CallExpr 0x954e748 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954e4d0 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x954e4c0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x954e678 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0x954e638 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x954e558 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x954e520 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x954e504 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952e800 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x954e610 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x954e590 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x954e574 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952e800 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x954e5c4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952e840 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x954e5dc <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0x954e720 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954e6b8 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x954e69c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952e800 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x954e6ec <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952e840 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x954e704 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952e880 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0x954e8d0 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0x954e798 <line:1119:32>)
  (ReturnStmt 0x954e8c0 <line:1120:2, col:51>
    (CallExpr 0x954e898 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954e7b8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x954e7a8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954e7ec <col:22> 'const _CharT *' lvalue ParmVar 0x952ea80 '__s' 'const _CharT *')
      (CallExpr 0x954e878 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954e828 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x954e85c <col:47> 'const _CharT *' lvalue ParmVar 0x952ea80 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0x954ea30 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0x954ea20 <col:9, col:67>
    (CallExpr 0x954e9f0 <col:16, col:67> '<dependent type>'
      (MemberExpr 0x954e8f8 <col:16> '<bound member function type>' ->_M_replace_aux 0x9539030
        (CXXThisExpr 0x954e8e8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0x954e938 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x954e920 <col:41> 'int' 0))
      (CallExpr 0x954e9a0 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954e968 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0x954e958 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x954e9bc <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952eb50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x954e9d4 <col:64> '_CharT' lvalue ParmVar 0x952eb90 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x954eba0 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0x954eb90 <col:11, col:71>
    (CallExpr 0x954eb60 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954ea58 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x954ea48 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x954eac0 <col:32, col:42> '<dependent type>'
        (MemberExpr 0x954eaa0 <col:32> '<bound member function type>' ->_M_ibegin 0x95283d0
          (CXXThisExpr 0x954ea90 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x954eb10 <col:45, col:53> '<dependent type>'
        (MemberExpr 0x954eaf0 <col:45> '<bound member function type>' ->_M_iend 0x9528450
          (CXXThisExpr 0x954eae0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x954eb2c <col:56> '_InputIterator' lvalue ParmVar 0x952ecc0 '__first' '_InputIterator')
      (DeclRefExpr 0x954eb44 <col:65> '_InputIterator' lvalue ParmVar 0x952ed00 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0x954ec90 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0x954ec60 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954ebc8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x954ebb8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x954ebfc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x952ee20 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x954ec14 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x952ee20 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x954ec2c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952ee60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x954ec44 <col:38> '_CharT' lvalue ParmVar 0x952eea0 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0x954ed80 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0x954ed50 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954ecb8 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x954eca8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x954ecec <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x952f030 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x954ed04 <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x952f030 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x954ed1c <col:35> '_InputIterator' lvalue ParmVar 0x952f070 '__beg' '_InputIterator')
    (DeclRefExpr 0x954ed34 <col:42> '_InputIterator' lvalue ParmVar 0x952f0b0 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x954ef00 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0x954eef0 <col:9, col:70>
    (CallExpr 0x954eec0 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954eda8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x954ed98 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954eddc <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f210 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x954edf4 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952f260 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0x954ee30 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x954ee18 <col:54> 'int' 0))
      (CallExpr 0x954eea0 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954ee68 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0x954ee4c <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952f260 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0x954f1f0 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0x954f1e0 <line:1243:9, line:1245:35>
    (CallExpr 0x954f1b8 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954ef28 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x954ef18 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954ef5c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f370 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x954f0e8 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0x954f0a8 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x954efc8 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x954ef90 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0x954ef74 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952f3c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x954f080 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x954f000 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x954efe4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952f3c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x954f034 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f400 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x954f04c <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0x954f190 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954f128 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x954f10c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x952f3c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x954f15c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f400 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x954f174 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f440 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0x954f358 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0x954f208 <line:1284:32>)
  (ReturnStmt 0x954f348 <line:1285:2, col:58>
    (CallExpr 0x954f320 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954f228 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x954f218 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954f25c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x954f274 <col:29> 'const _CharT *' lvalue ParmVar 0x952f7a0 '__s' 'const _CharT *')
      (CallExpr 0x954f300 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x954f2b0 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0x954f2e4 <col:54> 'const _CharT *' lvalue ParmVar 0x952f7a0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0x954f4f0 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0x954f4e0 <line:1306:9, line:1307:32>
    (CallExpr 0x954f4b0 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0x954f380 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0x9539030
        (CXXThisExpr 0x954f370 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x954f418 <col:31, col:69> '<dependent type>'
        (MemberExpr 0x954f3b0 <col:31> '<bound member function type>' ->_M_check 0x9528630
          (CXXThisExpr 0x954f3a0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x954f3d0 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f8b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x954f3e8 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0x954f460 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x954f448 <col:20> 'int' 0))
      (DeclRefExpr 0x954f47c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952f8f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x954f494 <col:29> '_CharT' lvalue ParmVar 0x952f930 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0x954f918 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0x954f508 <line:1324:66>)
  (DeclStmt 0x954f628 <line:1325:2, col:43>
    0x954f520 "const size_type __pos =
      (CXXOperatorCallExpr 0x954f600 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x954f5c0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x954f554 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x952fa70 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x954f5a0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x954f580 <col:32> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x954f570 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x954f718 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0x954f648 <col:2> '<bound member function type>' ->_M_replace_aux 0x9539030
      (CXXThisExpr 0x954f638 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x954f668 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954f520 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x954f6a0 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x954f688 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0x954f6e0 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x954f6c8 <col:48> 'int' 1))
    (DeclRefExpr 0x954f6fc <col:52> '_CharT' lvalue ParmVar 0x952fab0 '__c' '_CharT'))
  (CallExpr 0x954f7d0 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954f798 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x954f778 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x954f758 <col:2> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x954f748 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x954f908 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0x954f8e8 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x954f8c0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x954f880 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x954f848 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x954f808 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x954f864 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954f520 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0x95411e8 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0x9541200 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0x954fb38 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0x954fad8 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0x954f950 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9529c30
      (CXXThisExpr 0x954f940 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x954f9e8 <col:12, col:49> '<dependent type>'
      (MemberExpr 0x954f980 <col:12> '<bound member function type>' ->_M_check 0x9528630
        (CXXThisExpr 0x954f970 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954f9a0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952fbc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x954f9b8 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0x954fa70 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0x954fa20 <col:5> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x954fa10 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954fa40 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952fbc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x954fa58 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952fc00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0x954fab8 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x954faa0 <col:37> 'int' 0)))
  (ReturnStmt 0x954fb28 <line:1350:2, col:10>
    (UnaryOperator 0x954fb10 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x954fb00 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0x954ff48 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0x954fb50 <line:1365:32>)
  (DeclStmt 0x954fc78 <line:1366:2, col:50>
    0x954fb70 "const size_type __pos =
      (CXXOperatorCallExpr 0x954fc50 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x954fc10 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x954fba4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x952fd10 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x954fbf0 <col:39, col:49> '<dependent type>'
          (MemberExpr 0x954fbd0 <col:39> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x954fbc0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x954fd50 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0x954fc98 <col:2> '<bound member function type>' ->_M_mutate 0x9529c30
      (CXXThisExpr 0x954fc88 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x954fcb8 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954fb70 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x954fcf0 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x954fcd8 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0x954fd30 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x954fd18 <col:43> 'int' 0)))
  (CallExpr 0x954fe00 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x954fdc8 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x954fda8 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x954fd88 <col:2> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x954fd78 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x954ff38 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0x954ff18 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x954fef0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x954feb0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x954fe78 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x954fe38 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x954fe94 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x954fb70 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9550108 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0x95500f8 <col:9, col:71>
    (CallExpr 0x95500c8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x954ff80 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x954ff70 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x954ffb4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952ff70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x954ffcc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x952ffb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9550038 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9550000 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x954ffe4 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9530000 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x95500a8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9550070 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9550054 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9530000 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0x9550418 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0x9550408 <line:1425:9, line:1427:37>
    (CallExpr 0x95503d8 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9550130 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9550120 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9550164 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9530140 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x955017c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9530180 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9550308 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0x95502c8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900)
        (CallExpr 0x95501e8 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95501b0 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9550194 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95301d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x95502a0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9550220 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9550204 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95301d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9550254 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9530210 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x955026c <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0x95503b0 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9550348 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x955032c <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95301d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955037c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9530210 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9550394 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9530250 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0x95505a0 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0x9550430 <line:1468:32>)
  (ReturnStmt 0x9550590 <line:1469:2, col:65>
    (CallExpr 0x9550560 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9550450 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9550440 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9550484 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9537300 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x955049c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9537340 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x95504b4 <col:36> 'const _CharT *' lvalue ParmVar 0x9537390 '__s' 'const _CharT *')
      (CallExpr 0x9550540 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95504f0 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9550524 <col:61> 'const _CharT *' lvalue ParmVar 0x9537390 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9550788 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0x9550778 <line:1490:9, line:1491:42>
    (CallExpr 0x9550748 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0x95505c8 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0x9539030
        (CXXThisExpr 0x95505b8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9550668 <col:31, col:70> '<dependent type>'
        (MemberExpr 0x95505f8 <col:31> '<bound member function type>' ->_M_check 0x9528630
          (CXXThisExpr 0x95505e8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9550618 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95374d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9550630 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0x95506f0 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0x95506a0 <col:10> '<bound member function type>' ->_M_limit 0x9528950
          (CXXThisExpr 0x9550690 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x95506c0 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95374d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x95506d8 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9537510 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9550714 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9537550 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x955072c <col:39> '_CharT' lvalue ParmVar 0x9537590 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9550938 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0x9550928 <col:9, col:71>
    (CallExpr 0x95508f8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95507b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95507a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x95507e4 <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95376d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x95507fc <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537710 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0x9550868 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9550830 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9550814 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9537760 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x95508d8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95508a0 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9550884 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9537760 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0x9550b80 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0x9550950 <line:1528:27>)
  (ReturnStmt 0x9550b70 <line:1529:2, col:64>
    (CallExpr 0x9550b40 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9550970 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9550960 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9550a50 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9550a10 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95509a4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95378a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x95509f0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x95509d0 <col:30> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x95509c0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9550ae8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9550aa8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9550a74 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95378e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9550a8c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95378a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9550b0c <col:56> 'const _CharT *' lvalue ParmVar 0x9537930 '__s' 'const _CharT *')
      (DeclRefExpr 0x9550b24 <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9537970 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0x9550d08 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0x9550b98 <line:1548:32>)
  (ReturnStmt 0x9550cf8 <line:1549:2, col:64>
    (CallExpr 0x9550cc8 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9550bb8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9550ba8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9550bec <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537ab0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9550c04 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537af0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9550c1c <col:35> 'const _CharT *' lvalue ParmVar 0x9537b40 '__s' 'const _CharT *')
      (CallExpr 0x9550ca8 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9550c58 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9550c8c <col:60> 'const _CharT *' lvalue ParmVar 0x9537b40 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0x9550f38 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0x9550d20 <line:1570:27>)
  (ReturnStmt 0x9550f28 <line:1571:2, col:65>
    (CallExpr 0x9550ef8 <col:9, col:65> '<dependent type>'
      (MemberExpr 0x9550d40 <col:9> '<bound member function type>' ->_M_replace_aux 0x9539030
        (CXXThisExpr 0x9550d30 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9550e08 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9550dc8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9550d60 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537c80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9550da8 <col:31, col:41> '<dependent type>'
          (MemberExpr 0x9550d88 <col:31> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9550d78 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9550ea0 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9550e60 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9550e2c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537cc0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9550e44 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537c80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9550ec4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9537d00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9550edc <col:62> '_CharT' lvalue ParmVar 0x9537d40 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0x95511d0 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0x9550f50 <line:1594:29>)
  (NullStmt 0x9550f60 <line:1595:46>)
  (DeclStmt 0x95510a0 <line:1596:4, col:72>
    0x9551070 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0x95511c0 <line:1597:4, col:66>
    (CallExpr 0x9551190 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x95510c0 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9551100 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537ed0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9551118 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9537f10 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9551130 <col:43> '_InputIterator' lvalue ParmVar 0x9537f50 '__k1' '_InputIterator')
      (DeclRefExpr 0x9551148 <col:49> '_InputIterator' lvalue ParmVar 0x9537f90 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0x9551178 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x95514b0 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0x95511f0 <line:1606:27>)
  (NullStmt 0x9551200 <line:1607:44>)
  (ReturnStmt 0x95514a0 <line:1608:2, line:1609:26>
    (CallExpr 0x9551470 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9551220 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9551210 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9551300 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x95512c0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551254 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95380f0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x95512a0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9551280 <col:30> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9551270 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9551398 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9551358 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551324 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538130 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x955133c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95380f0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x95513bc <line:1609:9> '_CharT *' lvalue ParmVar 0x9538180 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0x9551448 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9551408 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95513d4 <col:15> '_CharT *' lvalue ParmVar 0x95381d0 '__k2' '_CharT *')
        (DeclRefExpr 0x95513ec <col:22> '_CharT *' lvalue ParmVar 0x9538180 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9551790 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0x95514d0 <line:1617:27>)
  (NullStmt 0x95514e0 <line:1618:44>)
  (ReturnStmt 0x9551780 <line:1619:2, line:1620:26>
    (CallExpr 0x9551750 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9551500 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x95514f0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x95515e0 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x95515a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551534 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538310 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9551580 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9551560 <col:30> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9551550 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9551678 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9551638 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551604 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538350 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x955161c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538310 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x955169c <line:1620:9> 'const _CharT *' lvalue ParmVar 0x95383a0 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0x9551728 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x95516e8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95516b4 <col:15> 'const _CharT *' lvalue ParmVar 0x95383f0 '__k2' 'const _CharT *')
        (DeclRefExpr 0x95516cc <col:22> 'const _CharT *' lvalue ParmVar 0x95383a0 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0x9551ac8 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0x95517b0 <line:1627:27>)
  (NullStmt 0x95517c0 <line:1628:44>)
  (ReturnStmt 0x9551ab8 <line:1629:2, line:1630:33>
    (CallExpr 0x9551a88 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95517e0 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x95517d0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x95518c0 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9551880 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551814 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538530 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9551860 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9551840 <col:30> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9551830 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9551958 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9551918 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95518e4 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538570 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x95518fc <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538530 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x95519d0 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9551998 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x955197c <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95385b0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9551a60 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9551a20 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95519ec <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95385f0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9551a04 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95385b0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9551e00 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0x9551ae8 <line:1638:27>)
  (NullStmt 0x9551af8 <line:1639:44>)
  (ReturnStmt 0x9551df0 <line:1640:2, line:1641:33>
    (CallExpr 0x9551dc0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9551b18 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9551b08 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9551bf8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9551bb8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551b4c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538730 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9551b98 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9551b78 <col:30> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9551b68 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9551c90 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9551c50 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551c1c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538770 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9551c34 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538730 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9551d08 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9551cd0 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9551cb4 <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95387b0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9551d98 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9551d58 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551d24 <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95387f0 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9551d3c <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95387b0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9552028 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0x9552018 <col:11, col:76>
    (CallExpr 0x9551fe8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0x9551e30 <col:18> '<bound member function type>' ->_M_replace_aux 0x9539030
        (CXXThisExpr 0x9551e20 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9551ef8 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9551eb8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551e50 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95389c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9551e98 <col:40, col:50> '<dependent type>'
          (MemberExpr 0x9551e78 <col:40> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9551e68 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9551f90 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9551f50 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9551f1c <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9538a00 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9551f34 <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95389c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9551fb4 <col:66> '_Integer' lvalue ParmVar 0x9538a40 '__n' '_Integer')
      (DeclRefExpr 0x9551fcc <col:71> '_Integer' lvalue ParmVar 0x9538a80 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0x9554870 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0x9554760 <line:1690:11, col:80>
    0x9554730 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0x9554860 <line:1691:11, col:56>
    (CallExpr 0x9554830 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9554770 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0x953a190 0x953a060 0x9539dd0 0x9539b40)
      (DeclRefExpr 0x95547b0 <col:31> '_InIterator' lvalue ParmVar 0x95392b0 '__beg' '_InIterator')
      (DeclRefExpr 0x95547c8 <col:38> '_InIterator' lvalue ParmVar 0x95392f0 '__end' '_InIterator')
      (DeclRefExpr 0x95547e0 <col:45> 'const _Alloc' lvalue ParmVar 0x9539340 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9554818 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0x9554940 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0x9554930 <line:1700:11, line:1701:19>
    (CallExpr 0x9554908 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0x9554888 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0x95398c0 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0x95548c0 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x95548a0 <col:60> '_Integer' lvalue ParmVar 0x9539540 '__beg' '_Integer'))
      (DeclRefExpr 0x95548d8 <line:1701:9> '_Integer' lvalue ParmVar 0x9539580 '__end' '_Integer')
      (DeclRefExpr 0x95548f0 <col:16> 'const _Alloc' lvalue ParmVar 0x95395d0 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9554a18 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0x9554a08 <col:9, col:44>
    (CallExpr 0x95549e0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x9554958 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0x953a190 0x953a060 0x9539dd0 0x9539b40)
      (DeclRefExpr 0x9554998 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9539770 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x95549b0 <col:36> '_CharT' lvalue ParmVar 0x95397b0 '__c' '_CharT')
      (DeclRefExpr 0x95549c8 <col:41> 'const _Alloc' lvalue ParmVar 0x9539800 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0x9554c60 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0x9554b60 <line:1711:4, col:69>
    0x9554b30 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0x9554c50 <line:1712:4, col:58>
    (CallExpr 0x9554c20 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9554b70 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0x9539730 0x95394a0)
      (DeclRefExpr 0x9554ba8 <col:28> '_InIterator' lvalue ParmVar 0x9539990 '__beg' '_InIterator')
      (DeclRefExpr 0x9554bc0 <col:35> '_InIterator' lvalue ParmVar 0x95399d0 '__end' '_InIterator')
      (DeclRefExpr 0x9554bd8 <col:42> 'const _Alloc' lvalue ParmVar 0x9539a20 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9554c08 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9541218 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0x9554cf8 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9554ce8 <col:9, col:24>
    (CallExpr 0x9554cc8 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9554c88 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0x9554d90 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0x9554d80 <col:9, col:24>
    (CallExpr 0x9554d60 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9554d20 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0x9554de8 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9554dd8 <col:9, col:16>
    (MemberExpr 0x9554db8 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9528110
      (CXXThisExpr 0x9554da8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9541230 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0x9554f78 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0x9554f68 <col:9, col:60>
    (CallExpr 0x9554f40 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9554e10 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9554e00 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9554e98 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9554e60 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9554e44 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953a8c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9554eb4 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953a900 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9554f20 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9554ee8 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0x9554ecc <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953a8c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9541248 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0x95550e0 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0x9554f90 <line:1826:32>)
  (ReturnStmt 0x95550d0 <line:1827:2, col:56>
    (CallExpr 0x95550a8 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9554fb0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9554fa0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9554fe4 <col:20> 'const _CharT *' lvalue ParmVar 0x953aa20 '__s' 'const _CharT *')
      (DeclRefExpr 0x9554ffc <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953aa60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555088 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555038 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x955506c <col:52> 'const _CharT *' lvalue ParmVar 0x953aa20 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9541260 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9541278 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9555270 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0x9555260 <col:9, col:61>
    (CallExpr 0x9555238 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555108 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95550f8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9555190 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555158 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x955513c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953acd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x95551ac <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953ad10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555218 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95551e0 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x95551c4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953acd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9541290 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x95553d8 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0x9555288 <line:1884:32>)
  (ReturnStmt 0x95553c8 <line:1885:2, col:57>
    (CallExpr 0x95553a0 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95552a8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9555298 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x95552dc <col:21> 'const _CharT *' lvalue ParmVar 0x953af50 '__s' 'const _CharT *')
      (DeclRefExpr 0x95552f4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953af90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555380 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555330 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9555364 <col:53> 'const _CharT *' lvalue ParmVar 0x953af50 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x95412a8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x95412c0 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0x9555568 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0x9555558 <col:9, col:69>
    (CallExpr 0x9555530 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555400 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95553f0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9555488 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555450 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0x9555434 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953f300 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x95554a4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953f340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555510 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95554d8 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0x95554bc <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953f300 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x95412d8 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0x95556d0 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0x9555580 <line:1942:32>)
  (ReturnStmt 0x95556c0 <line:1943:2, col:65>
    (CallExpr 0x9555698 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95555a0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9555590 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x95555d4 <col:29> 'const _CharT *' lvalue ParmVar 0x953f580 '__s' 'const _CharT *')
      (DeclRefExpr 0x95555ec <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953f5c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555678 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555628 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x955565c <col:61> 'const _CharT *' lvalue ParmVar 0x953f580 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0x95412f0 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0x9555798 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0x9555788 <col:9, col:37>
    (CallExpr 0x9555760 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95556f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95556e8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x955572c <col:27> '_CharT' lvalue ParmVar 0x953f690 '__c' '_CharT')
      (DeclRefExpr 0x9555744 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953f6d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9541308 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9555928 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0x9555918 <col:9, col:68>
    (CallExpr 0x95558f0 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95557c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95557b0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9555848 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555810 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0x95557f4 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953f7b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9555864 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953f7f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x95558d0 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555898 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0x955587c <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953f7b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9541320 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9555a90 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0x9555940 <line:2003:32>)
  (ReturnStmt 0x9555a80 <line:2004:2, col:64>
    (CallExpr 0x9555a58 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555960 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9555950 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9555994 <col:28> 'const _CharT *' lvalue ParmVar 0x953fa30 '__s' 'const _CharT *')
      (DeclRefExpr 0x95559ac <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953fa70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555a38 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95559e8 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9555a1c <col:60> 'const _CharT *' lvalue ParmVar 0x953fa30 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9541338 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9555b58 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0x9555b48 <col:9, col:38>
    (CallExpr 0x9555b20 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555ab8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9555aa8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9555aec <col:28> '_CharT' lvalue ParmVar 0x953fb40 '__c' '_CharT')
      (DeclRefExpr 0x9555b04 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953fb80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9541350 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0x9555ce8 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0x9555cd8 <col:9, col:73>
    (CallExpr 0x9555cb0 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555b80 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9555b70 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9555c08 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555bd0 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9555bb4 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953fc60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9555c24 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953fca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555c90 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555c58 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0x9555c3c <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x953fc60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9541368 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0x9555e50 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9555d00 <line:2065:32>)
  (ReturnStmt 0x9555e40 <line:2066:2, col:69>
    (CallExpr 0x9555e18 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555d20 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9555d10 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9555d54 <col:33> 'const _CharT *' lvalue ParmVar 0x953fee0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9555d6c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x953ff20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555df8 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555da8 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0x9555ddc <col:65> 'const _CharT *' lvalue ParmVar 0x953fee0 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9541380 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9541398 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9555fe0 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0x9555fd0 <col:9, col:72>
    (CallExpr 0x9555fa8 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9555e78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9555e68 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9555f00 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555ec8 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0x9555eac <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9540110 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9555f1c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9540150 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9555f88 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9555f50 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x9555f34 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9540110 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x95413b0 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9556148 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9555ff8 <line:2124:32>)
  (ReturnStmt 0x9556138 <line:2125:2, col:68>
    (CallExpr 0x9556110 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9556018 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9556008 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x955604c <col:32> 'const _CharT *' lvalue ParmVar 0x9540390 '__s' 'const _CharT *')
      (DeclRefExpr 0x9556064 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95403d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x95560f0 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95560a0 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0x95560d4 <col:64> 'const _CharT *' lvalue ParmVar 0x9540390 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x95413c8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0x95413e0 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0x95413f8 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9556280 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0x9556270 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0x9556248 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0x9556178 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9556168 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9556208 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0x95561a0 <col:8> '<bound member function type>' ->_M_check 0x9528630
          (CXXThisExpr 0x9556190 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x95561c0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95405b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x95561d8 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0x955622c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95405f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9556828 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0x9556340 <line:2174:2, col:39>
    0x95562a0 "const size_type __size =
      (CallExpr 0x9556320 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95562e8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x95562d8 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9556408 <line:2175:2, col:40>
    0x9556360 "const size_type __osize =
      (CallExpr 0x95563e8 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95563b0 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9556394 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9540710 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9556500 <line:2176:2, col:51>
    0x9556420 "const size_type __len =
      (CallExpr 0x95564d8 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9556470 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
        (DeclRefExpr 0x95564a8 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95562a0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x95564c0 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9556360 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x95566d0 <line:2178:2, col:64>
    0x9556520 "int __r =
      (CallExpr 0x95566a8 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9556578 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0x9556600 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0x95565c0 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0x9556670 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9556638 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x955661c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9540710 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x955668c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9556420 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x95567d0 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0x9556718 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9556708 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x95566f8 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0x95566e0 <col:7> 'int' lvalue Var 0x9556520 '__r' 'int'))))
    (BinaryOperator 0x95567b8 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0x955672c <col:4> 'int' lvalue Var 0x9556520 '__r' 'int')
      (CallExpr 0x9556790 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0x9556744 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0x9529a80 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x955675c <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95562a0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9556774 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9556360 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9556818 <line:2181:2, col:9>
    (ImplicitCastExpr 0x9556808 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0x95567ec <col:9> 'int' lvalue Var 0x9556520 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x95571c0 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0x9557100 <line:2308:7, col:57>
    0x9557090 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x95570e0 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x95570c4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9556c10 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9557178 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9557128 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9557110 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9557090 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x955715c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9556dc0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x95571b0 <line:2310:7, col:14>
    (DeclRefExpr 0x9557198 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9557090 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x95584b0 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0x95583f0 <line:2345:7, col:57>
    0x9558380 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x95583d0 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x95583b4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9558040 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9558468 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9558418 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9558400 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9558380 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x955844c <col:20> 'const _CharT *' lvalue ParmVar 0x95580b0 '__rhs' 'const _CharT *'))
  (ReturnStmt 0x95584a0 <line:2347:7, col:14>
    (DeclRefExpr 0x9558488 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9558380 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0x955aa18 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0x955a780 <line:2360:7, col:66>
    0x955a750 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x955a870 <line:2361:7, col:61>
    0x955a840 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x955a900 <line:2362:7, col:33>
    0x955a890 "__string_type __str =
      (ParenListExpr 0x955a8e0 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x955a8c4 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955a440 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x955a9c8 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x955a928 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x955a910 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x955a890 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x955a990 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x955a978 <col:32> 'int' 1))
    (DeclRefExpr 0x955a9ac <col:36> '_CharT' lvalue ParmVar 0x955a480 '__rhs' '_CharT'))
  (ReturnStmt 0x955aa08 <line:2364:7, col:14>
    (DeclRefExpr 0x955a9ec <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x955a890 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955b0c8 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0x955b0b8 <col:7, col:38>
    (CXXOperatorCallExpr 0x955b090 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x955b040 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x955b008 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955afb8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955afa0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955acc0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955afec <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955ae70 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x955b028 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0x955be28 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0x955be18 <line:2435:7, line:2437:24>
    (ParenExpr 0x955be00 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0x955bde8 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x955bb48 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0x955baf0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955b9e0 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
          (CallExpr 0x955ba60 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x955ba28 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0x955ba10 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0x955b680 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0x955bad0 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x955ba98 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0x955ba7c <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0x955b8d0 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0x955bdd0 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0x955bda8 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0x955bc30 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0x955bca8 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x955bc70 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x955bc54 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0x955b680 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x955bd18 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x955bce0 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0x955bcc4 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0x955b8d0 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x955bd88 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x955bd50 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x955bd34 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0x955b680 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955c380 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0x955c370 <col:7, col:38>
    (CXXOperatorCallExpr 0x955c348 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x955c2f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955c220 0x955b9e0 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x955c2b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955c268 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955c250 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955c120 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955c29c <col:28> 'const _CharT *' lvalue ParmVar 0x955bf70 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x955c2d8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x955c8f8 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x955c8e8 <col:7, col:38>
    (CXXOperatorCallExpr 0x955c8c0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x955c860 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955c790 0x955c220 0x955b9e0 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
      (CallExpr 0x955c828 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955c7d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955c7c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955c620 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955c80c <col:28> 'const _CharT *' lvalue ParmVar 0x955c690 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x955c848 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955cf48 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0x955cf38 <col:7, col:30>
    (UnaryOperator 0x955cf20 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x955cf08 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x955cee0 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x955ce80 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955c790 0x955c220 0x955b9e0 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
          (DeclRefExpr 0x955ce50 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955cb90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x955ce68 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955cd40 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955d448 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0x955d438 <col:7, col:30>
    (UnaryOperator 0x955d420 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x955d408 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x955d3e0 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x955d380 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955c790 0x955c220 0x955b9e0 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
          (DeclRefExpr 0x955d350 <col:16> 'const _CharT *' lvalue ParmVar 0x955d090 '__lhs' 'const _CharT *')
          (DeclRefExpr 0x955d368 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955d240 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x955d958 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0x955d948 <col:7, col:30>
    (UnaryOperator 0x955d930 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x955d918 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x955d8f0 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x955d890 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955c790 0x955c220 0x955b9e0 0x955af70 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0)
          (DeclRefExpr 0x955d860 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955d6e0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x955d878 <col:25> 'const _CharT *' lvalue ParmVar 0x955d750 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955dfd0 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0x955dfc0 <col:7, col:37>
    (CXXOperatorCallExpr 0x955df98 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x955df50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955de80 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CallExpr 0x955df18 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955dec8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955deb0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955dbf0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955defc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955dda0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x955df38 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x955e530 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0x955e520 <col:7, col:37>
    (CXXOperatorCallExpr 0x955e4f8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x955e4b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955e3e0 0x955de80 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CallExpr 0x955e478 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955e428 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955e410 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955e290 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955e45c <col:28> 'const _CharT *' lvalue ParmVar 0x955e300 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x955e498 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955ea58 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0x955ea48 <col:7, col:37>
    (CXXOperatorCallExpr 0x955ea20 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x955e9e0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (CallExpr 0x955e9a8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955e958 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955e940 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955e830 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955e98c <col:28> 'const _CharT *' lvalue ParmVar 0x955e680 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x955e9c8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955f0d0 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0x955f0c0 <col:7, col:37>
    (CXXOperatorCallExpr 0x955f098 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x955f050 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955ef80 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (CallExpr 0x955f018 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955efc8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955efb0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955ecf0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955effc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955eea0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x955f038 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x955f610 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0x955f600 <col:7, col:37>
    (CXXOperatorCallExpr 0x955f5d8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x955f590 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955f4c0 0x955ef80 0x9275560 0x928cbb0 0x928f330 0x931b370)
      (CallExpr 0x955f558 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955f508 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955f4f0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955f370 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955f53c <col:28> 'const _CharT *' lvalue ParmVar 0x955f3e0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x955f578 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x955fb48 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0x955fb38 <col:7, col:37>
    (CXXOperatorCallExpr 0x955fb10 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x955fac0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x955e910 0x955e3e0 0x955de80 0x9274810 0x928be80 0x928e9b0 0x931a230)
      (CallExpr 0x955fa88 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x955fa38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x955fa20 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955f910 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x955fa6c <col:28> 'const _CharT *' lvalue ParmVar 0x955f760 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x955faa8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x95601c0 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0x95601b0 <col:7, col:38>
    (CXXOperatorCallExpr 0x9560188 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9560140 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9560070 0x92760b0 0x928cfa0 0x928f780 0x931b890)
      (CallExpr 0x9560108 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95600b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x95600a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955fde0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x95600ec <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x955ff90 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9560128 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9560700 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0x95606f0 <col:7, col:38>
    (CXXOperatorCallExpr 0x95606c8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9560680 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x95605b0 0x9560070 0x92760b0 0x928cfa0 0x928f780 0x931b890)
      (CallExpr 0x9560648 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95605f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x95605e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9560460 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x956062c <col:28> 'const _CharT *' lvalue ParmVar 0x95604d0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9560668 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9560c28 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0x9560c18 <col:7, col:38>
    (CXXOperatorCallExpr 0x9560bf0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9560bb0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (CallExpr 0x9560b78 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9560b28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9560b10 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9560a00 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9560b5c <col:28> 'const _CharT *' lvalue ParmVar 0x9560850 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9560b98 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x95612a0 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0x9561290 <col:7, col:38>
    (CXXOperatorCallExpr 0x9561268 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9561220 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9561150 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (CallExpr 0x95611e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9561198 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9561180 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9560ec0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x95611cc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9561070 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9561208 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x95617e0 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0x95617d0 <col:7, col:38>
    (CXXOperatorCallExpr 0x95617a8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9561760 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9561690 0x9561150 0x9276600 0x928d3c0 0x920da90 0x931bde0)
      (CallExpr 0x9561728 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95616d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x95616c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9561540 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x956170c <col:28> 'const _CharT *' lvalue ParmVar 0x95615b0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9561748 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9561d18 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0x9561d08 <col:7, col:38>
    (CXXOperatorCallExpr 0x9561ce0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9561c90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9560ae0 0x95605b0 0x9560070 0x92760b0 0x928cfa0 0x928f780 0x931b890)
      (CallExpr 0x9561c58 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9561c08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9561bf0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9561ae0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9561c3c <col:28> 'const _CharT *' lvalue ParmVar 0x9561930 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9561c78 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9562358 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0x9562338 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x95622e8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x95622d0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9561fd0 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x956231c <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9562180 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9563b38 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0x9563b28 <line:2697:7, col:63>
    (CallExpr 0x9563b00 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x95639d0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x951c810)
      (DeclRefExpr 0x9563a04 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x95636a0 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0x9563a70 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9563a38 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0x9563a1c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9563850 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9563ae0 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9563aa8 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0x9563a8c <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9563850 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9564948 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0x9564938 <col:7, col:51>
    (CallExpr 0x9564910 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0x9564820 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x95647f0 0x95641c0)
      (DeclRefExpr 0x9564858 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9564510 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0x9564870 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95646c0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0x95648f0 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95648a0 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9564888 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9564510 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0x95648d8 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0x9566770 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0x9566740 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0x9566718 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x95666d8 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (ParenExpr 0x95666a8 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0x9566690 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0x9566658 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x9566630 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x95665f0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (DeclRefExpr 0x95665b8 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0x95665d8 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0x9566678 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0x95666c0 <col:72> 'int' 1)))
  (IntegerLiteral 0x9566758 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0x9566bc0 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0x9569358 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0x95683b0 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0x95682f8 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9568210 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x95681b0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
        (DeclRefExpr 0x956817c <col:6> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator')
        (DeclRefExpr 0x9568194 <col:15> '_InIterator' lvalue ParmVar 0x9567f10 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x95682d0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9568270 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
        (DeclRefExpr 0x9568234 <col:24> 'const _Alloc' lvalue ParmVar 0x9567f80 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9568258 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x95683a0 <line:84:4, col:37>
      (CallExpr 0x9568380 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9568348 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9568328 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9568310 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9529d40 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9568488 <line:87:2, col:19>
    0x9568450 "_CharT __buf[128]")
  (DeclStmt 0x95684f0 <line:88:2, col:21>
    0x95684a0 "size_type __len =
      (IntegerLiteral 0x95684d8 <col:20> 'int' 0)")
  (WhileStmt 0x95687e0 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0x95686c0 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9568588 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9568530 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
        (DeclRefExpr 0x9568500 <col:9> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator')
        (DeclRefExpr 0x9568518 <col:18> '_InIterator' lvalue ParmVar 0x9567f10 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9568698 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9568648 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (DeclRefExpr 0x95685ac <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9568630 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0x95685f8 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0x95685e0 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0x95685c4 <col:42> '_CharT [128]' lvalue Var 0x9568450 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0x9568618 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0x95687c8 <line:90:4, line:93:4>
      (BinaryOperator 0x9568780 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0x9568738 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x95686d8 <col:6> '_CharT [128]' lvalue Var 0x9568450 '__buf' '_CharT [128]')
          (UnaryOperator 0x9568720 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0x95686f0 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9568768 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0x956874c <col:24> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator')))
      (UnaryOperator 0x95687b0 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9568798 <col:8> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator'))))
  (DeclStmt 0x9568928 <line:94:2, col:55>
    0x9568810 "std::basic_string::_Rep *__r =
      (CallExpr 0x9568900 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9568868 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x956888c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x95688c8 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x95688b0 <col:47> 'int' 0))
        (DeclRefExpr 0x95688e4 <col:51> 'const _Alloc' lvalue ParmVar 0x9567f80 '__a' 'const _Alloc &'))")
  (CallExpr 0x95689f0 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0x9568938 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0x95689a0 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9568968 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9568950 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0x95689bc <col:29> '_CharT [128]' lvalue Var 0x9568450 '__buf' '_CharT [128]')
    (DeclRefExpr 0x95689d4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9569150 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9568a18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9569138 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0x9569120 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9568ab0 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9568a58 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
          (DeclRefExpr 0x9568a28 <col:13> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator')
          (DeclRefExpr 0x9568a40 <col:22> '_InIterator' lvalue ParmVar 0x9567f10 '__end' '_InIterator'))
        (CompoundStmt 0x9569100 <line:99:8, line:110:8>
          (IfStmt 0x9568f98 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9568ba0 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9568b40 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
              (DeclRefExpr 0x9568ad4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0x9568b08 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0x9568aec <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0x9568f78 <line:101:5, line:107:5>
              (DeclStmt 0x9568d60 <line:103:7, col:63>
                0x9568be0 "std::basic_string::_Rep *__another =
                  (CallExpr 0x9568d38 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9568c38 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0x9568ce0 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0x9568c90 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                      (DeclRefExpr 0x9568c5c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0x9568c78 <col:49> 'int' 1))
                    (DeclRefExpr 0x9568d04 <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0x9568d1c <col:59> 'const _Alloc' lvalue ParmVar 0x9567f80 '__a' 'const _Alloc &'))")
              (CallExpr 0x9568e80 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0x9568d70 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0x9568dd8 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9568da0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9568d88 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0x9568be0 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0x9568e48 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9568e10 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0x9568df4 <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0x9568e64 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0x9568f10 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9568ec0 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9568ea8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0x9568ef4 <col:23> 'const _Alloc' lvalue ParmVar 0x9567f80 '__a' 'const _Alloc &'))
              (BinaryOperator 0x9568f60 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9568f30 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0x9568f48 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0x9568be0 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0x95690b8 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0x9569070 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0x9569008 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9568fd0 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0x9568fb4 <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0x9569058 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0x9569024 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0x95690a0 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9569084 <col:33> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator')))
          (UnaryOperator 0x95690e8 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0x95690d0 <col:5> '_InIterator' lvalue ParmVar 0x9567ed0 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0x9569230 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9569170 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9569218 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0x95691e8 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9569198 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9569180 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x95691cc <col:22> 'const _Alloc' lvalue ParmVar 0x9567f80 '__a' 'const _Alloc &'))
      (NullStmt 0x9569208 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0x95692b8 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9569268 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x956924c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x956929c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x95684a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9569348 <line:118:2, col:25>
    (CallExpr 0x9569328 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95692f0 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x95692d8 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9568810 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0x956a4b0 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0x9569c30 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0x9569b78 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9569a90 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9569a30 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
        (DeclRefExpr 0x95699fc <col:6> '_InIterator' lvalue ParmVar 0x9569750 '__beg' '_InIterator')
        (DeclRefExpr 0x9569a14 <col:15> '_InIterator' lvalue ParmVar 0x9569790 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9569b50 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9569af0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
        (DeclRefExpr 0x9569ab4 <col:24> 'const _Alloc' lvalue ParmVar 0x9569800 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9569ad8 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9569c20 <line:130:4, col:37>
      (CallExpr 0x9569c00 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9569bc8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9569ba8 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9569b90 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9529d40 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0x9569ed8 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0x9569d90 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0x9569cc0 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9569c70 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9260530 0x9260730)
        (DeclRefExpr 0x9569ca8 <col:35> '_InIterator' lvalue ParmVar 0x9569750 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0x9569d68 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9569d10 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
        (DeclRefExpr 0x9569ce0 <col:45> '_InIterator' lvalue ParmVar 0x9569750 '__beg' '_InIterator')
        (DeclRefExpr 0x9569cf8 <col:54> '_InIterator' lvalue ParmVar 0x9569790 '__end' '_InIterator')))
    (CallExpr 0x9569ea8 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0x9569e98 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9569e7c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b3c0 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9569ec8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9569e68 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0x9569e20 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0x956a008 <line:136:2, line:137:22>
    0x9569f00 "const size_type __dnew =
      (CXXStaticCastExpr 0x9569ff0 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0x9569fc0 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9569f58 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x9283a30)
          (DeclRefExpr 0x9569f8c <col:64> '_InIterator' lvalue ParmVar 0x9569750 '__beg' '_InIterator')
          (DeclRefExpr 0x9569fa4 <line:137:15> '_InIterator' lvalue ParmVar 0x9569790 '__end' '_InIterator')))")
  (DeclStmt 0x956a148 <line:139:2, col:56>
    0x956a030 "std::basic_string::_Rep *__r =
      (CallExpr 0x956a120 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x956a088 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x956a0ac <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9569f00 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x956a0e8 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x956a0d0 <col:48> 'int' 0))
        (DeclRefExpr 0x956a104 <col:52> 'const _Alloc' lvalue ParmVar 0x9569800 '__a' 'const _Alloc &'))")
  (IfStmt 0x956a2a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x956a158 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x956a278 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0x956a250 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x956a168 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0x9529210 0x95293a0 0x9529560 0x9529740 0x9529920)
        (CallExpr 0x956a200 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x956a1c8 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x956a1ac <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0x956a030 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0x956a21c <col:39> '_InIterator' lvalue ParmVar 0x9569750 '__beg' '_InIterator')
        (DeclRefExpr 0x956a234 <col:46> '_InIterator' lvalue ParmVar 0x9569790 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0x956a388 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x956a2c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x956a370 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0x956a340 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956a2f0 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x956a2d8 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x956a030 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x956a324 <col:22> 'const _Alloc' lvalue ParmVar 0x9569800 '__a' 'const _Alloc &'))
      (NullStmt 0x956a360 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0x956a410 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x956a3c0 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x956a3a4 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x956a030 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x956a3f4 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9569f00 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x956a4a0 <line:148:2, col:25>
    (CallExpr 0x956a480 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956a448 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x956a430 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x956a030 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0x956b008 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0x956ac90 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0x956abd8 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x956aaf0 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x956aa90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
        (DeclRefExpr 0x956aa5c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956a850 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x956aa78 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0x956abb0 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x956ab50 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
        (DeclRefExpr 0x956ab14 <col:23> 'const _Alloc' lvalue ParmVar 0x956a900 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x956ab38 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0x956ac80 <line:158:2, col:35>
      (CallExpr 0x956ac60 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956ac28 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0x956ac08 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0x956abf0 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9529d40 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x956add8 <line:161:7, col:58>
    0x956acc0 "std::basic_string::_Rep *__r =
      (CallExpr 0x956adb0 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0x956ad18 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x956ad3c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956a850 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x956ad78 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x956ad60 <col:50> 'int' 0))
        (DeclRefExpr 0x956ad94 <col:54> 'const _Alloc' lvalue ParmVar 0x956a900 '__a' 'const _Alloc &'))")
  (IfStmt 0x956aee0 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0x956ade8 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956a850 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x956aeb8 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0x956ae00 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9528f90 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0x956ae68 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956ae30 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x956ae18 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x956acc0 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0x956ae84 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956a850 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x956ae9c <col:36> '_CharT' lvalue ParmVar 0x956a890 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0x956af68 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x956af18 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x956aefc <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x956acc0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x956af4c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956a850 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x956aff8 <line:166:7, col:30>
    (CallExpr 0x956afd8 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956afa0 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x956af88 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x956acc0 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0x956b7b8 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x956b678 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0x956b658 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956b620 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x956b604 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956b510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0x956b728 <col:43, col:71> '_Alloc'
    (CallExpr 0x956b708 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956b6d0 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0x956b6b8 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956b510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0x956b798 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x956b760 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0x956b744 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956b510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0x956b830 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x956b7f8 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0x956b7dc <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956b510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0x956b890 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0x956bf60 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0x956bec8 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (CXXUnresolvedConstructExpr 0x956bf10 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0x956bf30 <col:45, col:52> '_CharT')
  (DeclRefExpr 0x956bf48 <col:55> 'const _Alloc' lvalue ParmVar 0x956bda0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x956bf88 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0x956bda0 '__a' 'const _Alloc &')
) (CompoundStmt 0x956bfe0 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9541138 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0x956cad8 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0x956c660 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (CXXOperatorCallExpr 0x956c870 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0x956c820 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
    (CallExpr 0x956c6f0 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956c6b8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x956c6a0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956c4d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x956c7f8 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956c728 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x956c70c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956c4d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x956c75c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956c510 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x956c7c0 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x956ca90 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0x956ca40 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
    (CXXOperatorCallExpr 0x956ca00 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x956c9b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
      (CallExpr 0x956c8e8 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956c8b0 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x956c894 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956c4d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x956c988 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956c920 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x956c904 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956c4d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x956c954 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956c510 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x956c96c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956c550 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x956ca24 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956c510 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0x956cac0 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0x956cb08 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0x956cb60 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0x956d6a8 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0x956d280 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (CXXOperatorCallExpr 0x956d448 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0x956d3f8 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
    (CallExpr 0x956d310 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956d2d8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x956d2c0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956d050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x956d3d0 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x956d348 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x956d32c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956d050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x956d37c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956d090 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x956d394 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x956d668 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0x956d618 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
    (CXXOperatorCallExpr 0x956d5d8 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x956d588 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
      (CallExpr 0x956d4c0 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956d488 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x956d46c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956d050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x956d560 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956d4f8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x956d4dc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956d050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x956d52c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956d090 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x956d544 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956d0d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x956d5fc <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956d090 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x956d68c <col:20> 'const _Alloc' lvalue ParmVar 0x956d140 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x956d6d0 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0x956d140 '__a' 'const _Alloc &')
) (CompoundStmt 0x956d730 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9541158 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0x956df48 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0x956de30 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (DeclRefExpr 0x956de70 <col:32> 'const _CharT *' lvalue ParmVar 0x956dc40 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0x956df08 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0x956deb8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
    (DeclRefExpr 0x956de88 <col:37> 'const _CharT *' lvalue ParmVar 0x956dc40 '__s' 'const _CharT *')
    (DeclRefExpr 0x956dea0 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956dc80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x956df2c <col:48> 'const _Alloc' lvalue ParmVar 0x956dcf0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x956df70 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0x956dcf0 '__a' 'const _Alloc &')
) (CompoundStmt 0x956dfd0 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9541178 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0x956e908 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0x956e698 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (DeclRefExpr 0x956e6d8 <col:32> 'const _CharT *' lvalue ParmVar 0x956e500 '__s' 'const _CharT *')
  (ConditionalOperator 0x956e8d0 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0x956e6f0 <line:215:37> 'const _CharT *' lvalue ParmVar 0x956e500 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0x956e800 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x956e7b0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
      (DeclRefExpr 0x956e708 <col:43> 'const _CharT *' lvalue ParmVar 0x956e500 '__s' 'const _CharT *')
      (CallExpr 0x956e790 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x956e740 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0x956e774 <col:69> 'const _CharT *' lvalue ParmVar 0x956e500 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0x956e8a8 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x956e858 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
      (DeclRefExpr 0x956e824 <col:11> 'const _CharT *' lvalue ParmVar 0x956e500 '__s' 'const _CharT *')
      (DeclRefExpr 0x956e83c <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0x956e8ec <col:23> 'const _Alloc' lvalue ParmVar 0x956e570 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x956e930 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0x956e570 '__a' 'const _Alloc &')
) (CompoundStmt 0x956e990 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9541198 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0x956f0e8 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0x956f060 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (DeclRefExpr 0x956f0a0 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x956ee70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0x956f0b8 <col:37> '_CharT' lvalue ParmVar 0x956eeb0 '__c' '_CharT')
  (DeclRefExpr 0x956f0d0 <col:42> 'const _Alloc' lvalue ParmVar 0x956ef20 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x956f110 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0x956ef20 '__a' 'const _Alloc &')
) (CompoundStmt 0x956f170 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x95411b8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0x956f978 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0x956f8f0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9539b40 0x9568110 0x9569990 0x956a9c0)
  (DeclRefExpr 0x956f930 <col:32> '_InputIterator' lvalue ParmVar 0x956f6a0 '__beg' '_InputIterator')
  (DeclRefExpr 0x956f948 <col:39> '_InputIterator' lvalue ParmVar 0x956f6e0 '__end' '_InputIterator')
  (DeclRefExpr 0x956f960 <col:46> 'const _Alloc' lvalue ParmVar 0x956f750 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x956f9a0 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0x956f750 '__a' 'const _Alloc &')
) (CompoundStmt 0x956fa00 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x95706c0 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0x9570668 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9570250 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x95701f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
      (CallExpr 0x9570168 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9570148 <col:11> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x9570138 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x95701d8 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95701a0 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0x9570184 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956feb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9570648 <line:247:2, line:253:2>
      (DeclStmt 0x9570320 <line:249:4, col:52>
        0x9570280 "const allocator_type __a =
          (CallExpr 0x9570300 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95702c8 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0x95702b8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x95704f0 <line:250:4, col:71>
        0x9570360 "_CharT *__tmp =
          (CallExpr 0x95704c8 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9570408 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0x95703e8 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x95703b0 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9570394 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956feb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0x957043c <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0x9570280 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0x95704a8 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9570470 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0x9570454 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x956feb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0x95705a0 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9570550 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9570530 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9570510 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9570500 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9570584 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9570280 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9570628 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x95705d0 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9570610 <col:12> '_CharT *' lvalue Var 0x9570360 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0x95706b0 <line:254:7, col:15>
    (UnaryOperator 0x9570698 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9570688 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0x9571730 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0x9570e68 <line:262:46>)
  (CallExpr 0x9570f58 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0x9570e88 <col:7> '<bound member function type>' ->_M_check_length 0x95287f0
      (CXXThisExpr 0x9570e78 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9570ef0 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9570eb8 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9570ea8 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9570f0c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9570be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9570f24 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0x9571710 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0x9571090 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0x9570fc8 <col:11, col:26> '<dependent type>'
        (MemberExpr 0x9570f90 <col:11> '<bound member function type>' ->_M_disjunct 0x9528a90
          (CXXThisExpr 0x9570f80 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9570fb0 <col:23> 'const _CharT *' lvalue ParmVar 0x9570ba0 '__s' 'const _CharT *'))
      (CallExpr 0x9571070 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9571038 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0x9571018 <col:31, col:38> '<dependent type>'
            (MemberExpr 0x9570ff8 <col:31> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9570fe8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x95711e0 <line:265:2, col:61>
      (CallExpr 0x95711b0 <col:9, col:61> '<dependent type>'
        (MemberExpr 0x95710b8 <col:9> '<bound member function type>' ->_M_replace_safe 0x95391e0
          (CXXThisExpr 0x95710a8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x95710f8 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x95710e0 <col:35> 'int' 0))
        (CallExpr 0x9571160 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9571128 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9571118 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x957117c <col:53> 'const _CharT *' lvalue ParmVar 0x9570ba0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9571194 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9570be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x95716f0 <line:267:2, line:276:2>
      (DeclStmt 0x9571328 <line:269:4, col:43>
        0x9571200 "const size_type __pos =
          (CXXOperatorCallExpr 0x9571300 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x95712c0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x9571234 <col:28> 'const _CharT *' lvalue ParmVar 0x9570ba0 '__s' 'const _CharT *')
            (CallExpr 0x95712a0 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0x9571260 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0x95715d8 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x95713b8 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9571368 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
          (DeclRefExpr 0x9571338 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9571200 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9571350 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9570be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9571498 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0x95713dc <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9571448 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9571408 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9571464 <col:25> 'const _CharT *' lvalue ParmVar 0x9570ba0 '__s' 'const _CharT *')
          (DeclRefExpr 0x957147c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9570be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x95715b8 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0x95714c0 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9571200 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0x9571590 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0x95714d8 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528dd0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0x9571540 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0x9571500 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0x957155c <col:25> 'const _CharT *' lvalue ParmVar 0x9570ba0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9571574 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9570be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0x9571698 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9571648 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9571628 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9571608 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x95715f8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x957167c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9570be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0x95716e0 <line:275:4, col:12>
        (UnaryOperator 0x95716c8 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0x95716b8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0x9573660 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0x9573608 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0x9571ea8 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9571be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x95735e0 <line:285:2, line:292:2>
      (CallExpr 0x9571f78 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0x9571ed0 <col:4> '<bound member function type>' ->_M_check_length 0x95287f0
          (CXXThisExpr 0x9571ec0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9571f10 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9571ef8 <col:30> 'int' 0))
        (DeclRefExpr 0x9571f2c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9571be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9571f44 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x95720e0 <line:287:4, col:46>
        0x9571fb0 "const size_type __len =
          (CXXOperatorCallExpr 0x95720b8 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9572068 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (DeclRefExpr 0x9571fe4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9571be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9572048 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9572010 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9572000 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9573340 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0x9572290 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x95721c0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9572170 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
            (DeclRefExpr 0x95720f0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9571fb0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9572150 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9572118 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9572108 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9572270 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9572238 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9572218 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x95721f8 <col:36> '<bound member function type>' ->_M_rep 0x9528320
                  (CXXThisExpr 0x95721e8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9573320 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95732d0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x95732c0 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9573304 <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9571fb0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x95734f8 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0x957335c <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9528f90 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0x95734a0 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9573450 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (CallExpr 0x95733c8 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9573388 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9573430 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95733f8 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0x95733e8 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x95734c4 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9571be0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x95734dc <col:45> '_CharT' lvalue ParmVar 0x9571c20 '__c' '_CharT'))
      (CallExpr 0x95735c0 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9573570 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9573550 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9573530 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9573520 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x95735a4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9571fb0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9573650 <line:293:7, col:15>
    (UnaryOperator 0x9573638 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9573628 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0x9574970 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0x9573e08 <line:301:46>)
  (IfStmt 0x9574918 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0x9573e14 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9573b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x95748f0 <line:303:2, line:319:2>
      (CallExpr 0x9573ee8 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0x9573e40 <col:4> '<bound member function type>' ->_M_check_length 0x95287f0
          (CXXThisExpr 0x9573e30 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9573e80 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9573e68 <col:30> 'int' 0))
        (DeclRefExpr 0x9573e9c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9573b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9573eb4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9574050 <line:305:4, col:46>
        0x9573f20 "const size_type __len =
          (CXXOperatorCallExpr 0x9574028 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9573fd8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (DeclRefExpr 0x9573f54 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9573b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9573fb8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9573f80 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9573f70 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9574650 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0x9574200 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9574130 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x95740e0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
            (DeclRefExpr 0x9574060 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9573f20 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x95740c0 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9574088 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9574078 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x95741e0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95741a8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9574188 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9574168 <col:36> '<bound member function type>' ->_M_rep 0x9528320
                  (CXXThisExpr 0x9574158 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0x9574638 <line:307:6, line:316:6>
          (IfStmt 0x9574618 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0x9574260 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0x9574228 <col:12> '<bound member function type>' ->_M_disjunct 0x9528a90
                (CXXThisExpr 0x9574218 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9574248 <col:24> 'const _CharT *' lvalue ParmVar 0x9573b40 '__s' 'const _CharT *'))
            (CallExpr 0x95742e0 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9574290 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9574280 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x95742c4 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9573f20 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0x95745f8 <line:311:3, line:315:3>
              (DeclStmt 0x9574438 <line:312:5, col:44>
                0x9574310 "const size_type __off =
                  (CXXOperatorCallExpr 0x9574410 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0x95743d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                    (DeclRefExpr 0x9574344 <col:29> 'const _CharT *' lvalue ParmVar 0x9573b40 '__s' 'const _CharT *')
                    (CallExpr 0x95743b0 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0x9574370 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0x95744a8 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9574458 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9574448 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x957448c <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9573f20 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0x95745e0 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x95744c8 <col:5> 'const _CharT *' lvalue ParmVar 0x9573b40 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0x95745b8 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x9574568 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                  (CallExpr 0x9574530 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0x95744f0 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x957454c <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9574310 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0x9574808 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0x957466c <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x95747b0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9574760 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (CallExpr 0x95746d8 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9574698 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9574740 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9574708 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x95746f8 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x95747d4 <col:38> 'const _CharT *' lvalue ParmVar 0x9573b40 '__s' 'const _CharT *')
        (DeclRefExpr 0x95747ec <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9573b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x95748d0 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9574880 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9574860 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9574840 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9574830 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x95748b4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9573f20 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9574960 <line:320:7, col:15>
    (UnaryOperator 0x9574948 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9574938 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9575888 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0x9575168 <line:328:7, col:44>
    0x95750c0 "const size_type __size =
      (CallExpr 0x9575148 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9575110 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x95750f4 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9574e30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0x9575830 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0x9575178 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95750c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9575810 <line:330:2, line:336:2>
      (DeclStmt 0x95752d0 <line:331:4, col:49>
        0x95751a0 "const size_type __len =
          (CXXOperatorCallExpr 0x95752a8 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0x9575258 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (DeclRefExpr 0x95751d4 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95750c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9575238 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9575200 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0x95751f0 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9575518 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0x9575480 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x95753b0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9575360 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
            (DeclRefExpr 0x95752e0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95751a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9575340 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9575308 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x95752f8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9575460 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9575428 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9575408 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x95753e8 <col:36> '<bound member function type>' ->_M_rep 0x9528320
                  (CXXThisExpr 0x95753d8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x95754f8 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95754a8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9575498 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x95754dc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95751a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9575728 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0x9575534 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9575678 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9575628 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (CallExpr 0x95755a0 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9575560 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9575608 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95755d0 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x95755c0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x95756f0 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95756b8 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0x957569c <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9574e30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x957570c <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95750c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x95757f0 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95757a0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9575780 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9575760 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9575750 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x95757d4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95751a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9575878 <line:337:7, col:15>
    (UnaryOperator 0x9575860 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9575850 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x95769a8 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0x9576108 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9576088 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x957606c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9575d50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x95760bc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575d90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x95760d4 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0x95761f0 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0x957612c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575dd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x95761c8 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9576160 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9576144 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9575d50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9576194 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575d90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x95761ac <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575dd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0x9576950 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0x9576208 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575dd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9576930 <line:348:2, line:354:2>
      (DeclStmt 0x9576360 <line:349:4, col:46>
        0x9576230 "const size_type __len =
          (CXXOperatorCallExpr 0x9576338 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x95762e8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (DeclRefExpr 0x9576264 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575dd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x95762c8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9576290 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9576280 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x95765a8 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0x9576510 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9576440 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x95763f0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
            (DeclRefExpr 0x9576370 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9576230 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x95763d0 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9576398 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9576388 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x95764f0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95764b8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9576498 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9576478 <col:36> '<bound member function type>' ->_M_rep 0x9528320
                  (CXXThisExpr 0x9576468 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9576588 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9576538 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9576528 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x957656c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9576230 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9576848 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0x95765c4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9576708 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x95766b8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (CallExpr 0x9576630 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x95765f0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9576698 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9576660 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9576650 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9576808 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x95767b8 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (CallExpr 0x9576780 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9576748 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0x957672c <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9575d50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x957679c <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575d90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x957682c <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9575dd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9576910 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95768c0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x95768a0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9576880 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9576870 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x95768f4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9576230 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9576998 <line:355:7, col:15>
    (UnaryOperator 0x9576980 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9576970 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0x9578200 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0x95771b0 <line:363:47>)
  (CallExpr 0x9577238 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0x95771d0 <col:8> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x95771c0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x95771f0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576e60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9577208 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0x9577330 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0x9577270 <col:8> '<bound member function type>' ->_M_check_length 0x95287f0
      (CXXThisExpr 0x9577260 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0x95772c8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9577298 <col:34> 'int' 0))
    (DeclRefExpr 0x95772e4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x95772fc <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0x95781e0 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0x9577468 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0x95773a0 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9577368 <col:12> '<bound member function type>' ->_M_disjunct 0x9528a90
          (CXXThisExpr 0x9577358 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9577388 <col:24> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *'))
      (CallExpr 0x9577448 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9577410 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x95773f0 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x95773d0 <col:32> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x95773c0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9577568 <line:367:10, col:62>
      (CallExpr 0x9577538 <col:17, col:62> '<dependent type>'
        (MemberExpr 0x9577490 <col:17> '<bound member function type>' ->_M_replace_safe 0x95391e0
          (CXXThisExpr 0x9577480 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x95774b0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576e60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x95774e8 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x95774d0 <col:50> 'int' 0))
        (DeclRefExpr 0x9577504 <col:54> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
        (DeclRefExpr 0x957751c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x95781b8 <line:369:10, line:386:10>
      (DeclStmt 0x95776a8 <line:371:12, col:51>
        0x9577580 "const size_type __off =
          (CXXOperatorCallExpr 0x9577680 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9577640 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x95775b4 <col:36> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
            (CallExpr 0x9577620 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0x95775e0 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0x9577730 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0x95776c8 <col:12> '<bound member function type>' ->_M_mutate 0x9529c30
          (CXXThisExpr 0x95776b8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x95776e8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576e60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9577700 <col:29> 'int' 0)
        (DeclRefExpr 0x9577718 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0x9577870 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0x9577758 <col:12> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0x9577848 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x95777f8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (CallExpr 0x95777c0 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9577780 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0x95777dc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9577580 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x95779f8 <line:374:12, col:43>
        0x95778c0 "_CharT *__p =
          (CXXOperatorCallExpr 0x95779d0 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9577980 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CallExpr 0x9577948 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0x9577908 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9577964 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576e60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0x9578160 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9577b18 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9577ac8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
          (CXXOperatorCallExpr 0x9577a88 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9577a38 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (DeclRefExpr 0x9577a08 <col:16> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9577a20 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9577aac <col:30> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *'))
        (CallExpr 0x9577ba0 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0x9577b3c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0x9577b54 <col:22> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *')
          (DeclRefExpr 0x9577b6c <col:27> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
          (DeclRefExpr 0x9577b84 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9578140 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9577c48 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9577bf8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
            (DeclRefExpr 0x9577bc8 <col:21> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9577be0 <col:28> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *'))
          (CallExpr 0x9577d60 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0x9577c6c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0x9577c84 <col:22> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *')
            (CXXOperatorCallExpr 0x9577d20 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9577cd0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (DeclRefExpr 0x9577c9c <col:27> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9577cb4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9577d44 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0x9578120 <line:380:14, line:384:14>
            (DeclStmt 0x9577e60 <line:381:9, col:44>
              0x9577d90 "const size_type __nleft =
                (CXXOperatorCallExpr 0x9577e38 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9577df8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x9577dc4 <col:35> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *')
                  (DeclRefExpr 0x9577ddc <col:41> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *'))")
            (CallExpr 0x9577ed0 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0x9577e70 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0x9577e88 <col:24> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *')
              (DeclRefExpr 0x9577ea0 <col:29> 'const _CharT *' lvalue ParmVar 0x9576ed0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9577eb8 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9577d90 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0x95780f8 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0x9577ef8 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0x9577f90 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0x9577f40 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                (DeclRefExpr 0x9577f10 <col:24> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *')
                (DeclRefExpr 0x9577f28 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9577d90 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9578038 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9577fe8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                (DeclRefExpr 0x9577fb4 <col:39> '_CharT *' lvalue Var 0x95778c0 '__p' '_CharT *')
                (DeclRefExpr 0x9577fcc <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x95780d0 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9578090 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (DeclRefExpr 0x957805c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9576f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9578074 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9577d90 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0x95781a8 <line:385:12, col:20>
        (UnaryOperator 0x9578190 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9578180 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9578f18 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0x95789d8 <line:395:28>)
  (DeclStmt 0x9578ac0 <line:400:8, col:49>
    0x95789f0 "const size_type __size =
      (CXXOperatorCallExpr 0x9578a98 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9578a58 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9578a24 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9578750 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9578a3c <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9578710 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0x9578ef8 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0x9578ad0 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95789f0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9578eb0 <line:402:3, line:407:3>
      (DeclStmt 0x9578bf8 <line:403:5, col:50>
        0x9578af0 "const size_type __pos =
          (CXXOperatorCallExpr 0x9578bd0 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0x9578b90 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x9578b24 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9578710 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0x9578b70 <col:39, col:49> '<dependent type>'
              (MemberExpr 0x9578b50 <col:39> '<bound member function type>' ->_M_ibegin 0x95283d0
                (CXXThisExpr 0x9578b40 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0x9578ca8 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0x9578c18 <col:5> '<bound member function type>' ->_M_mutate 0x9529c30
          (CXXThisExpr 0x9578c08 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9578c38 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9578af0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9578c50 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95789f0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9578c88 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9578c70 <col:40> 'int' 0)))
      (CallExpr 0x9578d58 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9578d20 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0x9578d00 <col:5, col:12> '<dependent type>'
            (MemberExpr 0x9578ce0 <col:5> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9578cd0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0x9578ea0 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0x9578e80 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0x9578e58 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0x9578e08 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CallExpr 0x9578dd0 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0x9578d90 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9578dec <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9578af0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0x9578ee8 <line:409:3, col:10>
      (DeclRefExpr 0x9578ed0 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9578710 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x957a888 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0x9579760 <line:418:48>)
  (CallExpr 0x95797f0 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0x9579780 <col:8> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x9579770 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x95797a0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x95797b8 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0x95798b8 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9579814 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9579890 <col:15, col:35> '<dependent type>'
      (MemberExpr 0x9579840 <col:15> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x9579830 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9579860 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9579878 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0x9579968 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0x95798e0 <col:8> '<bound member function type>' ->_M_check_length 0x95287f0
      (CXXThisExpr 0x95798d0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9579900 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9579918 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9579930 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0x95799d8 <line:422:8, col:19>
    0x95799a0 "bool __left")
  (IfStmt 0x957a868 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0x9579af8 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9579a30 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x95799f8 <col:12> '<bound member function type>' ->_M_disjunct 0x9528a90
          (CXXThisExpr 0x95799e8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9579a18 <col:24> 'const _CharT *' lvalue ParmVar 0x9579480 '__s' 'const _CharT *'))
      (CallExpr 0x9579ad8 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9579aa0 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9579a80 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9579a60 <col:32> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x9579a50 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9579bd0 <line:424:10, col:55>
      (CallExpr 0x9579ba0 <col:17, col:55> '<dependent type>'
        (MemberExpr 0x9579b20 <col:17> '<bound member function type>' ->_M_replace_safe 0x95391e0
          (CXXThisExpr 0x9579b10 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9579b40 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9579b58 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9579b70 <col:46> 'const _CharT *' lvalue ParmVar 0x9579480 '__s' 'const _CharT *')
        (DeclRefExpr 0x9579b88 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0x957a848 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0x957a068 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0x9579e30 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0x9579e18 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0x9579be0 <col:18> '_Bool' lvalue Var 0x95799a0 '__left' '_Bool')
            (CXXOperatorCallExpr 0x9579df0 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9579da0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
              (CXXOperatorCallExpr 0x9579c78 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9579c28 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                (DeclRefExpr 0x9579bf8 <col:27> 'const _CharT *' lvalue ParmVar 0x9579480 '__s' 'const _CharT *')
                (DeclRefExpr 0x9579c10 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9579d78 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0x9579d28 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                (CallExpr 0x9579cf0 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0x9579cb0 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9579d0c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0x957a040 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9579ff0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
          (CXXOperatorCallExpr 0x9579fb0 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9579f60 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CXXOperatorCallExpr 0x9579f20 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9579ed0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (CallExpr 0x9579e98 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0x9579e58 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9579eb4 <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9579f44 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9579fd4 <col:34> 'const _CharT *' lvalue ParmVar 0x9579480 '__s' 'const _CharT *')))
      (CompoundStmt 0x957a640 <line:427:3, line:434:3>
        (DeclStmt 0x957a1b8 <line:429:5, col:38>
          0x957a090 "size_type __off =
            (CXXOperatorCallExpr 0x957a190 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0x957a150 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (DeclRefExpr 0x957a0c4 <col:23> 'const _CharT *' lvalue ParmVar 0x9579480 '__s' 'const _CharT *')
              (CallExpr 0x957a130 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x957a0f0 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0x957a2f0 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0x957a2e0 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x957a1c8 <col:5> '_Bool' lvalue Var 0x95799a0 '__left' '_Bool'))
          (DeclRefExpr 0x957a1e0 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x957a090 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0x957a2c8 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0x957a2a8 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x957a1f8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x957a090 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0x957a280 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x957a240 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (DeclRefExpr 0x957a210 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x957a228 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0x957a388 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0x957a320 <col:5> '<bound member function type>' ->_M_mutate 0x9529c30
            (CXXThisExpr 0x957a310 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x957a340 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x957a358 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x957a370 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x957a5e0 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0x957a3b0 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x957a4a0 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x957a450 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CallExpr 0x957a418 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0x957a3d8 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0x957a434 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x957a5a0 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x957a550 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CallExpr 0x957a518 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0x957a4d8 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0x957a534 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x957a090 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x957a5c4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0x957a630 <line:433:5, col:13>
          (UnaryOperator 0x957a618 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0x957a608 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0x957a830 <line:436:3, line:440:3>
        (DeclStmt 0x957a6f8 <line:438:5, col:40>
          0x957a670 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0x957a6d8 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0x957a6a4 <col:30> 'const _CharT *' lvalue ParmVar 0x9579480 '__s' 'const _CharT *')
              (DeclRefExpr 0x957a6bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0x957a820 <line:439:5, col:62>
          (CallExpr 0x957a7f0 <col:12, col:62> '<dependent type>'
            (MemberExpr 0x957a718 <col:12> '<bound member function type>' ->_M_replace_safe 0x95391e0
              (CXXThisExpr 0x957a708 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0x957a738 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95793d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x957a750 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9579410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x957a7b8 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x957a780 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0x957a768 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x957a670 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0x957a7d4 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95794c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0x957b0c0 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0x957afa8 <line:448:7, line:449:65>
    0x957adb0 "const size_type __size =
      (CXXOperatorCallExpr 0x957af80 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0x957af30 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
        (UnaryExprOrTypeTraitExpr 0x957adf0 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0x957af18 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0x957aee0 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0x957aeb8 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x957ae68 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (CXXDependentScopeMemberExpr 0x957ae18 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x957ae08 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0x957ae50 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x957af00 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0x957b098 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x957b010 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x957aff0 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0x957afd8 <col:24> 'const _Alloc' lvalue ParmVar 0x957ac90 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0x957b068 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0x957b048 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0x957b080 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957adb0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0x957b868 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0x957b638 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x957b600 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x957b5a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
      (CallExpr 0x957b530 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x957b510 <col:11> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x957b500 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0x957b588 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0x957b568 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0x957b54c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9529d40 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0x957b628 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0x957b7a0 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0x957b6e0 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x957b6a8 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x957b688 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x957b668 <col:11> '<bound member function type>' ->_M_rep 0x9528320
            (CXXThisExpr 0x957b658 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x957b778 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0x957b710 <col:2> '<bound member function type>' ->_M_mutate 0x9529c30
        (CXXThisExpr 0x957b700 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0x957b730 <col:12> 'int' 0)
      (IntegerLiteral 0x957b748 <col:15> 'int' 0)
      (IntegerLiteral 0x957b760 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0x957b848 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x957b810 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x957b7f0 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x957b7d0 <col:7> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x957b7c0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0x957d158 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0x957be30 <line:472:7, col:48>
    0x957bd90 "const size_type __old_size =
      (CallExpr 0x957be10 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957bdd8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x957bdc8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x957bfb0 <line:473:7, col:64>
    0x957be50 "const size_type __new_size =
      (CXXOperatorCallExpr 0x957bf88 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x957bf48 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CXXOperatorCallExpr 0x957bf08 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x957beb8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x957be84 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957bd90 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x957be9c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc80 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x957bf2c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc40 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x957c120 <line:474:7, col:63>
    0x957bfd0 "const size_type __how_much =
      (CXXOperatorCallExpr 0x957c0f8 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x957c0b8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CXXOperatorCallExpr 0x957c078 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x957c038 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (DeclRefExpr 0x957c004 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957bd90 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x957c01c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x957c09c <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc40 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x957d078 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0x957c2d0 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x957c200 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x957c1b0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
        (DeclRefExpr 0x957c130 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957be50 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x957c190 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x957c158 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0x957c148 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x957c2b0 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957c278 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0x957c258 <col:44, col:51> '<dependent type>'
            (MemberExpr 0x957c238 <col:44> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x957c228 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x957cbc0 <line:477:2, line:490:2>
      (DeclStmt 0x957c378 <line:479:4, col:46>
        0x957c2f0 "const allocator_type __a =
          (CallExpr 0x957c358 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x957c338 <col:31> '<bound member function type>' ->get_allocator 0x953a690
              (CXXThisExpr 0x957c328 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x957c4f0 <line:480:4, col:66>
        0x957c3a0 "std::basic_string::_Rep *__r =
          (CallExpr 0x957c4c8 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x957c3f8 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x957c42c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957be50 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x957c490 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x957c458 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0x957c448 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x957c4ac <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0x957c2f0 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0x957c650 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0x957c500 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x957c628 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0x957c518 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x957c580 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x957c548 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x957c530 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x957c3a0 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0x957c5f0 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0x957c5b0 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0x957c60c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0x957ca00 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0x957c66c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957bfd0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x957c9d8 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0x957c684 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x957c808 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x957c7b8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CXXOperatorCallExpr 0x957c778 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x957c728 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (CallExpr 0x957c6f0 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x957c6b8 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0x957c69c <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x957c3a0 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0x957c70c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x957c79c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc80 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x957c998 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0x957c948 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CXXOperatorCallExpr 0x957c908 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x957c8b8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (CallExpr 0x957c880 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0x957c840 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0x957c89c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x957c92c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc40 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x957c9bc <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957bfd0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x957cac0 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957ca70 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x957ca50 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x957ca30 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x957ca20 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x957caa4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x957c2f0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x957cba0 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x957caf0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x957cb80 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x957cb48 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x957cb30 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x957c3a0 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0x957d058 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0x957ccb0 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0x957cbe8 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957bfd0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x957cc88 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x957cc30 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
          (DeclRefExpr 0x957cc00 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc40 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x957cc18 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc80 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0x957d040 <line:492:2, line:496:2>
        (CallExpr 0x957d018 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0x957ccc8 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528dd0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x957ce48 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x957cdf8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CXXOperatorCallExpr 0x957cdb8 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x957cd68 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (CallExpr 0x957cd30 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0x957ccf0 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0x957cd4c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x957cddc <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc80 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x957cfd8 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x957cf88 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
            (CXXOperatorCallExpr 0x957cf48 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0x957cef8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (CallExpr 0x957cec0 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0x957ce80 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0x957cedc <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x957cf6c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957bc40 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x957cffc <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957bfd0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0x957d138 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x957d0e8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x957d0c8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x957d0a8 <col:7> '<bound member function type>' ->_M_rep 0x9528320
          (CXXThisExpr 0x957d098 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x957d11c <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957be50 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0x95411d0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0x957dda8 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0x957dd88 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0x957d780 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x957d6b0 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x957d658 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
        (DeclRefExpr 0x957d5d4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957d4f0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x957d638 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x957d600 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x957d5f0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x957d760 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957d728 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0x957d708 <col:40, col:47> '<dependent type>'
            (MemberExpr 0x957d6e8 <col:40> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x957d6d8 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x957dd60 <line:506:9, line:514:9>
      (IfStmt 0x957d928 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x957d868 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0x957d818 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
          (DeclRefExpr 0x957d798 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957d4f0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x957d7f8 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x957d7c0 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0x957d7b0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x957d910 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0x957d88c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957d4f0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x957d8f0 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x957d8b8 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x957d8a8 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0x957d9d8 <line:510:4, col:46>
        0x957d950 "const allocator_type __a =
          (CallExpr 0x957d9b8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x957d998 <col:31> '<bound member function type>' ->get_allocator 0x953a690
              (CXXThisExpr 0x957d988 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x957dc08 <line:511:4, col:65>
        0x957da20 "_CharT *__tmp =
          (CallExpr 0x957dbe0 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x957daa8 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0x957da88 <col:20, col:27> '<dependent type>'
                (MemberExpr 0x957da68 <col:20> '<bound member function type>' ->_M_rep 0x9528320
                  (CXXThisExpr 0x957da58 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0x957dadc <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0x957d950 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0x957dbb8 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0x957db78 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (DeclRefExpr 0x957daf4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957d4f0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0x957db58 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x957db20 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0x957db10 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0x957dcb8 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957dc68 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x957dc48 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x957dc28 <col:4> '<bound member function type>' ->_M_rep 0x9528320
              (CXXThisExpr 0x957dc18 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x957dc9c <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x957d950 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x957dd40 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x957dce8 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x957dd28 <col:12> '_CharT *' lvalue Var 0x957da20 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0x957ed58 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0x957e378 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0x957e2b0 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x957e278 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x957e258 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x957e238 <col:11> '<bound member function type>' ->_M_rep 0x9528320
            (CXXThisExpr 0x957e228 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x957e358 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x957e320 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0x957e300 <col:2, col:9> '<dependent type>'
          (MemberExpr 0x957e2e0 <col:2> '<bound member function type>' ->_M_rep 0x9528320
            (CXXThisExpr 0x957e2d0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x957e528 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0x957e440 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x957e408 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0x957e3e8 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x957e3b0 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x957e394 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0x957e508 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x957e4d0 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0x957e4b0 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x957e478 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0x957e45c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0x957ed38 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x957e680 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x957e620 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
      (CallExpr 0x957e590 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957e558 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x957e548 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x957e600 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957e5c8 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x957e5ac <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x957e900 <line:527:2, line:531:2>
      (DeclStmt 0x957e788 <line:528:4, col:29>
        0x957e6e0 "_CharT *__tmp =
          (CallExpr 0x957e768 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0x957e728 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0x957e858 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x957e7a8 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x957e838 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x957e800 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x957e7e8 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0x957e8e0 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x957e890 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0x957e878 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x957e8c4 <col:16> '_CharT *' lvalue Var 0x957e6e0 '__tmp' '_CharT *')))
    (CompoundStmt 0x957ed18 <line:534:2, line:541:2>
      (DeclStmt 0x957eaa0 <line:535:4, line:536:29>
        0x957e930 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0x957ea78 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x957e998 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0x957e978 <col:30> '<bound member function type>' ->_M_ibegin 0x95283d0
                (CXXThisExpr 0x957e968 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x957e9e8 <col:43, col:51> '<dependent type>'
              (MemberExpr 0x957e9c8 <col:43> '<bound member function type>' ->_M_iend 0x9528450
                (CXXThisExpr 0x957e9b8 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x957ea58 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x957ea20 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0x957ea04 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0x957ec68 <line:537:4, line:538:31>
        0x957eac0 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0x957ec40 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x957eb48 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x957eb10 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0x957eaf4 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x957ebb8 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x957eb80 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x957eb64 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x957ec20 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x957ebe8 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0x957ebd8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0x957ecb8 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0x957ec88 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0x957ec78 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x957ec9c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x957eac0 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0x957ed00 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x957ecd0 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x957e140 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0x957ece8 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x957e930 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0x9580730 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0x957f7d0 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x957f6d0 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x957f680 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
      (DeclRefExpr 0x957f64c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x957f664 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9566550 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0x957f7a0 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0x957f790 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x957f774 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b630 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x957f7c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x957f760 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0x957f72c </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0x957f850 <line:578:7, col:40>
    0x957f800 "const size_type __pagesize =
      (IntegerLiteral 0x957f838 <col:36> 'int' 4096)")
  (DeclStmt 0x957f910 <line:579:7, col:63>
    0x957f870 "const size_type __malloc_header_size =
      (BinaryOperator 0x957f8f8 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0x957f8e8 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x957f8a8 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0x957f8d0 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0x957fb30 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0x957faa0 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x957f9a0 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x957f950 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
        (DeclRefExpr 0x957f920 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x957f938 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f320 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x957fa78 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x957fa28 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (DeclRefExpr 0x957f9c4 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x957fa10 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0x957f9e0 <col:55> 'int' 2)
          (DeclRefExpr 0x957f9f8 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f320 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0x957fb18 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0x957fab8 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0x957fb00 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0x957fad0 <col:15> 'int' 2)
        (DeclRefExpr 0x957fae8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f320 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0x957fd28 <line:593:7, col:74>
    0x957fb60 "size_type __size =
      (CXXOperatorCallExpr 0x957fd00 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0x957fcb0 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
        (BinaryOperator 0x957fc78 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0x957fc40 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0x957fc18 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x957fbc8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
              (DeclRefExpr 0x957fb94 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0x957fbb0 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x957fc60 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0x957fc98 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0x957fe20 <line:595:7, col:65>
    0x957fd40 "const size_type __adj_size =
      (CXXOperatorCallExpr 0x957fdf8 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x957fda8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
        (DeclRefExpr 0x957fd74 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x957fb60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x957fd8c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957f870 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9580428 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0x957ff80 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x957feb0 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x957fe60 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
        (DeclRefExpr 0x957fe30 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957fd40 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x957fe48 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957f800 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x957ff58 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x957ff08 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
        (DeclRefExpr 0x957fed4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x957feec <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f320 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9580408 <line:597:2, line:604:2>
      (DeclStmt 0x95800a0 <line:598:4, col:66>
        0x957ffa0 "const size_type __extra =
          (CXXOperatorCallExpr 0x9580078 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9580038 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x957ffd4 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957f800 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0x9580020 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0x957ffec <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957fd40 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9580004 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957f800 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0x9580118 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x95800b0 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9580100 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0x95800c8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x957ffa0 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0x95800e8 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0x9580228 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x95801b8 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9580168 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (DeclRefExpr 0x9580138 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9580150 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9566550 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9580210 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0x95801dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x95801f4 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9566550 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0x95803f0 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0x9580244 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x957fb60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x95803c8 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9580378 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
          (BinaryOperator 0x9580340 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0x9580308 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0x95802e0 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0x9580290 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
                (DeclRefExpr 0x958025c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0x9580278 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0x9580328 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0x9580360 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0x9580548 <line:608:7, col:65>
    0x9580460 "void *__place =
      (CallExpr 0x9580528 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95804d8 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0x95804b8 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0x95804a0 <col:40> 'const _Alloc' lvalue ParmVar 0x957f390 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0x958050c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x957fb60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9580608 <line:609:7, col:37>
    0x9580570 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0x95805c8 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0x95805a4 <col:24> 'void *' lvalue Var 0x9580460 '__place' 'void *'))")
  (BinaryOperator 0x9580680 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9580630 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9580618 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9580570 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9580664 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x957f2e0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0x95806e8 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x95806b0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9580698 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9580570 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0x9580720 <line:619:7, col:14>
    (DeclRefExpr 0x9580704 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9580570 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0x9541120 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0x9581210 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0x9580de0 <line:628:7, col:64>
    0x9580cd0 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0x9580db8 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9580d68 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
        (CXXDependentScopeMemberExpr 0x9580d18 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0x9580d08 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9580d4c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9580b80 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9580f18 <line:629:7, line:630:15>
    0x9580e00 "std::basic_string::_Rep *__r =
      (CallExpr 0x9580ef0 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0x9580e54 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0x957f5b0 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0x9580e74 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9580cd0 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0x9580ea0 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0x9580e90 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9580ed4 <line:630:7> 'const _Alloc' lvalue ParmVar 0x9580b40 '__alloc' 'const _Alloc &'))")
  (IfStmt 0x95810b8 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9580f38 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9580f28 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0x9581090 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0x9580f6c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0x9580fd8 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9580fa0 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9580f84 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9580e00 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0x9581028 <col:29, col:40> '<dependent type>'
        (MemberExpr 0x9581008 <col:29> '<bound member function type>' ->_M_refdata 0x9527500
          (CXXThisExpr 0x9580ff8 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0x9581058 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0x9581048 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0x9581170 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x95810f0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x95810d4 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9580e00 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0x9581138 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0x9581128 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0x9581200 <line:635:7, col:30>
    (CallExpr 0x95811e0 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95811a8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9581190 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9580e00 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0x9581ba8 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0x95817b0 <line:643:7, col:44>
    0x9581710 "const size_type __size =
      (CallExpr 0x9581790 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9581758 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9581748 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0x9581850 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0x95817d0 <col:7> '<bound member function type>' ->_M_check_length 0x95287f0
      (CXXThisExpr 0x95817c0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x95817f0 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9581710 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9581808 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95815b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9581820 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0x9581b88 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x95818f8 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x95818a8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (DeclRefExpr 0x9581878 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9581710 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9581890 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95815b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9581a18 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9581930 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9581920 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x95819d8 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9581998 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9581964 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95815b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x958197c <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9581710 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x95819fc <col:29> '_CharT' lvalue ParmVar 0x95815f0 '__c' '_CharT'))
    (IfStmt 0x9581b68 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9581ac0 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9581a70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (DeclRefExpr 0x9581a3c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95815b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9581a54 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9581710 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9581b48 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9581af8 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0x9581ae8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9581b2c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95815b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0x9582a00 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0x9582568 <line:659:2, col:36>
    0x95824e0 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0x9582548 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9582514 <col:25> '_InputIterator' lvalue ParmVar 0x9582130 '__k1' '_InputIterator')
        (DeclRefExpr 0x958252c <col:31> '_InputIterator' lvalue ParmVar 0x9582170 '__k2' '_InputIterator'))")
  (DeclStmt 0x9582650 <line:660:2, col:36>
    0x9582580 "const size_type __n1 =
      (CXXOperatorCallExpr 0x9582628 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x95825e8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95825b4 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95820f0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x95825cc <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95820b0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0x95827a0 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0x9582670 <col:2> '<bound member function type>' ->_M_check_length 0x95287f0
      (CXXThisExpr 0x9582660 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9582690 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9582580 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0x95826f8 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95826c0 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0x95826a8 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x95824e0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0x9582760 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0x95829f0 <line:662:2, line:663:21>
    (CallExpr 0x95829c0 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0x95827d8 <line:662:9> '<bound member function type>' ->_M_replace_safe 0x95391e0
        (CXXThisExpr 0x95827c8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x95828a0 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9582860 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x95827f8 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x95820b0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9582840 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9582820 <col:32> '<bound member function type>' ->_M_ibegin 0x95283d0
            (CXXThisExpr 0x9582810 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x95828c4 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9582580 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0x9582930 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95828f8 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x95828dc <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x95824e0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0x95829a0 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9582968 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x958294c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x95824e0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9583560 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0x95832a8 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0x9583220 <col:7> '<bound member function type>' ->_M_check_length 0x95287f0
      (CXXThisExpr 0x9583210 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9583240 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582ef0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9583258 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582f30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9583270 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0x9583358 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0x95832f0 <col:7> '<bound member function type>' ->_M_mutate 0x957bce0
      (CXXThisExpr 0x95832e0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9583310 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582eb0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9583328 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582ef0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9583340 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582f30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9583508 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0x9583380 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582f30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x95834e0 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0x9583398 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9528f90 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0x9583488 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9583438 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
        (CallExpr 0x9583400 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0x95833c0 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0x958341c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582eb0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x95834ac <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9582f30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x95834c4 <col:38> '_CharT' lvalue ParmVar 0x9582f70 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0x9583550 <line:676:7, col:15>
    (UnaryOperator 0x9583538 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9583528 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9584020 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0x9583e18 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0x9583db0 <col:7> '<bound member function type>' ->_M_mutate 0x957bce0
      (CXXThisExpr 0x9583da0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9583dd0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9583a10 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9583de8 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9583a50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9583e00 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9583b00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9583fc8 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0x9583e40 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9583b00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9583fa0 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9583e58 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0x9583f48 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9583ef8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9557720 0x9557c70 0x95581f0 0x955a5c0)
        (CallExpr 0x9583ec0 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9583e80 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9583edc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9583a10 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9583f6c <col:30> 'const _CharT *' lvalue ParmVar 0x9583ac0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9583f84 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9583b00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9584010 <line:688:7, col:15>
    (UnaryOperator 0x9583ff8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9583fe8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9584c30 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0x95845b0 <line:696:39>)
  (DeclStmt 0x9584750 <line:697:7, col:66>
    0x9584720 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9584810 <line:698:7, col:62>
    0x95847e0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9584900 <line:699:7, col:55>
    0x9584840 "const __size_type __len =
      (CallExpr 0x95848e0 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x95848a0 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0x95848c4 <col:49> 'const _CharT *' lvalue ParmVar 0x9584290 '__lhs' 'const _CharT *'))")
  (DeclStmt 0x9584958 <line:700:7, col:26>
    0x9584920 "__string_type __str")
  (CallExpr 0x9584ab8 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9584980 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9584968 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9584920 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9584a90 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9584a40 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x9557c70 0x95581f0)
      (DeclRefExpr 0x95849b4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9584840 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0x9584a20 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95849e8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x95849cc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9584440 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0x9584b58 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9584af0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9584ad8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9584920 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9584b24 <col:20> 'const _CharT *' lvalue ParmVar 0x9584290 '__lhs' 'const _CharT *')
    (DeclRefExpr 0x9584b3c <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9584840 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0x9584be8 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9584b98 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9584b7c <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9584920 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9584bcc <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9584440 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9584c20 <line:704:7, col:14>
    (DeclRefExpr 0x9584c08 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9584920 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x95857f0 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0x9585350 <line:711:7, col:66>
    0x9585320 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9585410 <line:712:7, col:62>
    0x95853e0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9585468 <line:713:7, col:26>
    0x9585430 "__string_type __str")
  (DeclStmt 0x9585548 <line:714:7, col:45>
    0x95854a0 "const __size_type __len =
      (CallExpr 0x9585528 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95854f0 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x95854d4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9585050 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0x9585650 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9585570 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9585558 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9585430 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9585628 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x95855d8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
      (DeclRefExpr 0x95855a4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x95854a0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0x95855c0 <col:29> 'int' 1)))
  (CallExpr 0x9585718 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9585688 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9585670 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9585430 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x95856e0 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x95856c8 <col:32> 'int' 1))
    (DeclRefExpr 0x95856fc <col:36> '_CharT' lvalue ParmVar 0x9584ea0 '__lhs' '_CharT'))
  (CallExpr 0x95857a8 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9585758 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x958573c <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9585430 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x958578c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9585050 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x95857e0 <line:718:7, col:14>
    (DeclRefExpr 0x95857c8 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9585430 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9541218 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0x9586368 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0x95860a8 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0x9586040 <col:7> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x9586030 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9586060 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585da0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9586078 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0x9586170 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x95860cc <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585d60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9586148 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x95860f8 <col:13> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x95860e8 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9586118 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585da0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9586130 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585d60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0x9586188 <line:728:46>)
  (IfStmt 0x9586320 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0x9586194 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585d60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x95862f8 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0x95861ac <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9528c60 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0x95861c4 <col:10> '_CharT *' lvalue ParmVar 0x9585d20 '__s' '_CharT *')
      (CXXOperatorCallExpr 0x95862b8 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9586268 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
        (CallExpr 0x9586230 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0x95861f0 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0x958624c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585da0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x95862dc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585d60 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9586358 <line:732:7, col:14>
    (DeclRefExpr 0x958633c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9585d60 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x95876e0 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0x9586ba0 <line:740:46>)
  (DeclStmt 0x9586c60 <line:741:7, col:44>
    0x9586bc0 "const size_type __size =
      (CallExpr 0x9586c40 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9586c08 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9586bf8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9586d28 <line:742:7, col:39>
    0x9586c80 "const _CharT *__data =
      (CallExpr 0x9586d08 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0x9586cc8 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0x9586ef8 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9586dc8 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9586d68 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
      (DeclRefExpr 0x9586d38 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9586910 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9586d50 <col:18> 'int' 0))
    (ReturnStmt 0x9586ee8 <line:745:2, col:35>
      (ConditionalOperator 0x9586ec8 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0x9586e70 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9586e20 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
          (DeclRefExpr 0x9586dec <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9586e04 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9586bc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9586e94 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9586eac <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0x9587698 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9586f98 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9586f48 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
      (DeclRefExpr 0x9586f14 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9586910 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9586f2c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9586bc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9587680 <line:748:2, line:754:2>
      (ForStmt 0x9587658 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x95870c0 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9587070 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
          (DeclRefExpr 0x9586fbc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9587048 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9587008 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x9586fd4 <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9586bc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9586fec <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9586910 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9587100 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0x95870e4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9587638 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0x95875f8 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0x9587208 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9587140 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0x95871a8 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0x9587174 <col:26> 'const _CharT *' lvalue Var 0x9586c80 '__data' 'const _CharT *')
                (DeclRefExpr 0x958718c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0x95871f0 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x95871bc <col:41> 'const _CharT *' lvalue ParmVar 0x9586890 '__s' 'const _CharT *')
                (IntegerLiteral 0x95871d8 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0x95875d0 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9587570 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
              (CallExpr 0x9587530 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9587250 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x95873c8 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0x9587378 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
                  (CXXOperatorCallExpr 0x9587338 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0x95872e8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
                    (DeclRefExpr 0x9587284 <col:27> 'const _CharT *' lvalue Var 0x9586c80 '__data' 'const _CharT *')
                    (DeclRefExpr 0x958729c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0x9587360 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0x9587470 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0x9587420 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
                  (DeclRefExpr 0x95873ec <col:6> 'const _CharT *' lvalue ParmVar 0x9586890 '__s' 'const _CharT *')
                  (IntegerLiteral 0x9587408 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0x9587508 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x95874c8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x9587494 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9586910 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0x95874b0 <col:21> 'int' 1)))
              (IntegerLiteral 0x9587558 <col:27> 'int' 0)))
          (ReturnStmt 0x9587628 <line:753:8, col:15>
            (DeclRefExpr 0x9587610 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95868d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x95876d0 <line:755:7, col:14>
    (DeclRefExpr 0x95876b4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9541260 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0x9588568 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0x9587f00 <line:763:7, col:29>
    0x9587eb0 "size_type __ret =
      (DeclRefExpr 0x9587ee4 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0x9587fc0 <line:764:7, col:44>
    0x9587f20 "const size_type __size =
      (CallExpr 0x9587fa0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9587f68 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9587f58 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9588520 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9588050 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9588000 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (DeclRefExpr 0x9587fd0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9587c20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9587fe8 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9587f20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9588500 <line:766:2, line:772:2>
      (DeclStmt 0x9588158 <line:767:4, col:36>
        0x95880b0 "const _CharT *__data =
          (CallExpr 0x9588138 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x95880f8 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0x9588240 <line:768:4, col:40>
        0x9588170 "const size_type __n =
          (CXXOperatorCallExpr 0x9588218 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0x95881d8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x95881a4 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9587f20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x95881bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9587c20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0x95883f0 <line:769:4, col:67>
        0x9588260 "const _CharT *__p =
          (CallExpr 0x95883c8 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95882b8 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0x9588370 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9588320 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
              (DeclRefExpr 0x95882ec <col:42> 'const _CharT *' lvalue Var 0x95880b0 '__data' 'const _CharT *')
              (DeclRefExpr 0x9588304 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9587c20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9588394 <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9588170 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x95883ac <col:63> '_CharT' lvalue ParmVar 0x9587be0 '__c' '_CharT'))")
      (IfStmt 0x95884e0 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0x9588400 <line:770:8> 'const _CharT *' lvalue Var 0x9588260 '__p' 'const _CharT *')
        (BinaryOperator 0x95884c8 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0x9588418 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9587eb0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x95884a0 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9588460 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x9588430 <col:14> 'const _CharT *' lvalue Var 0x9588260 '__p' 'const _CharT *')
            (DeclRefExpr 0x9588448 <col:20> 'const _CharT *' lvalue Var 0x95880b0 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9588558 <line:773:7, col:14>
    (DeclRefExpr 0x958853c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9587eb0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9589520 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0x9588da0 <line:781:46>)
  (DeclStmt 0x9588e60 <line:782:7, col:44>
    0x9588dc0 "const size_type __size =
      (CallExpr 0x9588e40 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9588e08 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9588df8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x95894d8 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9588ef0 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9588ea0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
      (DeclRefExpr 0x9588e70 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588b10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9588e88 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9588dc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x95894b8 <line:784:2, line:793:2>
      (BinaryOperator 0x9589080 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9588f14 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9589058 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0x9588f48 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
          (CXXUnresolvedConstructExpr 0x9589020 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0x9588ff8 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9588fb8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (DeclRefExpr 0x9588f88 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9588dc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9588fa0 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588b10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0x958903c <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9589158 <line:786:4, col:36>
        0x95890b0 "const _CharT *__data =
          (CallExpr 0x9589138 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x95890f8 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0x95894a0 <line:787:4, line:792:22>
        (CompoundStmt 0x95893b0 <line:788:6, line:791:6>
          (IfStmt 0x9589390 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9589340 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0x95892e0 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
              (CallExpr 0x95892a0 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9589190 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9589248 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x95891f8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
                  (DeclRefExpr 0x95891c4 <col:33> 'const _CharT *' lvalue Var 0x95890b0 '__data' 'const _CharT *')
                  (DeclRefExpr 0x95891dc <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x958926c <col:49> 'const _CharT *' lvalue ParmVar 0x9588a90 '__s' 'const _CharT *')
                (DeclRefExpr 0x9589284 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588b10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0x95892c8 <col:62> 'int' 0))
            (ReturnStmt 0x9589380 <line:790:3, col:10>
              (DeclRefExpr 0x9589364 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9589478 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9589428 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (UnaryOperator 0x95893f8 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0x95893c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9588ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9589410 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9589510 <line:794:7, col:14>
    (DeclRefExpr 0x95894f4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x95412a8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x958a1e8 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0x9589d80 <line:802:7, col:38>
    0x9589ce0 "size_type __size =
      (CallExpr 0x9589d60 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9589d28 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9589d18 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x958a1a0 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0x9589d90 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x958a188 <line:804:2, line:810:2>
      (IfStmt 0x9589eb0 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9589e40 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9589df0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (UnaryOperator 0x9589dc0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9589da8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9589dd4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9589a50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9589e98 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9589e64 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9589e7c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9589a50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0x958a160 <line:807:4, line:809:15>
        (UnaryOperator 0x9589ee8 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9589ecc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9589fb0 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9589f60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (UnaryOperator 0x9589f30 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9589efc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9589f48 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0x958a140 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0x958a0f0 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x958a000 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0x958a0c0 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0x958a088 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0x958a048 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0x958a0a4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x958a0d4 <col:45> '_CharT' lvalue ParmVar 0x9589a10 '__c' '_CharT'))
          (ReturnStmt 0x958a130 <line:809:8, col:15>
            (DeclRefExpr 0x958a114 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9589ce0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x958a1d8 <line:811:7, col:14>
    (DeclRefExpr 0x958a1bc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x958ae00 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0x958aa20 <line:819:46>)
  (ForStmt 0x958adb0 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x958ab40 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0x958aa2c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958a790 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x958ab18 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x958aac8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (DeclRefExpr 0x958aa44 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958a750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x958aaa8 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x958aa70 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x958aa60 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0x958ab70 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0x958ab58 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958a750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x958ad98 <line:821:2, line:825:2>
      (DeclStmt 0x958ad28 <line:822:4, col:69>
        0x958aba0 "const _CharT *__p =
          (CallExpr 0x958ad00 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x958abf8 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0x958ac2c <col:42> 'const _CharT *' lvalue ParmVar 0x958a710 '__s' 'const _CharT *')
            (DeclRefExpr 0x958ac44 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958a790 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0x958ace8 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0x958acb0 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0x958ac70 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0x958accc <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958a750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0x958ad78 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0x958ad38 <line:823:8> 'const _CharT *' lvalue Var 0x958aba0 '__p' 'const _CharT *')
        (ReturnStmt 0x958ad68 <line:824:6, col:13>
          (DeclRefExpr 0x958ad50 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958a750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0x958adf0 <line:826:7, col:14>
    (DeclRefExpr 0x958add4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x958bb90 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0x958b640 <line:834:46>)
  (DeclStmt 0x958b700 <line:835:7, col:38>
    0x958b660 "size_type __size =
      (CallExpr 0x958b6e0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958b6a8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x958b698 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x958bb48 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0x958b740 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x958b710 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958b660 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x958b728 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958b3b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x958bb30 <line:837:2, line:846:2>
      (IfStmt 0x958b860 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x958b7f0 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x958b7a0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (UnaryOperator 0x958b770 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x958b758 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958b660 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x958b784 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958b370 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x958b848 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x958b814 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958b660 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x958b82c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958b370 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x958bb18 <line:840:4, line:845:24>
        (CompoundStmt 0x958ba20 <line:841:6, line:844:6>
          (IfStmt 0x958ba00 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0x958b9b0 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x958b8a8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x958b8dc <col:30> 'const _CharT *' lvalue ParmVar 0x958b330 '__s' 'const _CharT *')
              (DeclRefExpr 0x958b8f4 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958b3b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0x958b998 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0x958b960 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0x958b920 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x958b97c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958b660 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0x958b9f0 <line:843:3, col:10>
              (DeclRefExpr 0x958b9d8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958b660 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x958baf0 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x958ba98 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
          (UnaryOperator 0x958ba68 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0x958ba34 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958b660 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x958ba80 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x958bb80 <line:847:7, col:14>
    (DeclRefExpr 0x958bb64 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x958c6f8 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0x958c3c0 <line:855:46>)
  (ForStmt 0x958c6a8 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x958c4a0 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x958c450 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (DeclRefExpr 0x958c3cc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958c0f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x958c430 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958c3f8 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x958c3e8 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x958c4e0 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x958c4c4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958c0f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x958c688 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0x958c648 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0x958c620 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x958c518 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0x958c54c <col:25> 'const _CharT *' lvalue ParmVar 0x958c0b0 '__s' 'const _CharT *')
          (DeclRefExpr 0x958c564 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958c130 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0x958c608 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0x958c5d0 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x958c590 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x958c5ec <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958c0f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0x958c678 <line:858:4, col:11>
        (DeclRefExpr 0x958c65c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958c0f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x958c6e8 <line:859:7, col:14>
    (DeclRefExpr 0x958c6cc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9541380 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0x958d1c8 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0x958d178 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x958cf88 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x958cf38 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (DeclRefExpr 0x958ceb8 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958cc30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x958cf18 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958cee0 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x958ced0 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x958cfc8 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x958cfac <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958cc30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x958d158 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0x958d118 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0x958d0f0 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x958d000 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0x958d0c0 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0x958d088 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0x958d048 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0x958d0a4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958cc30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x958d0d4 <col:41> '_CharT' lvalue ParmVar 0x958cbf0 '__c' '_CharT')))
      (ReturnStmt 0x958d148 <line:869:4, col:11>
        (DeclRefExpr 0x958d12c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958cc30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x958d1b8 <line:870:7, col:14>
    (DeclRefExpr 0x958d19c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x958de88 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0x958d9f0 <line:878:46>)
  (DeclStmt 0x958dab0 <line:879:7, col:38>
    0x958da10 "size_type __size =
      (CallExpr 0x958da90 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958da58 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x958da48 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x958de40 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0x958dac0 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958da10 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x958de28 <line:881:2, line:890:2>
      (IfStmt 0x958dbe0 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x958db70 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x958db20 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (UnaryOperator 0x958daf0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x958dad8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958da10 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x958db04 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958d720 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x958dbc8 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x958db94 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958da10 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x958dbac <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958d720 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x958de10 <line:884:4, line:889:19>
        (CompoundStmt 0x958ddb0 <line:885:6, line:888:6>
          (IfStmt 0x958dd90 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0x958dd50 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0x958dd28 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x958dc20 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x958dc54 <col:31> 'const _CharT *' lvalue ParmVar 0x958d6e0 '__s' 'const _CharT *')
                (DeclRefExpr 0x958dc6c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958d760 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0x958dd10 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0x958dcd8 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0x958dc98 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x958dcf4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958da10 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0x958dd80 <line:887:3, col:10>
              (DeclRefExpr 0x958dd64 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958da10 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x958ddf8 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x958ddc4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958da10 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x958de78 <line:891:7, col:14>
    (DeclRefExpr 0x958de5c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x95413c8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9528030 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x958eab0 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0x958e6f0 <line:899:7, col:38>
    0x958e650 "size_type __size =
      (CallExpr 0x958e6d0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958e698 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x958e688 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x958ea68 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0x958e700 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958e650 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x958ea50 <line:901:2, line:910:2>
      (IfStmt 0x958e820 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x958e7b0 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x958e760 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (UnaryOperator 0x958e730 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x958e718 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958e650 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x958e744 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958e3c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x958e808 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x958e7d4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958e650 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x958e7ec <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958e3c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x958ea38 <line:904:4, line:909:19>
        (CompoundStmt 0x958e9d8 <line:905:6, line:908:6>
          (IfStmt 0x958e9b8 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0x958e978 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0x958e950 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x958e860 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0x958e920 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0x958e8e8 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0x958e8a8 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x958e904 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958e650 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x958e934 <col:48> '_CharT' lvalue ParmVar 0x958e380 '__c' '_CharT')))
            (ReturnStmt 0x958e9a8 <line:907:3, col:10>
              (DeclRefExpr 0x958e98c <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958e650 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x958ea20 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x958e9ec <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x958e650 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x958eaa0 <line:911:7, col:14>
    (DeclRefExpr 0x958ea84 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9567220 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x958f6b8 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0x958f050 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0x958efe0 <col:7> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x958efd0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x958f000 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x958f018 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x958f118 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x958f074 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x958f0f0 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x958f0a0 <col:13> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x958f090 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x958f0c0 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x958f0d8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x958f1e8 <line:921:7, col:45>
    0x958f140 "const size_type __osize =
      (CallExpr 0x958f1c8 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958f190 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x958f174 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x958eed0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x958f2f8 <line:922:7, col:53>
    0x958f200 "const size_type __len =
      (CallExpr 0x958f2b8 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x958f250 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
        (DeclRefExpr 0x958f288 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x958f2a0 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x958f140 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x958f560 <line:923:7, col:77>
    0x958f320 "int __r =
      (CallExpr 0x958f538 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x958f378 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x958f488 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x958f438 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
          (CallExpr 0x958f400 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x958f3c0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x958f41c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x958f500 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x958f4c8 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x958f4ac <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x958eed0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x958f51c <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x958f200 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x958f660 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0x958f5a8 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x958f598 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x958f588 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x958f570 <col:12> 'int' lvalue Var 0x958f320 '__r' 'int'))))
    (BinaryOperator 0x958f648 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0x958f5bc <col:2> 'int' lvalue Var 0x958f320 '__r' 'int')
      (CallExpr 0x958f620 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0x958f5d4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9529a80 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x958f5ec <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958ee80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x958f604 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x958f140 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x958f6a8 <line:926:7, col:14>
    (ImplicitCastExpr 0x958f698 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x958f67c <col:14> 'int' lvalue Var 0x958f320 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0x95904b8 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0x958fd08 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0x958fc98 <col:7> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x958fc88 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x958fcb8 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fa60 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x958fcd0 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0x958fdc8 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x958fd48 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x958fd2c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x958faf0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x958fd7c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb30 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x958fd94 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x958fe90 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0x958fdec <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958faa0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x958fe68 <col:14, col:35> '<dependent type>'
      (MemberExpr 0x958fe18 <col:14> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x958fe08 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x958fe38 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fa60 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x958fe50 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958faa0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0x958ff68 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0x958fea8 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x958ff40 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x958fed8 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0x958fec0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x958faf0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x958ff0c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb30 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x958ff24 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9590070 <line:939:7, col:51>
    0x958ff90 "const size_type __len =
      (CallExpr 0x9590048 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x958ffe0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
        (DeclRefExpr 0x9590018 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958faa0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9590030 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9590360 <line:940:7, line:941:39>
    0x9590090 "int __r =
      (CallExpr 0x9590338 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95900e8 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x95901f8 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x95901a8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
          (CallExpr 0x9590170 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9590130 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x959018c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fa60 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0x95902f8 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x95902a8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
          (CallExpr 0x9590270 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9590238 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x959021c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x958faf0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x959028c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb30 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x959031c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x958ff90 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9590460 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0x95903a8 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9590398 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9590388 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9590370 <col:12> 'int' lvalue Var 0x9590090 '__r' 'int'))))
    (BinaryOperator 0x9590448 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x95903bc <col:2> 'int' lvalue Var 0x9590090 '__r' 'int')
      (CallExpr 0x9590420 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x95903d4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9529a80 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x95903ec <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958faa0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9590404 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x958fb70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x95904a8 <line:944:7, col:14>
    (ImplicitCastExpr 0x9590498 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x959047c <col:14> 'int' lvalue Var 0x9590090 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0x9590f10 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0x95909a8 <line:952:37>)
  (DeclStmt 0x9590a60 <line:953:7, col:44>
    0x95909c0 "const size_type __size =
      (CallExpr 0x9590a40 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9590a08 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x95909f8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9590b48 <line:954:7, col:57>
    0x9590a80 "const size_type __osize =
      (CallExpr 0x9590b28 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9590ad8 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9590b0c <col:53> 'const _CharT *' lvalue ParmVar 0x9590890 '__s' 'const _CharT *'))")
  (DeclStmt 0x9590c40 <line:955:7, col:56>
    0x9590b60 "const size_type __len =
      (CallExpr 0x9590c18 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9590bb0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
        (DeclRefExpr 0x9590be8 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95909c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9590c00 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9590a80 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9590db8 <line:956:7, col:60>
    0x9590c60 "int __r =
      (CallExpr 0x9590d90 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9590cb8 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0x9590d40 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0x9590d00 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9590d5c <col:49> 'const _CharT *' lvalue ParmVar 0x9590890 '__s' 'const _CharT *')
        (DeclRefExpr 0x9590d74 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9590b60 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9590eb8 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0x9590e00 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9590df0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9590de0 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9590dc8 <col:12> 'int' lvalue Var 0x9590c60 '__r' 'int'))))
    (BinaryOperator 0x9590ea0 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0x9590e14 <col:2> 'int' lvalue Var 0x9590c60 '__r' 'int')
      (CallExpr 0x9590e78 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0x9590e2c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9529a80 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9590e44 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95909c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9590e5c <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9590a80 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9590f00 <line:959:7, col:14>
    (ImplicitCastExpr 0x9590ef0 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9590ed4 <col:14> 'int' lvalue Var 0x9590c60 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0x9591b30 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0x9591490 <line:967:37>)
  (CallExpr 0x9591520 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0x95914b0 <col:7> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x95914a0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x95914d0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x95914e8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x95915e8 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9591544 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912f0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x95915c0 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9591570 <col:14> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x9591560 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9591590 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x95915a8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912f0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x95916d8 <line:970:7, col:57>
    0x9591610 "const size_type __osize =
      (CallExpr 0x95916b8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9591668 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x959169c <col:53> 'const _CharT *' lvalue ParmVar 0x9591360 '__s' 'const _CharT *'))")
  (DeclStmt 0x95917d0 <line:971:7, col:54>
    0x95916f0 "const size_type __len =
      (CallExpr 0x95917a8 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9591740 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
        (DeclRefExpr 0x9591778 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912f0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9591790 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9591610 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x95919d8 <line:972:7, col:68>
    0x95917f0 "int __r =
      (CallExpr 0x95919b0 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9591848 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9591958 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9591908 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
          (CallExpr 0x95918d0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9591890 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x95918ec <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x959197c <col:57> 'const _CharT *' lvalue ParmVar 0x9591360 '__s' 'const _CharT *')
        (DeclRefExpr 0x9591994 <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x95916f0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9591ad8 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0x9591a20 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9591a10 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9591a00 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x95919e8 <col:12> 'int' lvalue Var 0x95917f0 '__r' 'int'))))
    (BinaryOperator 0x9591ac0 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0x9591a34 <col:2> 'int' lvalue Var 0x95917f0 '__r' 'int')
      (CallExpr 0x9591a98 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0x9591a4c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9529a80 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9591a64 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x95912f0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9591a7c <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9591610 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9591b20 <line:975:7, col:14>
    (ImplicitCastExpr 0x9591b10 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9591af4 <col:14> 'int' lvalue Var 0x95917f0 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0x95926b0 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0x95920f0 <line:984:47>)
  (CallExpr 0x9592180 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0x9592110 <col:7> '<bound member function type>' ->_M_check 0x9528630
      (CXXThisExpr 0x9592100 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9592130 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591ed0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9592148 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9592248 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x95921a4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591f10 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9592220 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x95921d0 <col:14> '<bound member function type>' ->_M_limit 0x9528950
        (CXXThisExpr 0x95921c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x95921f0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591ed0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9592208 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591f10 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9592350 <line:987:7, col:51>
    0x9592270 "const size_type __len =
      (CallExpr 0x9592328 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x95922c0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
        (DeclRefExpr 0x95922f8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591f10 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9592310 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591fc0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9592558 <line:988:7, col:68>
    0x9592370 "int __r =
      (CallExpr 0x9592530 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95923c8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x95924d8 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9592488 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9585170 0x9584560 0x928deb0 0x9322770 0x9324900 0x9556f00 0x955a5c0 0x95581f0)
          (CallExpr 0x9592450 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9592410 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x959246c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591ed0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x95924fc <col:57> 'const _CharT *' lvalue ParmVar 0x9591f80 '__s' 'const _CharT *')
        (DeclRefExpr 0x9592514 <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9592270 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9592658 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0x95925a0 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9592590 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9592580 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9592568 <col:12> 'int' lvalue Var 0x9592370 '__r' 'int'))))
    (BinaryOperator 0x9592640 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x95925b4 <col:2> 'int' lvalue Var 0x9592370 '__r' 'int')
      (CallExpr 0x9592618 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x95925cc <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9529a80 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x95925e4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591f10 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x95925fc <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9591fc0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x95926a0 <line:991:7, col:14>
    (ImplicitCastExpr 0x9592690 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9592674 <col:14> 'int' lvalue Var 0x9592370 '__r' 'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9595da8 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0x9592e40 <line:1000:7, col:61>
    0x9592e10 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9592fe0 <line:1001:7, col:66>
    0x9592fb0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x95930d0 <line:1002:7, col:67>
    0x95930a0 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9593190 <line:1003:7, col:60>
    0x9593160 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9593250 <line:1004:7, col:61>
    0x9593220 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9594360 <line:1005:7, col:44>
    0x9594330 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9594450 <line:1006:7, col:69>
    0x9594420 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0x95944d0 <line:1008:7, col:34>
    0x9594480 "__size_type __extracted =
      (IntegerLiteral 0x95944b8 <col:33> 'int' 0)")
  (DeclStmt 0x9594610 <line:1009:7, col:63>
    0x9594590 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x95945e8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9594720 <line:1010:7, col:58>
    0x95946a0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9594700 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x95946d4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x95946f0 <col:52> '_Bool' false))")
  (IfStmt 0x9595bd0 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0x9594730 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0x95946a0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9595bb0 <line:1012:2, line:1058:2>
      (IfStmt 0x9595980 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9594748 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9595940 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0x95947a8 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9594770 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9594758 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9592ba0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9594858 <line:1017:8, col:25>
            0x9594820 "_CharT __buf[128]")
          (DeclStmt 0x95948c0 <line:1018:8, col:29>
            0x9594870 "__size_type __len =
              (IntegerLiteral 0x95948a8 <col:28> 'int' 0)")
          (DeclStmt 0x9594988 <line:1019:8, col:43>
            0x95948e0 "const streamsize __w =
              (CallExpr 0x9594968 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9594930 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9594914 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9594af8 <line:1020:8, line:1021:51>
            0x95949a0 "const __size_type __n =
              (ConditionalOperator 0x9594ad8 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0x9594a18 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0x9594a08 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x95949d4 <col:32> 'const streamsize':'const int' lvalue Var 0x95948e0 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0x95949f0 <col:38> 'int' 0))
                (CXXStaticCastExpr 0x9594a50 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0x9594a30 <col:67> 'const streamsize':'const int' lvalue Var 0x95948e0 '__w' 'const streamsize':'const int'))
                (CallExpr 0x9594ab8 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9594a80 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0x9594a68 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9592ba0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0x9594c98 <line:1022:8, col:73>
            0x9594b60 "const __ctype_type &__ct =
              (CallExpr 0x9594c78 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x9594ba0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x950e010)
                (CallExpr 0x9594c58 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9594c20 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x9594c08 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9594d78 <line:1023:8, col:47>
            0x9594cd0 "const __int_type __eof =
              (CallExpr 0x9594d58 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9594d30 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9594e90 <line:1024:8, col:46>
            0x9594d90 "__int_type __c =
              (CallExpr 0x9594e70 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9594e38 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9594e18 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9594de0 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9594dc4 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x95956b0 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0x9595190 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0x9595000 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9594f20 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9594ed0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                  (DeclRefExpr 0x9594ea0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594480 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9594eb8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x95949a0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9594fe8 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9594fc0 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9594f68 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9594f8c <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9594d90 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9594fa4 <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9594cd0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9595178 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0x9595150 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9595030 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9595018 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9594b60 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0x95950a8 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0x9595130 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x95950f0 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9595114 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9594d90 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0x9595690 <line:1030:3, line:1039:3>
              (IfStmt 0x9595438 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x95952a0 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0x9595240 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
                  (DeclRefExpr 0x95951a8 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594870 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0x9595228 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0x95951f0 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0x95951d8 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0x95951c0 <col:25> '_CharT [128]' lvalue Var 0x9594820 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0x9595210 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0x9595420 <line:1032:7, line:1035:7>
                  (CallExpr 0x95953b0 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x95952e0 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x95952c4 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9592ba0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0x9595314 <col:22> '_CharT [128]' lvalue Var 0x9594820 '__buf' '_CharT [128]')
                    (BinaryOperator 0x9595398 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0x9595360 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0x9595348 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0x959532c <col:36> '_CharT [128]' lvalue Var 0x9594820 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0x9595380 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0x9595408 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0x95953d4 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594870 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0x95953f0 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0x9595550 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0x95954b8 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0x9595454 <col:5> '_CharT [128]' lvalue Var 0x9594820 '__buf' '_CharT [128]')
                  (UnaryOperator 0x95954a0 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x959546c <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594870 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0x9595530 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x95954f0 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9595514 <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9594d90 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9595580 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9595568 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594480 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9595678 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9595594 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9594d90 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9595658 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9595620 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9595600 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x95955c8 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x95955ac <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0x9595748 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95956e0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x95956c4 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9592ba0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0x9595714 <col:21> '_CharT [128]' lvalue Var 0x9594820 '__buf' '_CharT [128]')
            (DeclRefExpr 0x959572c <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594870 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0x9595898 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0x95957f0 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9595798 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x95957bc <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9594d90 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x95957d4 <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9594cd0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9595878 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9595814 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9594590 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9595850 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0x9595920 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95958d0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x95958b4 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9595908 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9595a90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x95959a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9595a78 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0x9595a48 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95959c8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x95959b0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9595a20 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9595a68 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0x9595b90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9595ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9595b78 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0x9595b58 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9595ad8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9595ac0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9595b30 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9595ca0 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0x9595c08 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9595bec <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9594480 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9595c80 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9595c1c <col:2> 'typename __ios_base::iostate' lvalue Var 0x9594590 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9595c58 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9595d60 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0x9595cbc <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0x9594590 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9595d40 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9595cf0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9595cd4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9595d24 <col:16> 'typename __ios_base::iostate' lvalue Var 0x9594590 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9595d98 <line:1064:7, col:14>
    (DeclRefExpr 0x9595d7c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x95929f0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0x9597c90 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0x95965b0 <line:1072:7, col:61>
    0x9596580 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9596750 <line:1073:7, col:66>
    0x9596720 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9596810 <line:1074:7, col:67>
    0x95967e0 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x95968b0 <line:1075:7, col:60>
    0x9596880 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9596970 <line:1076:7, col:61>
    0x9596940 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x95969f0 <line:1078:7, col:34>
    0x95969a0 "__size_type __extracted =
      (IntegerLiteral 0x95969d8 <col:33> 'int' 0)")
  (DeclStmt 0x9596ab8 <line:1079:7, col:47>
    0x9596a10 "const __size_type __n =
      (CallExpr 0x9596a98 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9596a60 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x9596a44 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95962b0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9596bd0 <line:1080:7, col:63>
    0x9596b50 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9596ba8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9596cc0 <line:1081:7, col:57>
    0x9596c40 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9596ca0 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9596c74 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9596c90 <col:52> '_Bool' true))")
  (IfStmt 0x9597ab8 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0x9596cd0 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0x9596c40 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9597a98 <line:1083:2, line:1122:2>
      (IfStmt 0x9597868 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9596ce8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9597840 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0x9596d48 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9596d10 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9596cf8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95962b0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9596e50 <line:1087:8, col:65>
            0x9596d90 "const __int_type __idelim =
              (CallExpr 0x9596e30 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9596df0 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0x9596e14 <col:57> '_CharT' lvalue ParmVar 0x95962f0 '__delim' '_CharT'))")
          (DeclStmt 0x9596f10 <line:1088:8, col:47>
            0x9596e70 "const __int_type __eof =
              (CallExpr 0x9596ef0 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9596ec8 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9597030 <line:1089:8, col:46>
            0x9596f30 "__int_type __c =
              (CallExpr 0x9597010 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9596fd8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9596fb8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9596f80 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9596f64 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9597488 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0x9597270 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0x95971a0 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x95970c0 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9597070 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                  (DeclRefExpr 0x9597040 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x95969a0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9597058 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9596a10 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9597188 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9597160 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9597108 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x959712c <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9596f30 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9597144 <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9596e70 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9597258 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0x9597230 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x95971d8 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0x95971fc <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9596f30 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0x9597214 <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9596d90 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0x9597468 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0x9597320 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9597288 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95962b0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0x9597300 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x95972c0 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x95972e4 <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9596f30 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9597358 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9597340 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x95969a0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9597450 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x959736c <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9596f30 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9597430 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x95973f8 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x95973d8 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x95973a0 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9597384 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0x9597820 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0x9597520 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x95974c8 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x95974ec <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9596f30 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9597504 <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9596e70 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x95975a8 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9597544 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9596b50 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9597580 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0x9597800 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0x9597648 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0x95975f0 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9597614 <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9596f30 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0x959762c <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9596d90 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0x9597768 <line:1103:3, line:1106:3>
                (UnaryOperator 0x9597688 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x959766c <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x95969a0 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0x9597748 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9597710 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0x95976f0 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x95976b8 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0x959769c <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0x95977e0 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9597780 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9596b50 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0x95977b8 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x9597978 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9597888 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9597960 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0x9597930 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95978b0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9597898 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9597908 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9597950 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0x9597a78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9597998 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9597a60 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0x9597a40 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95979c0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x95979a8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9597a18 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9597b88 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0x9597af0 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9597ad4 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x95969a0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9597b68 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9597b04 <col:2> 'typename __ios_base::iostate' lvalue Var 0x9596b50 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9597b40 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9597c48 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0x9597ba4 <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0x9596b50 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9597c28 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9597bd8 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9597bbc <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9597c0c <col:16> 'typename __ios_base::iostate' lvalue Var 0x9596b50 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9597c80 <line:1127:7, col:14>
    (DeclRefExpr 0x9597c64 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9596100 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9599c08 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9599bf8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9528068 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x9823f80 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9823f70 <col:9, col:29>
    (ImplicitCastExpr 0x9823f60 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x9823f40 <col:17, col:29> 'char *' lvalue ._M_p 0x959a190
        (MemberExpr 0x9823f20 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x959a1c0
          (CXXThisExpr 0x9823e00 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x9823de8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9823dd8 <col:9, col:59>
    (UnaryOperator 0x9823dc0 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x9823da8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9823d90 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x9823d78 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x9823d60 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9823d40 <col:44, col:52> 'char *'
                (MemberExpr 0x9823d20 <col:44> '<bound member function type>' ->_M_data 0x959a220
                  (CXXThisExpr 0x9823d10 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9823738 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9823728 <col:9, col:26>
    (ImplicitCastExpr 0x9823718 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x98236f8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x95b9f80
        (ImplicitCastExpr 0x98236e8 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x98236b0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x9823690 <col:16> '<bound member function type>' ->_M_rep 0x959a4f0
              (CXXThisExpr 0x9823570 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9823558 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9823548 <col:9, col:32>
    (BinaryOperator 0x9823530 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9823500 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x98234e0 <col:16, col:22> '<bound member function type>' ->size 0x95a1440
          (CXXThisExpr 0x98234d0 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x9823520 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x954a558 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x987e7b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x98240a8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9824050 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9824040 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9823fd8 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x95a2940 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9824020 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9824000 <col:13, col:19> '<bound member function type>' ->size 0x95a1440
          (CXXThisExpr 0x9823ff0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x9824078 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9824068 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9824098 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x987e7a0 <line:859:2, col:22>
    (ImplicitCastExpr 0x987e790 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x987e778 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x987e730 <col:9, col:17> 'char *'
          (MemberExpr 0x987e710 <col:9> '<bound member function type>' ->_M_data 0x959a220
            (CXXThisExpr 0x987e700 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x987e768 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x987e74c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x95a2940 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9822f88 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9822de8 <line:180:4, col:62>
    0x9822c10 "void *__p =
      (CXXReinterpretCastExpr 0x9822dd0 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x9822db8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x9822d60 <col:41> 'size_type []' lvalue Var 0x95dfdc0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9822f78 <line:181:4, col:39>
    (UnaryOperator 0x9822f60 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x9822f48 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x9822f38 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9822f1c <col:36> 'void *' lvalue Var 0x9822c10 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x9822bf8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9822bd8 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9822900 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x98228b8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x98228a8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x95420ac <col:8> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x98228e0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9822890 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x98226e8 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9822878 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9822858 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9822848 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9822810 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x95dff40 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x98228f0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x95421a0 <col:50> '_Bool' false))))
    (CompoundStmt 0x9822bc0 <line:236:6, line:245:6>
      (NullStmt 0x95421d8 <line:238:67>)
      (IfStmt 0x9822ba0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x98229f8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x98229d0 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x98229c0 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9542208 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x98229a8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x9822988 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x95df590
                (ImplicitCastExpr 0x9822978 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x9822950 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x95422a0 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9542288 <col:10> 'int' 1)))
          (IntegerLiteral 0x95422e0 <col:16> 'int' 0))
        (CompoundStmt 0x9822b88 <line:241:3, line:244:3>
          (NullStmt 0x9542360 <line:242:63>)
          (CXXMemberCallExpr 0x9822b68 <line:243:5, col:19> 'void'
            (MemberExpr 0x9822b30 <col:5> '<bound member function type>' ->_M_destroy 0x95e0c00
              (CXXThisExpr 0x9822a10 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x9822b50 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x95e0ae0 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x9821e40 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x95befc8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x95befb8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9528080 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9528068 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x9822680 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9822670 <col:9, col:29>
    (ImplicitCastExpr 0x9822660 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x9822640 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x95bf550
        (MemberExpr 0x9822620 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x95bf580
          (CXXThisExpr 0x9822500 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x98224e8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x98224d8 <col:9, col:59>
    (UnaryOperator 0x98224c0 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x98224a8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9822490 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x9822478 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x9822460 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9822440 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x9822420 <col:44> '<bound member function type>' ->_M_data 0x95bf600
                  (CXXThisExpr 0x9822410 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9542a28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9542a10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x9821d90 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x9821d70 <col:9, col:51> 'void'
    (CXXTemporary 0x9821cf0)
    (CXXMemberCallExpr 0x9821d08 <col:9, col:51> 'void'
      (MemberExpr 0x9821c6c <col:9, col:19> '<bound member function type>' ->_M_dispose 0x95e0b30
        (CXXMemberCallExpr 0x9821c40 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x9821c20 <col:9> '<bound member function type>' ->_M_rep 0x95bf8f0
            (ImplicitCastExpr 0x9821c60 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9821b00 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x9821d60 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x9821d50 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x9821cf8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x9821cf0)
            (CXXMemberCallExpr 0x9821cc0 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x9821ca0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x95d7370
                (ImplicitCastExpr 0x9821ce0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9821c90 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x987ea70 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x987ea60 <col:9, col:26>
    (ImplicitCastExpr 0x987ea50 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x987ea30 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x95df410
        (ImplicitCastExpr 0x987ea20 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x987ea00 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x987e9e0 <col:16> '<bound member function type>' ->_M_rep 0x95bf8f0
              (CXXThisExpr 0x987e8b8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x987e8a0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x987e890 <col:9, col:32>
    (BinaryOperator 0x987e878 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x987e848 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x987e828 <col:16, col:22> '<bound member function type>' ->size 0x95c67c0
          (CXXThisExpr 0x987e818 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x987e868 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x954a558 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x987f110 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x987eb98 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x987eb40 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x987eb30 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x987eac8 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x95c7d20 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x987eb10 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x987eaf0 <col:13, col:19> '<bound member function type>' ->size 0x95c67c0
          (CXXThisExpr 0x987eae0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x987eb68 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x987eb58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x954a9d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x922b700 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x987eb88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x954a9c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x954a990 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x987f100 <line:859:2, col:22>
    (ImplicitCastExpr 0x987f0f0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x987f0d8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x987f090 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x987f070 <col:9> '<bound member function type>' ->_M_data 0x95bf600
            (CXXThisExpr 0x987f060 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x987f0c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x987f0ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x95c7d20 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x987f640 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x987f630 <col:9, col:24>
    (ImplicitCastExpr 0x987f620 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x987f600 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x987f5e0 <col:16> '<bound member function type>' ->_M_data 0x95bf600
          (CXXThisExpr 0x987f5d0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x9823160 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9823150 <col:9, col:16>
    (CXXConstructExpr 0x9823128 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x9823118 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x9823108 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x98230c0 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x95bf580
            (CXXThisExpr 0x9822fa0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0x95e3348 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0x95e33f0 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x95e33d8 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0x95e33a8 <col:36> 'long' 1)
    (IntegerLiteral 0x95e33c0 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0x95e3490 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x95e3478 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x95e3448 <col:37> 'long' 1)
    (IntegerLiteral 0x95e3460 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0x95e3530 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x95e3518 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x95e34e8 <col:37> 'long' 1)
    (IntegerLiteral 0x95e3500 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0x95e35d0 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x95e35b8 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0x95e3588 <col:35> 'long' 1)
    (IntegerLiteral 0x95e35a0 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0x95e3670 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x95e3658 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x95e3628 <col:38> 'long' 1)
    (IntegerLiteral 0x95e3640 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0x95e3710 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x95e36f8 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x95e36c8 <col:38> 'long' 1)
    (IntegerLiteral 0x95e36e0 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0x95e38d0 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0x95e38b8 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0x95e3878 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0x95e3838 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0x95e37f8 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0x95e37b8 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0x95e3798 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x95e3764 <col:35> 'const category':'const int' lvalue Var 0x95e3370 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0x95e37a8 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x95e377c <col:43> 'const category':'const int' lvalue Var 0x95e3410 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0x95e37e8 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0x95e37d0 <col:53> 'const category':'const int' lvalue Var 0x95e34b0 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0x95e3828 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0x95e3810 <col:9> 'const category':'const int' lvalue Var 0x95e3550 'time' 'const category':'const int')))
      (ImplicitCastExpr 0x95e3868 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0x95e3850 <col:17> 'const category':'const int' lvalue Var 0x95e35f0 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0x95e38a8 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0x95e3890 <col:28> 'const category':'const int' lvalue Var 0x95e3690 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0x95e5790 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0x95e5780 <col:7, col:41>
    (UnaryOperator 0x95e5768 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0x95e5750 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0x95e5730 <col:16, col:40> '_Bool'
          (MemberExpr 0x95e56f8 <col:16, col:30> '<bound member function type>' ->operator== 0x95e4720
            (CXXThisExpr 0x95e56e8 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0x95e5718 <col:33> 'const class std::locale' lvalue ParmVar 0x95e47a0 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0x95e51e8 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x95e5190 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0x95e5160 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0x95e5178 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0x95e68c0 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x95e68a8 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0x95e6960 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0x95e6950 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x95e6940 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x95e68f4 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0x95e5c30 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0x95e6910 <col:61> 'int' 1)
  (IntegerLiteral 0x95e6928 <col:65> 'int' 0))
) (CompoundStmt 0x95e69a0 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0x95e68e8 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x95e68d0 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0x95e6ad0 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0x95e6aa8 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x95e6a98 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x95e69d4 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x93df590 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x95e6a68 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x95e6a44 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x95e5a20
        (CXXThisExpr 0x95e6a18 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0x95e6a80 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0x95e6d28 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0x95e6ae8 <line:407:60>)
  (IfStmt 0x95e6d08 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0x95e6c00 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0x95e6bc0 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x95e6bb0 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x95e6b18 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x95e6b68 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x95e6b48 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x95e5a20
            (CXXThisExpr 0x95e6b38 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0x95e6b98 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x95e6b80 <col:65> 'int' 1)))
      (IntegerLiteral 0x95e6be8 <col:71> 'int' 1))
    (CompoundStmt 0x95e6ce8 <line:409:2, line:415:2>
      (NullStmt 0x95e6c18 <line:410:63>)
      (IfStmt 0x95e6c88 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x95e6c28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x95e6c70 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0x95e6c58 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x95e6c48 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x95e6c38 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0x95e6cc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x95e6ca8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x95e6cb8 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0x95e76f0 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0x95ed618 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0x95ed5f0 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x95ed5e0 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x95ed55c <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x93df590 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x95ed5b0 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x95ed590 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x95e7e50
        (CXXThisExpr 0x95ed580 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0x95ed5c8 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0x95ed870 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0x95ed630 <line:516:60>)
  (IfStmt 0x95ed850 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0x95ed748 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0x95ed708 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x95ed6f8 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x95ed660 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x95ed6b0 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x95ed690 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x95e7e50
            (CXXThisExpr 0x95ed680 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0x95ed6e0 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x95ed6c8 <col:65> 'int' 1)))
      (IntegerLiteral 0x95ed730 <col:71> 'int' 1))
    (CompoundStmt 0x95ed830 <line:518:2, line:524:2>
      (NullStmt 0x95ed760 <line:519:63>)
      (IfStmt 0x95ed7d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x95ed770 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x95ed7b8 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0x95ed7a0 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x95ed790 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x95ed780 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0x95ed810 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x95ed7f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x95ed800 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0x95eddb8 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0x95ed8d8 <line:541:7, col:24>
    0x95ed890 "bool __ret =
      (CXXBoolLiteralExpr 0x95ed8c8 <col:20> '_Bool' true)")
  (IfStmt 0x95edd60 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0x95ed968 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x95ed958 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0x95ed940 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0x95ed930 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0x95ed8f8 <col:11> 'char **' lvalue ->_M_names 0x95e7f70
              (CXXThisExpr 0x95ed8e8 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0x95ed918 <col:20> 'int' 1))))
    (ForStmt 0x95edd38 <line:544:2, line:545:66>
      (DeclStmt 0x95ed9e0 <line:544:7, col:21>
        0x95ed980 "size_t __i =
          (ImplicitCastExpr 0x95ed9d0 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x95ed9b8 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0x95edac0 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0x95edab0 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x95ed9f0 <col:23> '_Bool' lvalue Var 0x95ed890 '__ret' '_Bool'))
        (BinaryOperator 0x95eda98 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0x95eda78 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x95eda08 <col:32> 'size_t':'unsigned int' lvalue Var 0x95ed980 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x95eda88 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0x95eda60 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0x95eda50 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0x95eda20 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0x95e51b0 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0x95eda38 <col:59> 'int' 1)))))
      (UnaryOperator 0x95edaf0 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0x95edad8 <col:64> 'size_t':'unsigned int' lvalue Var 0x95ed980 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0x95edd20 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0x95edb04 <col:4> '_Bool' lvalue Var 0x95ed890 '__ret' '_Bool')
        (BinaryOperator 0x95edd08 <col:12, col:66> '_Bool' '=='
          (CallExpr 0x95edc88 <col:12, col:61> 'int'
            (ImplicitCastExpr 0x95edc78 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x95edb1c <col:12> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0x95edcc0 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0x95edcb0 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x95edba0 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0x95edb80 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0x95edb48 <col:29> 'char **' lvalue ->_M_names 0x95e7f70
                      (CXXThisExpr 0x95edb38 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0x95edb90 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x95edb68 <col:38> 'size_t':'unsigned int' lvalue Var 0x95ed980 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0x95edce0 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0x95edcd0 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x95edc60 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0x95edc50 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0x95edbc8 <col:44> 'char **' lvalue ->_M_names 0x95e7f70
                      (CXXThisExpr 0x95edbb8 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0x95edc38 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0x95edc18 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x95edbe8 <col:53> 'size_t':'unsigned int' lvalue Var 0x95ed980 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0x95edc28 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x95edc00 <col:59> 'int' 1)))))))
          (IntegerLiteral 0x95edcf0 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x95edda8 <line:546:7, col:14>
    (ImplicitCastExpr 0x95edd98 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x95edd7c <col:14> '_Bool' lvalue Var 0x95ed890 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0x95edeb0 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0x95ede88 <col:9, col:46> '<dependent type>'
    (MemberExpr 0x95edde8 <col:9> '<bound member function type>' ->_M_install_facet 0x95ed1d0
      (CXXThisExpr 0x95eddd8 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0x95ede58 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0x95ede30 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0x95ede6c <col:39> '_Facet *' lvalue ParmVar 0x95ed2d0 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0x95ef7b0 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x95ef798 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x95ef7e4 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0x95ee7b0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x95ef8d8 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x95ef8c8 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0x95ef878 <col:44> '__c_locale (void)' lvalue CXXMethod 0x95e63d0 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0x95ef940 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x95ef7d8 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x95ef7c0 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x95ef950 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0x95ee8e0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x95efa68 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x95efa58 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0x95ef9e8 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0x95e6090 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0x95efa00 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x95ee8a0 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0x95efad0 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x95efbe0 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0x95efbd0 <col:9, col:59>
    (CallExpr 0x95efba0 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95efb08 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95efaf8 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x95efb3c <col:33> 'const _CharT *' lvalue ParmVar 0x95eea20 '__lo1' 'const _CharT *')
      (DeclRefExpr 0x95efb54 <col:40> 'const _CharT *' lvalue ParmVar 0x95eea70 '__hi1' 'const _CharT *')
      (DeclRefExpr 0x95efb6c <col:47> 'const _CharT *' lvalue ParmVar 0x95eeac0 '__lo2' 'const _CharT *')
      (DeclRefExpr 0x95efb84 <col:54> 'const _CharT *' lvalue ParmVar 0x95eeb10 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x95efca8 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0x95efc98 <col:9, col:45>
    (CallExpr 0x95efc70 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95efc08 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95efbf8 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x95efc3c <col:35> 'const _CharT *' lvalue ParmVar 0x95eec60 '__lo' 'const _CharT *')
      (DeclRefExpr 0x95efc54 <col:41> 'const _CharT *' lvalue ParmVar 0x95eecb0 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x95efd70 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0x95efd60 <col:9, col:40>
    (CallExpr 0x95efd38 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x95efcd0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x95efcc0 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x95efd04 <col:30> 'const _CharT *' lvalue ParmVar 0x95eedd0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x95efd1c <col:36> 'const _CharT *' lvalue ParmVar 0x95eee20 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0x95efe08 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0x95efde8 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0x95efd84 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0x95e61b0 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0x95efdc8 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0x95ee6d0
      (CXXThisExpr 0x95efdb8 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0x95f0058 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x95f4160 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x95f4148 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0x95f4200 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0x95f3f90 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x95f5370 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0x95f5350 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0x95f5180 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0x95f4320 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0x95f42c0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x95f42b0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x95f425c <col:6> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x95f42e8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x95f4274 <col:23> 'const char *' lvalue ParmVar 0x95f3f50 '__s' 'const char *'))
          (ImplicitCastExpr 0x95f42f8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x95f428c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x95f4308 <col:36> 'int' 0))
      (BinaryOperator 0x95f5168 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0x95f5108 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x95f50f8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x95f4338 <col:9> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x95f5130 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x95f4350 <col:26> 'const char *' lvalue ParmVar 0x95f3f50 '__s' 'const char *'))
          (ImplicitCastExpr 0x95f5140 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x95f50d0 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x95f5150 <col:43> 'int' 0)))
    (CompoundStmt 0x95f5338 <line:808:4, line:811:4>
      (CallExpr 0x95f5248 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f51c8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x95f51b8 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x95f5210 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x95f5200 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0x95f5310 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f5278 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x95f5268 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x95f52c0 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x95f52b0 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0x95f52f4 <col:58> 'const char *' lvalue ParmVar 0x95f3f50 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0x95f5388 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0x95f5c28 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0x95f5840 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0x95f5718 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x95e4fc0
      (CXXThisExpr 0x95f5708 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0x95f5800 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0x95f57b8 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0x95f5780 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0x95f5770 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x95f5750 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
              (DeclRefExpr 0x95f5738 <col:28> 'const class std::locale' lvalue ParmVar 0x95f5500 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0x95f57c8 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x95f5798 <col:45> 'int' 1))))
  (IfStmt 0x95f5988 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x95f5858 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x95f5970 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0x95f5948 <col:4, col:46> '<dependent type>'
        (MemberExpr 0x95f58a4 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0x95ed1d0
          (ImplicitCastExpr 0x95f5898 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x95f5878 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x95e4fc0
              (CXXThisExpr 0x95f5868 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0x95f5918 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x95f58f0 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0x95f592c <col:43> '_Facet *' lvalue ParmVar 0x95f5570 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0x95f5a60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x95f59a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x95f5a48 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0x95f5a18 <line:52:4, col:33> 'void'
        (MemberExpr 0x95f59f4 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0x95ec530
          (ImplicitCastExpr 0x95f59e8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x95f59c8 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x95e4fc0
              (CXXThisExpr 0x95f59b8 <col:4> 'class std::locale *' this)))))
      (NullStmt 0x95f5a38 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x95f5b30 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0x95f5b20 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0x95f5b08 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0x95f5af8 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0x95f5abc <col:17, col:26> 'char **' lvalue ->_M_names 0x95e7f70
            (ImplicitCastExpr 0x95f5ab0 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x95f5a90 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0x95e4fc0
                (CXXThisExpr 0x95f5a80 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0x95f5ae0 <col:35> 'int' 0))))
  (BinaryOperator 0x95f5c10 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0x95f5bd0 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0x95f5bc0 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0x95f5b84 <col:7, col:16> 'char **' lvalue ->_M_names 0x95e7f70
          (ImplicitCastExpr 0x95f5b78 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x95f5b58 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x95e4fc0
              (CXXThisExpr 0x95f5b48 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0x95f5ba8 <col:25> 'int' 0))
    (ImplicitCastExpr 0x95f5c00 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0x95f5be8 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0x95f6288 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0x95f5f58 <line:64:7, col:44>
    0x95f5e20 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0x95f5f18 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0x95f5ed0 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0x95f5e98 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0x95f5e88 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x95f5e68 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0x95e4fc0
                (CXXThisExpr 0x95f5e58 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0x95f5ee0 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x95f5eb0 <col:42> 'int' 1)))")
  (IfStmt 0x95f60a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x95f5f68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x95f6088 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0x95f6060 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0x95f5f9c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0x95ed040
          (ImplicitCastExpr 0x95f5f90 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x95f5f78 <col:4> 'class std::locale::_Impl *' lvalue Var 0x95f5e20 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0x95f5fd4 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
          (DeclRefExpr 0x95f5fbc <col:28> 'const class std::locale' lvalue ParmVar 0x95f5cd0 '__other' 'const class std::locale &'))
        (UnaryOperator 0x95f6048 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x95f6020 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0x95f6160 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x95f60c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x95f6148 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0x95f6118 <line:71:4, col:31> 'void'
        (MemberExpr 0x95f60f4 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0x95ec530
          (ImplicitCastExpr 0x95f60e8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x95f60d0 <col:4> 'class std::locale::_Impl *' lvalue Var 0x95f5e20 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0x95f6138 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0x95f6278 <line:74:7, col:26>
    (ExprWithCleanups 0x95f6258 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0x95f61e0)
      (CXXConstructExpr 0x95f6230 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0x95f6220 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0x95f6210 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0x95f61f8 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0x95f61e8 <col:14, col:21> 'class std::locale' (CXXTemporary 0x95f61e0)
                (CXXConstructExpr 0x95f61b0 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0x95f61a0 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0x95f6188 <col:21> 'class std::locale::_Impl *' lvalue Var 0x95f5e20 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0x95f6fc8 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0x95f6990 <line:83:7, col:50>
    0x95f6960 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0x95f6af0 <line:84:7, col:73>
    0x95f6a00 "const __collate_type &__collate =
      (CallExpr 0x95f6ad0 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x95f6a40 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0x95ee190)
        (UnaryOperator 0x95f6ab8 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0x95f6aa8 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0x95f6fb8 <line:85:7, line:86:50>
    (ParenExpr 0x95f6fa0 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0x95f6f78 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0x95f6f28 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x95f6ee0 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f6b18 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x95f6b00 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0x95f6a00 '__collate' 'const __collate_type &'))
          (CallExpr 0x95f6ba0 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95f6b68 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x95f6b4c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95f6540 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x95f6cf0 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0x95f6ca0 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
            (CallExpr 0x95f6c10 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x95f6bd8 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x95f6bbc <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95f6540 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x95f6c80 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x95f6c48 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0x95f6c2c <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95f6540 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0x95f6d68 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95f6d30 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x95f6d14 <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95f66f0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x95f6eb8 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x95f6e68 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
            (CallExpr 0x95f6dd8 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x95f6da0 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0x95f6d84 <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95f66f0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x95f6e48 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x95f6e10 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0x95f6df4 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x95f66f0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0x95f6f10 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0x95f7510 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0x95f7230 <line:94:7, col:44>
    0x95f7150 "const size_t __i =
      (CallExpr 0x95f7210 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f71d8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x95f71b0 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x95f7360 <line:95:7, col:64>
    0x95f72b0 "const locale::facet **__facets =
      (ImplicitCastExpr 0x95f7350 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x95f732c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x95e7eb0
          (ImplicitCastExpr 0x95f7320 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x95f72fc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
              (DeclRefExpr 0x95f72e4 <col:40> 'const class std::locale' lvalue ParmVar 0x95f7060 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0x95f7500 <line:96:7, line:98:53>
    (ParenExpr 0x95f74e8 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0x95f74d0 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0x95f7410 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0x95f73f0 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x95f7370 <col:15> 'const size_t':'const unsigned int' lvalue Var 0x95f7150 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0x95f7400 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0x95f73cc <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x95e7ef0
              (ImplicitCastExpr 0x95f73c0 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0x95f73a0 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
                  (DeclRefExpr 0x95f7388 <col:21> 'const class std::locale' lvalue ParmVar 0x95f7060 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0x95f74b8 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0x95f7478 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x95f7458 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x95f7428 <col:39> 'const class locale::facet **' lvalue Var 0x95f72b0 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x95f7468 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x95f7440 <col:48> 'const size_t':'const unsigned int' lvalue Var 0x95f7150 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0x95f7ba8 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0x95f77c0 <line:108:7, col:44>
    0x95f76e0 "const size_t __i =
      (CallExpr 0x95f77a0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f7768 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x95f7740 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x95f78c0 <line:109:7, col:64>
    0x95f7810 "const locale::facet **__facets =
      (ImplicitCastExpr 0x95f78b0 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x95f788c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x95e7eb0
          (ImplicitCastExpr 0x95f7880 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x95f785c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
              (DeclRefExpr 0x95f7844 <col:40> 'const class std::locale' lvalue ParmVar 0x95f75a0 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x95f7ac0 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0x95f7a28 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0x95f7970 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0x95f7950 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x95f78d0 <col:11> 'const size_t':'const unsigned int' lvalue Var 0x95f76e0 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x95f7960 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0x95f792c <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x95e7ef0
            (ImplicitCastExpr 0x95f7920 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x95f7900 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
                (DeclRefExpr 0x95f78e8 <col:18> 'const class std::locale' lvalue ParmVar 0x95f75a0 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0x95f7a10 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0x95f7a00 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x95f79f0 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0x95f79d8 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0x95f79b8 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0x95f7988 <col:52> 'const class locale::facet **' lvalue Var 0x95f7810 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0x95f79c8 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x95f79a0 <col:61> 'const size_t':'const unsigned int' lvalue Var 0x95f76e0 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0x95f7aa0 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0x95f7a90 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x95f7a74 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x922b210 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x95f7b98 <line:113:7, col:56>
    (CXXDynamicCastExpr 0x95f7b80 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0x95f7b58 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0x95f7b48 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x95f7b30 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x95f7b10 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x95f7adc <col:43> 'const class locale::facet **' lvalue Var 0x95f7810 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x95f7b20 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x95f7af4 <col:52> 'const size_t':'const unsigned int' lvalue Var 0x95f76e0 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0x95f7f30 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0x95f7f20 <col:7, col:14>
    (IntegerLiteral 0x95f7f08 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0x95f8338 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0x95f8328 <col:7, col:14>
    (ImplicitCastExpr 0x95f8318 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x95f8300 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x95f9670 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0x95f87d8 <line:140:7, col:44>
    0x95f8750 "const string_type __one =
      (ParenListExpr 0x95f87b8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x95f8784 <col:31> 'const _CharT *' lvalue ParmVar 0x95f8520 '__lo1' 'const _CharT *')
        (DeclRefExpr 0x95f879c <col:38> 'const _CharT *' lvalue ParmVar 0x95f8570 '__hi1' 'const _CharT *'))")
  (DeclStmt 0x95f8878 <line:141:7, col:44>
    0x95f87f0 "const string_type __two =
      (ParenListExpr 0x95f8858 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x95f8824 <col:31> 'const _CharT *' lvalue ParmVar 0x95f85c0 '__lo2' 'const _CharT *')
        (DeclRefExpr 0x95f883c <col:38> 'const _CharT *' lvalue ParmVar 0x95f8610 '__hi2' 'const _CharT *'))")
  (DeclStmt 0x95f8948 <line:143:7, col:40>
    0x95f88a0 "const _CharT *__p =
      (CallExpr 0x95f8928 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f88f0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x95f88d4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f8750 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x95f8b00 <line:144:7, col:59>
    0x95f8970 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x95f8ad8 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x95f8a88 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (CallExpr 0x95f89f8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f89c0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x95f89a4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f8750 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x95f8a68 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f8a30 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x95f8a14 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f8750 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x95f8bc8 <line:145:7, col:40>
    0x95f8b20 "const _CharT *__q =
      (CallExpr 0x95f8ba8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f8b70 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x95f8b54 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f87f0 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x95f8d80 <line:146:7, col:59>
    0x95f8bf0 "const _CharT *__qend =
      (CXXOperatorCallExpr 0x95f8d58 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x95f8d08 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (CallExpr 0x95f8c78 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f8c40 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x95f8c24 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f87f0 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x95f8ce8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f8cb0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x95f8c94 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f87f0 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0x95f9648 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0x95f9618 <line:152:2, line:168:2>
      (DeclStmt 0x95f8e60 <line:153:4, col:42>
        0x95f8da0 "const int __res =
          (CallExpr 0x95f8e38 <col:22, col:41> '<dependent type>'
            (MemberExpr 0x95f8de8 <col:22> '<bound member function type>' ->_M_compare 0x95f7e70
              (CXXThisExpr 0x95f8dd8 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0x95f8e08 <col:33> 'const _CharT *' lvalue Var 0x95f88a0 '__p' 'const _CharT *')
            (DeclRefExpr 0x95f8e20 <col:38> 'const _CharT *' lvalue Var 0x95f8b20 '__q' 'const _CharT *'))")
      (IfStmt 0x95f8ee0 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0x95f8e98 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x95f8e88 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0x95f8e70 <col:8> 'const int' lvalue Var 0x95f8da0 '__res' 'const int')))
        (ReturnStmt 0x95f8ed0 <line:155:6, col:13>
          (ImplicitCastExpr 0x95f8ec0 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0x95f8ea4 <col:13> 'const int' lvalue Var 0x95f8da0 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0x95f9030 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x95f8efc <col:4> 'const _CharT *' lvalue Var 0x95f88a0 '__p' 'const _CharT *')
        (CallExpr 0x95f9010 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f8fc0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x95f8ff4 <col:39> 'const _CharT *' lvalue Var 0x95f88a0 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0x95f9180 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x95f9050 <col:4> 'const _CharT *' lvalue Var 0x95f8b20 '__q' 'const _CharT *')
        (CallExpr 0x95f9160 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f9110 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x95f9144 <col:39> 'const _CharT *' lvalue Var 0x95f8b20 '__q' 'const _CharT *')))
      (IfStmt 0x95f9568 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0x95f9310 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x95f9230 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0x95f91d0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
            (DeclRefExpr 0x95f91a0 <col:8> 'const _CharT *' lvalue Var 0x95f88a0 '__p' 'const _CharT *')
            (DeclRefExpr 0x95f91b8 <col:15> 'const _CharT *' lvalue Var 0x95f8970 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0x95f92e8 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x95f9288 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
            (DeclRefExpr 0x95f9254 <col:25> 'const _CharT *' lvalue Var 0x95f8b20 '__q' 'const _CharT *')
            (DeclRefExpr 0x95f926c <col:32> 'const _CharT *' lvalue Var 0x95f8bf0 '__qend' 'const _CharT *')))
        (ReturnStmt 0x95f9340 <line:160:6, col:13>
          (IntegerLiteral 0x95f9328 <col:13> 'int' 0))
        (IfStmt 0x95f9548 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x95f93e0 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x95f9380 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
            (DeclRefExpr 0x95f9350 <col:13> 'const _CharT *' lvalue Var 0x95f88a0 '__p' 'const _CharT *')
            (DeclRefExpr 0x95f9368 <col:20> 'const _CharT *' lvalue Var 0x95f8970 '__pend' 'const _CharT *'))
          (ReturnStmt 0x95f9438 <line:162:6, col:14>
            (UnaryOperator 0x95f9420 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0x95f9408 <col:14> 'int' 1)))
          (IfStmt 0x95f9528 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x95f94d8 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0x95f9478 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
              (DeclRefExpr 0x95f9448 <col:13> 'const _CharT *' lvalue Var 0x95f8b20 '__q' 'const _CharT *')
              (DeclRefExpr 0x95f9460 <col:20> 'const _CharT *' lvalue Var 0x95f8bf0 '__qend' 'const _CharT *'))
            (ReturnStmt 0x95f9518 <line:164:6, col:13>
              (IntegerLiteral 0x95f9500 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0x95f95b8 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x95f9584 <col:4> 'const _CharT *' lvalue Var 0x95f88a0 '__p' 'const _CharT *'))
      (UnaryOperator 0x95f9600 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x95f95cc <col:4> 'const _CharT *' lvalue Var 0x95f8b20 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x95faa98 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0x95f9bf8 <line:176:7, col:24>
    0x95f9bc0 "string_type __ret")
  (DeclStmt 0x95f9c98 <line:179:7, col:42>
    0x95f9c10 "const string_type __str =
      (ParenListExpr 0x95f9c78 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x95f9c44 <col:31> 'const _CharT *' lvalue ParmVar 0x95f9970 '__lo' 'const _CharT *')
        (DeclRefExpr 0x95f9c5c <col:37> 'const _CharT *' lvalue ParmVar 0x95f99c0 '__hi' 'const _CharT *'))")
  (DeclStmt 0x95f9d68 <line:181:7, col:40>
    0x95f9cc0 "const _CharT *__p =
      (CallExpr 0x95f9d48 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x95f9d10 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x95f9cf4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f9c10 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x95f9f20 <line:182:7, col:59>
    0x95f9d90 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x95f9ef8 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x95f9ea8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (CallExpr 0x95f9e18 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f9de0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x95f9dc4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f9c10 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x95f9e88 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x95f9e50 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x95f9e34 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x95f9c10 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x95fa058 <line:184:7, col:39>
    0x95f9f40 "size_t __len =
      (BinaryOperator 0x95fa040 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0x95fa010 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x95f9fe8 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x95f9fa8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x95f9f74 <col:23> 'const _CharT *' lvalue ParmVar 0x95f99c0 '__hi' 'const _CharT *')
            (DeclRefExpr 0x95f9f8c <col:30> 'const _CharT *' lvalue ParmVar 0x95f9970 '__lo' 'const _CharT *')))
        (IntegerLiteral 0x95fa028 <col:38> 'int' 2))")
  (DeclStmt 0x95fa138 <line:186:7, col:38>
    0x95fa0a0 "_CharT *__c =
      (CXXNewExpr 0x95fa0f8 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0x95fa0d4 <col:32> 'size_t':'unsigned int' lvalue Var 0x95f9f40 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0x95fa998 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x95fa148 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x95fa980 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0x95fa958 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0x95fa928 <line:194:6, line:214:6>
          (DeclStmt 0x95fa238 <line:196:8, col:52>
            0x95fa160 "size_t __res =
              (CallExpr 0x95fa210 <col:23, col:51> '<dependent type>'
                (MemberExpr 0x95fa1a8 <col:23> '<bound member function type>' ->_M_transform 0x95f8260
                  (CXXThisExpr 0x95fa198 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0x95fa1c8 <col:36> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *')
                (DeclRefExpr 0x95fa1e0 <col:41> 'const _CharT *' lvalue Var 0x95f9cc0 '__p' 'const _CharT *')
                (DeclRefExpr 0x95fa1f8 <col:46> 'size_t':'unsigned int' lvalue Var 0x95f9f40 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0x95fa558 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0x95fa298 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0x95fa278 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x95fa248 <col:12> 'size_t':'unsigned int' lvalue Var 0x95fa160 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x95fa288 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x95fa260 <col:21> 'size_t':'unsigned int' lvalue Var 0x95f9f40 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0x95fa538 <line:200:3, line:205:3>
              (BinaryOperator 0x95fa330 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0x95fa2b0 <col:5> 'size_t':'unsigned int' lvalue Var 0x95f9f40 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0x95fa318 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0x95fa2f8 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x95fa2c8 <col:13> 'size_t':'unsigned int' lvalue Var 0x95fa160 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0x95fa308 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x95fa2e0 <col:21> 'int' 1))))
              (BinaryOperator 0x95fa3c0 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0x95fa360 <col:5, col:15> 'void'
                  (DeclRefExpr 0x95fa348 <col:15> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *'))
                (BinaryOperator 0x95fa3a8 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0x95fa378 <col:20> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *')
                  (IntegerLiteral 0x95fa390 <col:26> 'int' 0)))
              (BinaryOperator 0x95fa450 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0x95fa3d8 <col:5> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *')
                (CXXNewExpr 0x95fa410 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0x95fa3f0 <col:22> 'size_t':'unsigned int' lvalue Var 0x95f9f40 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0x95fa520 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x95fa468 <col:5> 'size_t':'unsigned int' lvalue Var 0x95fa160 '__res' 'size_t':'unsigned int')
                (CallExpr 0x95fa4f8 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0x95fa490 <col:13> '<bound member function type>' ->_M_transform 0x95f8260
                    (CXXThisExpr 0x95fa480 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0x95fa4b0 <col:26> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *')
                  (DeclRefExpr 0x95fa4c8 <col:31> 'const _CharT *' lvalue Var 0x95f9cc0 '__p' 'const _CharT *')
                  (DeclRefExpr 0x95fa4e0 <col:36> 'size_t':'unsigned int' lvalue Var 0x95f9f40 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0x95fa5f8 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95fa590 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x95fa574 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x95f9bc0 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0x95fa5c4 <col:21> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *')
            (DeclRefExpr 0x95fa5dc <col:26> 'size_t':'unsigned int' lvalue Var 0x95fa160 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0x95fa750 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x95fa61c <col:8> 'const _CharT *' lvalue Var 0x95f9cc0 '__p' 'const _CharT *')
            (CallExpr 0x95fa730 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x95fa6e0 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0x95fa714 <col:43> 'const _CharT *' lvalue Var 0x95f9cc0 '__p' 'const _CharT *')))
          (IfStmt 0x95fa830 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x95fa800 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x95fa7a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
              (DeclRefExpr 0x95fa770 <col:12> 'const _CharT *' lvalue Var 0x95f9cc0 '__p' 'const _CharT *')
              (DeclRefExpr 0x95fa788 <col:19> 'const _CharT *' lvalue Var 0x95f9d90 '__pend' 'const _CharT *'))
            (BreakStmt 0x95fa828 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0x95fa880 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0x95fa84c <col:8> 'const _CharT *' lvalue Var 0x95f9cc0 '__p' 'const _CharT *'))
          (CallExpr 0x95fa908 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x95fa8b0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x95fa894 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x95f9bc0 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0x95fa8f0 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0x95faa20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x95fa9b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x95faa08 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0x95fa9e0 <line:218:4, col:14> 'void'
        (DeclRefExpr 0x95fa9c8 <col:14> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *'))
      (NullStmt 0x95fa9f8 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x95faa58 <line:222:7, col:17> 'void'
    (DeclRefExpr 0x95faa3c <col:17> '_CharT *' lvalue Var 0x95fa0a0 '__c' '_CharT *'))
  (ReturnStmt 0x95faa88 <line:224:7, col:14>
    (DeclRefExpr 0x95faa70 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0x95f9bc0 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x95fc388 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0x95fae80 <line:232:7, col:30>
    0x95fae20 "unsigned long __val =
      (ImplicitCastExpr 0x95fae70 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0x95fae58 <col:29> 'int' 0))")
  (ForStmt 0x95fc2f0 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x95faf10 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x95faec0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (DeclRefExpr 0x95fae90 <col:14> 'const _CharT *' lvalue ParmVar 0x95faca0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x95faea8 <col:21> 'const _CharT *' lvalue ParmVar 0x95facf0 '__hi' 'const _CharT *'))
    (UnaryOperator 0x95faf50 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0x95faf34 <col:29> 'const _CharT *' lvalue ParmVar 0x95faca0 '__lo' 'const _CharT *'))
    (BinaryOperator 0x95fc2d8 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0x95faf64 <line:234:2> 'unsigned long' lvalue Var 0x95fae20 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0x95fc2b0 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0x95fc260 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (UnaryOperator 0x95faf98 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x95faf7c <col:5> 'const _CharT *' lvalue ParmVar 0x95faca0 '__lo' 'const _CharT *'))
        (ParenExpr 0x95fc248 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0x95fc230 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0x95fb008 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0x95faff0 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0x95fafe0 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x95fafac <col:14> 'unsigned long' lvalue Var 0x95fae20 '__val' 'unsigned long'))
                (IntegerLiteral 0x95fafc8 <col:23> 'int' 7)))
            (ParenExpr 0x95fc218 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0x95fc200 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0x95fc1b8 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x95fb01c <col:9> 'unsigned long' lvalue Var 0x95fae20 '__val' 'unsigned long'))
                (ParenExpr 0x95fc1a0 <col:18, line:237:17> 'int'
                  (BinaryOperator 0x95fc188 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0x95fc178 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0x95fc13c <line:236:19, line:237:5> 'const int' lvalue Var 0x95fbf30 '__digits' 'const int'))
                    (IntegerLiteral 0x95fc160 <col:16> 'int' 7))))))))))
  (ReturnStmt 0x95fc378 <line:238:7, col:37>
    (CXXStaticCastExpr 0x95fc360 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0x95fc350 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0x95fc340 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0x95fc314 <col:32> 'unsigned long' lvalue Var 0x95fae20 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0x9604098 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96036e0 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x96036b0 <col:23> 'long' 1)
    (IntegerLiteral 0x96036c8 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0x96040a8 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603768 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9603738 <col:18> 'long' 1)
    (IntegerLiteral 0x9603750 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0x96040b8 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96037e8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x96037b8 <col:20> 'long' 1)
    (IntegerLiteral 0x96037d0 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0x96040c8 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603868 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9603838 <col:18> 'long' 1)
    (IntegerLiteral 0x9603850 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0x96040d8 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96038e8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x96038b8 <col:22> 'long' 1)
    (IntegerLiteral 0x96038d0 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0x96040e8 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603968 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0x9603938 <col:19> 'long' 1)
    (IntegerLiteral 0x9603950 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0x96040f8 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96039e8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x96039b8 <col:18> 'long' 1)
    (IntegerLiteral 0x96039d0 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0x9604108 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603a68 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9603a38 <col:20> 'long' 1)
    (IntegerLiteral 0x9603a50 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0x9604118 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603ae8 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0x9603ab8 <col:24> 'long' 1)
    (IntegerLiteral 0x9603ad0 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0x9604128 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603b68 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9603b38 <col:22> 'long' 1)
    (IntegerLiteral 0x9603b50 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0x9604138 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603be8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9603bb8 <col:23> 'long' 1)
    (IntegerLiteral 0x9603bd0 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0x9604148 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603c68 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9603c38 <col:21> 'long' 1)
    (IntegerLiteral 0x9603c50 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0x9604158 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603ce8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9603cb8 <col:20> 'long' 1)
    (IntegerLiteral 0x9603cd0 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0x9604168 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603d68 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9603d38 <col:21> 'long' 1)
    (IntegerLiteral 0x9603d50 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0x9604178 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603de8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9603db8 <col:23> 'long' 1)
    (IntegerLiteral 0x9603dd0 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0x9604188 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603e98 <col:25, col:46> 'long' '|'
    (BinaryOperator 0x9603e68 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0x9603e34 <col:25> 'long' EnumConstant 0x9603980 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9603e4c <col:35> 'long' EnumConstant 0x9603a80 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9603e80 <col:46> 'long' EnumConstant 0x9603900 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0x9604198 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603f48 <col:23, col:41> 'long' '|'
    (BinaryOperator 0x9603f18 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0x9603ee4 <col:23> 'long' EnumConstant 0x9603780 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9603efc <col:32> 'long' EnumConstant 0x9603a00 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9603f30 <col:41> 'long' EnumConstant 0x9603880 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0x96041a8 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9603fc8 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0x9603f94 <col:24> 'long' EnumConstant 0x9603b00 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0x9603fac <col:40> 'long' EnumConstant 0x9603800 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0x96041b8 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9604048 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9604018 <col:29> 'long' 1)
    (IntegerLiteral 0x9604030 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9604400 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0x96043f0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x96043d8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x96043c0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9604348 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9604338 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9604328 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9604300 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x96041d0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x96043a8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9604398 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9604388 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9604360 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604210 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9604630 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0x9604620 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9604608 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x96045f0 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9604578 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9604568 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9604558 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9604530 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604420 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x96045d8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x96045c8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x96045b8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9604590 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604460 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9604860 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0x9604850 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9604838 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9604820 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x96047a8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9604798 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9604788 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9604760 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604650 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9604808 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x96047f8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x96047e8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96047c0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604690 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0x9604a10 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0x9604a00 <col:5, col:48>
    (CXXFunctionalCastExpr 0x96049e8 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0x96049d0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x96049b8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x96049a8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9604998 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9604970 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604880 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9604cd0 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0x9604cc0 <col:5, col:24>
    (ImplicitCastExpr 0x9604cb0 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9604c98 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9604ba8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604a60 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9604c58 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9604c48 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9604c10 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x96044c0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9604bf0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9604bc0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604a60 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9604c00 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9604bd8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604aa0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9604ef8 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0x9604ee8 <col:5, col:24>
    (ImplicitCastExpr 0x9604ed8 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9604ec0 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9604e08 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604d00 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9604e98 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9604e88 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9604e70 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9604e50 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9604e20 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604d00 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9604e60 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9604e38 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604d40 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9605118 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0x9605108 <col:5, col:24>
    (ImplicitCastExpr 0x96050f8 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x96050e0 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9605028 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604f20 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x96050b8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x96050a8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9605090 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x96046f0 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9605070 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9605040 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604f20 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9605080 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9605058 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9604f60 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0x9605518 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96051c0 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9605190 <col:18> 'long' 1)
    (IntegerLiteral 0x96051a8 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0x9605528 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9605248 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9605218 <col:18> 'long' 1)
    (IntegerLiteral 0x9605230 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0x9605538 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96052c8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9605298 <col:18> 'long' 1)
    (IntegerLiteral 0x96052b0 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0x9605548 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9605348 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0x9605318 <col:17> 'long' 1)
    (IntegerLiteral 0x9605330 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0x9605558 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96053c8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9605398 <col:18> 'long' 1)
    (IntegerLiteral 0x96053b0 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0x9605568 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9605448 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9605418 <col:20> 'long' 1)
    (IntegerLiteral 0x9605430 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0x9605578 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96054c8 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9605498 <col:29> 'long' 1)
    (IntegerLiteral 0x96054b0 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x96057c0 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0x96057b0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9605798 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9605780 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9605708 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x96056f8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x96056e8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x96056c0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605590 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9605768 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9605758 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9605748 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9605720 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x96055d0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x96059f0 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0x96059e0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x96059c8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x96059b0 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9605938 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9605928 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9605918 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x96058f0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x96057e0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9605998 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9605988 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9605978 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9605950 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605820 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9605c20 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0x9605c10 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9605bf8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9605be0 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9605b68 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9605b58 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9605b48 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9605b20 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605a10 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9605bc8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9605bb8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9605ba8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9605b80 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605a50 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0x9605dd0 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0x9605dc0 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9605da8 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0x9605d90 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9605d78 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9605d68 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9605d58 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9605d30 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605c40 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9606090 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0x9606080 <col:5, col:24>
    (ImplicitCastExpr 0x9606070 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9606058 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9605f68 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605e20 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9606018 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9606008 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9605fd0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9605fb0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9605f80 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605e20 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9605fc0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9605f98 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9605e60 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x96062b8 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0x96062a8 <col:5, col:24>
    (ImplicitCastExpr 0x9606298 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9606280 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x96061c8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x96060c0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9606258 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9606248 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9606230 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605650 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9606210 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x96061e0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x96060c0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9606220 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x96061f8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9606100 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x96064d8 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0x96064c8 <col:5, col:24>
    (ImplicitCastExpr 0x96064b8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x96064a0 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x96063e8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x96062e0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9606478 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9606468 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9606450 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605ab0 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9606430 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9606400 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x96062e0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9606440 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9606418 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9606320 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0x96067a8 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9606550 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0x96067b8 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96065d8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x96065a8 <col:21> 'long' 1)
    (IntegerLiteral 0x96065c0 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0x96067c8 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9606658 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9606628 <col:21> 'long' 1)
    (IntegerLiteral 0x9606640 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0x96067d8 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96066d8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x96066a8 <col:21> 'long' 1)
    (IntegerLiteral 0x96066c0 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0x96067e8 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9606758 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9606728 <col:28> 'long' 1)
    (IntegerLiteral 0x9606740 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9606a30 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0x9606a20 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9606a08 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x96069f0 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0x9606978 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9606968 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9606958 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606930 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606800 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x96069d8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x96069c8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x96069b8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606990 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606840 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9606c60 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0x9606c50 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9606c38 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9606c20 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0x9606ba8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9606b98 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9606b88 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606b60 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606a50 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9606c08 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9606bf8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9606be8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606bc0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606a90 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9606e90 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0x9606e80 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9606e68 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9606e50 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0x9606dd8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9606dc8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9606db8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606d90 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606c80 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9606e38 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9606e28 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9606e18 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606df0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606cc0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0x9607040 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0x9607030 <col:5, col:47>
    (CXXFunctionalCastExpr 0x9607018 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0x9607000 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0x9606fe8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9606fd8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9606fc8 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9606fa0 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9606eb0 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9607300 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0x96072f0 <col:5, col:24>
    (ImplicitCastExpr 0x96072e0 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x96072c8 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x96071d8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607090 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9607288 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9607278 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9607240 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9606af0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9607220 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x96071f0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607090 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9607230 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9607208 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x96070d0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9607528 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0x9607518 <col:5, col:24>
    (ImplicitCastExpr 0x9607508 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x96074f0 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9607438 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607330 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x96074c8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x96074b8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96074a0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x96068c0 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9607480 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9607450 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607330 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9607490 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9607468 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607370 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9607748 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0x9607738 <col:5, col:24>
    (ImplicitCastExpr 0x9607728 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9607710 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9607658 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607550 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x96076e8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x96076d8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96076c0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9606d20 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x96076a0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9607670 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607550 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x96076b0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9607688 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9607590 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0x9607938 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x96077c0 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0x9607948 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9607818 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0x9607958 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9607868 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0x9607968 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x96078e8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x96078b8 <col:28> 'long' 1)
    (IntegerLiteral 0x96078d0 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0x96080c4 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603700 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0x9608124 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603780 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0x9608184 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603800 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0x96081e4 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603880 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0x9608244 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603900 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0x96082a4 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603980 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0x9608304 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603a00 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0x9608364 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603a80 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0x96083c4 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603b00 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0x9608424 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603b80 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0x9608484 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603c00 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0x96084e4 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603c80 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0x9608544 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603d00 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0x96085a4 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603d80 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0x9608604 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603e00 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0x9608664 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603eb0 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0x96086c4 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603f60 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0x9608724 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9603fe0 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0x96087d4 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0x96065f0 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0x9608834 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0x9606670 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0x9608894 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0x96066f0 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0x96088f4 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0x9606570 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0x96089a4 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0x96051e0 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0x9608a04 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0x9605260 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0x9608a64 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0x96052e0 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0x9608ac4 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0x9605360 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0x9608b24 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0x96053e0 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0x9608b84 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0x9605460 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0x9608c34 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0x96077e0 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0x9608c94 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9607830 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0x9608cf4 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9607880 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0x9612ae0 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0x9612ac8 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0x9609850 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0x9612b20 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0x9612b08 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0x96097b0 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0x9612b60 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0x9612b48 <col:46> 'int' lvalue ParmVar 0x9609800 '__index' 'int'))
), _M_refcount((IntegerLiteral 0x9612b88 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0x9612bc8 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0x9612cb8 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0x9612c90 <col:28, col:76> 'void'
    (ImplicitCastExpr 0x9612c80 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9612bfc <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0x93df590 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9612c50 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9612c30 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0x9609750
        (CXXThisExpr 0x9612c20 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0x9612c68 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0x9612ef8 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0x9612cd0 <line:481:62>)
  (DeclStmt 0x9612e10 <line:482:9, col:77>
    0x9612cf0 "int __res =
      (CallExpr 0x9612de8 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9612dd8 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9612d3c <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x91b82a0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9612d90 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9612d70 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0x9609750
            (CXXThisExpr 0x9612d60 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0x9612dc0 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0x9612da8 <col:75> 'int' 1)))")
  (IfStmt 0x9612ea0 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0x9612e60 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0x9612e50 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0x9612e20 <col:13> 'int' lvalue Var 0x9612cf0 '__res' 'int'))
      (IntegerLiteral 0x9612e38 <col:22> 'int' 0))
    (CompoundStmt 0x9612e88 <line:484:11, line:486:11>
      (NullStmt 0x9612e78 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0x9612ee8 <line:487:9, col:16>
    (ImplicitCastExpr 0x9612ed8 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0x9612ebc <col:16> 'int' lvalue Var 0x9612cf0 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0x9612f30 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0x9612f18 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0x9612f70 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0x9612f58 <col:40> 'int' 0))
) (CompoundStmt 0x9612fa0 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0x9609fc8 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9609f70 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0x9613038 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0x9613028 <col:7, col:14>
    (ImplicitCastExpr 0x9613018 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0x9612ff4 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
        (CXXThisExpr 0x9612fc8 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0x9613190 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0x96130d8 <line:565:7, col:32>
    0x9613060 "fmtflags __old =
      (ImplicitCastExpr 0x96130c8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x96130a8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
          (CXXThisExpr 0x9613098 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9613140 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0x96130f8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
      (CXXThisExpr 0x96130e8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9613130 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9613118 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9611a70 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9613180 <line:567:7, col:14>
    (ImplicitCastExpr 0x9613170 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9613158 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9613060 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0x9613348 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0x9613238 <line:581:7, col:32>
    0x96131c0 "fmtflags __old =
      (ImplicitCastExpr 0x9613228 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9613208 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
          (CXXThisExpr 0x96131f8 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x96132e8 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x96132d8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x96132a0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9604b40 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9613258 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
      (CXXThisExpr 0x9613248 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9613290 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9613278 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9611b60 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9613338 <line:583:7, col:14>
    (ImplicitCastExpr 0x9613328 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961330c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x96131c0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0x9613678 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0x96133e8 <line:598:7, col:32>
    0x9613370 "fmtflags __old =
      (ImplicitCastExpr 0x96133d8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x96133b8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
          (CXXThisExpr 0x96133a8 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x96134e0 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x96134d0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x96134b8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9604da0 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9613408 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
      (CXXThisExpr 0x96133f8 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9613498 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9613488 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9613450 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9604900 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9613440 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9613428 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9611c60 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0x9613618 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9613608 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x96135f0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9604b40 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9613518 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
      (CXXThisExpr 0x9613508 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0x96135d8 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0x96135b0 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x96135a0 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9613588 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9613568 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9613538 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9611c20 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9613578 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9613550 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9611c60 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0x9613668 <line:601:7, col:14>
    (ImplicitCastExpr 0x9613658 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961363c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9613370 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0x9613788 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0x9613760 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9613750 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9613738 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9604da0 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x96136a8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9609440
      (CXXThisExpr 0x9613698 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9613718 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9613708 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96136f0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9604900 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x96136e0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x96136c8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9611d50 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0x96137f0 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0x96137e0 <col:7, col:14>
    (ImplicitCastExpr 0x96137d0 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x96137b0 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0x96093c0
        (CXXThisExpr 0x96137a0 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0x9613940 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0x9613888 <line:633:7, col:38>
    0x9613810 "streamsize __old =
      (ImplicitCastExpr 0x9613878 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9613858 <col:26> 'streamsize':'int' lvalue ->_M_precision 0x96093c0
          (CXXThisExpr 0x9613848 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x96138f0 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0x96138a8 <col:7> 'streamsize':'int' lvalue ->_M_precision 0x96093c0
      (CXXThisExpr 0x9613898 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x96138e0 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x96138c8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9611f00 '__prec' 'streamsize':'int')))
  (ReturnStmt 0x9613930 <line:635:7, col:14>
    (ImplicitCastExpr 0x9613920 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9613908 <col:14> 'streamsize':'int' lvalue Var 0x9613810 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0x96139b0 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0x96139a0 <col:7, col:14>
    (ImplicitCastExpr 0x9613990 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9613970 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0x9609400
        (CXXThisExpr 0x9613960 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0x9613b00 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0x9613a48 <line:656:7, col:34>
    0x96139d0 "streamsize __old =
      (ImplicitCastExpr 0x9613a38 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9613a18 <col:26> 'streamsize':'int' lvalue ->_M_width 0x9609400
          (CXXThisExpr 0x9613a08 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9613ab0 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9613a68 <col:7> 'streamsize':'int' lvalue ->_M_width 0x9609400
      (CXXThisExpr 0x9613a58 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9613aa0 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9613a88 <col:18> 'streamsize':'int' lvalue ParmVar 0x9612070 '__wide' 'streamsize':'int')))
  (ReturnStmt 0x9613af0 <line:658:7, col:14>
    (ImplicitCastExpr 0x9613ae0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9613ac8 <col:14> 'streamsize':'int' lvalue Var 0x96139d0 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0x9612ab8 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0x9613b88 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0x9613b78 <col:7, col:14>
    (CXXConstructExpr 0x9613b50 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0x9613b30 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x960a2f0
        (CXXThisExpr 0x9613b20 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0x9613be0 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0x9613bd0 <col:7, col:14>
    (MemberExpr 0x9613bb0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x960a2f0
      (CXXThisExpr 0x9613ba0 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0x9613e68 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0x9613e10 <line:744:7, line:745:47>
    0x9613c10 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9613df0 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9613cc8 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0x9613cb0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9613c90 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9613c44 <col:25> 'int' lvalue ParmVar 0x96124d0 '__ix' 'int'))
            (ImplicitCastExpr 0x9613ca0 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9613c70 <col:32> 'int' lvalue ->_M_word_size 0x960a100
                (CXXThisExpr 0x9613c60 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9613d48 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9613d28 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9613cf0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x960a160
              (CXXThisExpr 0x9613ce0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9613d38 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9613d10 <col:14> 'int' lvalue ParmVar 0x96124d0 '__ix' 'int')))
        (CXXMemberCallExpr 0x9613db8 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9613d70 <col:22> '<bound member function type>' ->_M_grow_words 0x960a280
            (CXXThisExpr 0x9613d60 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9613de0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9613d90 <col:36> 'int' lvalue ParmVar 0x96124d0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9613da8 <col:42> '_Bool' true)))")
  (ReturnStmt 0x9613e58 <line:746:7, col:21>
    (MemberExpr 0x9613e38 <col:14, col:21> 'long' lvalue ._M_iword 0x9609e10
      (DeclRefExpr 0x9613e20 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9613c10 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0x96140e8 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0x9614090 <line:765:7, line:766:48>
    0x9613e90 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9614070 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9613f48 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0x9613f30 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9613f10 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9613ec4 <col:25> 'int' lvalue ParmVar 0x96125d0 '__ix' 'int'))
            (ImplicitCastExpr 0x9613f20 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9613ef0 <col:32> 'int' lvalue ->_M_word_size 0x960a100
                (CXXThisExpr 0x9613ee0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9613fc8 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9613fa8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9613f70 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x960a160
              (CXXThisExpr 0x9613f60 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9613fb8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9613f90 <col:14> 'int' lvalue ParmVar 0x96125d0 '__ix' 'int')))
        (CXXMemberCallExpr 0x9614038 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9613ff0 <col:22> '<bound member function type>' ->_M_grow_words 0x960a280
            (CXXThisExpr 0x9613fe0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9614060 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9614010 <col:36> 'int' lvalue ParmVar 0x96125d0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9614028 <col:42> '_Bool' false)))")
  (ReturnStmt 0x96140d8 <line:767:7, col:21>
    (MemberExpr 0x96140b8 <col:14, col:21> 'void *' lvalue ._M_pword 0x9609dd0
      (DeclRefExpr 0x96140a0 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9613e90 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0x9614308 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0x96142b0 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961428c <col:5, col:12> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x96141f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9614110 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x96142d0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961426c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608090 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96142f8 <line:799:5, col:12>
    (DeclRefExpr 0x96142dc <col:12> 'class std::ios_base' lvalue ParmVar 0x9614110 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0x96144c8 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0x9614470 <line:806:5, col:38> 'void'
    (MemberExpr 0x961440c <col:5, col:12> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x96143f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9614330 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614490 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961444c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608090 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96144b8 <line:807:5, col:12>
    (DeclRefExpr 0x961449c <col:12> 'class std::ios_base' lvalue ParmVar 0x9614330 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0x96146c8 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0x9614670 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961464c <col:5, col:12> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x96145b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x96144f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614690 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961462c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96083f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96146b8 <line:815:5, col:12>
    (DeclRefExpr 0x961469c <col:12> 'class std::ios_base' lvalue ParmVar 0x96144f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0x9614888 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0x9614830 <line:822:5, col:37> 'void'
    (MemberExpr 0x96147cc <col:5, col:12> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x96147b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x96146f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614850 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961480c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96083f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9614878 <line:823:5, col:12>
    (DeclRefExpr 0x961485c <col:12> 'class std::ios_base' lvalue ParmVar 0x96146f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0x9614a88 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0x9614a30 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9614a0c <col:5, col:12> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x9614974 <col:5> 'class std::ios_base' lvalue ParmVar 0x96148b0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614a50 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96149ec <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608450 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9614a78 <line:831:5, col:12>
    (DeclRefExpr 0x9614a5c <col:12> 'class std::ios_base' lvalue ParmVar 0x96148b0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0x9614c48 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0x9614bf0 <line:838:5, col:38> 'void'
    (MemberExpr 0x9614b8c <col:5, col:12> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x9614b74 <col:5> 'class std::ios_base' lvalue ParmVar 0x9614ab0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614c10 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9614bcc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608450 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9614c38 <line:839:5, col:12>
    (DeclRefExpr 0x9614c1c <col:12> 'class std::ios_base' lvalue ParmVar 0x9614ab0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0x9614e48 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0x9614df0 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9614dcc <col:5, col:12> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x9614d34 <col:5> 'class std::ios_base' lvalue ParmVar 0x9614c70 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614e10 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9614dac <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96084b0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9614e38 <line:847:5, col:12>
    (DeclRefExpr 0x9614e1c <col:12> 'class std::ios_base' lvalue ParmVar 0x9614c70 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0x9615008 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0x9614fb0 <line:854:5, col:36> 'void'
    (MemberExpr 0x9614f4c <col:5, col:12> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x9614f34 <col:5> 'class std::ios_base' lvalue ParmVar 0x9614e70 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9614fd0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9614f8c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96084b0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9614ff8 <line:855:5, col:12>
    (DeclRefExpr 0x9614fdc <col:12> 'class std::ios_base' lvalue ParmVar 0x9614e70 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0x9615208 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0x96151b0 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961518c <col:5, col:12> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x96150f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9615030 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x96151d0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961516c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608510 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96151f8 <line:863:5, col:12>
    (DeclRefExpr 0x96151dc <col:12> 'class std::ios_base' lvalue ParmVar 0x9615030 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0x96153c8 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0x9615370 <line:870:5, col:35> 'void'
    (MemberExpr 0x961530c <col:5, col:12> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x96152f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9615230 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615390 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961534c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608510 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96153b8 <line:871:5, col:12>
    (DeclRefExpr 0x961539c <col:12> 'class std::ios_base' lvalue ParmVar 0x9615230 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0x96155c8 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0x9615570 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961554c <col:5, col:12> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x96154b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x96153f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615590 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961552c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96085d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96155b8 <line:879:5, col:12>
    (DeclRefExpr 0x961559c <col:12> 'class std::ios_base' lvalue ParmVar 0x96153f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0x9615788 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0x9615730 <line:886:5, col:38> 'void'
    (MemberExpr 0x96156cc <col:5, col:12> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x96156b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x96155f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615750 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961570c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96085d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9615778 <line:887:5, col:12>
    (DeclRefExpr 0x961575c <col:12> 'class std::ios_base' lvalue ParmVar 0x96155f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0x9615988 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0x9615930 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961590c <col:6, col:13> '<bound member function type>' .setf 0x9611bb0
      (DeclRefExpr 0x9615874 <col:6> 'class std::ios_base' lvalue ParmVar 0x96157b0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615950 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96158ec <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608570 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9615978 <line:895:6, col:13>
    (DeclRefExpr 0x961595c <col:13> 'class std::ios_base' lvalue ParmVar 0x96157b0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0x9615b48 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0x9615af0 <line:902:6, col:37> 'void'
    (MemberExpr 0x9615a8c <col:6, col:13> '<bound member function type>' .unsetf 0x9611df0
      (DeclRefExpr 0x9615a74 <col:6> 'class std::ios_base' lvalue ParmVar 0x96159b0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615b10 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9615acc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608570 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9615b38 <line:903:6, col:13>
    (DeclRefExpr 0x9615b1c <col:13> 'class std::ios_base' lvalue ParmVar 0x96159b0 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0x9615da0 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0x9615d30 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9615d0c <col:6, col:13> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x9615c34 <col:6> 'class std::ios_base' lvalue ParmVar 0x9615b70 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615d58 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9615cac <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608210 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9615d68 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9615cec <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608630 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9615d90 <line:912:6, col:13>
    (DeclRefExpr 0x9615d74 <col:13> 'class std::ios_base' lvalue ParmVar 0x9615b70 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0x9616000 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0x9615f90 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9615f6c <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x9615e94 <col:5> 'class std::ios_base' lvalue ParmVar 0x9615dd0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9615fb8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9615f0c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608270 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9615fc8 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9615f4c <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608630 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9615ff0 <line:920:5, col:12>
    (DeclRefExpr 0x9615fd4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9615dd0 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0x9616260 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0x96161f0 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x96161cc <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x96160f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9616030 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9616218 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961616c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608330 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9616228 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96161ac <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608630 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9616250 <line:928:5, col:12>
    (DeclRefExpr 0x9616234 <col:12> 'class std::ios_base' lvalue ParmVar 0x9616030 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0x96164c0 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0x9616450 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961642c <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x9616354 <col:5> 'class std::ios_base' lvalue ParmVar 0x9616290 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9616478 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96163cc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96080f0 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9616488 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961640c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96164b0 <line:937:5, col:12>
    (DeclRefExpr 0x9616494 <col:12> 'class std::ios_base' lvalue ParmVar 0x9616290 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0x9616720 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0x96166b0 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x961668c <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x96165b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x96164f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x96166d8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961662c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x96166e8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961666c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9616710 <line:945:5, col:12>
    (DeclRefExpr 0x96166f4 <col:12> 'class std::ios_base' lvalue ParmVar 0x96164f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0x9616980 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0x9616910 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x96168ec <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x9616814 <col:5> 'class std::ios_base' lvalue ParmVar 0x9616750 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9616938 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x961688c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9616948 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96168cc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9616970 <line:953:5, col:12>
    (DeclRefExpr 0x9616954 <col:12> 'class std::ios_base' lvalue ParmVar 0x9616750 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0x9616be0 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0x9616b70 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9616b4c <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x9616a74 <col:5> 'class std::ios_base' lvalue ParmVar 0x96169b0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9616b98 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9616aec <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608150 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9616ba8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9616b2c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96086f0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9616bd0 <line:962:5, col:12>
    (DeclRefExpr 0x9616bb4 <col:12> 'class std::ios_base' lvalue ParmVar 0x96169b0 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0x9616e40 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0x9616dd0 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9616dac <col:5, col:12> '<bound member function type>' .setf 0x9611ce0
      (DeclRefExpr 0x9616cd4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9616c10 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9616df8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9616d4c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608390 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9616e08 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9616d8c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96086f0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9616e30 <line:970:5, col:12>
    (DeclRefExpr 0x9616e14 <col:12> 'class std::ios_base' lvalue ParmVar 0x9616c10 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0x9623928 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0x9623b50 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0x9623a00 <line:208:2, col:30>
    0x9623940 "std::locale __tmp =
      (ParenListExpr 0x96239e0 <col:14, col:29> 'class std::locale'
        (CallExpr 0x96239c0 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9623988 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0x9623978 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0x9623a70 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9623a20 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9623a10 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9623a54 <col:14> 'const class std::locale' lvalue ParmVar 0x9620ba0 '__loc' 'const class std::locale &'))
  (BinaryOperator 0x9623ad8 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0x9623aa0 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0x9620a80
      (CXXThisExpr 0x9623a90 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9623ac0 <col:18> 'const class std::locale' lvalue ParmVar 0x9620ba0 '__loc' 'const class std::locale &'))
  (ReturnStmt 0x9623b40 <line:211:2, col:9>
    (CXXConstructExpr 0x9623b18 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9623b08 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9623af0 <col:9> 'class std::locale' lvalue Var 0x9623940 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0x9623bc8 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0x9623bb8 <col:9, col:16>
    (MemberExpr 0x9623b98 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0x9620a80
      (CXXThisExpr 0x9623b88 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9623c90 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0x9623c80 <col:9, col:37>
    (CallExpr 0x9623c58 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9623bf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9623be0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9623c24 <col:29> 'char_type *' lvalue ParmVar 0x9620ce0 '__s' 'char_type *')
      (DeclRefExpr 0x9623c3c <col:34> 'streamsize':'int' lvalue ParmVar 0x9620d20 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9623560 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9623550 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9623538 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9623518 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x96234b4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9623528 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x96234f4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9623d70 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0x9623d60 <col:9, col:50>
    (CallExpr 0x9623d38 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9623cb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9623ca8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9623cec <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9620e60 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x9623d04 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9620ef0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0x9623d1c <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9620f80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9623650 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9623640 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9623628 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9623608 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x96235a4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9623618 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x96235e4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9623e38 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0x9623e28 <col:9, col:42>
    (CallExpr 0x9623e00 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9623d98 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9623d88 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9623dcc <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x96210c0 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0x9623de4 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9621130 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0x9623ec8 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0x9623eb8 <col:19, col:37>
    (CallExpr 0x9623e98 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9623e60 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0x9623e50 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0x9624158 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0x9624060 <line:265:2, col:55>
    0x9623ef0 "const streamsize __ret =
      (CXXOperatorCallExpr 0x9624038 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9623ff8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (CallExpr 0x9623f70 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9623f38 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0x9623f28 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9623fd8 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9623fa0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9623f90 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0x9624148 <line:266:2, col:41>
    (ConditionalOperator 0x9624128 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0x9624118 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9624108 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9624070 <col:9> 'const streamsize':'const int' lvalue Var 0x9623ef0 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0x9624088 <col:17> 'const streamsize':'const int' lvalue Var 0x9623ef0 '__ret' 'const streamsize':'const int')
      (CallExpr 0x96240e8 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96240b0 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x96240a0 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0x9624488 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0x9624230 <line:279:2, col:37>
    0x9624180 "int_type __ret =
      (CallExpr 0x9624210 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96241d8 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0x9624440 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0x9624380 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0x9624240 <line:280:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0x9624358 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0x9624330 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9624278 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0x96242f8 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96242c0 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0x96242b0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9624314 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624180 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0x9624370 <col:22> '_Bool' true))
    (BinaryOperator 0x9624428 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x96243a4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624180 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9624408 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96243d0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x96243c0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0x9624478 <line:283:2, col:9>
    (DeclRefExpr 0x962445c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624180 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0x9624930 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0x96244e8 <line:297:2, col:16>
    0x96244b0 "int_type __ret")
  (IfStmt 0x96248e8 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0x9624668 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0x96244f8 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9624630 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x96245e0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x9624558 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9624520 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9624510 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x96245c0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9624588 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9624578 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9624658 <col:53> '_Bool' true))
    (CompoundStmt 0x9624838 <line:299:4, line:302:4>
      (BinaryOperator 0x96247a0 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x962468c <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x96244b0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9624780 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96246c8 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9624768 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9624748 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9624710 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9624700 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9624818 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96247c8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x96247b8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9624800 <col:18> 'int' 1)))
    (BinaryOperator 0x96248d0 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9624850 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x96244b0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x96248b0 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9624878 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9624868 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9624920 <line:305:2, col:9>
    (DeclRefExpr 0x9624904 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x96244b0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0x9624d48 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0x9624998 <line:319:2, col:16>
    0x9624960 "int_type __ret")
  (IfStmt 0x9624d00 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0x9624b18 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0x96249a8 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9624ae0 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9624a90 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x9624a08 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96249d0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x96249c0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9624a70 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9624a38 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9624a28 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9624b08 <col:53> '_Bool' true))
    (BinaryOperator 0x9624c50 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0x9624b3c <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624960 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9624c30 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9624b78 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0x9624c18 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0x9624bf8 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9624bc0 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x9624bb0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0x9624ce8 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9624c68 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624960 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9624cc8 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9624c90 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9624c80 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9624d38 <line:324:2, col:9>
    (DeclRefExpr 0x9624d1c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624960 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9624e18 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0x9624e08 <col:9, col:37>
    (CallExpr 0x9624de0 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9624d78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9624d68 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9624dac <col:29> 'char_type *' lvalue ParmVar 0x9621510 '__s' 'char_type *')
      (DeclRefExpr 0x9624dc4 <col:34> 'streamsize':'int' lvalue ParmVar 0x9621550 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0x9625570 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0x9624e78 <line:353:2, col:16>
    0x9624e40 "int_type __ret")
  (DeclStmt 0x9625010 <line:354:2, col:53>
    0x9624e90 "const bool __testpos =
      (CXXOperatorCallExpr 0x9624fe8 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9624f98 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x9624f10 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9624ed8 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0x9624ec8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9624f78 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9624f40 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0x9624f30 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0x9625528 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0x9625200 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0x9625020 <line:355:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x96251d8 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0x9625060 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9625050 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9625038 <col:24> 'const _Bool' lvalue Var 0x9624e90 '__testpos' 'const _Bool')))
        (UnaryOperator 0x96251c0 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9625198 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9625098 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0x96250cc <col:26> 'char_type':'_CharT' lvalue ParmVar 0x9621660 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9625180 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0x9625130 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x96250f8 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x96250e8 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0x9625168 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0x9625150 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0x96251f0 <col:50> '_Bool' false))
    (BinaryOperator 0x9625338 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0x9625224 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624e40 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9625318 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9625250 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9625240 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x96252f8 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96252a8 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0x96252dc <col:53> 'char_type':'_CharT' lvalue ParmVar 0x9621660 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0x9625510 <line:359:4, line:362:4>
      (CallExpr 0x96253c8 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9625360 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9625350 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x96253b0 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9625398 <col:19> 'int' 1)))
      (BinaryOperator 0x96254f8 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x96253e8 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624e40 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x96254d8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625420 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x96254c0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x96254a0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9625468 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9625458 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0x9625560 <line:363:2, col:9>
    (DeclRefExpr 0x9625544 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9624e40 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0x9625a38 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0x96255d8 <line:378:2, col:16>
    0x96255a0 "int_type __ret")
  (IfStmt 0x96259f0 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0x9625758 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0x96255e8 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9625720 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x96256d0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x9625648 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625610 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9625600 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x96256b0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625678 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9625668 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9625748 <col:53> '_Bool' true))
    (CompoundStmt 0x9625940 <line:380:4, line:383:4>
      (CallExpr 0x96257f8 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9625790 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9625780 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x96257e0 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x96257c8 <col:19> 'int' 1)))
      (BinaryOperator 0x9625928 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9625818 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x96255a0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9625908 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625850 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x96258f0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x96258d0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9625898 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9625888 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0x96259d8 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9625958 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x96255a0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x96259b8 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9625980 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9625970 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9625a28 <line:386:2, col:9>
    (DeclRefExpr 0x9625a0c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x96255a0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0x9625fc0 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0x9625a98 <line:405:2, col:16>
    0x9625a60 "int_type __ret")
  (IfStmt 0x9625f78 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0x9625c18 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9625aa8 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9625be0 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9625b90 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x9625b08 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625ad0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9625ac0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9625b70 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625b38 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9625b28 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9625c08 <col:53> '_Bool' true))
    (CompoundStmt 0x9625e30 <line:407:4, line:411:4>
      (BinaryOperator 0x9625cd8 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0x9625ca8 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0x9625c88 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9625c50 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x9625c40 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9625cbc <col:22> 'char_type':'_CharT' lvalue ParmVar 0x96217f0 '__c' 'char_type':'_CharT'))
      (CallExpr 0x9625d50 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9625d00 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9625cf0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9625d38 <col:18> 'int' 1))
      (BinaryOperator 0x9625e18 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0x9625d70 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9625a60 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9625df8 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625da8 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0x9625ddc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x96217f0 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0x9625f60 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0x9625e4c <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9625a60 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9625f40 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9625e78 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9625e68 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9625f20 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9625ed0 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0x9625f04 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x96217f0 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0x9625fb0 <line:414:2, col:9>
    (DeclRefExpr 0x9625f94 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9625a60 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9626090 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0x9626080 <col:9, col:37>
    (CallExpr 0x9626058 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9625ff0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9625fe0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9626024 <col:29> 'const char_type *' lvalue ParmVar 0x96218e0 '__s' 'const char_type *')
      (DeclRefExpr 0x962603c <col:34> 'streamsize':'int' lvalue ParmVar 0x9621920 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0x96260a8 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0x96260f8 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0x9626148 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0x9626198 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0x96261e8 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0x9626238 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0x96262c8 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0x96262c0)
  (CXXTemporaryObjectExpr 0x9626290 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0x9626398 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0x96263e8 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0x96263d8 <col:23, col:30>
    (MemberExpr 0x96263b8 <col:30> 'char_type *const' lvalue ->_M_in_beg 0x9620900
      (CXXThisExpr 0x96263a8 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0x9626440 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0x9626430 <col:23, col:30>
    (MemberExpr 0x9626410 <col:30> 'char_type *const' lvalue ->_M_in_cur 0x9620940
      (CXXThisExpr 0x9626400 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0x9626498 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0x9626488 <col:23, col:30>
    (MemberExpr 0x9626468 <col:30> 'char_type *const' lvalue ->_M_in_end 0x9620980
      (CXXThisExpr 0x9626458 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0x9626518 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0x96264f8 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x96264c0 <col:24> 'char_type *' lvalue ->_M_in_cur 0x9620940
      (CXXThisExpr 0x96264b0 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96264e0 <col:37> 'int' lvalue ParmVar 0x9621cb0 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0x9626650 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0x9626578 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9626540 <col:2> 'char_type *' lvalue ->_M_in_beg 0x9620900
      (CXXThisExpr 0x9626530 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9626560 <col:14> 'char_type *' lvalue ParmVar 0x9621d80 '__gbeg' 'char_type *'))
  (BinaryOperator 0x96265d8 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0x96265a0 <col:2> 'char_type *' lvalue ->_M_in_cur 0x9620940
      (CXXThisExpr 0x9626590 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96265c0 <col:14> 'char_type *' lvalue ParmVar 0x9621dd0 '__gnext' 'char_type *'))
  (BinaryOperator 0x9626638 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9626600 <col:2> 'char_type *' lvalue ->_M_in_end 0x9620980
      (CXXThisExpr 0x96265f0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9626620 <col:14> 'char_type *' lvalue ParmVar 0x9621e20 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0x96266b0 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0x96266a0 <col:23, col:30>
    (MemberExpr 0x9626680 <col:30> 'char_type *const' lvalue ->_M_out_beg 0x96209c0
      (CXXThisExpr 0x9626670 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0x9626708 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0x96266f8 <col:22, col:29>
    (MemberExpr 0x96266d8 <col:29> 'char_type *const' lvalue ->_M_out_cur 0x9620a00
      (CXXThisExpr 0x96266c8 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0x9626760 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0x9626750 <col:23, col:30>
    (MemberExpr 0x9626730 <col:30> 'char_type *const' lvalue ->_M_out_end 0x9620a40
      (CXXThisExpr 0x9626720 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0x96267e0 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0x96267c0 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9626788 <col:24> 'char_type *' lvalue ->_M_out_cur 0x9620a00
      (CXXThisExpr 0x9626778 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96267a8 <col:38> 'int' lvalue ParmVar 0x96220b0 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0x9626900 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0x9626888 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0x9626808 <col:2> 'char_type *' lvalue ->_M_out_beg 0x96209c0
      (CXXThisExpr 0x96267f8 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0x9626870 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0x9626838 <col:15> 'char_type *' lvalue ->_M_out_cur 0x9620a00
        (CXXThisExpr 0x9626828 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9626858 <col:28> 'char_type *' lvalue ParmVar 0x9622180 '__pbeg' 'char_type *')))
  (BinaryOperator 0x96268e8 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0x96268b0 <col:2> 'char_type *' lvalue ->_M_out_end 0x9620a40
      (CXXThisExpr 0x96268a0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96268d0 <col:15> 'char_type *' lvalue ParmVar 0x96221d0 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0x9626918 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0x9626948 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0x9626938 <col:9, col:16>
    (CXXThisExpr 0x9626928 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0x9623740 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9623730 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9623718 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x96236f8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9623694 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9623708 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x96236d4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x96269f0 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0x96269e0 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x96269c0 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x96269a0 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9626988 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9626970 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0x9623830 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9623820 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9623808 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x96237e8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9623784 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x96237f8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x96237c4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9626a98 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0x9626a88 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9626a68 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9626a48 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9626a30 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9626a18 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0x9626ad8 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0x9626ac8 <col:16, col:23>
    (IntegerLiteral 0x9626ab0 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0x9626b18 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0x9626b08 <col:21, col:28>
    (IntegerLiteral 0x9626af0 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0x9626bb8 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0x9626ba8 <col:9, col:33>
    (CallExpr 0x9626b88 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9626b50 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0x9627040 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0x9626c90 <line:681:2, col:37>
    0x9626be0 "int_type __ret =
      (CallExpr 0x9626c70 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9626c38 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0x9626de8 <line:682:2, line:683:14>
    0x9626cb0 "const bool __testeof =
      (CallExpr 0x9626dc0 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9626d08 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0x9626d88 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9626d50 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0x9626d40 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9626da4 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x9626be0 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9626ff8 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0x9626e20 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9626e10 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9626df8 <col:7> 'const _Bool' lvalue Var 0x9626cb0 '__testeof' 'const _Bool')))
    (CompoundStmt 0x9626fe0 <line:685:4, line:688:4>
      (BinaryOperator 0x9626f48 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9626e34 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9626be0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9626f28 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9626e70 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9626f10 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9626ef0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9626eb8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9626ea8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9626fc0 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9626f70 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9626f60 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9626fa8 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0x9627030 <line:689:2, col:9>
    (DeclRefExpr 0x9627014 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9626be0 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0x96238a0 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9623878 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0x96270e8 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0x96270d8 <col:9, col:33>
    (CallExpr 0x96270b8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9627080 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0x9623908 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0x96238e0 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0x9627188 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0x9627178 <col:9, col:33>
    (CallExpr 0x9627158 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9627120 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0x9630468 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0x9630448 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96272c0 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9627270 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (CallExpr 0x96271e8 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96271b0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x96271a0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0x9627250 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9627218 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9627208 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0x9627348 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96272f8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x96272e8 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9627330 <col:16> 'int' 1))
    (CallExpr 0x9630428 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96303f0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9627368 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0x96304e8 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0x96304c8 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9630490 <col:38> 'char_type *' lvalue ->_M_in_cur 0x9620940
      (CXXThisExpr 0x9630480 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96304b0 <col:51> 'streamsize':'int' lvalue ParmVar 0x9622ff0 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0x9630568 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0x9630548 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9630510 <col:38> 'char_type *' lvalue ->_M_out_cur 0x9620a00
      (CXXThisExpr 0x9630500 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9630530 <col:52> 'streamsize':'int' lvalue ParmVar 0x96230e0 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0x9630598 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0x963057c <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0x9630620 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0x9630608 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0x96306b0 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0x9630698 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0x9630740 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0x9630728 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0x96307d0 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0x96307b8 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0x9630860 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0x9630848 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0x96308f0 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0x96308d8 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9623230 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0x9630988 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0x96309d0 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0x96309c0 <col:44, col:52>
    (UnaryOperator 0x96309a8 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9630998 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9632cb8 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0x9631eb0 <line:48:7, col:27>
    0x9631e60 "streamsize __ret =
      (IntegerLiteral 0x9631e98 <col:26> 'int' 0)")
  (WhileStmt 0x9632c68 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0x9631f10 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9631ef0 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9631ec0 <col:14> 'streamsize':'int' lvalue Var 0x9631e60 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9631f00 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9631ed8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9631d60 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9632c48 <line:50:2, line:73:2>
      (DeclStmt 0x96320a0 <line:51:4, col:61>
        0x9631f30 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9632078 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9632038 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (CallExpr 0x9631fb0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9631f78 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9631f68 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9632018 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9631fe0 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9631fd0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x96327b8 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x96320d8 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x96320c8 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x96320b0 <col:8> 'const streamsize':'const int' lvalue Var 0x9631f30 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9632790 <line:53:6, line:60:6>
          (DeclStmt 0x9632190 <line:54:8, col:50>
            0x96320f0 "const streamsize __remaining =
              (BinaryOperator 0x9632178 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9632158 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9632124 <col:39> 'streamsize':'int' lvalue ParmVar 0x9631d60 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9632168 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x963213c <col:45> 'streamsize':'int' lvalue Var 0x9631e60 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9632530 <line:55:8, col:65>
            0x96321b0 "const streamsize __len =
              (ImplicitCastExpr 0x9632520 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x96324f8 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x96324e8 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9632488 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x96323e0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x92aa0a0 'min')))
                  (DeclRefExpr 0x9632240 <col:42> 'const streamsize':'const int' lvalue Var 0x9631f30 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9632258 <col:53> 'const streamsize':'const int' lvalue Var 0x96320f0 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9632638 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9632568 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0x963259c <col:26> 'char_type *' lvalue ParmVar 0x9631d20 '__s' 'char_type *')
            (CallExpr 0x9632600 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96325c8 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x96325b8 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x963261c <col:45> 'const streamsize':'const int' lvalue Var 0x96321b0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x96326a0 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9632660 <col:8> 'streamsize':'int' lvalue Var 0x9631e60 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9632690 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9632678 <col:17> 'const streamsize':'const int' lvalue Var 0x96321b0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x96326f0 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x96326c0 <col:8> 'char_type *' lvalue ParmVar 0x9631d20 '__s' 'char_type *')
            (DeclRefExpr 0x96326d8 <col:15> 'const streamsize':'const int' lvalue Var 0x96321b0 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9632770 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9632720 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9632710 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9632754 <col:27> 'const streamsize':'const int' lvalue Var 0x96321b0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9632c28 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9632828 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9632808 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x96327d4 <col:8> 'streamsize':'int' lvalue Var 0x9631e60 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9632818 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x96327ec <col:16> 'streamsize':'int' lvalue ParmVar 0x9631d60 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9632c10 <line:63:6, line:72:6>
          (DeclStmt 0x96328f0 <line:64:8, col:42>
            0x9632850 "const int_type __c =
              (CallExpr 0x96328d0 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9632898 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0x9632888 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0x9632bf0 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0x9632a10 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x96329e8 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9632920 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9632954 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9632850 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0x96329c8 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9632990 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9632bd0 <line:66:3, line:69:3>
              (CallExpr 0x9632b78 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9632a50 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0x9632ad0 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9632ab8 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9632a84 <col:26> 'char_type *' lvalue ParmVar 0x9631d20 '__s' 'char_type *')))
                (CallExpr 0x9632b58 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9632b08 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9632b3c <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9632850 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0x9632bb8 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9632b9c <col:7> 'streamsize':'int' lvalue Var 0x9631e60 '__ret' 'streamsize':'int')))
            (BreakStmt 0x9632be8 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9632ca8 <line:74:7, col:14>
    (ImplicitCastExpr 0x9632c98 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9632c7c <col:14> 'streamsize':'int' lvalue Var 0x9631e60 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9633c48 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0x9633110 <line:82:7, col:27>
    0x96330c0 "streamsize __ret =
      (IntegerLiteral 0x96330f8 <col:26> 'int' 0)")
  (WhileStmt 0x9633bf8 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0x9633170 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9633150 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9633120 <col:14> 'streamsize':'int' lvalue Var 0x96330c0 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9633160 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9633138 <col:22> 'streamsize':'int' lvalue ParmVar 0x9632fc0 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9633bd8 <line:84:2, line:107:2>
      (DeclStmt 0x9633300 <line:85:4, col:61>
        0x9633190 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x96332d8 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9633298 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (CallExpr 0x9633210 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96331d8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x96331c8 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9633278 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9633240 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9633230 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x96337f0 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9633338 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9633328 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9633310 <col:8> 'const streamsize':'const int' lvalue Var 0x9633190 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x96337c8 <line:87:6, line:94:6>
          (DeclStmt 0x96333f0 <line:88:8, col:50>
            0x9633350 "const streamsize __remaining =
              (BinaryOperator 0x96333d8 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x96333b8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9633384 <col:39> 'streamsize':'int' lvalue ParmVar 0x9632fc0 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x96333c8 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x963339c <col:45> 'streamsize':'int' lvalue Var 0x96330c0 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9633568 <line:89:8, col:65>
            0x9633410 "const streamsize __len =
              (ImplicitCastExpr 0x9633558 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9633530 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9633520 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x96334f8 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x96323e0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x92aa0a0 'min')))
                  (DeclRefExpr 0x9633498 <col:42> 'const streamsize':'const int' lvalue Var 0x9633190 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x96334b0 <col:53> 'const streamsize':'const int' lvalue Var 0x9633350 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9633670 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96335a0 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0x9633620 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96335e8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x96335d8 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x963363c <col:40> 'const char_type *' lvalue ParmVar 0x9632f80 '__s' 'const char_type *')
            (DeclRefExpr 0x9633654 <col:45> 'const streamsize':'const int' lvalue Var 0x9633410 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x96336d8 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9633698 <col:8> 'streamsize':'int' lvalue Var 0x96330c0 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x96336c8 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x96336b0 <col:17> 'const streamsize':'const int' lvalue Var 0x9633410 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9633728 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x96336f8 <col:8> 'const char_type *' lvalue ParmVar 0x9632f80 '__s' 'const char_type *')
            (DeclRefExpr 0x9633710 <col:15> 'const streamsize':'const int' lvalue Var 0x9633410 '__len' 'const streamsize':'const int'))
          (CallExpr 0x96337a8 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9633758 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9633748 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x963378c <col:27> 'const streamsize':'const int' lvalue Var 0x9633410 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9633bb8 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0x9633860 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9633840 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x963380c <col:8> 'streamsize':'int' lvalue Var 0x96330c0 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9633850 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9633824 <col:16> 'streamsize':'int' lvalue ParmVar 0x9632fc0 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9633ba0 <line:97:6, line:106:6>
          (DeclStmt 0x96339c8 <line:98:8, col:69>
            0x9633880 "int_type __c =
              (CallExpr 0x96339a8 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x96338c8 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0x96338b8 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0x9633988 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9633920 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0x9633970 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0x9633954 <col:64> 'const char_type *' lvalue ParmVar 0x9632f80 '__s' 'const char_type *'))))")
          (IfStmt 0x9633b80 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0x9633ae8 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9633ac0 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x96339f8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9633a2c <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0x9633880 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9633aa0 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9633a68 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9633b60 <line:100:3, line:103:3>
              (UnaryOperator 0x9633b18 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9633afc <col:7> 'streamsize':'int' lvalue Var 0x96330c0 '__ret' 'streamsize':'int'))
              (UnaryOperator 0x9633b48 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9633b2c <col:7> 'const char_type *' lvalue ParmVar 0x9632f80 '__s' 'const char_type *')))
            (BreakStmt 0x9633b78 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9633c38 <line:108:7, col:14>
    (ImplicitCastExpr 0x9633c28 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9633c0c <col:14> 'streamsize':'int' lvalue Var 0x96330c0 '__ret' 'streamsize':'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0x96347e8 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0x9634190 <line:120:7, col:27>
    0x9634140 "streamsize __ret =
      (IntegerLiteral 0x9634178 <col:26> 'int' 0)")
  (BinaryOperator 0x96341c8 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0x96341a0 <col:7> '_Bool' lvalue ParmVar 0x9634010 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0x96341b8 <col:17> '_Bool' true))
  (DeclStmt 0x96342f8 <line:122:7, col:55>
    0x9634250 "typename _Traits::int_type __c =
      (CallExpr 0x96342d8 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96342a0 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9634284 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9633e50 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0x9634798 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0x96343f8 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0x96343d0 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9634328 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0x963434c <col:36> 'typename _Traits::int_type' lvalue Var 0x9634250 '__c' 'typename _Traits::int_type')
        (CallExpr 0x96343b0 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9634388 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0x9634778 <line:124:2, line:133:2>
      (BinaryOperator 0x9634518 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x963440c <col:4> 'typename _Traits::int_type' lvalue Var 0x9634250 '__c' 'typename _Traits::int_type')
        (CallExpr 0x96344f8 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9634440 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0x9634424 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9633fc0 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0x96344d8 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9634498 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0x96344bc <col:47> 'typename _Traits::int_type' lvalue Var 0x9634250 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0x9634688 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0x9634600 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9634558 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x963457c <col:29> 'typename _Traits::int_type' lvalue Var 0x9634250 '__c' 'typename _Traits::int_type')
          (CallExpr 0x96345e0 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0x96345b8 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0x9634670 <line:127:6, line:130:6>
          (BinaryOperator 0x9634650 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0x9634624 <col:8> '_Bool' lvalue ParmVar 0x9634010 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0x9634640 <col:18> '_Bool' false))
          (BreakStmt 0x9634668 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0x96346c0 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0x96346a4 <col:6> 'streamsize':'int' lvalue Var 0x9634140 '__ret' 'streamsize':'int'))
      (BinaryOperator 0x9634760 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0x96346d4 <col:4> 'typename _Traits::int_type' lvalue Var 0x9634250 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9634740 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9634708 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0x96346ec <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9633e50 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0x96347d8 <line:134:7, col:14>
    (ImplicitCastExpr 0x96347c8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x96347ac <col:14> 'streamsize':'int' lvalue Var 0x9634140 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0x9634da0 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0x9634cd8 <line:142:7, col:19>
    0x9634ca0 "bool __ineof")
  (ReturnStmt 0x9634d90 <line:143:7, col:60>
    (CallExpr 0x9634d68 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9634ce8 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9634100)
      (DeclRefExpr 0x9634d1c <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x96349f0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9634d34 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9634b60 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9634d4c <col:53> '_Bool' lvalue Var 0x9634ca0 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0x9657ce0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657cc4 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9503500 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0x9657d50 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657d34 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9503750 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0x9657dc0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657da4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x95039a0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0x9657e30 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657e14 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9503bf0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0x9657ea0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657e84 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9503e40 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0x9657f10 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657ef4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9504090 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0x9657f80 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9657f64 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x95042e0 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0x9658080 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9658068 <col:32, col:54> 'int' '|'
    (BinaryOperator 0x9658028 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0x9658008 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0x9657fd4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x95039a0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0x9658018 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0x9657fec <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9503bf0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0x9658058 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0x9658040 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9504c20 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0x96580f0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x96580d4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x95049d0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0x9658160 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9658144 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9504c20 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0x9658220 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9658208 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0x96581e8 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0x96581b4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x95039a0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0x96581f8 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0x96581cc <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9503bf0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0x965afe0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0x965b0d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x965b098 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0x965b130 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0x965b190 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x965b158 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x965b140 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x965a8d0 '__s' 'istream_type &')))
), _M_c((CallExpr 0x965b240 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x965b208 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0x965b2a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x965b2b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0x965a9f0 '__s' 'streambuf_type *')
), _M_c((CallExpr 0x965b360 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x965b328 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0x965b3c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0x965b4c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0x965b4b0 <line:121:2, col:43>
    (CallExpr 0x965b490 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x965b408 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x965b470 <col:35, col:42> '<dependent type>'
        (MemberExpr 0x965b450 <col:35> '<bound member function type>' ->_M_get 0x965af00
          (CXXThisExpr 0x965b440 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x965b6d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0x965b4d8 <line:130:25>)
  (IfStmt 0x965b678 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0x965b4f8 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
      (CXXThisExpr 0x965b4e8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x965b660 <line:132:4, line:135:4>
      (CallExpr 0x965b580 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x965b548 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0x965b528 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
            (CXXThisExpr 0x965b518 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0x965b648 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0x965b5b0 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x965a780
          (CXXThisExpr 0x965b5a0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x965b628 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x965b5f0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x965b6c0 <line:136:2, col:10>
    (UnaryOperator 0x965b6a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x965b698 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0x965b9c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0x965b6f0 <line:145:25>)
  (DeclStmt 0x965b770 <line:147:2, col:35>
    0x965b710 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0x965b758 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0x965b748 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0x965b978 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0x965b790 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
      (CXXThisExpr 0x965b780 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x965b960 <line:149:4, line:152:4>
      (BinaryOperator 0x965b888 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x965b7c8 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x965b7b0 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x965b710 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0x965b868 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x965b830 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0x965b810 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
              (CXXThisExpr 0x965b800 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0x965b948 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0x965b8b0 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x965a780
          (CXXThisExpr 0x965b8a0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x965b928 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x965b8f0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x965b9b0 <line:153:2, col:9>
    (DeclRefExpr 0x965b994 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x965b710 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0x965bb38 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0x965bb28 <col:9, col:45>
    (CXXOperatorCallExpr 0x965bb00 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x965baa0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790)
      (CallExpr 0x965ba10 <col:16, col:26> '<dependent type>'
        (MemberExpr 0x965b9f0 <col:16> '<bound member function type>' ->_M_at_eof 0x965af80
          (CXXThisExpr 0x965b9e0 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0x965ba80 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x965ba48 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x965ba2c <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x965ad80 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0x965c0e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0x965bc10 <line:168:2, col:43>
    0x965bb60 "const int_type __eof =
      (CallExpr 0x965bbf0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x965bbb8 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0x965bc80 <line:169:2, col:24>
    0x965bc30 "int_type __ret =
      (DeclRefExpr 0x965bc64 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x965bb60 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0x965c098 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0x965bca0 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
      (CXXThisExpr 0x965bc90 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x965c080 <line:171:4, line:179:4>
      (IfStmt 0x965c060 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0x965bd88 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x965bd60 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x965bce0 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0x965bd28 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x965a780
              (CXXThisExpr 0x965bd18 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x965bd48 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x965bb60 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0x965bde8 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0x965bd9c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x965bc30 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0x965bdc8 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x965a780
            (CXXThisExpr 0x965bdb8 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0x965c040 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0x965bf68 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0x965bf40 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x965be20 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0x965bf10 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0x965bef8 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0x965be54 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x965bc30 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0x965bed8 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x965bea0 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0x965be80 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
                        (CXXThisExpr 0x965be70 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0x965bf24 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x965bb60 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0x965bfc8 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0x965bf90 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x965a780
              (CXXThisExpr 0x965bf80 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x965bfb0 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0x965bc30 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0x965c028 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0x965bff0 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0x965a730
              (CXXThisExpr 0x965bfe0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0x965c010 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0x965c0d0 <line:180:2, col:9>
    (DeclRefExpr 0x965c0b4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x965bc30 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0x965c2c8 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0x965c1c0 <line:186:2, col:43>
    0x965c110 "const int_type __eof =
      (CallExpr 0x965c1a0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x965c168 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0x965c2b8 <line:187:2, col:49>
    (CallExpr 0x965c290 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x965c1f0 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x965c258 <col:34, col:41> '<dependent type>'
        (MemberExpr 0x965c238 <col:34> '<bound member function type>' ->_M_get 0x965af00
          (CXXThisExpr 0x965c228 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x965c274 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x965c110 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x965c818 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0x965c808 <col:7, col:27>
    (CallExpr 0x965c7e8 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x965c798 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x965c780 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x965c4e0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0x965c7cc <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x965c650 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x965cd40 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0x965cd30 <col:7, col:28>
    (UnaryOperator 0x965cd18 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x965ccf8 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x965cca8 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x965cc90 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x965ca10 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0x965ccdc <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x965cb80 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0x965e6a8 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x965e670 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x965e658 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x965def0 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0x965e758 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0x965e738 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0x965de00
    (CXXThisExpr 0x965e728 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x965e7b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x965e7c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0x965e020 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0x965e848 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0x965e828 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0x965de00
    (CXXThisExpr 0x965e818 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x965e8a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0x965eb70 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0x965eb18 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0x965eaa8 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0x965e8f0 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0x965e8e0 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0x965e8c0 <col:7> '_Bool' lvalue ->_M_failed 0x965de40
            (CXXThisExpr 0x965e8b0 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0x965ea80 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x965e930 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0x965e9e8 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x965e998 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0x965e978 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0x965de00
              (CXXThisExpr 0x965e968 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x965e9cc <col:42> '_CharT' lvalue ParmVar 0x965e120 '__c' '_CharT'))
        (CallExpr 0x965ea60 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x965ea28 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0x965eb00 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0x965ead0 <col:4> '_Bool' lvalue ->_M_failed 0x965de40
        (CXXThisExpr 0x965eac0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x965eaf0 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x965eb60 <line:244:2, col:10>
    (UnaryOperator 0x965eb48 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x965eb38 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0x965ebc0 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0x965ebb0 <col:9, col:17>
    (UnaryOperator 0x965eb98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x965eb88 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0x965ec10 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0x965ec00 <col:9, col:17>
    (UnaryOperator 0x965ebe8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x965ebd8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x965ec60 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0x965ec50 <col:9, col:17>
    (UnaryOperator 0x965ec38 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x965ec28 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0x965ecd8 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0x965ecc8 <col:9, col:16>
    (MemberExpr 0x965eca8 <col:16> 'const _Bool' lvalue ->_M_failed 0x965de40
      (CXXThisExpr 0x965ec98 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0x965f070 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0x965f018 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0x965efa8 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0x965ed98 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0x965ed88 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x965ecec <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x965edc0 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0x965ed48 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x965ed38 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0x965ed18 <col:24> '_Bool' lvalue ->_M_failed 0x965de40
                (CXXThisExpr 0x965ed08 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0x965edd0 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x965ed60 <col:35> '_Bool' true)))
      (CallExpr 0x965ef80 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0x965eddc <line:271:9> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0x965ef48 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x965eee8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x965cc60 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830)
          (CallExpr 0x965eea8 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x965ee40 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x965ee08 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x965edf8 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x965ee74 <col:47> 'const _CharT *' lvalue ParmVar 0x965e510 '__ws' 'const _CharT *')
            (DeclRefExpr 0x965ee8c <col:53> 'streamsize':'int' lvalue ParmVar 0x965e550 '__len' 'streamsize':'int'))
          (DeclRefExpr 0x965eecc <col:63> 'streamsize':'int' lvalue ParmVar 0x965e550 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0x965ef70 <line:272:5> '_Bool' false)))
    (BinaryOperator 0x965f000 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0x965efd0 <col:4> '_Bool' lvalue ->_M_failed 0x965de40
        (CXXThisExpr 0x965efc0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x965eff0 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x965f060 <line:274:2, col:10>
    (UnaryOperator 0x965f048 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x965f038 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9660730 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0x96606e8 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0x9660470 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0x96603f0 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0x9660350 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9660334 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x965feb0 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0x96603d8 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0x96603a0 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0x9660384 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9660040 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0x9660458 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9660420 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0x9660408 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x96601d0 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x96606c8 <line:287:2, line:292:2>
      (DeclStmt 0x96604c8 <line:288:4, col:16>
        0x9660490 "bool __ineof")
      (CallExpr 0x96605c8 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x96604d8 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9634100)
        (CXXDependentScopeMemberExpr 0x9660528 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x966050c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x965feb0 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0x9660578 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0x966055c <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x96601d0 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0x96605ac <col:61> '_Bool' lvalue Var 0x9660490 '__ineof' '_Bool'))
      (IfStmt 0x96606a8 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0x9660618 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9660608 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x96605f0 <col:9> '_Bool' lvalue Var 0x9660490 '__ineof' '_Bool')))
        (BinaryOperator 0x9660690 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9660648 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x966062c <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x96601d0 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0x9660680 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9660720 <line:293:7, col:14>
    (DeclRefExpr 0x9660704 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x96601d0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x96610f8 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0x9660fa0 <line:302:7, col:48>
    0x9660ed0 "const streamsize __num =
      (CXXOperatorCallExpr 0x9660f78 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9660f38 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x9660f04 <col:32> '_CharT *' lvalue ParmVar 0x9660bd0 '__last' '_CharT *')
        (DeclRefExpr 0x9660f1c <col:41> '_CharT *' lvalue ParmVar 0x9660b80 '__first' '_CharT *'))")
  (IfStmt 0x96610b0 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0x9660ff0 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9660fe0 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9660fb0 <col:11> 'const streamsize':'const int' lvalue Var 0x9660ed0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9660fc8 <col:19> 'int' 0))
    (CallExpr 0x9661088 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9661020 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9661008 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9660d60 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9661054 <col:18> '_CharT *' lvalue ParmVar 0x9660b80 '__first' '_CharT *')
      (DeclRefExpr 0x966106c <col:27> 'const streamsize':'const int' lvalue Var 0x9660ed0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x96610e8 <line:305:7, col:14>
    (DeclRefExpr 0x96610cc <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9660d60 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9661ab8 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0x9661960 <line:314:7, col:48>
    0x9661890 "const streamsize __num =
      (CXXOperatorCallExpr 0x9661938 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x96618f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x96618c4 <col:32> 'const _CharT *' lvalue ParmVar 0x9661590 '__last' 'const _CharT *')
        (DeclRefExpr 0x96618dc <col:41> 'const _CharT *' lvalue ParmVar 0x9661540 '__first' 'const _CharT *'))")
  (IfStmt 0x9661a70 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0x96619b0 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x96619a0 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9661970 <col:11> 'const streamsize':'const int' lvalue Var 0x9661890 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9661988 <col:19> 'int' 0))
    (CallExpr 0x9661a48 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96619e0 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x96619c8 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9661720 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9661a14 <col:18> 'const _CharT *' lvalue ParmVar 0x9661540 '__first' 'const _CharT *')
      (DeclRefExpr 0x9661a2c <col:27> 'const streamsize':'const int' lvalue Var 0x9661890 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9661aa8 <line:317:7, col:14>
    (DeclRefExpr 0x9661a8c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9661720 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0x9663110 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0x96623a0 <line:326:7, col:78>
    0x9662370 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9662490 <line:327:7, col:71>
    0x9662460 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9662550 <line:328:7, col:74>
    0x9662520 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9662640 <line:329:7, col:68>
    0x9662610 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x96630c8 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0x9662708 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9662668 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9662650 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9661f00 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x96626f0 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x96626b8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x966269c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9662090 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x96630a8 <line:332:2, line:351:2>
      (DeclStmt 0x9662808 <line:333:4, col:42>
        0x9662780 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x96627d0 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x96627b4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9661f00 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x96628e8 <line:334:4, col:32>
        0x9662840 "int_type __c =
          (CallExpr 0x96628c8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9662890 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9662874 <col:19> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9663090 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0x96629e8 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0x96629c0 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9662918 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0x966293c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9662840 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x96629a0 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9662978 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0x9663078 <line:336:6, line:350:6>
          (DeclStmt 0x9662b90 <line:337:8, col:59>
            0x9662a10 "const streamsize __n =
              (CXXOperatorCallExpr 0x9662b68 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9662b28 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (CallExpr 0x9662a98 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9662a60 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0x9662a44 <col:31> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *')))
                (CallExpr 0x9662b08 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9662ad0 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9662ab4 <col:47> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9663058 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0x9662be0 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9662bd0 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9662ba0 <col:12> 'const streamsize':'const int' lvalue Var 0x9662a10 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0x9662bb8 <col:18> 'int' 1))
            (CompoundStmt 0x9662e88 <line:339:3, line:344:3>
              (CallExpr 0x9662ce8 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9662c20 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x9662c44 <col:23> '_CharT *' lvalue ParmVar 0x96620e0 '__result' '_CharT *')
                (CallExpr 0x9662cb0 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9662c78 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9662c5c <col:33> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0x9662ccc <col:47> 'const streamsize':'const int' lvalue Var 0x9662a10 '__n' 'const streamsize':'const int'))
              (CallExpr 0x9662d78 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9662d28 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9662d10 <col:5> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9662d5c <col:24> 'const streamsize':'const int' lvalue Var 0x9662a10 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0x9662dc8 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9662d98 <col:5> '_CharT *' lvalue ParmVar 0x96620e0 '__result' '_CharT *')
                (DeclRefExpr 0x9662db0 <col:17> 'const streamsize':'const int' lvalue Var 0x9662a10 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0x9662e70 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0x9662de8 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9662840 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9662e50 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9662e18 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9662e00 <col:11> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0x9663040 <line:346:3, line:349:3>
              (BinaryOperator 0x9662f88 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0x9662ef0 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9662ed8 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9662ea8 <col:6> '_CharT *' lvalue ParmVar 0x96620e0 '__result' '_CharT *')))
                (CallExpr 0x9662f68 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9662f28 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9662f4c <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0x9662840 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0x9663028 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9662fa0 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9662840 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9663008 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9662fd0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9662fb8 <col:11> 'streambuf_type *' lvalue Var 0x9662780 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0x9663100 <line:352:7, col:14>
    (DeclRefExpr 0x96630e4 <col:14> '_CharT *' lvalue ParmVar 0x96620e0 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0x9664ca0 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0x9663af0 <line:361:7, col:78>
    0x9663ac0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9663be0 <line:362:7, col:71>
    0x9663bb0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9663ca0 <line:363:7, col:74>
    0x9663c70 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9663d90 <line:364:7, col:68>
    0x9663d60 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9664c58 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0x9663e58 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9663db8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9663da0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9663630 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9663e40 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9663e08 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9663dec <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x96637c0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9664c30 <line:367:2, line:392:2>
      (DeclStmt 0x9663f48 <line:368:4, col:59>
        0x9663e90 "const int_type __ival =
          (CallExpr 0x9663f28 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9663ee8 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0x9663f0c <col:53> 'const _CharT' lvalue ParmVar 0x9663830 '__val' 'const _CharT &'))")
      (DeclStmt 0x9664048 <line:369:4, col:42>
        0x9663fc0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9664010 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9663ff4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9663630 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9664108 <line:370:4, col:32>
        0x9664060 "int_type __c =
          (CallExpr 0x96640e8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96640b0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9664094 <col:19> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x96649f0 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0x96642d8 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0x9664208 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0x96641e0 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9664138 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x966415c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9664060 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x96641c0 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9664198 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0x96642c0 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0x9664298 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9664240 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9664264 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0x9664060 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0x966427c <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9663e90 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0x96649d8 <line:373:6, line:386:6>
          (DeclStmt 0x9664480 <line:374:8, col:53>
            0x9664300 "streamsize __n =
              (CXXOperatorCallExpr 0x9664458 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9664418 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (CallExpr 0x9664388 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9664350 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9664334 <col:25> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *')))
                (CallExpr 0x96643f8 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x96643c0 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0x96643a4 <col:41> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x96649b8 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0x96644d0 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x96644c0 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9664490 <col:12> 'streamsize':'int' lvalue Var 0x9664300 '__n' 'streamsize':'int'))
              (IntegerLiteral 0x96644a8 <col:18> 'int' 1))
            (CompoundStmt 0x96648f8 <line:376:3, line:383:3>
              (DeclStmt 0x9664668 <line:377:5, line:378:19>
                0x9664520 "const _CharT *__p =
                  (CallExpr 0x9664640 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9664578 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0x96645f0 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x96645b8 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0x966459c <col:43> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0x966460c <line:378:8> 'streamsize':'int' lvalue Var 0x9664300 '__n' 'streamsize':'int')
                    (DeclRefExpr 0x9664624 <col:13> 'const _CharT' lvalue ParmVar 0x9663830 '__val' 'const _CharT &'))")
              (IfStmt 0x96647b0 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0x9664678 <line:379:9> 'const _CharT *' lvalue Var 0x9664520 '__p' 'const _CharT *')
                (BinaryOperator 0x9664798 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0x9664690 <col:7> 'streamsize':'int' lvalue Var 0x9664300 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0x9664770 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0x9664730 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                    (DeclRefExpr 0x96646a8 <col:13> 'const _CharT *' lvalue Var 0x9664520 '__p' 'const _CharT *')
                    (CallExpr 0x9664710 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x96646d8 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0x96646c0 <col:19> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0x9664838 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x96647e8 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x96647cc <col:5> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x966481c <col:24> 'streamsize':'int' lvalue Var 0x9664300 '__n' 'streamsize':'int'))
              (BinaryOperator 0x96648e0 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9664858 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9664060 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x96648c0 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9664888 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9664870 <col:11> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0x96649a0 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9664918 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0x9664060 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9664980 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9664948 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9664930 <col:9> 'streambuf_type *' lvalue Var 0x9663fc0 '__sb' 'streambuf_type *')))))))
      (IfStmt 0x9664c10 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0x9664af8 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0x9664ad0 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9664a28 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9664a4c <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0x9664060 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9664ab0 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9664a88 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0x9664b78 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9664b28 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9664b0c <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9663630 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0x9664b5c <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0x9664060 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0x9664bf8 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9664ba8 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9664b90 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9663630 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0x9664be0 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9664c90 <line:393:7, col:14>
    (DeclRefExpr 0x9664c74 <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9663630 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0x9667058 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0x9667008 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9666fa0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9666f84 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9666d60 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0x9666fd4 <col:18> 'const _CharT *' lvalue ParmVar 0x9666dd0 '__ws' 'const _CharT *')
    (DeclRefExpr 0x9666fec <col:24> 'int' lvalue ParmVar 0x9666e20 '__len' 'int'))
  (ReturnStmt 0x9667048 <line:116:7, col:14>
    (DeclRefExpr 0x966702c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9666d60 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0x9667580 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0x9667530 <line:125:7, line:126:17>
    (DeclStmt 0x96673b0 <line:125:12, col:23>
      0x9667360 "int __j =
        (IntegerLiteral 0x9667398 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0x9667410 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0x96673f0 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0x96673c0 <col:25> 'int' lvalue Var 0x9667360 '__j' 'int'))
      (ImplicitCastExpr 0x9667400 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0x96673d8 <col:31> 'int' lvalue ParmVar 0x96671f0 '__len' 'int')))
    (BinaryOperator 0x9667488 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0x9667440 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0x9667428 <col:38> 'int' lvalue Var 0x9667360 '__j' 'int'))
      (UnaryOperator 0x9667470 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9667454 <col:47> '_OutIter' lvalue ParmVar 0x9667130 '__s' '_OutIter')))
    (BinaryOperator 0x9667518 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0x96674b8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x96674a0 <col:3> '_OutIter' lvalue ParmVar 0x9667130 '__s' '_OutIter'))
      (ArraySubscriptExpr 0x9667500 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0x96674cc <col:9> 'const _CharT *' lvalue ParmVar 0x96671a0 '__ws' 'const _CharT *')
        (DeclRefExpr 0x96674e4 <col:14> 'int' lvalue Var 0x9667360 '__j' 'int'))))
  (ReturnStmt 0x9667570 <line:127:7, col:14>
    (DeclRefExpr 0x9667554 <col:14> '_OutIter' lvalue ParmVar 0x9667130 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0x966bc38 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0x966bc28 <col:9, col:36>
    (CallExpr 0x966bc00 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966bb98 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966bb88 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966bbcc <col:28> 'mask':'unsigned short' lvalue ParmVar 0x9667910 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x966bbe4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9667970 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0x966bd18 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0x966bd08 <col:9, col:45>
    (CallExpr 0x966bce0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966bc60 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966bc50 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966bc94 <col:28> 'const char_type *' lvalue ParmVar 0x9667ab0 '__lo' 'const char_type *')
      (DeclRefExpr 0x966bcac <col:34> 'const char_type *' lvalue ParmVar 0x9667b00 '__hi' 'const char_type *')
      (DeclRefExpr 0x966bcc4 <col:40> 'mask *' lvalue ParmVar 0x9667b70 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x966bdf8 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0x966bde8 <col:9, col:48>
    (CallExpr 0x966bdc0 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966bd40 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966bd30 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966bd74 <col:33> 'mask':'unsigned short' lvalue ParmVar 0x9667cb0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x966bd8c <col:38> 'const char_type *' lvalue ParmVar 0x9667d00 '__lo' 'const char_type *')
      (DeclRefExpr 0x966bda4 <col:44> 'const char_type *' lvalue ParmVar 0x9667d50 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x966bed8 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0x966bec8 <col:9, col:49>
    (CallExpr 0x966bea0 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966be20 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966be10 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966be54 <col:34> 'mask':'unsigned short' lvalue ParmVar 0x9669d50 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x966be6c <col:39> 'const char_type *' lvalue ParmVar 0x9669da0 '__lo' 'const char_type *')
      (DeclRefExpr 0x966be84 <col:45> 'const char_type *' lvalue ParmVar 0x9669df0 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0x966bf80 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0x966bf70 <col:9, col:36>
    (CallExpr 0x966bf50 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966bf00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966bef0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966bf34 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9669ed0 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x966c048 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0x966c038 <col:9, col:43>
    (CallExpr 0x966c010 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966bfa8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966bf98 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966bfdc <col:33> 'char_type *' lvalue ParmVar 0x966a010 '__lo' 'char_type *')
      (DeclRefExpr 0x966bff4 <col:39> 'const char_type *' lvalue ParmVar 0x966a060 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0x966c0f0 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0x966c0e0 <col:9, col:36>
    (CallExpr 0x966c0c0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966c070 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966c060 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966c0a4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x966a170 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x966c1b8 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0x966c1a8 <col:9, col:43>
    (CallExpr 0x966c180 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966c118 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966c108 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966c14c <col:33> 'char_type *' lvalue ParmVar 0x966a240 '__lo' 'char_type *')
      (DeclRefExpr 0x966c164 <col:39> 'const char_type *' lvalue ParmVar 0x966a290 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0x966c260 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0x966c250 <col:9, col:34>
    (CallExpr 0x966c230 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966c1e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966c1d0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966c214 <col:31> 'char' lvalue ParmVar 0x966a360 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x966c340 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0x966c330 <col:9, col:47>
    (CallExpr 0x966c308 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966c288 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966c278 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966c2bc <col:31> 'const char *' lvalue ParmVar 0x966a480 '__lo' 'const char *')
      (DeclRefExpr 0x966c2d4 <col:37> 'const char *' lvalue ParmVar 0x966a4d0 '__hi' 'const char *')
      (DeclRefExpr 0x966c2ec <col:43> 'char_type *' lvalue ParmVar 0x966a520 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x966c408 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0x966c3f8 <col:9, col:45>
    (CallExpr 0x966c3d0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966c368 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966c358 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966c39c <col:32> 'char_type':'_CharT' lvalue ParmVar 0x966a660 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x966c3b4 <col:37> 'char' lvalue ParmVar 0x966a6a0 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x966c508 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0x966c4f8 <col:9, col:58>
    (CallExpr 0x966c4c8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x966c430 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x966c420 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x966c464 <col:32> 'const char_type *' lvalue ParmVar 0x966a7c0 '__lo' 'const char_type *')
      (DeclRefExpr 0x966c47c <col:38> 'const char_type *' lvalue ParmVar 0x966a810 '__hi' 'const char_type *')
      (DeclRefExpr 0x966c494 <col:44> 'char' lvalue ParmVar 0x966a850 '__dfault' 'char')
      (DeclRefExpr 0x966c4ac <col:54> 'char *' lvalue ParmVar 0x966a8a0 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0x966bb60 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x966bb48 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x966c51c </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0x966aa20 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x966c5c0 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0x966c5d0 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x966e9e0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x966e9c8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x966e938 <col:45> 'int' 1)
    (ImplicitCastExpr 0x966e9b8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x966e9a0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x966e990 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x966e968 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x966e950 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9670e68 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9670e50 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9670e78 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9670ea0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9670e88 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9670ec8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9670eb0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9670ed8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9670f00 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9670ee8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9670ff0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9670fe0 <col:9, col:36>
    (CXXMemberCallExpr 0x9670fb0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9670f90 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9670220
        (CXXThisExpr 0x9670f28 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9670fd0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9670f78 <col:33> 'char_type':'char' lvalue ParmVar 0x966f490 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9671100 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x96710f0 <col:9, col:43>
    (CXXMemberCallExpr 0x96710a8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9671088 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9670350
        (CXXThisExpr 0x9671008 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96710d0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671058 <col:33> 'char_type *' lvalue ParmVar 0x966f5d0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x96710e0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671070 <col:39> 'const char_type *' lvalue ParmVar 0x966f640 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x96711e0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x96711d0 <col:9, col:36>
    (CXXMemberCallExpr 0x96711a0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9671180 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9670410
        (CXXThisExpr 0x9671118 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96711c0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9671168 <col:33> 'char_type':'char' lvalue ParmVar 0x966f750 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x96712f0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x96712e0 <col:9, col:43>
    (CXXMemberCallExpr 0x9671298 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9671278 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9670540
        (CXXThisExpr 0x96711f8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96712c0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671248 <col:33> 'char_type *' lvalue ParmVar 0x966f820 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x96712d0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671260 <col:39> 'const char_type *' lvalue ParmVar 0x966f870 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9671588 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9671450 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9671368 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9671358 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9671334 <col:6> 'char' lvalue ->_M_widen_ok 0x966e5d0
          (CXXThisExpr 0x9671308 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9671440 <line:868:4, col:51>
      (ImplicitCastExpr 0x9671430 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671418 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9671408 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9671388 <col:11> 'char [256]' lvalue ->_M_widen 0x966e6f0
              (CXXThisExpr 0x9671378 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x96713f0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x96713e0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x96713d0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x96713a8 <col:47> 'char' lvalue ParmVar 0x966f940 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x96714a0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9671480 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9670bb0
      (CXXThisExpr 0x9671470 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9671578 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9671548 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9671528 <col:9, col:15> '<bound member function type>' ->do_widen 0x9670600
        (CXXThisExpr 0x96714c0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9671568 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9671510 <col:24> 'char' lvalue ParmVar 0x966f940 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x96719c8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x96717b0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9671610 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9671600 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96715f0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x96715b8 <col:6> 'char' lvalue ->_M_widen_ok 0x966e5d0
            (CXXThisExpr 0x96715a8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x96715d8 <col:21> 'int' 1))
    (CompoundStmt 0x9671798 <line:895:4, line:898:4>
      (CallExpr 0x96716e8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x96716d8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9671628 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9671720 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9671710 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9671640 <col:23> 'char_type *' lvalue ParmVar 0x966fae0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9671740 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9671730 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9671658 <col:29> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9671750 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x96716c0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x96716a0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9671670 <col:35> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))
            (ImplicitCastExpr 0x96716b0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9671688 <col:42> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *')))))
      (ReturnStmt 0x9671788 <line:897:6, col:13>
        (ImplicitCastExpr 0x9671778 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967175c <col:13> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9671888 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9671820 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9671810 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9671800 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x96717e0 <col:7> 'char' lvalue ->_M_widen_ok 0x966e5d0
            (CXXThisExpr 0x96717d0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9671868 <line:900:4, col:18> 'void'
      (MemberExpr 0x9671848 <col:4> '<bound member function type>' ->_M_widen_init 0x9670bb0
        (CXXThisExpr 0x9671838 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x96719b8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9671960 <col:9, col:40> 'const char *'
      (MemberExpr 0x9671940 <col:9, col:15> '<bound member function type>' ->do_widen 0x9670780
        (CXXThisExpr 0x96718a8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9671988 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x96718f8 <col:24> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9671998 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9671910 <col:30> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))
      (ImplicitCastExpr 0x96719a8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671928 <col:36> 'char_type *' lvalue ParmVar 0x966fae0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9674700 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9671b98 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9671ab0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9671aa0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671a88 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9671a78 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x96719f8 <col:6> 'char [256]' lvalue ->_M_narrow 0x966e7e0
              (CXXThisExpr 0x96719e8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9671a60 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9671a50 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9671a40 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9671a18 <col:43> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9671b88 <line:926:4, col:52>
      (ImplicitCastExpr 0x9671b78 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671b60 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9671b50 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9671ad0 <col:11> 'char [256]' lvalue ->_M_narrow 0x966e7e0
              (CXXThisExpr 0x9671ac0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9671b38 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9671b28 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9671b18 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9671af0 <col:48> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x96744e8 <line:927:2, col:43>
    0x9671bc0 "const char __t =
      (CXXMemberCallExpr 0x96744a0 <col:19, col:42> 'char'
        (MemberExpr 0x9674480 <col:19> '<bound member function type>' ->do_narrow 0x96708a0
          (CXXThisExpr 0x9671c78 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x96744c8 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9671c48 <col:29> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x96744d8 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9671c60 <col:34> 'char' lvalue ParmVar 0x966fc60 '__dfault' 'char')))")
  (IfStmt 0x96746a8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9674568 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9674538 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9674528 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x96744f8 <col:6> 'const char' lvalue Var 0x9671bc0 '__t' 'const char')))
      (ImplicitCastExpr 0x9674558 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9674548 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9674510 <col:13> 'char' lvalue ParmVar 0x966fc60 '__dfault' 'char'))))
    (BinaryOperator 0x9674690 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9674650 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9674640 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x96745c0 <col:4> 'char [256]' lvalue ->_M_narrow 0x966e7e0
            (CXXThisExpr 0x96745b0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9674628 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9674618 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9674608 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x96745e0 <col:41> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9674680 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9674664 <col:49> 'const char' lvalue Var 0x9671bc0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x96746f0 <line:930:2, col:9>
    (ImplicitCastExpr 0x96746e0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x96746c4 <col:9> 'const char' lvalue Var 0x9671bc0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9674c00 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x96749b8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9674820 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x96747d8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x96747c8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9674720 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9674800 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x96747a0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9674790 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9674780 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9674748 <col:23> 'char' lvalue ->_M_narrow_ok 0x966e820
                  (CXXThisExpr 0x9674738 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9674768 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9674810 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x96747b8 <col:42> '_Bool' true))))
    (CompoundStmt 0x96749a0 <line:960:4, line:963:4>
      (CallExpr 0x96748f0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x96748e0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x967482c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9674928 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9674918 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9674844 <col:23> 'char *' lvalue ParmVar 0x966fe60 '__to' 'char *')))
        (ImplicitCastExpr 0x9674948 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9674938 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x967485c <col:29> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9674958 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x96748c8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x96748a8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9674874 <col:35> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x96748b8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x967488c <col:42> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9674990 <line:962:6, col:13>
        (ImplicitCastExpr 0x9674980 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674964 <col:13> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9674a90 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9674a28 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9674a18 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9674a08 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x96749e8 <col:7> 'char' lvalue ->_M_narrow_ok 0x966e820
            (CXXThisExpr 0x96749d8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9674a70 <line:965:4, col:19> 'void'
      (MemberExpr 0x9674a50 <col:4> '<bound member function type>' ->_M_narrow_init 0x9670b30
        (CXXThisExpr 0x9674a40 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9674bf0 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9674b80 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9674b60 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9670a60
        (CXXThisExpr 0x9674ab0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9674bb0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674b00 <col:25> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9674bc0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674b18 <col:31> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9674bd0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9674b30 <col:37> 'char' lvalue ParmVar 0x966fe10 '__dfault' 'char'))
      (ImplicitCastExpr 0x9674be0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9674b48 <col:47> 'char *' lvalue ParmVar 0x966fe60 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9674c70 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9674c60 <col:9, col:16>
    (ImplicitCastExpr 0x9674c50 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9674c30 <col:16> 'const mask *const' lvalue ->_M_table 0x966e590
        (CXXThisExpr 0x9674c20 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9674cc0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9674cb0 <col:9, col:16>
    (ImplicitCastExpr 0x9674ca0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9674c84 <col:16> 'char' lvalue ParmVar 0x96705b0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9674e48 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9674d98 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9674d88 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9674cd4 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9674dd0 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9674dc0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674cec <col:19> 'char_type *' lvalue ParmVar 0x9670720 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9674df0 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9674de0 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9674d04 <col:27> 'const char *' lvalue ParmVar 0x9670680 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9674e00 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9674d70 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9674d50 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9674d1c <col:33> 'const char *' lvalue ParmVar 0x96706d0 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9674d60 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9674d34 <col:40> 'const char *' lvalue ParmVar 0x9670680 '__lo' 'const char *')))))
  (ReturnStmt 0x9674e38 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9674e28 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9674e0c <col:9> 'const char *' lvalue ParmVar 0x96706d0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9674e98 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9674e88 <col:9, col:16>
    (ImplicitCastExpr 0x9674e78 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9674e60 <col:16> 'char_type':'char' lvalue ParmVar 0x9670800 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9675020 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9674f70 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9674f60 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9674eac <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9674fa8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9674f98 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9674ec4 <col:19> 'char *' lvalue ParmVar 0x9670a00 '__dest' 'char *')))
    (ImplicitCastExpr 0x9674fc8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9674fb8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674edc <col:27> 'const char_type *' lvalue ParmVar 0x9670920 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9674fd8 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9674f48 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9674f28 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674ef4 <col:33> 'const char_type *' lvalue ParmVar 0x9670970 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9674f38 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674f0c <col:40> 'const char_type *' lvalue ParmVar 0x9670920 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9675010 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9675000 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9674fe4 <col:9> 'const char_type *' lvalue ParmVar 0x9670970 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x967af38 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967af20 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x967af60 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967af48 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0x966ddb8 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x966dda0 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0x966de50 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0x966ca80 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x966deb0 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0x966e0f8 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x966e9e0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x966e9c8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x966e938 <col:45> 'int' 1)
    (ImplicitCastExpr 0x966e9b8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x966e9a0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x966e990 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x966e968 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x966e950 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9670e68 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9670e50 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9670e78 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9670ea0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9670e88 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9670ec8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9670eb0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9670ed8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9670f00 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9670ee8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9670ff0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9670fe0 <col:9, col:36>
    (CXXMemberCallExpr 0x9670fb0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9670f90 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9670220
        (CXXThisExpr 0x9670f28 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9670fd0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9670f78 <col:33> 'char_type':'char' lvalue ParmVar 0x966f490 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9671100 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x96710f0 <col:9, col:43>
    (CXXMemberCallExpr 0x96710a8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9671088 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9670350
        (CXXThisExpr 0x9671008 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96710d0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671058 <col:33> 'char_type *' lvalue ParmVar 0x966f5d0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x96710e0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671070 <col:39> 'const char_type *' lvalue ParmVar 0x966f640 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x96711e0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x96711d0 <col:9, col:36>
    (CXXMemberCallExpr 0x96711a0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9671180 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9670410
        (CXXThisExpr 0x9671118 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96711c0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9671168 <col:33> 'char_type':'char' lvalue ParmVar 0x966f750 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x96712f0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x96712e0 <col:9, col:43>
    (CXXMemberCallExpr 0x9671298 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9671278 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9670540
        (CXXThisExpr 0x96711f8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x96712c0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671248 <col:33> 'char_type *' lvalue ParmVar 0x966f820 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x96712d0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671260 <col:39> 'const char_type *' lvalue ParmVar 0x966f870 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9671588 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9671450 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9671368 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9671358 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9671334 <col:6> 'char' lvalue ->_M_widen_ok 0x966e5d0
          (CXXThisExpr 0x9671308 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9671440 <line:868:4, col:51>
      (ImplicitCastExpr 0x9671430 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671418 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9671408 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9671388 <col:11> 'char [256]' lvalue ->_M_widen 0x966e6f0
              (CXXThisExpr 0x9671378 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x96713f0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x96713e0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x96713d0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x96713a8 <col:47> 'char' lvalue ParmVar 0x966f940 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x96714a0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9671480 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9670bb0
      (CXXThisExpr 0x9671470 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9671578 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9671548 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9671528 <col:9, col:15> '<bound member function type>' ->do_widen 0x9670600
        (CXXThisExpr 0x96714c0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9671568 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9671510 <col:24> 'char' lvalue ParmVar 0x966f940 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x96719c8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x96717b0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9671610 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9671600 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96715f0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x96715b8 <col:6> 'char' lvalue ->_M_widen_ok 0x966e5d0
            (CXXThisExpr 0x96715a8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x96715d8 <col:21> 'int' 1))
    (CompoundStmt 0x9671798 <line:895:4, line:898:4>
      (CallExpr 0x96716e8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x96716d8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9671628 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9671720 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9671710 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9671640 <col:23> 'char_type *' lvalue ParmVar 0x966fae0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9671740 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9671730 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9671658 <col:29> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9671750 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x96716c0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x96716a0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9671670 <col:35> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))
            (ImplicitCastExpr 0x96716b0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9671688 <col:42> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *')))))
      (ReturnStmt 0x9671788 <line:897:6, col:13>
        (ImplicitCastExpr 0x9671778 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967175c <col:13> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9671888 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9671820 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9671810 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9671800 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x96717e0 <col:7> 'char' lvalue ->_M_widen_ok 0x966e5d0
            (CXXThisExpr 0x96717d0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9671868 <line:900:4, col:18> 'void'
      (MemberExpr 0x9671848 <col:4> '<bound member function type>' ->_M_widen_init 0x9670bb0
        (CXXThisExpr 0x9671838 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x96719b8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9671960 <col:9, col:40> 'const char *'
      (MemberExpr 0x9671940 <col:9, col:15> '<bound member function type>' ->do_widen 0x9670780
        (CXXThisExpr 0x96718a8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9671988 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x96718f8 <col:24> 'const char *' lvalue ParmVar 0x966fa40 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9671998 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9671910 <col:30> 'const char *' lvalue ParmVar 0x966fa90 '__hi' 'const char *'))
      (ImplicitCastExpr 0x96719a8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9671928 <col:36> 'char_type *' lvalue ParmVar 0x966fae0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9674700 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9671b98 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9671ab0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9671aa0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671a88 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9671a78 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x96719f8 <col:6> 'char [256]' lvalue ->_M_narrow 0x966e7e0
              (CXXThisExpr 0x96719e8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9671a60 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9671a50 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9671a40 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9671a18 <col:43> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9671b88 <line:926:4, col:52>
      (ImplicitCastExpr 0x9671b78 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9671b60 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9671b50 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9671ad0 <col:11> 'char [256]' lvalue ->_M_narrow 0x966e7e0
              (CXXThisExpr 0x9671ac0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9671b38 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9671b28 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9671b18 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9671af0 <col:48> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x96744e8 <line:927:2, col:43>
    0x9671bc0 "const char __t =
      (CXXMemberCallExpr 0x96744a0 <col:19, col:42> 'char'
        (MemberExpr 0x9674480 <col:19> '<bound member function type>' ->do_narrow 0x96708a0
          (CXXThisExpr 0x9671c78 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x96744c8 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9671c48 <col:29> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x96744d8 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9671c60 <col:34> 'char' lvalue ParmVar 0x966fc60 '__dfault' 'char')))")
  (IfStmt 0x96746a8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9674568 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9674538 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9674528 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x96744f8 <col:6> 'const char' lvalue Var 0x9671bc0 '__t' 'const char')))
      (ImplicitCastExpr 0x9674558 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9674548 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9674510 <col:13> 'char' lvalue ParmVar 0x966fc60 '__dfault' 'char'))))
    (BinaryOperator 0x9674690 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9674650 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9674640 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x96745c0 <col:4> 'char [256]' lvalue ->_M_narrow 0x966e7e0
            (CXXThisExpr 0x96745b0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9674628 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9674618 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9674608 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x96745e0 <col:41> 'char_type':'char' lvalue ParmVar 0x966fc20 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9674680 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9674664 <col:49> 'const char' lvalue Var 0x9671bc0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x96746f0 <line:930:2, col:9>
    (ImplicitCastExpr 0x96746e0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x96746c4 <col:9> 'const char' lvalue Var 0x9671bc0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9674c00 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x96749b8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9674820 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x96747d8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x96747c8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9674720 <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9674800 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x96747a0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9674790 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9674780 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9674748 <col:23> 'char' lvalue ->_M_narrow_ok 0x966e820
                  (CXXThisExpr 0x9674738 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9674768 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9674810 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x96747b8 <col:42> '_Bool' true))))
    (CompoundStmt 0x96749a0 <line:960:4, line:963:4>
      (CallExpr 0x96748f0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x96748e0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x967482c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9674928 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9674918 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9674844 <col:23> 'char *' lvalue ParmVar 0x966fe60 '__to' 'char *')))
        (ImplicitCastExpr 0x9674948 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9674938 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x967485c <col:29> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9674958 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x96748c8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x96748a8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9674874 <col:35> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x96748b8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x967488c <col:42> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9674990 <line:962:6, col:13>
        (ImplicitCastExpr 0x9674980 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674964 <col:13> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9674a90 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9674a28 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9674a18 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9674a08 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x96749e8 <col:7> 'char' lvalue ->_M_narrow_ok 0x966e820
            (CXXThisExpr 0x96749d8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9674a70 <line:965:4, col:19> 'void'
      (MemberExpr 0x9674a50 <col:4> '<bound member function type>' ->_M_narrow_init 0x9670b30
        (CXXThisExpr 0x9674a40 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9674bf0 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9674b80 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9674b60 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9670a60
        (CXXThisExpr 0x9674ab0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9674bb0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674b00 <col:25> 'const char_type *' lvalue ParmVar 0x966fd80 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9674bc0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674b18 <col:31> 'const char_type *' lvalue ParmVar 0x966fdd0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9674bd0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9674b30 <col:37> 'char' lvalue ParmVar 0x966fe10 '__dfault' 'char'))
      (ImplicitCastExpr 0x9674be0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9674b48 <col:47> 'char *' lvalue ParmVar 0x966fe60 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9674c70 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9674c60 <col:9, col:16>
    (ImplicitCastExpr 0x9674c50 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9674c30 <col:16> 'const mask *const' lvalue ->_M_table 0x966e590
        (CXXThisExpr 0x9674c20 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9674cc0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9674cb0 <col:9, col:16>
    (ImplicitCastExpr 0x9674ca0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9674c84 <col:16> 'char' lvalue ParmVar 0x96705b0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9674e48 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9674d98 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9674d88 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9674cd4 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9674dd0 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9674dc0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674cec <col:19> 'char_type *' lvalue ParmVar 0x9670720 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9674df0 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9674de0 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9674d04 <col:27> 'const char *' lvalue ParmVar 0x9670680 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9674e00 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9674d70 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9674d50 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9674d1c <col:33> 'const char *' lvalue ParmVar 0x96706d0 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9674d60 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9674d34 <col:40> 'const char *' lvalue ParmVar 0x9670680 '__lo' 'const char *')))))
  (ReturnStmt 0x9674e38 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9674e28 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9674e0c <col:9> 'const char *' lvalue ParmVar 0x96706d0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9674e98 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9674e88 <col:9, col:16>
    (ImplicitCastExpr 0x9674e78 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9674e60 <col:16> 'char_type':'char' lvalue ParmVar 0x9670800 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9675020 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9674f70 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9674f60 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9674eac <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x93e2ea0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9674fa8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9674f98 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9674ec4 <col:19> 'char *' lvalue ParmVar 0x9670a00 '__dest' 'char *')))
    (ImplicitCastExpr 0x9674fc8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9674fb8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9674edc <col:27> 'const char_type *' lvalue ParmVar 0x9670920 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9674fd8 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9674f48 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9674f28 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674ef4 <col:33> 'const char_type *' lvalue ParmVar 0x9670970 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9674f38 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9674f0c <col:40> 'const char_type *' lvalue ParmVar 0x9670920 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9675010 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9675000 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9674fe4 <col:9> 'const char_type *' lvalue ParmVar 0x9670970 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x967af38 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967af20 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x967af60 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967af48 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x967b570 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967b558 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0x967b580 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x967bba8 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967bb90 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x967c1c8 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967c1b0 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0x967cc28 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0x967cc18 <col:5, col:56>
    (ImplicitCastExpr 0x967cc08 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0x967cbf0 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0x967cbc0 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0x967cbb0 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0x967cb80 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0x967cb70 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0x967c450 <col:12> 'const mask *const' lvalue ->_M_table 0x966e590
                  (CXXThisExpr 0x967c440 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0x967cb58 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0x967cb48 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0x967cb38 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0x967cb10 <col:48> 'char' lvalue ParmVar 0x967c350 '__c' 'char')))))))
        (ImplicitCastExpr 0x967cbe0 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x967cbd0 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x967cb94 <col:56> 'mask':'unsigned short' lvalue ParmVar 0x967c310 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0x967d078 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0x967d028 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0x967ceb8 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0x967ce98 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x967ce64 <col:12> 'const char *' lvalue ParmVar 0x967ccc0 '__low' 'const char *'))
      (ImplicitCastExpr 0x967cea8 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x967ce7c <col:20> 'const char *' lvalue ParmVar 0x967cd10 '__high' 'const char *')))
    (BinaryOperator 0x967d010 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0x967cf00 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0x967cee8 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0x967ced0 <col:8> 'mask *' lvalue ParmVar 0x967cd60 '__vec' 'mask *')))
      (ImplicitCastExpr 0x967d000 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0x967cfe8 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0x967cfd8 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0x967cf28 <col:18> 'const mask *const' lvalue ->_M_table 0x966e590
              (CXXThisExpr 0x967cf18 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x967cfc0 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x967cfb0 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x967cfa0 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0x967cf78 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0x967cf60 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0x967cf48 <col:55> 'const char *' lvalue ParmVar 0x967ccc0 '__low' 'const char *'))))))))))
  (ReturnStmt 0x967d068 <line:52:5, col:12>
    (ImplicitCastExpr 0x967d058 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x967d03c <col:12> 'const char *' lvalue ParmVar 0x967cd10 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x967d538 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0x967d4e8 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0x967d4a0 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0x967d2f8 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x967d2d8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967d2a4 <col:12> 'const char *' lvalue ParmVar 0x967d150 '__low' 'const char *'))
        (ImplicitCastExpr 0x967d2e8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967d2bc <col:20> 'const char *' lvalue ParmVar 0x967d1a0 '__high' 'const char *')))
      (UnaryOperator 0x967d488 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0x967d478 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x967d460 <col:9, col:60> 'int'
            (BinaryOperator 0x967d448 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0x967d418 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x967d408 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0x967d3d8 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0x967d3c8 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0x967d320 <col:10> 'const mask *const' lvalue ->_M_table 0x966e590
                        (CXXThisExpr 0x967d310 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0x967d3b0 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0x967d3a0 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0x967d390 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0x967d368 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0x967d358 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0x967d340 <col:47> 'const char *' lvalue ParmVar 0x967d150 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0x967d438 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0x967d428 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0x967d3ec <col:57> 'mask':'unsigned short' lvalue ParmVar 0x967d100 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0x967d4d0 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x967d4b8 <col:9> 'const char *' lvalue ParmVar 0x967d150 '__low' 'const char *')))
  (ReturnStmt 0x967d528 <line:62:5, col:12>
    (ImplicitCastExpr 0x967d518 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x967d4fc <col:12> 'const char *' lvalue ParmVar 0x967d150 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x967da00 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0x967d9b0 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0x967d968 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0x967d7b8 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x967d798 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967d764 <col:12> 'const char *' lvalue ParmVar 0x967d610 '__low' 'const char *'))
        (ImplicitCastExpr 0x967d7a8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x967d77c <col:20> 'const char *' lvalue ParmVar 0x967d660 '__high' 'const char *')))
      (BinaryOperator 0x967d950 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0x967d920 <col:8, col:59> 'int'
          (BinaryOperator 0x967d908 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0x967d8d8 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0x967d8c8 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0x967d898 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0x967d888 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0x967d7e0 <col:9> 'const mask *const' lvalue ->_M_table 0x966e590
                      (CXXThisExpr 0x967d7d0 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0x967d870 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0x967d860 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0x967d850 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0x967d828 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0x967d818 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0x967d800 <col:46> 'const char *' lvalue ParmVar 0x967d610 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0x967d8f8 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0x967d8e8 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0x967d8ac <col:56> 'mask':'unsigned short' lvalue ParmVar 0x967d5c0 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0x967d938 <col:64> 'int' 0)))
    (UnaryOperator 0x967d998 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x967d980 <col:9> 'const char *' lvalue ParmVar 0x967d610 '__low' 'const char *')))
  (ReturnStmt 0x967d9f0 <line:72:5, col:12>
    (ImplicitCastExpr 0x967d9e0 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x967d9c4 <col:12> 'const char *' lvalue ParmVar 0x967d610 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0x967e068 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x967ddf8 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0x967ddc4 <col:26> 'int' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x967dde0 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0x967e078 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x967de44 <col:23> 'int' EnumConstant 0x967de10 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0x967e088 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x967dec8 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0x967de94 <col:27> 'int' EnumConstant 0x967de60 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x967deb0 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0x967e098 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x967df48 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0x967df14 <col:17> 'int' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x967df30 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0x967e0a8 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x967dfc8 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0x967df94 <col:17> 'int' EnumConstant 0x967de60 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x967dfb0 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0x967e0b8 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x967e014 <col:12> 'int' EnumConstant 0x967dee0 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0x967e458 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x967e338 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x967e304 <col:15> 'int' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x967e320 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0x967e468 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x967e3b8 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x967e384 <col:15> 'int' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x967e3a0 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0x967e478 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967e408 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0x967f268 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x967f250 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x967f274 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0x967ed80 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0x967f308 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0x967f368 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0x967f3c8 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0x967f418 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0x967f468 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0x967f4c8 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0x967f518 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0x967f580 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0x967f5e0 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0x967f638 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0x967f6b8 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0x967fa80 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0x967fa60 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0x967f948 <line:1618:11> '_Bool' lvalue ->_M_allocated 0x967ed40
      (CXXThisExpr 0x967f938 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0x967fa40 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0x967f998 <line:1620:4, col:14> 'void'
        (MemberExpr 0x967f978 <col:14> 'const char *' lvalue ->_M_grouping 0x967e930
          (CXXThisExpr 0x967f968 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x967f9e0 <line:1621:4, col:14> 'void'
        (MemberExpr 0x967f9c0 <col:14> 'const _CharT *' lvalue ->_M_truename 0x967ea10
          (CXXThisExpr 0x967f9b0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x967fa28 <line:1622:4, col:14> 'void'
        (MemberExpr 0x967fa08 <col:14> 'const _CharT *' lvalue ->_M_falsename 0x967ea90
          (CXXThisExpr 0x967f9f8 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0x9680c40 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9680c28 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9680cc4 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0x96801a0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9680d58 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0x9680e18 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0x9680df8 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9680dd8 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9680bc0
      (CXXThisExpr 0x9680dc8 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0x9680c68 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9680c50 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9680e2c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0x96802d0 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0x9680ec8 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0x9680290 '__cache' '__cache_type *')
) (CompoundStmt 0x9680f70 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0x9680f50 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9680f30 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9680bc0
      (CXXThisExpr 0x9680f20 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9680c90 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9680c78 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9680f84 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0x9680430 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9681018 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0x96810d8 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0x96810b8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0x9681080 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9680bc0
      (CXXThisExpr 0x9681070 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0x96810a0 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x96803f0 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0x9681180 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0x9681170 <col:9, col:39>
    (CallExpr 0x9681150 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9681118 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9681108 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0x9681210 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0x9681200 <col:9, col:39>
    (CallExpr 0x96811e0 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96811a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9681198 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0x96812a0 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0x9681290 <col:9, col:34>
    (CallExpr 0x9681270 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9681238 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9681228 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0x9681330 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0x9681320 <col:9, col:34>
    (CallExpr 0x9681300 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96812c8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x96812b8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0x96813c0 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0x96813b0 <col:9, col:35>
    (CallExpr 0x9681390 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9681358 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9681348 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0x9681450 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0x9681440 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9681408 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x96813e8 <col:16> '__cache_type *const' lvalue ->_M_data 0x96800c0
        (CXXThisExpr 0x96813d8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0x96814e0 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0x96814d0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9681498 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9681478 <col:16> '__cache_type *const' lvalue ->_M_data 0x96800c0
        (CXXThisExpr 0x9681468 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0x9681570 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0x9681560 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9681528 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9681508 <col:16> '__cache_type *const' lvalue ->_M_data 0x96800c0
        (CXXThisExpr 0x96814f8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0x9681600 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0x96815f0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x96815b8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9681598 <col:16> '__cache_type *const' lvalue ->_M_data 0x96800c0
        (CXXThisExpr 0x9681588 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0x9681690 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0x9681680 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9681648 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9681628 <col:16> '__cache_type *const' lvalue ->_M_data 0x96800c0
        (CXXThisExpr 0x9681618 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0x9680cb8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9680ca0 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0x96818e8 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x96870a0 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9687088 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0x9687140 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0x9686ed0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x96875c8 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0x96875a8 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0x9687358 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0x9687260 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0x9687200 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x96871f0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x968719c <col:6> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9687228 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x96871b4 <col:23> 'const char *' lvalue ParmVar 0x9686e90 '__s' 'const char *'))
          (ImplicitCastExpr 0x9687238 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x96871cc <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9687248 <col:36> 'int' 0))
      (BinaryOperator 0x9687340 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0x96872e0 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x96872d0 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9687278 <col:9> 'int (const char *, const char *)' lvalue Function 0x9379af0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9687308 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9687290 <col:26> 'const char *' lvalue ParmVar 0x9686e90 '__s' 'const char *'))
          (ImplicitCastExpr 0x9687318 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x96872a8 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9687328 <col:43> 'int' 0)))
    (CompoundStmt 0x9687588 <line:1886:4, line:1891:4>
      (DeclStmt 0x96873b8 <line:1887:6, col:22>
        0x9687380 "__c_locale __tmp")
      (CallExpr 0x9687460 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96873f8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x96873e8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x968742c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0x9687380 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0x9687444 <col:38> 'const char *' lvalue ParmVar 0x9686e90 '__s' 'const char *'))
      (CallExpr 0x96874e8 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9687498 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9687488 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x96874cc <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0x9687380 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0x9687568 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9687518 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9687508 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x968754c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0x9687380 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0x96875e0 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0x968c050 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x968c038 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x968c05c </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0x9687970 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x968c100 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x968c228 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0x968c218 <col:9, col:58>
    (CallExpr 0x968c1e8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c138 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c128 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c16c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9687a70 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c184 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9687ab0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c19c <col:42> 'class std::ios_base' lvalue ParmVar 0x9687b00 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c1b4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9687b70 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c1cc <col:55> '_Bool' lvalue ParmVar 0x9687bc0 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x968c340 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0x968c330 <col:9, col:58>
    (CallExpr 0x968c300 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c250 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c240 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c284 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9687d10 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c29c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9687d50 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c2b4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9687da0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c2cc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9687e10 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c2e4 <col:55> 'long' lvalue ParmVar 0x9687e60 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x968c458 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0x968c448 <col:9, col:58>
    (CallExpr 0x968c418 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c368 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c358 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c39c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9687fb0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c3b4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9687ff0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c3cc <col:42> 'class std::ios_base' lvalue ParmVar 0x9688040 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c3e4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96880b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c3fc <col:55> 'unsigned short' lvalue ParmVar 0x9688100 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x968c570 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0x968c560 <col:9, col:58>
    (CallExpr 0x968c530 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c480 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c470 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c4b4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9688250 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c4cc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9688290 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c4e4 <col:42> 'class std::ios_base' lvalue ParmVar 0x96882e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c4fc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9688350 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c514 <col:55> 'unsigned int' lvalue ParmVar 0x96883a0 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x968c688 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0x968c678 <col:9, col:58>
    (CallExpr 0x968c648 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c598 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c588 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c5cc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x96884f0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c5e4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9688530 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c5fc <col:42> 'class std::ios_base' lvalue ParmVar 0x9688580 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c614 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96885f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c62c <col:55> 'unsigned long' lvalue ParmVar 0x9688640 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x968c7a0 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0x968c790 <col:9, col:58>
    (CallExpr 0x968c760 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c6b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c6a0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c6e4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9688790 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c6fc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x96887d0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c714 <col:42> 'class std::ios_base' lvalue ParmVar 0x9688820 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c72c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9688890 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c744 <col:55> 'long long' lvalue ParmVar 0x96888e0 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x968c8b8 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0x968c8a8 <col:9, col:58>
    (CallExpr 0x968c878 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c7c8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c7b8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c7fc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9688a30 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c814 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9688a70 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c82c <col:42> 'class std::ios_base' lvalue ParmVar 0x9688ac0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c844 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9688b30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c85c <col:55> 'unsigned long long' lvalue ParmVar 0x9688b80 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x968c9d0 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0x968c9c0 <col:9, col:58>
    (CallExpr 0x968c990 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c8e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c8d0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968c914 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9688cd0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c92c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9688d10 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968c944 <col:42> 'class std::ios_base' lvalue ParmVar 0x9688d60 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968c95c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9688dd0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968c974 <col:55> 'float' lvalue ParmVar 0x9688e20 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x968cae8 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0x968cad8 <col:9, col:58>
    (CallExpr 0x968caa8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968c9f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968c9e8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968ca2c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9688f70 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968ca44 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9688fb0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968ca5c <col:42> 'class std::ios_base' lvalue ParmVar 0x9689000 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968ca74 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9689070 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968ca8c <col:55> 'double' lvalue ParmVar 0x96890c0 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x968cc00 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0x968cbf0 <col:9, col:58>
    (CallExpr 0x968cbc0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968cb10 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968cb00 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968cb44 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9689210 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968cb5c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9689250 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968cb74 <col:42> 'class std::ios_base' lvalue ParmVar 0x96892a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968cb8c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9689310 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968cba4 <col:55> 'long double' lvalue ParmVar 0x9689360 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x968cd18 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0x968cd08 <col:9, col:58>
    (CallExpr 0x968ccd8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x968cc28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x968cc18 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x968cc5c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x96894b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x968cc74 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x96894f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968cc8c <col:42> 'class std::ios_base' lvalue ParmVar 0x9689540 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968cca4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96895b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968ccbc <col:55> 'void *' lvalue ParmVar 0x9689600 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0x968cd30 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0x968dbd0 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0x968cdb8 <line:2120:4, col:18>
    0x968cd50 "int __ret =
      (UnaryOperator 0x968cda0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x968cd88 <col:17> 'int' 1))")
  (IfStmt 0x968db88 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0x968ce18 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0x968cdf8 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x968cdc8 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0x968a180 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x968ce08 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x968cde0 <col:17> 'int' 10)))
    (CompoundStmt 0x968d1b0 <line:2122:6, line:2125:6>
      (IfStmt 0x968d190 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0x968d088 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x968ced8 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x968ce88 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
            (DeclRefExpr 0x968ce30 <col:12> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x968ce68 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x968ce50 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x968d060 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0x968d010 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
            (DeclRefExpr 0x968cefc <col:35> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x968cff0 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0x968cfc8 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x968cf78 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                (CXXUnresolvedConstructExpr 0x968cf40 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0x968cf28 <col:57> 'char'48))
                (DeclRefExpr 0x968cf5c <col:64> 'size_t':'unsigned int' lvalue ParmVar 0x968a180 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0x968d178 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x968d0a0 <col:3> 'int' lvalue Var 0x968cd50 '__ret' 'int')
          (CXXOperatorCallExpr 0x968d150 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x968d110 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x968d0b8 <col:11> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x968d0f0 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x968d0d8 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0x968db70 <line:2127:6, line:2134:6>
      (IfStmt 0x968db50 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0x968d368 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x968d270 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x968d220 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
            (DeclRefExpr 0x968d1c4 <col:12> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x968d200 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x968d1e8 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x968d340 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0x968d2f0 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
            (DeclRefExpr 0x968d294 <col:35> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x968d2d0 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0x968d2b8 <col:50> 'char'57))))
        (BinaryOperator 0x968d458 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x968d380 <col:3> 'int' lvalue Var 0x968cd50 '__ret' 'int')
          (CXXOperatorCallExpr 0x968d430 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x968d3f0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x968d398 <col:11> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x968d3d0 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x968d3b8 <col:25> 'char'48))))
        (IfStmt 0x968db30 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0x968d610 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x968d518 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x968d4c8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
              (DeclRefExpr 0x968d470 <col:17> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x968d4a8 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0x968d490 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0x968d5e8 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0x968d598 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
              (DeclRefExpr 0x968d53c <col:40> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x968d578 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0x968d560 <col:55> 'char'102))))
          (BinaryOperator 0x968d7a8 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0x968d628 <col:3> 'int' lvalue Var 0x968cd50 '__ret' 'int')
            (CXXOperatorCallExpr 0x968d780 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x968d730 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
              (IntegerLiteral 0x968d640 <col:11> 'int' 10)
              (ParenExpr 0x968d718 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0x968d6f0 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0x968d6b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x968d658 <col:17> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0x968d690 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0x968d678 <col:31> 'char'97))))))
          (IfStmt 0x968db10 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0x968d960 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x968d868 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x968d818 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
                (DeclRefExpr 0x968d7c0 <col:17> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x968d7f8 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0x968d7e0 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0x968d938 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x968d8e8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
                (DeclRefExpr 0x968d88c <col:40> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x968d8c8 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0x968d8b0 <col:55> 'char'70))))
            (BinaryOperator 0x968daf8 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x968d978 <col:3> 'int' lvalue Var 0x968cd50 '__ret' 'int')
              (CXXOperatorCallExpr 0x968dad0 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x968da80 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                (IntegerLiteral 0x968d990 <col:11> 'int' 10)
                (ParenExpr 0x968da68 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0x968da40 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x968da00 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                    (DeclRefExpr 0x968d9a8 <col:17> '_CharT2' lvalue ParmVar 0x968a1c0 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0x968d9e0 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0x968d9c8 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0x968dbc0 <line:2135:4, col:11>
    (DeclRefExpr 0x968dba4 <col:11> 'int' lvalue Var 0x968cd50 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0x968e060 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0x968dc68 <line:2143:4, col:18>
    0x968dc00 "int __ret =
      (UnaryOperator 0x968dc50 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x968dc38 <col:17> 'int' 1))")
  (DeclStmt 0x968de48 <line:2144:4, col:73>
    0x968dcc0 "const char_type *__q =
      (CallExpr 0x968de20 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x968dda0 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x968ddd4 <col:54> 'const _CharT2 *' lvalue ParmVar 0x968a640 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0x968ddec <col:62> 'size_t':'unsigned int' lvalue ParmVar 0x968a680 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0x968de04 <col:69> '_CharT2' lvalue ParmVar 0x968a6c0 '__c' '_CharT2'))")
  (IfStmt 0x968e018 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0x968de58 <line:2145:8> 'const char_type *' lvalue Var 0x968dcc0 '__q' 'const char_type *')
    (CompoundStmt 0x968e000 <line:2146:6, line:2150:6>
      (BinaryOperator 0x968df20 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0x968de70 <col:8> 'int' lvalue Var 0x968dc00 '__ret' 'int')
        (CXXOperatorCallExpr 0x968def8 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x968deb8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (DeclRefExpr 0x968de88 <col:16> 'const char_type *' lvalue Var 0x968dcc0 '__q' 'const char_type *')
          (DeclRefExpr 0x968dea0 <col:22> 'const _CharT2 *' lvalue ParmVar 0x968a640 '__zero' 'const _CharT2 *')))
      (IfStmt 0x968dfe0 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0x968df78 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0x968df68 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0x968df38 <col:12> 'int' lvalue Var 0x968dc00 '__ret' 'int'))
          (IntegerLiteral 0x968df50 <col:20> 'int' 15))
        (CompoundAssignOperator 0x968dfc0 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0x968df90 <col:3> 'int' lvalue Var 0x968dc00 '__ret' 'int')
          (IntegerLiteral 0x968dfa8 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x968e050 <line:2151:4, col:11>
    (DeclRefExpr 0x968e034 <col:11> 'int' lvalue Var 0x968dc00 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x968e188 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0x968e178 <col:9, col:61>
    (CallExpr 0x968e148 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x968e090 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x968e0cc <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x968aa60 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x968e0e4 <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x968aaa0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968e0fc <col:45> 'class std::ios_base' lvalue ParmVar 0x968aaf0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968e114 <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x968ab60 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968e12c <col:58> 'long' lvalue ParmVar 0x968abb0 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x968e2a8 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0x968e298 <col:9, col:61>
    (CallExpr 0x968e268 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x968e1b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x968e1ec <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x968ac90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x968e204 <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x968acd0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x968e21c <col:45> 'class std::ios_base' lvalue ParmVar 0x968ad20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x968e234 <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x968ad90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x968e24c <col:58> 'unsigned short' lvalue ParmVar 0x968ade0 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9691ea8 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0x9691e98 <col:9, col:61>
    (CallExpr 0x9691e68 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9691db0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9691dec <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x968aec0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9691e04 <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x968af00 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9691e1c <col:45> 'class std::ios_base' lvalue ParmVar 0x968af50 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9691e34 <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x968afc0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9691e4c <col:58> 'unsigned int' lvalue ParmVar 0x968b010 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9691fc8 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0x9691fb8 <col:9, col:61>
    (CallExpr 0x9691f88 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9691ed0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9691f0c <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x968b0f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9691f24 <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x968b130 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9691f3c <col:45> 'class std::ios_base' lvalue ParmVar 0x968b180 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9691f54 <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x968b1f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9691f6c <col:58> 'unsigned long' lvalue ParmVar 0x968b240 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x96920e8 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0x96920d8 <col:9, col:61>
    (CallExpr 0x96920a8 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9691ff0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x969202c <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x968b320 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9692044 <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x968b360 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x969205c <col:45> 'class std::ios_base' lvalue ParmVar 0x968b3b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9692074 <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x968b420 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x969208c <col:58> 'long long' lvalue ParmVar 0x968b470 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9692208 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0x96921f8 <col:9, col:61>
    (CallExpr 0x96921c8 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9692110 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x969214c <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x968b550 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9692164 <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x968b590 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x969217c <col:45> 'class std::ios_base' lvalue ParmVar 0x968b5e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9692194 <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x968b650 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x96921ac <col:58> 'unsigned long long' lvalue ParmVar 0x968b6a0 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0x9692548 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0x96958d8 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x96958c0 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x96958e4 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0x96928f0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9695980 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0x9695a90 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0x9695a80 <col:9, col:50>
    (CallExpr 0x9695a50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96959b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x96959a8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x96959ec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x96929f0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9695a04 <col:34> 'class std::ios_base' lvalue ParmVar 0x9692a40 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9695a1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9692aa0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9695a34 <col:47> '_Bool' lvalue ParmVar 0x9692ae0 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0x9695b90 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0x9695b80 <col:9, col:50>
    (CallExpr 0x9695b50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9695ab8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9695aa8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9695aec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9692c20 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9695b04 <col:34> 'class std::ios_base' lvalue ParmVar 0x9692c70 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9695b1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9692cb0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9695b34 <col:47> 'long' lvalue ParmVar 0x9692d00 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0x9695c90 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0x9695c80 <col:9, col:50>
    (CallExpr 0x9695c50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9695bb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9695ba8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9695bec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9692e40 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9695c04 <col:34> 'class std::ios_base' lvalue ParmVar 0x9692e90 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9695c1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9692ed0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9695c34 <col:47> 'unsigned long' lvalue ParmVar 0x9692f20 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0x9695d90 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0x9695d80 <col:9, col:50>
    (CallExpr 0x9695d50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9695cb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9695ca8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9695cec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9693060 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9695d04 <col:34> 'class std::ios_base' lvalue ParmVar 0x96930b0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9695d1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x96930f0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9695d34 <col:47> 'long long' lvalue ParmVar 0x9693140 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9695e90 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0x9695e80 <col:9, col:50>
    (CallExpr 0x9695e50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9695db8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9695da8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9695dec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9693280 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9695e04 <col:34> 'class std::ios_base' lvalue ParmVar 0x96932d0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9695e1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9693310 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9695e34 <col:47> 'unsigned long long' lvalue ParmVar 0x9693360 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0x9695f90 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0x9695f80 <col:9, col:50>
    (CallExpr 0x9695f50 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9695eb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9695ea8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9695eec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x96934a0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9695f04 <col:34> 'class std::ios_base' lvalue ParmVar 0x96934f0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9695f1c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9693530 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9695f34 <col:47> 'double' lvalue ParmVar 0x9693580 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0x9696090 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0x9696080 <col:9, col:50>
    (CallExpr 0x9696050 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9695fb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9695fa8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9695fec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x96936c0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9696004 <col:34> 'class std::ios_base' lvalue ParmVar 0x9693710 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x969601c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9693750 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9696034 <col:47> 'long double' lvalue ParmVar 0x96937a0 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0x9696190 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0x9696180 <col:9, col:50>
    (CallExpr 0x9696150 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96960b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x96960a8 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x96960ec <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x96938e0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9696104 <col:34> 'class std::ios_base' lvalue ParmVar 0x9693930 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x969611c <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9693970 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9696134 <col:47> 'const void *' lvalue ParmVar 0x96939c0 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0x96961a8 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0x96962a8 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0x9696298 <col:9, col:52>
    (CallExpr 0x9696268 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x96961c8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9696204 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9694c90 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x969621c <col:35> 'class std::ios_base' lvalue ParmVar 0x9694ce0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9696234 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9694d20 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x969624c <col:49> 'long' lvalue ParmVar 0x9694d70 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0x96963b0 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0x96963a0 <col:9, col:52>
    (CallExpr 0x9696370 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x96962d0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x969630c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9694e50 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9696324 <col:35> 'class std::ios_base' lvalue ParmVar 0x9694ea0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x969633c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9694ee0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9696354 <col:49> 'unsigned long' lvalue ParmVar 0x9694f30 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0x96964b8 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0x96964a8 <col:9, col:52>
    (CallExpr 0x9696478 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x96963d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9696414 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9695010 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x969642c <col:35> 'class std::ios_base' lvalue ParmVar 0x9695060 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9696444 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x96950a0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x969645c <col:49> 'long long' lvalue ParmVar 0x96950f0 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0x96965c0 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0x96965b0 <col:9, col:52>
    (CallExpr 0x9696580 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x96964e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x969651c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x96951d0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9696534 <col:35> 'class std::ios_base' lvalue ParmVar 0x9695220 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x969654c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9695260 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9696564 <col:49> 'unsigned long long' lvalue ParmVar 0x96952b0 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0x9696908 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9696d30 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0x9696d20 <col:7, col:72>
    (CallExpr 0x9696cf8 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9696c60 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9696c40 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9696bc0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9696c28 <col:40> 'const class std::locale' lvalue ParmVar 0x96969e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9696cc0 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657ec0 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9696ce0 <col:69> '_CharT' lvalue ParmVar 0x9696990 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9697148 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0x9697138 <col:7, col:72>
    (CallExpr 0x9697110 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9697080 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9697060 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9696fe0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9697048 <col:40> 'const class std::locale' lvalue ParmVar 0x9696e00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x96970d4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657f30 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0x96970f4 <col:69> '_CharT' lvalue ParmVar 0x9696db0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9697558 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0x9697548 <col:7, col:72>
    (CallExpr 0x9697520 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9697490 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9697470 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x96973f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9697458 <col:40> 'const class std::locale' lvalue ParmVar 0x9697210 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x96974e4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x96580a0 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9697504 <col:69> '_CharT' lvalue ParmVar 0x96971c0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9697968 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0x9697958 <col:7, col:72>
    (CallExpr 0x9697930 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96978a0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9697880 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9697800 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9697868 <col:40> 'const class std::locale' lvalue ParmVar 0x9697620 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x96978f4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657c90 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9697914 <col:69> '_CharT' lvalue ParmVar 0x96975d0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9697d78 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0x9697d68 <col:7, col:72>
    (CallExpr 0x9697d40 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9697cb0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9697c90 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9697c10 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9697c78 <col:40> 'const class std::locale' lvalue ParmVar 0x9697a30 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9697d04 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657d00 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9697d24 <col:69> '_CharT' lvalue ParmVar 0x96979e0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9698188 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0x9698178 <col:7, col:72>
    (CallExpr 0x9698150 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96980c0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x96980a0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9698020 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9698088 <col:40> 'const class std::locale' lvalue ParmVar 0x9697e40 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9698114 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657d70 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9698134 <col:69> '_CharT' lvalue ParmVar 0x9697df0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9698598 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0x9698588 <col:7, col:72>
    (CallExpr 0x9698560 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96984d0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x96984b0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9698430 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9698498 <col:40> 'const class std::locale' lvalue ParmVar 0x9698250 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9698524 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657de0 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9698544 <col:69> '_CharT' lvalue ParmVar 0x9698200 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0x96989a8 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0x9698998 <col:7, col:72>
    (CallExpr 0x9698970 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96988e0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x96988c0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9698840 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96988a8 <col:40> 'const class std::locale' lvalue ParmVar 0x9698660 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9698934 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9658110 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9698954 <col:69> '_CharT' lvalue ParmVar 0x9698610 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9698db8 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0x9698da8 <col:7, col:73>
    (CallExpr 0x9698d80 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9698cf0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9698cd0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9698c50 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9698cb8 <col:40> 'const class std::locale' lvalue ParmVar 0x9698a70 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9698d44 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657e50 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9698d64 <col:70> '_CharT' lvalue ParmVar 0x9698a20 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0x96991c8 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0x96991b8 <col:7, col:72>
    (CallExpr 0x9699190 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9699100 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x96990e0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9699060 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96990c8 <col:40> 'const class std::locale' lvalue ParmVar 0x9698e80 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9699154 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9658180 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9699174 <col:69> '_CharT' lvalue ParmVar 0x9698e30 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0x96995d8 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0x96995c8 <col:7, col:72>
    (CallExpr 0x96995a0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9699510 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x96994f0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9699470 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96994d8 <col:40> 'const class std::locale' lvalue ParmVar 0x9699290 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9699564 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9657fa0 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9699584 <col:69> '_CharT' lvalue ParmVar 0x9699240 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x96999a0 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0x9699990 <col:7, col:58>
    (CallExpr 0x9699970 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9699920 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9699900 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9699880 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96998e8 <col:40> 'const class std::locale' lvalue ParmVar 0x96996a0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9699954 <col:55> '_CharT' lvalue ParmVar 0x9699650 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9699d70 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0x9699d60 <col:7, col:58>
    (CallExpr 0x9699d40 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9699cf0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9699cd0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9699c50 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x9699cb8 <col:40> 'const class std::locale' lvalue ParmVar 0x9699a70 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9699d24 <col:55> '_CharT' lvalue ParmVar 0x9699a20 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0x969e688 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0x969dec8 <line:56:2, col:49>
    0x969dd40 "const size_t __i =
      (CallExpr 0x969dea8 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x969de70 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x969de38 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0x969dfc0 <line:57:2, col:59>
    0x969df10 "const locale::facet **__caches =
      (ImplicitCastExpr 0x969dfb0 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x969df8c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0x95e7f30
          (ImplicitCastExpr 0x969df80 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x969df5c <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
              (DeclRefExpr 0x969df44 <col:35> 'const class std::locale' lvalue ParmVar 0x969dbb0 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x969e500 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0x969e058 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0x969e048 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x969e038 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x969e020 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x969e000 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x969dfd0 <col:7> 'const class locale::facet **' lvalue Var 0x969df10 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0x969e010 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x969dfe8 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x969dd40 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0x969e4e0 <line:59:4, line:72:4>
      (DeclStmt 0x969e190 <line:60:6, col:41>
        0x969e140 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0x969e178 <col:40> 'int' 0)")
      (IfStmt 0x969e378 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x969e1a0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x969e360 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0x969e2c0 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0x969e1b0 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x969e140 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0x969e288 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0x969e340 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x969e2f0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x969e2d8 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x969e140 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0x969e324 <col:19> 'const class std::locale' lvalue ParmVar 0x969dbb0 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0x969e400 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x969e398 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x969e3e8 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0x969e3c0 <line:68:3, col:10> 'void'
            (DeclRefExpr 0x969e3a8 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0x969e140 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0x969e3d8 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0x969e4b8 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0x969e464 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0x95ed4d0
          (ImplicitCastExpr 0x969e458 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x969e434 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0x95e4fc0
              (DeclRefExpr 0x969e41c <col:6> 'const class std::locale' lvalue ParmVar 0x969dbb0 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0x969e484 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0x969e140 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0x969e49c <col:45> 'const size_t':'const unsigned int' lvalue Var 0x969dd40 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0x969e678 <line:73:2, col:67>
    (CXXStaticCastExpr 0x969e660 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0x969e600 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0x969e5e0 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0x969e5b0 <col:54> 'const class locale::facet **' lvalue Var 0x969df10 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0x969e5f0 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x969e5c8 <col:63> 'const size_t':'const unsigned int' lvalue Var 0x969dd40 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0x96a13d0 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0x969e988 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0x969e958 <col:7> '_Bool' lvalue ->_M_allocated 0x967ed40
      (CXXThisExpr 0x969e948 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0x969e978 <col:22> '_Bool' true))
  (DeclStmt 0x969ec10 <line:83:7, col:73>
    0x969ea90 "const numpunct<_CharT> &__np =
      (CallExpr 0x969ebf0 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x969eb70 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
        (DeclRefExpr 0x969ebd8 <col:67> 'const class std::locale' lvalue ParmVar 0x969e860 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x969ec90 <line:85:7, col:27>
    0x969ec30 "char *__grouping =
      (ImplicitCastExpr 0x969ec80 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0x969ec68 <col:26> 'int' 0))")
  (DeclStmt 0x969ed20 <line:86:7, col:29>
    0x969ecd0 "_CharT *__truename =
      (IntegerLiteral 0x969ed08 <col:28> 'int' 0)")
  (DeclStmt 0x969ed90 <line:87:7, col:30>
    0x969ed40 "_CharT *__falsename =
      (IntegerLiteral 0x969ed78 <col:29> 'int' 0)")
  (IfStmt 0x96a12b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x969eda0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x96a1258 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0x969eea8 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0x969edc0 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x967e970
          (CXXThisExpr 0x969edb0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x969ee88 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x969ee50 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x969ee30 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x969edf8 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x969ede0 <col:23> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x969ef50 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0x969eec0 <col:4> 'char *' lvalue Var 0x969ec30 '__grouping' 'char *')
        (CXXNewExpr 0x969ef10 <col:17, col:21> 'char *'
          (MemberExpr 0x969eee8 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x967e970
            (CXXThisExpr 0x969eed8 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x969f058 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x969efd8 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x969efb8 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x969ef80 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x969ef68 <col:4> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x969f00c <col:25> 'char *' lvalue Var 0x969ec30 '__grouping' 'char *')
        (MemberExpr 0x969f038 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x967e970
          (CXXThisExpr 0x969f028 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x969f0c8 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0x969f090 <col:4> 'const char *' lvalue ->_M_grouping 0x967e930
          (CXXThisExpr 0x969f080 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x969f0b0 <col:18> 'char *' lvalue Var 0x969ec30 '__grouping' 'char *'))
      (BinaryOperator 0x96a0498 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0x969f0f0 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0x967e9b0
          (CXXThisExpr 0x969f0e0 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0x96a0480 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0x96a0468 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0x969f208 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0x969f120 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x967e970
                (CXXThisExpr 0x969f110 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0x969f1f0 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0x969f1e0 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0x969f1b0 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0x969f188 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0x969f150 <col:37> 'const char *' lvalue ->_M_grouping 0x967e930
                        (CXXThisExpr 0x969f140 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0x969f170 <col:49> 'int' 0))))
                (IntegerLiteral 0x969f1c8 <col:55> 'int' 0)))
            (ParenExpr 0x96a0450 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0x96a0428 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0x96a03c8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
                (ArraySubscriptExpr 0x969f268 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0x969f230 <col:13> 'const char *' lvalue ->_M_grouping 0x967e930
                    (CXXThisExpr 0x969f220 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0x969f250 <col:25> 'int' 0))
                (DeclRefExpr 0x96a03a8 <line:97:9, col:44> 'const char':'const char' lvalue Var 0x969fd60 '__max' 'const char':'const char'))))))
      (BinaryOperator 0x96a05a8 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0x96a04c0 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x967ea50
          (CXXThisExpr 0x96a04b0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x96a0588 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96a0550 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x96a0530 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96a04f8 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x96a04e0 <col:23> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x96a0650 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0x96a05c0 <col:4> '_CharT *' lvalue Var 0x969ecd0 '__truename' '_CharT *')
        (CXXNewExpr 0x96a0610 <col:17, col:21> '_CharT *'
          (MemberExpr 0x96a05e8 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x967ea50
            (CXXThisExpr 0x96a05d8 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x96a0758 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96a06d8 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x96a06b8 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96a0680 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x96a0668 <col:4> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x96a070c <col:25> '_CharT *' lvalue Var 0x969ecd0 '__truename' '_CharT *')
        (MemberExpr 0x96a0738 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x967ea50
          (CXXThisExpr 0x96a0728 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x96a07c8 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0x96a0790 <col:4> 'const _CharT *' lvalue ->_M_truename 0x967ea10
          (CXXThisExpr 0x96a0780 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x96a07b0 <col:18> '_CharT *' lvalue Var 0x969ecd0 '__truename' '_CharT *'))
      (BinaryOperator 0x96a08d8 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0x96a07f0 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x967ead0
          (CXXThisExpr 0x96a07e0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x96a08b8 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96a0880 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0x96a0860 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96a0828 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0x96a0810 <col:24> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x96a0980 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0x96a08f0 <col:4> '_CharT *' lvalue Var 0x969ed40 '__falsename' '_CharT *')
        (CXXNewExpr 0x96a0940 <col:18, col:22> '_CharT *'
          (MemberExpr 0x96a0918 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x967ead0
            (CXXThisExpr 0x96a0908 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x96a0a88 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96a0a08 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0x96a09e8 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96a09b0 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x96a0998 <col:4> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x96a0a3c <col:26> '_CharT *' lvalue Var 0x969ed40 '__falsename' '_CharT *')
        (MemberExpr 0x96a0a68 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x967ead0
          (CXXThisExpr 0x96a0a58 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x96a0af8 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0x96a0ac0 <col:4> 'const _CharT *' lvalue ->_M_falsename 0x967ea90
          (CXXThisExpr 0x96a0ab0 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x96a0ae0 <col:19> '_CharT *' lvalue Var 0x969ed40 '__falsename' '_CharT *'))
      (BinaryOperator 0x96a0bb0 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0x96a0b20 <col:4> '_CharT' lvalue ->_M_decimal_point 0x967eb10
          (CXXThisExpr 0x96a0b10 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x96a0b90 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96a0b58 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x96a0b40 <col:23> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0x96a0c68 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0x96a0bd8 <col:4> '_CharT' lvalue ->_M_thousands_sep 0x967eb50
          (CXXThisExpr 0x96a0bc8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x96a0c48 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96a0c10 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x96a0bf8 <col:23> 'const numpunct<_CharT>' lvalue Var 0x969ea90 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0x96a0ed0 <line:112:4, col:64>
        0x96a0d50 "const ctype<_CharT> &__ct =
          (CallExpr 0x96a0eb0 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x96a0e30 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
            (DeclRefExpr 0x96a0e98 <col:58> 'const class std::locale' lvalue ParmVar 0x969e860 '__loc' 'const class std::locale &'))")
      (CallExpr 0x96a1090 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96a0ef8 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x96a0ee0 <col:4> 'const ctype<_CharT>' lvalue Var 0x96a0d50 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x96a0f4c <col:15, col:27> 'const char *' lvalue Var 0x967e0e0 '_S_atoms_out' 'const char *')
        (BinaryOperator 0x96a1048 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0x96a1028 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x96a0f8c <col:8, col:20> 'const char *' lvalue Var 0x967e0e0 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0x96a1038 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x96a0fcc <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967e030 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0x96a1070 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0x967ec30
          (CXXThisExpr 0x96a1060 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0x96a1230 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96a10d0 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x96a10b8 <col:4> 'const ctype<_CharT>' lvalue Var 0x96a0d50 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x96a1124 <col:15, col:27> 'const char *' lvalue Var 0x967e130 '_S_atoms_in' 'const char *')
        (BinaryOperator 0x96a11e8 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0x96a11c8 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x96a1164 <col:8, col:20> 'const char *' lvalue Var 0x967e130 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0x96a11d8 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x96a11a4 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e420 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0x96a1210 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0x967ed00
          (CXXThisExpr 0x96a1200 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0x96a13b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x96a12d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x96a1390 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0x96a1308 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0x96a12f8 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0x96a12e0 <col:14> 'char *' lvalue Var 0x969ec30 '__grouping' 'char *')))
      (CXXDeleteExpr 0x96a1338 <line:123:4, col:14> 'void'
        (DeclRefExpr 0x96a1320 <col:14> '_CharT *' lvalue Var 0x969ecd0 '__truename' '_CharT *'))
      (CXXDeleteExpr 0x96a1368 <line:124:4, col:14> 'void'
        (DeclRefExpr 0x96a1350 <col:14> '_CharT *' lvalue Var 0x969ed40 '__falsename' '_CharT *'))
      (NullStmt 0x96a1380 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0x96a68f8 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0x96a1c30 <line:149:7, col:50>
    0x96a1c00 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x96a1d20 <line:150:7, col:69>
    0x96a1cf0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x96a1e28 <line:151:7, col:37>
    0x96a1df0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x96a1ef0 <line:152:7, col:45>
    0x96a1e50 "const std::locale &__loc =
      (CXXMemberCallExpr 0x96a1ec0 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0x96a1e9c <col:29, col:34> '<bound member function type>' ._M_getloc 0x96123e0
          (ImplicitCastExpr 0x96a1ee0 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96a1e84 <col:29> 'class std::ios_base' lvalue ParmVar 0x96a1940 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x96a1fb8 <line:153:7, col:45>
    0x96a1f30 "const __cache_type *__lc =
      (CallExpr 0x96a1f98 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0x96a1f64 <col:34> '__use_cache<__cache_type>' lvalue Var 0x96a1df0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x96a1f7c <col:39> 'const class std::locale' lvalue Var 0x96a1e50 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x96a2088 <line:154:7, col:46>
    0x96a2000 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x96a2050 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x96a2034 <col:29> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x96a20f8 <line:155:7, col:34>
    0x96a20a0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x96a20e0 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0x96a2200 <line:158:7, col:38>
    0x96a2110 "bool __testeof =
      (CXXOperatorCallExpr 0x96a21d8 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x96a2178 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
        (DeclRefExpr 0x96a2144 <col:24> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')
        (DeclRefExpr 0x96a215c <col:33> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))")
  (IfStmt 0x96a2b68 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0x96a2238 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x96a2228 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x96a2210 <col:12> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')))
    (CompoundStmt 0x96a2b48 <line:162:2, line:175:2>
      (BinaryOperator 0x96a2298 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0x96a224c <col:4> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x96a2280 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0x96a2264 <col:11> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
      (DeclStmt 0x96a2408 <line:164:4, col:58>
        0x96a22c0 "const bool __plus =
          (CXXOperatorCallExpr 0x96a23e0 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x96a2380 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (DeclRefExpr 0x96a22f4 <col:24> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x96a2368 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0x96a230c <col:31> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
              (DeclRefExpr 0x96a2344 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e210 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0x96a2b28 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0x96a2830 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0x96a26f8 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0x96a2558 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0x96a2540 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0x96a2418 <col:9> 'const _Bool' lvalue Var 0x96a22c0 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0x96a2518 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0x96a24b8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (DeclRefExpr 0x96a2430 <col:19> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x96a24a0 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x96a2448 <col:26> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x96a247c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e1d0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x96a26e0 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0x96a26c8 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0x96a26b0 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x96a2588 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0x96a256c <col:13> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x96a2688 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0x96a2628 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                    (DeclRefExpr 0x96a25bc <col:38> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x96a25f0 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0x96a25d4 <col:45> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x96a2818 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0x96a2800 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0x96a27d8 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0x96a2778 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96a2710 <col:13> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x96a2740 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x96a2728 <col:20> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x96a2b10 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0x96a2958 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0x96a2948 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96a28f8 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0x96a2848 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
            (ConditionalOperator 0x96a28b8 <col:18, col:33> 'char'
              (ImplicitCastExpr 0x96a28a8 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96a2860 <col:18> 'const _Bool' lvalue Var 0x96a22c0 '__plus' 'const _Bool'))
              (CharacterLiteral 0x96a2878 <col:27> 'char'43)
              (CharacterLiteral 0x96a2890 <col:33> 'char'45)))
          (IfStmt 0x96a2af0 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x96a2a28 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0x96a29c8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
              (UnaryOperator 0x96a2998 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0x96a297c <col:14> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter'))
              (DeclRefExpr 0x96a29ac <col:23> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))
            (BinaryOperator 0x96a2a98 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0x96a2a4c <col:3> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x96a2a80 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0x96a2a64 <col:10> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
            (BinaryOperator 0x96a2ad8 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0x96a2ab0 <col:3> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x96a2ac8 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x96a2bd8 <line:178:7, col:36>
    0x96a2b90 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0x96a2bc8 <col:31> '_Bool' false)")
  (DeclStmt 0x96a2c50 <line:179:7, col:24>
    0x96a2c00 "int __sep_pos =
      (IntegerLiteral 0x96a2c38 <col:23> 'int' 0)")
  (WhileStmt 0x96a33a8 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0x96a2c88 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0x96a2c78 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x96a2c60 <col:15> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')))
    (CompoundStmt 0x96a3390 <line:181:2, line:201:2>
      (IfStmt 0x96a3370 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0x96a2f00 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0x96a2df8 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0x96a2de0 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x96a2cb8 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0x96a2c9c <col:9> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x96a2db8 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x96a2d58 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96a2cec <col:34> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x96a2d20 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0x96a2d04 <col:41> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x96a2ed8 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x96a2e78 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (DeclRefExpr 0x96a2e0c <col:11> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x96a2e40 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0x96a2e24 <col:18> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x96a2f18 <line:184:6>)
        (IfStmt 0x96a3350 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x96a3008 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x96a2fa8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (DeclRefExpr 0x96a2f20 <col:13> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x96a2f90 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0x96a2f38 <col:20> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
              (DeclRefExpr 0x96a2f6c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0x96a3328 <line:186:6, line:198:6>
            (IfStmt 0x96a3148 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0x96a3058 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96a3048 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96a302c <col:13> '_Bool' lvalue Var 0x96a2b90 '__found_mantissa' '_Bool')))
              (CompoundStmt 0x96a3130 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0x96a30c8 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x96a30b8 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x96a30a0 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x96a306c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                  (CharacterLiteral 0x96a3088 <col:15> 'char'48))
                (BinaryOperator 0x96a3118 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x96a30ec <col:5> '_Bool' lvalue Var 0x96a2b90 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0x96a3108 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0x96a3180 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0x96a3164 <col:10> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int'))
            (IfStmt 0x96a3308 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0x96a3240 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0x96a31e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
                (UnaryOperator 0x96a31b0 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x96a3194 <col:14> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter'))
                (DeclRefExpr 0x96a31c4 <col:23> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))
              (BinaryOperator 0x96a32b0 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0x96a3264 <col:3> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                (UnaryOperator 0x96a3298 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0x96a327c <col:10> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
              (BinaryOperator 0x96a32f0 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0x96a32c8 <col:3> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x96a32e0 <col:15> '_Bool' true))))
          (BreakStmt 0x96a3348 <line:200:6>)))))
  (DeclStmt 0x96a3418 <line:204:7, col:31>
    0x96a33d0 "bool __found_dec =
      (CXXBoolLiteralExpr 0x96a3408 <col:26> '_Bool' false)")
  (DeclStmt 0x96a3478 <line:205:7, col:31>
    0x96a3430 "bool __found_sci =
      (CXXBoolLiteralExpr 0x96a3468 <col:26> '_Bool' false)")
  (DeclStmt 0x96a34e8 <line:206:7, col:30>
    0x96a3490 "string __found_grouping =
      (CXXConstructExpr 0x96a34c8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x96a35c8 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x96a3510 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x96a34f8 <col:11> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x96a3598 <line:208:2, col:29> 'void'
      (MemberExpr 0x96a355c <col:2, col:19> '<bound member function type>' .reserve 0x95a1f60
        (DeclRefExpr 0x96a3544 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x96a35b8 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x96a3580 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x96a3708 <line:209:7, col:65>
    0x96a3600 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x96a36e0 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x96a3690 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (DeclRefExpr 0x96a3634 <col:37> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
        (DeclRefExpr 0x96a366c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x96a64b0 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0x96a3768 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x96a3730 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x96a3718 <col:12> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *')))
    (WhileStmt 0x96a4848 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0x96a37a8 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x96a3798 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x96a377c <col:10> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')))
      (CompoundStmt 0x96a4828 <line:214:4, line:258:4>
        (DeclStmt 0x96a38c8 <line:215:6, col:54>
          0x96a37d0 "const int __digit =
            (CallExpr 0x96a38a0 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0x96a3818 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0x96a3858 <col:34> 'const char_type *' lvalue Var 0x96a3600 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0x96a3870 <col:46> 'int' 10)
              (DeclRefExpr 0x96a3888 <col:50> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT'))")
        (IfStmt 0x96a4678 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0x96a3930 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0x96a3920 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0x96a38d8 <col:10> 'const int' lvalue Var 0x96a37d0 '__digit' 'const int'))
            (UnaryOperator 0x96a3908 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0x96a38f0 <col:22> 'int' 1)))
          (CompoundStmt 0x96a3a68 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0x96a3a00 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0x96a39f0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96a39d8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0x96a3948 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
              (ImplicitCastExpr 0x96a39c8 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0x96a39b0 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0x96a3990 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0x96a3960 <col:13> 'char'48))
                  (ImplicitCastExpr 0x96a39a0 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0x96a3974 <col:19> 'const int' lvalue Var 0x96a37d0 '__digit' 'const int')))))
            (BinaryOperator 0x96a3a50 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0x96a3a24 <col:3> '_Bool' lvalue Var 0x96a2b90 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0x96a3a40 <col:22> '_Bool' true)))
          (IfStmt 0x96a4658 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0x96a3c08 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0x96a3bb0 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x96a3b48 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x96a3ae8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (DeclRefExpr 0x96a3a80 <col:15> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0x96a3ab0 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0x96a3a98 <col:22> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *')))
                (UnaryOperator 0x96a3b98 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x96a3b88 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x96a3b6c <col:12> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool'))))
              (UnaryOperator 0x96a3bf0 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96a3be0 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96a3bc8 <col:28> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool'))))
            (CompoundStmt 0x96a3ce0 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0x96a3c78 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0x96a3c68 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x96a3c50 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0x96a3c20 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                (CharacterLiteral 0x96a3c38 <col:13> 'char'46))
              (BinaryOperator 0x96a3cc8 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x96a3c9c <col:3> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0x96a3cb8 <col:17> '_Bool' true)))
            (IfStmt 0x96a4638 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0x96a3fb8 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0x96a3f88 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0x96a3f30 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0x96a3f18 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0x96a3de0 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x96a3d80 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                        (DeclRefExpr 0x96a3cf8 <col:16> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x96a3d68 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0x96a3d10 <col:23> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x96a3d44 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e350 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0x96a3ef0 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0x96a3e90 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                        (DeclRefExpr 0x96a3e04 <col:12> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x96a3e78 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0x96a3e1c <col:19> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x96a3e54 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e3d0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0x96a3f70 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x96a3f60 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x96a3f44 <col:12> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool'))))
                (DeclRefExpr 0x96a3fa0 <col:27> '_Bool' lvalue Var 0x96a2b90 '__found_mantissa' '_Bool'))
              (CompoundStmt 0x96a4610 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0x96a4028 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x96a4018 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x96a4000 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x96a3fd0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                  (CharacterLiteral 0x96a3fe8 <col:13> 'char'101))
                (BinaryOperator 0x96a4078 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0x96a404c <col:3> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0x96a4068 <col:17> '_Bool' true))
                (IfStmt 0x96a45f0 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x96a4138 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0x96a40d8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
                    (UnaryOperator 0x96a40a8 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0x96a4090 <col:9> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter'))
                    (DeclRefExpr 0x96a40bc <col:18> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))
                  (CompoundStmt 0x96a4570 <line:237:5, line:244:5>
                    (BinaryOperator 0x96a41a8 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0x96a415c <col:7> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0x96a4190 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0x96a4174 <col:14> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
                    (DeclStmt 0x96a4318 <line:239:7, col:61>
                      0x96a41d0 "const bool __plus =
                        (CXXOperatorCallExpr 0x96a42f0 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0x96a4290 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                          (DeclRefExpr 0x96a4204 <col:27> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x96a4278 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0x96a421c <col:34> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x96a4254 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e210 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0x96a4550 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0x96a4450 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0x96a4328 <col:11> 'const _Bool' lvalue Var 0x96a41d0 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0x96a4428 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0x96a43c8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                          (DeclRefExpr 0x96a4340 <col:21> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x96a43b0 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0x96a4358 <col:28> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x96a438c <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e1d0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0x96a4520 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x96a4510 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x96a44f8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x96a4468 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                        (ConditionalOperator 0x96a44d8 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0x96a44c8 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x96a4480 <col:19> 'const _Bool' lvalue Var 0x96a41d0 '__plus' 'const _Bool'))
                          (CharacterLiteral 0x96a4498 <col:28> 'char'43)
                          (CharacterLiteral 0x96a44b0 <col:34> 'char'45)))
                      (ContinueStmt 0x96a4548 <line:243:9>)))
                  (CompoundStmt 0x96a45d8 <line:246:5, line:249:5>
                    (BinaryOperator 0x96a45b8 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0x96a458c <col:7> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0x96a45a8 <col:19> '_Bool' true))
                    (BreakStmt 0x96a45d0 <line:248:7>))))
              (BreakStmt 0x96a4630 <line:252:8>))))
        (IfStmt 0x96a4808 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x96a4740 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x96a46e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
            (UnaryOperator 0x96a46b0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x96a4694 <col:12> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter'))
            (DeclRefExpr 0x96a46c4 <col:21> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))
          (BinaryOperator 0x96a47b0 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x96a4764 <col:8> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x96a4798 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x96a477c <col:15> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
          (BinaryOperator 0x96a47f0 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x96a47c8 <col:8> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x96a47e0 <col:20> '_Bool' true)))))
    (WhileStmt 0x96a6498 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0x96a4888 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x96a4878 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x96a485c <col:10> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')))
      (CompoundStmt 0x96a6480 <line:261:4, line:348:4>
        (IfStmt 0x96a62d0 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0x96a49e0 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x96a48b8 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x96a489c <col:10> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x96a49b8 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x96a4958 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96a48ec <col:35> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x96a4920 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x96a4904 <col:42> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x96a4cc0 <line:265:8, line:285:8>
            (IfStmt 0x96a4ca0 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0x96a4a78 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0x96a4a20 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x96a4a10 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x96a49f8 <col:8> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool')))
                (UnaryOperator 0x96a4a60 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x96a4a50 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x96a4a34 <col:24> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool'))))
              (CompoundStmt 0x96a4c80 <line:267:5, line:282:5>
                (IfStmt 0x96a4c60 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0x96a4ab8 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x96a4aa8 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0x96a4a90 <col:11> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')))
                  (CompoundStmt 0x96a4bd0 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0x96a4b60 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x96a4b50 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x96a4b38 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x96a4ac4 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x96a4b20 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x96a4b10 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x96a4b00 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0x96a4adc <col:42> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')))))
                    (BinaryOperator 0x96a4bb8 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0x96a4b84 <col:4> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')
                      (IntegerLiteral 0x96a4ba0 <col:16> 'int' 0)))
                  (CompoundStmt 0x96a4c48 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0x96a4c20 <line:279:4, col:17> 'void'
                      (MemberExpr 0x96a4c00 <col:4, col:11> '<bound member function type>' .clear 0x95a1fd0
                        (DeclRefExpr 0x96a4be8 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')))
                    (BreakStmt 0x96a4c40 <line:280:4>))))
              (BreakStmt 0x96a4c98 <line:284:5>)))
          (IfStmt 0x96a62b0 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x96a4da0 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0x96a4d40 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96a4cd4 <col:15> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x96a4d08 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x96a4cec <col:22> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *')))
            (CompoundStmt 0x96a50e0 <line:287:8, line:300:8>
              (IfStmt 0x96a50c0 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0x96a4e48 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0x96a4df0 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x96a4de0 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x96a4dc4 <col:8> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool')))
                  (UnaryOperator 0x96a4e30 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x96a4e20 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x96a4e04 <col:24> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool'))))
                (CompoundStmt 0x96a5098 <line:289:5, line:297:5>
                  (IfStmt 0x96a4fb8 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0x96a4ee8 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0x96a4e98 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0x96a4e78 <col:11, col:28> '<bound member function type>' .size 0x95a1440
                          (ImplicitCastExpr 0x96a4ed8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0x96a4e60 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0x96a4f90 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x96a4f80 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x96a4f68 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x96a4ef4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x96a4f50 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x96a4f40 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x96a4f30 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0x96a4f0c <col:47> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0x96a5030 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0x96a5020 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x96a5008 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0x96a4fd4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                    (CharacterLiteral 0x96a4ff0 <col:17> 'char'46))
                  (BinaryOperator 0x96a5080 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0x96a5054 <col:7> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0x96a5070 <col:21> '_Bool' true)))
                (BreakStmt 0x96a50b8 <line:299:5>)))
            (CompoundStmt 0x96a6298 <line:302:8, line:342:8>
              (DeclStmt 0x96a5230 <line:303:3, line:304:45>
                0x96a5110 "const char_type *__q =
                  (CallExpr 0x96a5208 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x96a5188 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0x96a51bc <col:25> 'const char_type *' lvalue Var 0x96a3600 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0x96a51d8 <col:37> 'int' 10)
                    (DeclRefExpr 0x96a51f0 <col:41> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x96a6278 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0x96a5240 <line:305:7> 'const char_type *' lvalue Var 0x96a5110 '__q' 'const char_type *')
                (CompoundStmt 0x96a5458 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0x96a53b0 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x96a5258 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0x96a5388 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0x96a5338 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                      (CharacterLiteral 0x96a5270 <col:17> 'char'48)
                      (ParenExpr 0x96a5320 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0x96a52f8 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0x96a52b8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                          (DeclRefExpr 0x96a5284 <col:24> 'const char_type *' lvalue Var 0x96a5110 '__q' 'const char_type *')
                          (DeclRefExpr 0x96a529c <col:30> 'const char_type *' lvalue Var 0x96a3600 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0x96a53f8 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x96a53d0 <col:7> '_Bool' lvalue Var 0x96a2b90 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0x96a53e8 <col:26> '_Bool' true))
                  (UnaryOperator 0x96a5440 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x96a5428 <col:9> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')))
                (IfStmt 0x96a6258 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0x96a5738 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0x96a5708 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0x96a56b0 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0x96a5698 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0x96a5560 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0x96a5500 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                            (DeclRefExpr 0x96a5474 <col:13> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x96a54e8 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0x96a548c <col:20> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x96a54c4 <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e350 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0x96a5670 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0x96a5610 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                            (DeclRefExpr 0x96a5584 <col:9> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x96a55f8 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0x96a559c <col:16> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x96a55d4 <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e3d0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0x96a56f0 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0x96a56e0 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0x96a56c4 <col:9> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0x96a5720 <col:24> '_Bool' lvalue Var 0x96a2b90 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0x96a6230 <line:314:5, line:339:5>
                    (IfStmt 0x96a58e0 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0x96a5808 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0x96a57f8 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0x96a5788 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0x96a5768 <col:11, col:28> '<bound member function type>' .size 0x95a1440
                              (ImplicitCastExpr 0x96a57a8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0x96a5750 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0x96a57e0 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0x96a57d0 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x96a57b4 <col:39> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0x96a58b8 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x96a58a8 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x96a5890 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x96a5820 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0x96a5878 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0x96a5868 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0x96a5858 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0x96a5838 <col:47> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0x96a5958 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x96a5948 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x96a5930 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x96a58fc <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                      (CharacterLiteral 0x96a5918 <col:17> 'char'101))
                    (BinaryOperator 0x96a59a8 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0x96a597c <col:7> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0x96a5998 <col:21> '_Bool' true))
                    (IfStmt 0x96a6210 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0x96a5a68 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0x96a5a08 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
                        (UnaryOperator 0x96a59d8 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0x96a59c0 <col:13> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter'))
                        (DeclRefExpr 0x96a59ec <col:22> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))
                      (CompoundStmt 0x96a6190 <line:323:9, line:333:9>
                        (BinaryOperator 0x96a5ad8 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0x96a5a8c <col:4> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0x96a5ac0 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0x96a5aa4 <col:11> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
                        (DeclStmt 0x96a5c48 <line:325:4, col:58>
                          0x96a5b00 "const bool __plus =
                            (CXXOperatorCallExpr 0x96a5c20 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0x96a5bc0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                              (DeclRefExpr 0x96a5b34 <col:24> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0x96a5ba8 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0x96a5b4c <col:31> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                                (DeclRefExpr 0x96a5b84 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e210 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0x96a6170 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0x96a6070 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0x96a5f38 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0x96a5d98 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0x96a5d80 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0x96a5c58 <col:9> 'const _Bool' lvalue Var 0x96a5b00 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0x96a5d58 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0x96a5cf8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                                    (DeclRefExpr 0x96a5c70 <col:19> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0x96a5ce0 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0x96a5c88 <col:26> 'const _CharT *' lvalue Var 0x96a2000 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0x96a5cbc <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e1d0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0x96a5f20 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0x96a5f08 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0x96a5ef0 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0x96a5dc8 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0x96a5dac <col:13> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0x96a5ec8 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0x96a5e68 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                                      (DeclRefExpr 0x96a5dfc <col:9> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0x96a5e30 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0x96a5e14 <col:16> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0x96a6058 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0x96a6040 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0x96a6018 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0x96a5fb8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                                  (DeclRefExpr 0x96a5f50 <col:13> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0x96a5f80 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0x96a5f68 <col:20> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0x96a6140 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0x96a6130 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0x96a6118 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0x96a6088 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x96a1a00 '__xtrc' 'string &')
                            (ConditionalOperator 0x96a60f8 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0x96a60e8 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0x96a60a0 <col:19> 'const _Bool' lvalue Var 0x96a5b00 '__plus' 'const _Bool'))
                              (CharacterLiteral 0x96a60b8 <col:28> 'char'43)
                              (CharacterLiteral 0x96a60d0 <col:34> 'char'45)))
                          (ContinueStmt 0x96a6168 <line:332:6>)))
                      (CompoundStmt 0x96a61f8 <line:335:9, line:338:9>
                        (BinaryOperator 0x96a61d8 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0x96a61ac <col:4> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0x96a61c8 <col:16> '_Bool' true))
                        (BreakStmt 0x96a61f0 <line:337:4>))))
                  (BreakStmt 0x96a6250 <line:341:5>))))))
        (IfStmt 0x96a6460 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x96a6398 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x96a6338 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
            (UnaryOperator 0x96a6308 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x96a62ec <col:12> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter'))
            (DeclRefExpr 0x96a631c <col:21> '_InIter' lvalue ParmVar 0x96a18f0 '__end' '_InIter'))
          (BinaryOperator 0x96a6408 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x96a63bc <col:8> 'char_type':'_CharT' lvalue Var 0x96a20a0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x96a63f0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x96a63d4 <col:15> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))
          (BinaryOperator 0x96a6448 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x96a6420 <col:8> '_Bool' lvalue Var 0x96a2110 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x96a6438 <col:20> '_Bool' true))))))
  (IfStmt 0x96a68b0 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0x96a6538 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x96a6508 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0x96a64e4 <col:11, col:28> '<bound member function type>' .size 0x95a1440
          (ImplicitCastExpr 0x96a6528 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x96a64cc <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x96a6898 <line:353:9, line:362:9>
      (IfStmt 0x96a66a0 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0x96a65c8 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0x96a6570 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x96a6560 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96a6544 <col:9> '_Bool' lvalue Var 0x96a33d0 '__found_dec' '_Bool')))
          (UnaryOperator 0x96a65b0 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0x96a65a0 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96a6584 <col:25> '_Bool' lvalue Var 0x96a3430 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0x96a6678 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0x96a6668 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96a6650 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0x96a65e0 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0x96a6638 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0x96a6628 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0x96a6618 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0x96a65f8 <col:44> 'int' lvalue Var 0x96a2c00 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0x96a6878 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0x96a67e0 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0x96a67b8 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0x96a66e0 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x96a1560 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x96a6718 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x96a6700 <col:39> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x96a6768 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0x96a674c <col:11> 'const __cache_type *' lvalue Var 0x96a1f30 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x96a679c <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0x96a3490 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x96a6860 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x96a67f4 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96a19b0 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x96a6850 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x96a682c <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x96a68e8 <line:364:7, col:14>
    (DeclRefExpr 0x96a68cc <col:14> '_InIter' lvalue ParmVar 0x96a18b0 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0x96ac1b8 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0x96a7070 <line:374:9, col:57>
    0x96a7040 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x96a70f8 <line:375:2, col:33>
    0x96a7090 "Using__gnu_cxx::;")
  (DeclStmt 0x96a7280 <line:376:2, col:66>
    0x96a7250 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x96a7370 <line:377:2, col:67>
    0x96a7340 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x96a7478 <line:378:2, col:32>
    0x96a7440 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x96a7540 <line:379:2, col:40>
    0x96a74a0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x96a7510 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x96a74ec <col:24, col:29> '<bound member function type>' ._M_getloc 0x96123e0
          (ImplicitCastExpr 0x96a7530 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96a74d4 <col:24> 'class std::ios_base' lvalue ParmVar 0x96a6cf0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x96a7608 <line:380:2, col:40>
    0x96a7580 "const __cache_type *__lc =
      (CallExpr 0x96a75e8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x96a75b4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x96a7440 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x96a75cc <col:34> 'const class std::locale' lvalue Var 0x96a74a0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x96a76d8 <line:381:2, col:41>
    0x96a7650 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x96a76a0 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x96a7684 <col:24> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x96a7748 <line:382:2, col:29>
    0x96a76f0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x96a7730 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0x96a7930 <line:385:2, line:386:62>
    0x96a77b0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x96a7908 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x96a78f8 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96a78e0 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x96a7860 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x96a783c <col:41, col:46> '<bound member function type>' .flags 0x9611a00
            (ImplicitCastExpr 0x96a7880 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x96a77e4 <col:41> 'class std::ios_base' lvalue ParmVar 0x96a6cf0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x96a78d0 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96a78ac <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x96a7aa0 <line:387:2, col:49>
    0x96a7950 "const bool __oct =
      (BinaryOperator 0x96a7a20 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0x96a7a00 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0x96a79e0 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96a7984 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96a77b0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x96a7a10 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0x96a79f0 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96a79bc <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0x96a7ca0 <line:388:2, col:67>
    0x96a7ac0 "int __base =
      (ConditionalOperator 0x96a7c50 <col:15, col:66> 'int'
        (ImplicitCastExpr 0x96a7c40 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x96a7af4 <col:15> 'const _Bool' lvalue Var 0x96a7950 '__oct' 'const _Bool'))
        (IntegerLiteral 0x96a7b10 <col:23> 'int' 8)
        (ParenExpr 0x96a7c28 <col:27, col:66> 'int'
          (ConditionalOperator 0x96a7c08 <col:28, col:64> 'int'
            (BinaryOperator 0x96a7bc0 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0x96a7ba0 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0x96a7b80 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x96a7b28 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96a77b0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0x96a7bb0 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x96a7b90 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x96a7b5c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0x96a7bd8 <col:59> 'int' 16)
            (IntegerLiteral 0x96a7bf0 <col:64> 'int' 10))))")
  (DeclStmt 0x96a7db0 <line:391:2, col:33>
    0x96a7cc0 "bool __testeof =
      (CXXOperatorCallExpr 0x96a7d88 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0x96a7d28 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
        (DeclRefExpr 0x96a7cf4 <col:19> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')
        (DeclRefExpr 0x96a7d0c <col:28> '_InIter' lvalue ParmVar 0x96a6ca0 '__end' '_InIter'))")
  (DeclStmt 0x96a7e18 <line:394:2, col:25>
    0x96a7dd0 "bool __negative =
      (CXXBoolLiteralExpr 0x96a7e08 <col:20> '_Bool' false)")
  (IfStmt 0x96a8620 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0x96a7e50 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x96a7e40 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x96a7e28 <col:7> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')))
    (CompoundStmt 0x96a8600 <line:396:4, line:408:4>
      (BinaryOperator 0x96a7eb0 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x96a7e64 <col:6> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x96a7e98 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0x96a7e7c <col:13> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')))
      (BinaryOperator 0x96a7ff0 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0x96a7ec8 <col:6> '_Bool' lvalue Var 0x96a7dd0 '__negative' '_Bool')
        (CXXOperatorCallExpr 0x96a7fc8 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x96a7f68 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
          (DeclRefExpr 0x96a7ee0 <col:19> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0x96a7f50 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0x96a7ef8 <col:26> 'const _CharT *' lvalue Var 0x96a7650 '__lit' 'const _CharT *')
            (DeclRefExpr 0x96a7f2c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e1d0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0x96a85e0 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0x96a8420 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0x96a82e8 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0x96a8148 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0x96a8130 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0x96a8008 <col:11> '_Bool' lvalue Var 0x96a7dd0 '__negative' '_Bool')
                (CXXOperatorCallExpr 0x96a8108 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0x96a80a8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (DeclRefExpr 0x96a8020 <col:25> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x96a8090 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0x96a8038 <col:32> 'const _CharT *' lvalue Var 0x96a7650 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x96a806c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e210 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x96a82d0 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0x96a82b8 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0x96a82a0 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x96a8178 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x96a815c <col:8> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x96a8278 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x96a8218 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                    (DeclRefExpr 0x96a81ac <col:33> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x96a81e0 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x96a81c4 <col:40> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x96a8408 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0x96a83f0 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0x96a83c8 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0x96a8368 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96a8300 <col:8> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x96a8330 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x96a8318 <col:15> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x96a85c8 <line:402:8, line:407:8>
          (IfStmt 0x96a85a8 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x96a84e0 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x96a8480 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
              (UnaryOperator 0x96a8450 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0x96a8438 <col:9> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter'))
              (DeclRefExpr 0x96a8464 <col:18> '_InIter' lvalue ParmVar 0x96a6ca0 '__end' '_InIter'))
            (BinaryOperator 0x96a8550 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0x96a8504 <col:5> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x96a8538 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0x96a851c <col:12> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')))
            (BinaryOperator 0x96a8590 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0x96a8568 <col:5> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x96a8580 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x96a8698 <line:412:2, col:27>
    0x96a8650 "bool __found_zero =
      (CXXBoolLiteralExpr 0x96a8688 <col:22> '_Bool' false)")
  (DeclStmt 0x96a8710 <line:413:2, col:19>
    0x96a86c0 "int __sep_pos =
      (IntegerLiteral 0x96a86f8 <col:18> 'int' 0)")
  (WhileStmt 0x96a9508 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0x96a8748 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0x96a8738 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x96a8720 <col:10> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')))
    (CompoundStmt 0x96a94f0 <line:415:4, line:454:4>
      (IfStmt 0x96a92c0 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0x96a89c0 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0x96a88b8 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0x96a88a0 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x96a8778 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x96a875c <col:11> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x96a8878 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0x96a8818 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96a87ac <col:36> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x96a87e0 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0x96a87c4 <col:43> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x96a8998 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0x96a8938 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (DeclRefExpr 0x96a88cc <col:6> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x96a8900 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x96a88e4 <col:13> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x96a89d8 <line:418:8>)
        (IfStmt 0x96a92a0 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0x96a8bb8 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x96a8ac8 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x96a8a68 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96a89e0 <col:15> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0x96a8a50 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x96a89f8 <col:22> 'const _CharT *' lvalue Var 0x96a7650 '__lit' 'const _CharT *')
                (DeclRefExpr 0x96a8a2c <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0x96a8ba0 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0x96a8b88 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0x96a8b18 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x96a8b08 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x96a8aec <col:13> '_Bool' lvalue Var 0x96a8650 '__found_zero' '_Bool')))
                (BinaryOperator 0x96a8b70 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0x96a8b60 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0x96a8b2c <col:29> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))
                  (IntegerLiteral 0x96a8b48 <col:39> 'int' 10)))))
          (CompoundStmt 0x96a8dd0 <line:421:8, line:428:8>
            (BinaryOperator 0x96a8bf8 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0x96a8bd0 <col:3> '_Bool' lvalue Var 0x96a8650 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0x96a8be8 <col:18> '_Bool' true))
            (UnaryOperator 0x96a8c28 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0x96a8c10 <col:5> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int'))
            (IfStmt 0x96a8cf0 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0x96a8c90 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0x96a8c80 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x96a8c70 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0x96a8c3c <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96a77b0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0x96a8c58 <col:22> 'int' 0))
              (BinaryOperator 0x96a8cd8 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0x96a8ca8 <col:5> 'int' lvalue Var 0x96a7ac0 '__base' 'int')
                (IntegerLiteral 0x96a8cc0 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0x96a8db0 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0x96a8d50 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0x96a8d40 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0x96a8d0c <col:7> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))
                (IntegerLiteral 0x96a8d28 <col:17> 'int' 8))
              (BinaryOperator 0x96a8d98 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0x96a8d68 <col:5> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')
                (IntegerLiteral 0x96a8d80 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0x96a9280 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0x96a9058 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0x96a8df0 <line:429:15> '_Bool' lvalue Var 0x96a8650 '__found_zero' '_Bool')
              (ParenExpr 0x96a9040 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0x96a9028 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0x96a8ef0 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0x96a8e90 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                    (DeclRefExpr 0x96a8e08 <col:12> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x96a8e78 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x96a8e20 <col:19> 'const _CharT *' lvalue Var 0x96a7650 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x96a8e54 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e250 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0x96a9000 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x96a8fa0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                    (DeclRefExpr 0x96a8f14 <col:8> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x96a8f88 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0x96a8f2c <col:15> 'const _CharT *' lvalue Var 0x96a7650 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x96a8f64 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e290 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0x96a9260 <line:432:8, line:442:8>
              (IfStmt 0x96a9120 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0x96a90c0 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0x96a90b0 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x96a90a0 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96a9070 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96a77b0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0x96a9088 <col:22> 'int' 0))
                (BinaryOperator 0x96a9108 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0x96a90d8 <col:5> 'int' lvalue Var 0x96a7ac0 '__base' 'int')
                  (IntegerLiteral 0x96a90f0 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0x96a9240 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0x96a9180 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0x96a9170 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0x96a913c <col:7> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))
                  (IntegerLiteral 0x96a9158 <col:17> 'int' 16))
                (CompoundStmt 0x96a9220 <line:436:5, line:439:5>
                  (BinaryOperator 0x96a91c0 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0x96a9198 <col:7> '_Bool' lvalue Var 0x96a8650 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0x96a91b0 <col:22> '_Bool' false))
                  (BinaryOperator 0x96a9208 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0x96a91d8 <col:7> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')
                    (IntegerLiteral 0x96a91f0 <col:19> 'int' 0)))
                (BreakStmt 0x96a9238 <line:441:5>)))
            (BreakStmt 0x96a9278 <line:444:8>))))
      (IfStmt 0x96a94d0 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x96a9388 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x96a9328 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
          (UnaryOperator 0x96a92f8 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0x96a92dc <col:12> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter'))
          (DeclRefExpr 0x96a930c <col:21> '_InIter' lvalue ParmVar 0x96a6ca0 '__end' '_InIter'))
        (CompoundStmt 0x96a9478 <line:447:8, line:451:8>
          (BinaryOperator 0x96a93f8 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x96a93ac <col:3> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x96a93e0 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x96a93c4 <col:10> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')))
          (IfStmt 0x96a9458 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0x96a9438 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x96a9428 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96a9410 <col:8> '_Bool' lvalue Var 0x96a8650 '__found_zero' '_Bool')))
            (BreakStmt 0x96a9450 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0x96a94b8 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x96a9490 <col:8> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0x96a94a8 <col:20> '_Bool' true)))))
  (DeclStmt 0x96a96e8 <line:458:2, line:459:42>
    0x96a9530 "const size_t __len =
      (ImplicitCastExpr 0x96a96d8 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0x96a96c0 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0x96a96a0 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0x96a95a8 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0x96a9598 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0x96a9564 <col:24> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))
              (IntegerLiteral 0x96a9580 <col:34> 'int' 16))
            (BinaryOperator 0x96a9660 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0x96a9640 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0x96a95dc <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e420 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0x96a9650 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x96a961c <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0x96a9690 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0x96a9678 <col:35> 'int' lvalue Var 0x96a7ac0 '__base' 'int')))))")
  (DeclStmt 0x96a9758 <line:462:2, col:25>
    0x96a9700 "string __found_grouping =
      (CXXConstructExpr 0x96a9738 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x96a9838 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x96a9780 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x96a9768 <col:6> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x96a9808 <line:464:4, col:31> 'void'
      (MemberExpr 0x96a97cc <col:4, col:21> '<bound member function type>' .reserve 0x95a1f60
        (DeclRefExpr 0x96a97b4 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x96a9700 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x96a9828 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x96a97f0 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x96a98a8 <line:465:2, col:25>
    0x96a9860 "bool __testfail =
      (CXXBoolLiteralExpr 0x96a9898 <col:20> '_Bool' false)")
  (DeclStmt 0x96a9908 <line:466:2, col:29>
    0x96a98c0 "bool __testoverflow =
      (CXXBoolLiteralExpr 0x96a98f8 <col:24> '_Bool' false)")
  (DeclStmt 0x96a9d48 <line:467:2, line:470:49>
    0x96a9940 "const __unsigned_type __max =
      (ConditionalOperator 0x96a9d28 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0x96a9ad0 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0x96a9ab8 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0x96a9974 <col:5> '_Bool' lvalue Var 0x96a7dd0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x96a9a80 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0x96a9c18 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x96a9bd8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CXXDependentScopeMemberExpr 0x96a9ba0 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0x96a9cf0 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0x96a9de0 <line:471:2, col:47>
    0x96a9d60 "const __unsigned_type __smax =
      (BinaryOperator 0x96a9dc8 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0x96a9d94 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9940 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x96a9dac <col:41> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))")
  (DeclStmt 0x96a9e50 <line:472:2, col:30>
    0x96a9e00 "__unsigned_type __result =
      (IntegerLiteral 0x96a9e38 <col:29> 'int' 0)")
  (DeclStmt 0x96a9ec0 <line:473:2, col:17>
    0x96a9e70 "int __digit =
      (IntegerLiteral 0x96a9ea8 <col:16> 'int' 0)")
  (DeclStmt 0x96a9fe8 <line:474:2, col:60>
    0x96a9ee0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x96a9fc0 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x96a9f70 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (DeclRefExpr 0x96a9f14 <col:32> 'const _CharT *' lvalue Var 0x96a7650 '__lit' 'const _CharT *')
        (DeclRefExpr 0x96a9f4c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x967e2d0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x96ab500 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0x96aa048 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x96aa010 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0x96a9ff8 <col:7> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *')))
    (WhileStmt 0x96aa778 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0x96aa088 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x96aa078 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x96aa05c <col:12> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')))
      (CompoundStmt 0x96aa758 <line:479:6, line:498:6>
        (BinaryOperator 0x96aa178 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0x96aa09c <col:8> 'int' lvalue Var 0x96a9e70 '__digit' 'int')
          (CallExpr 0x96aa150 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0x96aa0c8 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0x96aa108 <col:26> 'const char_type *' lvalue Var 0x96a9ee0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0x96aa120 <col:38> 'const size_t':'const unsigned int' lvalue Var 0x96a9530 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0x96aa138 <col:45> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')))
        (IfStmt 0x96aa208 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0x96aa1e8 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0x96aa1d8 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0x96aa190 <col:12> 'int' lvalue Var 0x96a9e70 '__digit' 'int'))
            (UnaryOperator 0x96aa1c0 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0x96aa1a8 <col:24> 'int' 1)))
          (BreakStmt 0x96aa200 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0x96aa5a8 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x96aa2a8 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x96aa258 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
            (DeclRefExpr 0x96aa224 <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0x96aa23c <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9d60 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0x96aa2f8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x96aa2cc <col:3> '_Bool' lvalue Var 0x96a98c0 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0x96aa2e8 <col:20> '_Bool' true))
          (CompoundStmt 0x96aa588 <line:487:3, line:492:3>
            (CompoundAssignOperator 0x96aa340 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x96aa310 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x96aa328 <col:17> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))
            (CXXOperatorCallExpr 0x96aa4e0 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0x96aa4a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604b40 0x9605f00 0x9607170)
              (DeclRefExpr 0x96aa360 <col:5> '_Bool' lvalue Var 0x96a98c0 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0x96aa478 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x96aa428 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
                (DeclRefExpr 0x96aa378 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0x96aa400 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x96aa3c0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x96aa390 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9940 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x96aa3a8 <col:42> 'int' lvalue Var 0x96a9e70 '__digit' 'int'))))
            (CompoundAssignOperator 0x96aa538 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x96aa504 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x96aa51c <col:17> 'int' lvalue Var 0x96a9e70 '__digit' 'int'))
            (UnaryOperator 0x96aa570 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0x96aa558 <col:7> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int'))))
        (IfStmt 0x96aa738 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x96aa670 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x96aa610 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
            (UnaryOperator 0x96aa5e0 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x96aa5c4 <col:14> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter'))
            (DeclRefExpr 0x96aa5f4 <col:23> '_InIter' lvalue ParmVar 0x96a6ca0 '__end' '_InIter'))
          (BinaryOperator 0x96aa6e0 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x96aa694 <col:3> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x96aa6c8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x96aa6ac <col:10> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')))
          (BinaryOperator 0x96aa720 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x96aa6f8 <col:3> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x96aa710 <col:15> '_Bool' true)))))
    (WhileStmt 0x96ab4e8 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0x96aa7b8 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x96aa7a8 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x96aa78c <col:12> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')))
      (CompoundStmt 0x96ab4d0 <line:501:6, line:546:6>
        (IfStmt 0x96ab320 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0x96aa910 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x96aa7e8 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0x96aa7cc <col:12> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x96aa8e8 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x96aa888 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96aa81c <col:37> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x96aa850 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x96aa834 <col:44> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x96aab00 <line:505:3, line:518:3>
            (IfStmt 0x96aaae0 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0x96aa950 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x96aa940 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0x96aa928 <col:9> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')))
              (CompoundStmt 0x96aaa68 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0x96aa9f8 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x96aa9e8 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x96aa9d0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x96aa95c <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x96a9700 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0x96aa9b8 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0x96aa9a8 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0x96aa998 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0x96aa974 <col:47> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')))))
                (BinaryOperator 0x96aaa50 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0x96aaa1c <col:9> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')
                  (IntegerLiteral 0x96aaa38 <col:21> 'int' 0)))
              (CompoundStmt 0x96aaac8 <line:514:7, line:517:7>
                (BinaryOperator 0x96aaaa8 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0x96aaa80 <col:9> '_Bool' lvalue Var 0x96a9860 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0x96aaa98 <col:22> '_Bool' true))
                (BreakStmt 0x96aaac0 <line:516:9>))))
          (IfStmt 0x96ab300 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x96aabe0 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0x96aab80 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96aab14 <col:17> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x96aab48 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0x96aab2c <col:24> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *')))
            (BreakStmt 0x96aac08 <line:520:3>)
            (CompoundStmt 0x96ab2d8 <line:522:3, line:540:3>
              (DeclStmt 0x96aad40 <line:523:5, line:524:50>
                0x96aac20 "const char_type *__q =
                  (CallExpr 0x96aad18 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x96aac98 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0x96aaccc <col:27> 'const char_type *' lvalue Var 0x96a9ee0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0x96aace4 <col:39> 'const size_t':'const unsigned int' lvalue Var 0x96a9530 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0x96aacfc <col:46> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x96aad88 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0x96aad68 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x96aad50 <col:10> 'const char_type *' lvalue Var 0x96aac20 '__q' 'const char_type *'))
                (BreakStmt 0x96aad80 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0x96aae58 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0x96aada4 <col:5> 'int' lvalue Var 0x96a9e70 '__digit' 'int')
                (CXXOperatorCallExpr 0x96aae30 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x96aadf0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (DeclRefExpr 0x96aadbc <col:15> 'const char_type *' lvalue Var 0x96aac20 '__q' 'const char_type *')
                  (DeclRefExpr 0x96aadd4 <col:21> 'const char_type *' lvalue Var 0x96a9ee0 '__lit_zero' 'const char_type *')))
              (IfStmt 0x96aaf18 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0x96aaeb0 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0x96aaea0 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0x96aae70 <col:9> 'int' lvalue Var 0x96a9e70 '__digit' 'int'))
                  (IntegerLiteral 0x96aae88 <col:19> 'int' 15))
                (CompoundAssignOperator 0x96aaef8 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0x96aaec8 <col:7> 'int' lvalue Var 0x96a9e70 '__digit' 'int')
                  (IntegerLiteral 0x96aaee0 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0x96ab2b8 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x96aafb8 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0x96aaf68 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
                  (DeclRefExpr 0x96aaf34 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x96aaf4c <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9d60 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0x96ab008 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x96aafdc <col:7> '_Bool' lvalue Var 0x96a98c0 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0x96aaff8 <col:24> '_Bool' true))
                (CompoundStmt 0x96ab298 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0x96ab050 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x96ab020 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x96ab038 <col:21> 'int' lvalue Var 0x96a7ac0 '__base' 'int'))
                  (CXXOperatorCallExpr 0x96ab1f0 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x96ab1b0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604b40 0x9605f00 0x9607170)
                    (DeclRefExpr 0x96ab070 <col:9> '_Bool' lvalue Var 0x96a98c0 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0x96ab188 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0x96ab138 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
                      (DeclRefExpr 0x96ab088 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0x96ab110 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x96ab0d0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                        (DeclRefExpr 0x96ab0a0 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9940 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0x96ab0b8 <col:46> 'int' lvalue Var 0x96a9e70 '__digit' 'int'))))
                  (CompoundAssignOperator 0x96ab248 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x96ab214 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x96ab22c <col:21> 'int' lvalue Var 0x96a9e70 '__digit' 'int'))
                  (UnaryOperator 0x96ab280 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x96ab268 <col:11> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')))))))
        (IfStmt 0x96ab4b0 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x96ab3e8 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x96ab388 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
            (UnaryOperator 0x96ab358 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x96ab33c <col:14> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter'))
            (DeclRefExpr 0x96ab36c <col:23> '_InIter' lvalue ParmVar 0x96a6ca0 '__end' '_InIter'))
          (BinaryOperator 0x96ab458 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x96ab40c <col:3> 'char_type':'_CharT' lvalue Var 0x96a76f0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x96ab440 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x96ab424 <col:10> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')))
          (BinaryOperator 0x96ab498 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x96ab470 <col:3> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x96ab488 <col:15> '_Bool' true))))))
  (IfStmt 0x96ab840 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x96ab588 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x96ab558 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0x96ab534 <col:6, col:23> '<bound member function type>' .size 0x95a1440
          (ImplicitCastExpr 0x96ab578 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x96ab51c <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x96a9700 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x96ab828 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0x96ab630 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0x96ab620 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96ab608 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x95a3360 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0x96ab594 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x96a9700 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0x96ab5f0 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x96ab5e0 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0x96ab5d0 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0x96ab5ac <col:44> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int')))))
      (IfStmt 0x96ab808 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0x96ab770 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0x96ab748 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0x96ab66c <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x96a1560 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x96ab6a8 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0x96ab68c <col:34> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x96ab6f8 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0x96ab6dc <col:6> 'const __cache_type *' lvalue Var 0x96a7580 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x96ab72c <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0x96a9700 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x96ab7f0 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x96ab784 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96a6d60 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x96ab7e0 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x96ab7bc <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x96ac050 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0x96ab9f0 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0x96ab9b0 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0x96ab998 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0x96ab8f0 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0x96ab898 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x96ab888 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x96ab878 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0x96ab85c <col:8> 'int' lvalue Var 0x96a86c0 '__sep_pos' 'int'))))
            (UnaryOperator 0x96ab8d8 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0x96ab8c8 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96ab8ac <col:22> '_Bool' lvalue Var 0x96a8650 '__found_zero' '_Bool'))))
          (UnaryOperator 0x96ab980 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0x96ab970 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0x96ab940 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0x96ab920 <col:39, col:56> '<bound member function type>' .size 0x95a1440
                  (ImplicitCastExpr 0x96ab960 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0x96ab908 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0x96a9700 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0x96ab9e0 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x96ab9c4 <col:9> '_Bool' lvalue Var 0x96a9860 '__testfail' '_Bool')))
    (CompoundStmt 0x96abad0 <line:565:4, line:568:4>
      (BinaryOperator 0x96aba38 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0x96aba08 <col:6> '_ValueT' lvalue ParmVar 0x96a6dd0 '__v' '_ValueT &')
        (IntegerLiteral 0x96aba20 <col:12> 'int' 0))
      (BinaryOperator 0x96abab8 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x96aba50 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96a6d60 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0x96abaa8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x96aba84 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0x96ac030 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0x96abb00 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x96abae8 <col:11> '_Bool' lvalue Var 0x96a98c0 '__testoverflow' '_Bool'))
      (CompoundStmt 0x96abf10 <line:570:4, line:577:4>
        (IfStmt 0x96abe70 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0x96abc18 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0x96abb0c <line:571:10> '_Bool' lvalue Var 0x96a7dd0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x96abbe0 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0x96abd38 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x96abc30 <col:8> '_ValueT' lvalue ParmVar 0x96a6dd0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x96abd00 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0x96abe58 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x96abd50 <col:8> '_ValueT' lvalue ParmVar 0x96a6dd0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x96abe20 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0x96abef8 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x96abe8c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96a6d60 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x96abee8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x96abec4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0x96ac018 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0x96abf28 <col:4> '_ValueT' lvalue ParmVar 0x96a6dd0 '__v' '_ValueT &')
        (ConditionalOperator 0x96abff8 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0x96abfe8 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x96abf40 <col:10> '_Bool' lvalue Var 0x96a7dd0 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0x96abfb0 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x96abf70 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x96abf58 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0x96abfd0 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96a9e00 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0x96ac170 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0x96ac088 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x96ac06c <col:6> '_Bool' lvalue Var 0x96a7cc0 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0x96ac148 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x96ac138 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96ac100 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x96ac094 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96a6d60 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x96ac0f0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x96ac0cc <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x96ac1a8 <line:583:2, col:9>
    (DeclRefExpr 0x96ac18c <col:9> '_InIter' lvalue ParmVar 0x96a6c60 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x96afbd8 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0x96afb90 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0x96ac908 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0x96ac8f8 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0x96ac8e0 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x96ac8b8 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x96ac8a8 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96ac890 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0x96ac810 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0x96ac7ec <col:13, col:18> '<bound member function type>' .flags 0x9611a00
                (ImplicitCastExpr 0x96ac830 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0x96ac794 <col:13> 'class std::ios_base' lvalue ParmVar 0x96ac580 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0x96ac880 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96ac85c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608090 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0x96acee0 <line:595:9, line:612:9>
      (DeclStmt 0x96ac9a8 <line:599:4, col:17>
        0x96ac930 "long __l =
          (ImplicitCastExpr 0x96ac998 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0x96ac980 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0x96ac968 <col:16> 'int' 1)))")
      (BinaryOperator 0x96acac8 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0x96ac9b8 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter')
        (CallExpr 0x96aca98 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0x96ac9e0 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0x96aca1c <col:34> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0x96aca34 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0x96ac530 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0x96aca4c <col:48> 'class std::ios_base' lvalue ParmVar 0x96ac580 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x96aca64 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0x96aca7c <col:61> 'long' lvalue Var 0x96ac930 '__l' 'long')))
      (IfStmt 0x96acec0 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0x96acbb0 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0x96acb30 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0x96acb10 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0x96acae0 <col:8> 'long' lvalue Var 0x96ac930 '__l' 'long'))
            (ImplicitCastExpr 0x96acb20 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0x96acaf8 <col:15> 'int' 0)))
          (BinaryOperator 0x96acb98 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0x96acb78 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0x96acb48 <col:20> 'long' lvalue Var 0x96ac930 '__l' 'long'))
            (ImplicitCastExpr 0x96acb88 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0x96acb60 <col:27> 'int' 1))))
        (BinaryOperator 0x96acc38 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x96acbc8 <col:6> '_Bool' lvalue ParmVar 0x96ac640 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0x96acc20 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0x96acc10 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0x96acc00 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0x96acbe8 <col:17> 'long' lvalue Var 0x96ac930 '__l' 'long')))))
        (CompoundStmt 0x96acea0 <line:604:6, line:611:6>
          (BinaryOperator 0x96acc78 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x96acc50 <col:8> '_Bool' lvalue ParmVar 0x96ac640 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x96acc68 <col:14> '_Bool' true))
          (BinaryOperator 0x96accf8 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0x96acc90 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0x96acce8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x96accc4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0x96ace80 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x96acda0 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x96acd40 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96acd10 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x96acd28 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x96ac530 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0x96ace58 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x96ace48 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96ace30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x96acdc4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x96ace20 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x96acdfc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0x96afb50 <line:614:9, line:680:2>
      (DeclStmt 0x96acfe0 <line:616:4, col:50>
        0x96acfb0 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x96ad0e8 <line:617:4, col:34>
        0x96ad0b0 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x96ad1b0 <line:618:4, col:42>
        0x96ad110 "const std::locale &__loc =
          (CXXMemberCallExpr 0x96ad180 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x96ad15c <col:26, col:31> '<bound member function type>' ._M_getloc 0x96123e0
              (ImplicitCastExpr 0x96ad1a0 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x96ad144 <col:26> 'class std::ios_base' lvalue ParmVar 0x96ac580 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x96ad278 <line:619:4, col:42>
        0x96ad1f0 "const __cache_type *__lc =
          (CallExpr 0x96ad258 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x96ad224 <col:31> '__use_cache<__cache_type>' lvalue Var 0x96ad0b0 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x96ad23c <col:36> 'const class std::locale' lvalue Var 0x96ad110 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x96ad2d8 <line:621:4, col:23>
        0x96ad290 "bool __testf =
          (CXXBoolLiteralExpr 0x96ad2c8 <col:19> '_Bool' true)")
      (DeclStmt 0x96ad338 <line:622:4, col:23>
        0x96ad2f0 "bool __testt =
          (CXXBoolLiteralExpr 0x96ad328 <col:19> '_Bool' true)")
      (DeclStmt 0x96ae490 <line:623:4, col:47>
        0x96ad350 "bool __donef =
          (CXXOperatorCallExpr 0x96ae468 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x96ad3f0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (CXXDependentScopeMemberExpr 0x96ad3a0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x96ad384 <col:19> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x96ad3d8 <col:46> 'int' 0))")
      (DeclStmt 0x96ae5d8 <line:624:4, col:46>
        0x96ae4b0 "bool __donet =
          (CXXOperatorCallExpr 0x96ae5b0 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x96ae550 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (CXXDependentScopeMemberExpr 0x96ae500 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x96ae4e4 <col:19> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x96ae538 <col:45> 'int' 0))")
      (DeclStmt 0x96ae638 <line:625:4, col:26>
        0x96ae5f0 "bool __testeof =
          (CXXBoolLiteralExpr 0x96ae628 <col:21> '_Bool' false)")
      (DeclStmt 0x96ae6b0 <line:626:4, col:18>
        0x96ae650 "size_t __n =
          (ImplicitCastExpr 0x96ae6a0 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x96ae688 <col:17> 'int' 0))")
      (WhileStmt 0x96af1f8 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0x96ae740 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0x96ae6e8 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0x96ae6d8 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96ae6c0 <col:12> '_Bool' lvalue Var 0x96ad350 '__donef' '_Bool')))
          (UnaryOperator 0x96ae728 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x96ae718 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96ae6fc <col:24> '_Bool' lvalue Var 0x96ae4b0 '__donet' '_Bool'))))
        (CompoundStmt 0x96af1b8 <line:628:6, line:657:6>
          (IfStmt 0x96ae870 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x96ae7e8 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x96ae788 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96ae758 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x96ae770 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x96ac530 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0x96ae858 <line:630:3, line:633:3>
              (BinaryOperator 0x96ae838 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x96ae80c <col:5> '_Bool' lvalue Var 0x96ae5f0 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x96ae828 <col:17> '_Bool' true))
              (BreakStmt 0x96ae850 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0x96ae908 <line:635:8, col:36>
            0x96ae8a0 "const char_type __c =
              (UnaryOperator 0x96ae8f0 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0x96ae8d4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0x96aeaa8 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0x96ae940 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x96ae930 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96ae918 <col:13> '_Bool' lvalue Var 0x96ad350 '__donef' '_Bool')))
            (BinaryOperator 0x96aea90 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0x96ae954 <col:3> '_Bool' lvalue Var 0x96ad290 '__testf' '_Bool')
              (CXXOperatorCallExpr 0x96aea68 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x96aea08 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96ae96c <col:13> 'const char_type':'const _CharT' lvalue Var 0x96ae8a0 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x96ae9f0 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x96ae9a0 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x96ae984 <col:20> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x96ae9d4 <col:39> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x96aeb50 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0x96aeb30 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x96aeaf0 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96aeae0 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96aeac4 <col:13> '_Bool' lvalue Var 0x96ad290 '__testf' '_Bool')))
              (ImplicitCastExpr 0x96aeb20 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96aeb04 <col:24> '_Bool' lvalue Var 0x96ae4b0 '__donet' '_Bool')))
            (BreakStmt 0x96aeb48 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0x96aed00 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0x96aeb98 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x96aeb88 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96aeb6c <col:13> '_Bool' lvalue Var 0x96ae4b0 '__donet' '_Bool')))
            (BinaryOperator 0x96aece8 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0x96aebac <col:3> '_Bool' lvalue Var 0x96ad2f0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x96aecc0 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0x96aec60 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96aebc4 <col:13> 'const char_type':'const _CharT' lvalue Var 0x96ae8a0 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x96aec48 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x96aebf8 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x96aebdc <col:20> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x96aec2c <col:38> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x96aeda8 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0x96aed88 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x96aed48 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96aed38 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96aed1c <col:13> '_Bool' lvalue Var 0x96ad2f0 '__testt' '_Bool')))
              (ImplicitCastExpr 0x96aed78 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96aed5c <col:24> '_Bool' lvalue Var 0x96ad350 '__donef' '_Bool')))
            (BreakStmt 0x96aeda0 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0x96aee68 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0x96aee48 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0x96aedf0 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96aede0 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96aedc4 <col:13> '_Bool' lvalue Var 0x96ad2f0 '__testt' '_Bool')))
              (UnaryOperator 0x96aee30 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96aee20 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96aee04 <col:25> '_Bool' lvalue Var 0x96ad290 '__testf' '_Bool'))))
            (BreakStmt 0x96aee60 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0x96aeea0 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0x96aee84 <col:10> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0x96aeed0 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x96aeeb4 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0x96af038 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x96aeee4 <col:8> '_Bool' lvalue Var 0x96ad350 '__donef' '_Bool')
            (BinaryOperator 0x96af020 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x96aef28 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96aef18 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96aeefc <col:19> '_Bool' lvalue Var 0x96ad290 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0x96aeff8 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x96aefa8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
                (DeclRefExpr 0x96aef3c <col:30> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x96aef70 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x96aef54 <col:37> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0x96af1a0 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x96af050 <col:8> '_Bool' lvalue Var 0x96ae4b0 '__donet' '_Bool')
            (BinaryOperator 0x96af188 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x96af090 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96af080 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96af068 <col:19> '_Bool' lvalue Var 0x96ad2f0 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0x96af160 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x96af110 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
                (DeclRefExpr 0x96af0a4 <col:30> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x96af0d8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x96af0bc <col:37> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *')))))))
      (IfStmt 0x96afb30 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0x96af348 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0x96af318 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0x96af20c <col:8> '_Bool' lvalue Var 0x96ad290 '__testf' '_Bool')
            (CXXOperatorCallExpr 0x96af2f0 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0x96af290 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x96af224 <col:19> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0x96af258 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0x96af23c <col:26> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0x96af330 <col:53> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0x96af668 <line:659:6, line:665:6>
          (BinaryOperator 0x96af388 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x96af360 <col:8> '_Bool' lvalue ParmVar 0x96ac640 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x96af378 <col:14> '_Bool' false))
          (IfStmt 0x96af648 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0x96af4a8 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0x96af3a0 <col:12> '_Bool' lvalue Var 0x96ad2f0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x96af480 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0x96af420 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96af3b8 <col:23> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x96af3e8 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x96af3d0 <col:30> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0x96af528 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x96af4c0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x96af518 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x96af4f4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x96af630 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x96af540 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x96af620 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x96af600 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x96af5f0 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x96af558 <col:11> '_Bool' lvalue Var 0x96ae5f0 '__testeof' '_Bool'))
                  (DeclRefExpr 0x96af58c <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x96af5cc <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0x96afb10 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0x96af7b8 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0x96af788 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0x96af680 <col:13> '_Bool' lvalue Var 0x96ad2f0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x96af760 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0x96af700 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (DeclRefExpr 0x96af698 <col:24> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x96af6c8 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x96af6b0 <col:31> 'const __cache_type *' lvalue Var 0x96ad1f0 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0x96af7a0 <col:57> 'size_t':'unsigned int' lvalue Var 0x96ae650 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0x96af918 <line:667:6, line:670:6>
            (BinaryOperator 0x96af7f8 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x96af7d0 <col:8> '_Bool' lvalue ParmVar 0x96ac640 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x96af7e8 <col:14> '_Bool' true))
            (BinaryOperator 0x96af900 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x96af810 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x96af8f0 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x96af8d0 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x96af8c0 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x96af828 <col:16> '_Bool' lvalue Var 0x96ae5f0 '__testeof' '_Bool'))
                  (DeclRefExpr 0x96af85c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x96af89c <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0x96afaf0 <line:672:6, line:679:6>
            (BinaryOperator 0x96af958 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x96af930 <col:8> '_Bool' lvalue ParmVar 0x96ac640 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x96af948 <col:14> '_Bool' false))
            (BinaryOperator 0x96af9d8 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x96af970 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x96af9c8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x96af9a4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x96afad0 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0x96afa08 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x96af9f0 <col:12> '_Bool' lvalue Var 0x96ae5f0 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0x96afaa8 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x96afa98 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x96afa80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x96afa14 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96ac5f0 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0x96afa70 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x96afa4c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0x96afbc8 <line:681:7, col:14>
    (DeclRefExpr 0x96afbac <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x96ac4f0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x96b0710 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0x96b0198 <line:690:7, col:20>
    0x96b0140 "string __xtrc =
      (CXXConstructExpr 0x96b0178 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x96b01f8 <line:691:7, col:24> 'void'
    (MemberExpr 0x96b01c0 <col:7, col:14> '<bound member function type>' .reserve 0x95a1f60
      (DeclRefExpr 0x96b01a8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x96b0140 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x96b0218 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x96b01e0 <col:22> 'int' 32)))
  (BinaryOperator 0x96b0318 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x96b0224 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x96afe90 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x96b02e8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x96b0250 <col:15> '<bound member function type>' ->_M_extract_float 0x96a1ab0
        (CXXThisExpr 0x96b0240 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x96b0270 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x96afe90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b0288 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x96afed0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b02a0 <col:46> 'class std::ios_base' lvalue ParmVar 0x96aff20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96b02b8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96aff90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x96b02d0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x96b0140 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x96b0518 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0x96b0508 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x96b04a0 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x96652b0 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9665080 '__convert_to_v')))
    (CXXMemberCallExpr 0x96b03c8 <col:27, col:40> 'const char *'
      (MemberExpr 0x96b03a4 <col:27, col:34> '<bound member function type>' .c_str 0x95b1ce0
        (ImplicitCastExpr 0x96b03e8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x96b038c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x96b0140 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x96b03f4 <col:43> 'float' lvalue ParmVar 0x96affe0 '__v' 'float &')
    (DeclRefExpr 0x96b040c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96aff90 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x96b0548 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x96b0450 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x96b0440 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96b0424 <col:55> '__c_locale (void)' lvalue CXXMethod 0x95e63d0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x96b06c8 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96b05e8 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x96b0588 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
      (DeclRefExpr 0x96b0554 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x96afe90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b056c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x96afed0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x96b06a0 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x96b0690 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96b0678 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x96b060c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96aff90 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x96b0668 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x96b0644 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x96b0700 <line:696:7, col:14>
    (DeclRefExpr 0x96b06e4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x96afe90 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x96b1260 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0x96b0ce8 <line:705:7, col:20>
    0x96b0c90 "string __xtrc =
      (CXXConstructExpr 0x96b0cc8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x96b0d48 <line:706:7, col:24> 'void'
    (MemberExpr 0x96b0d10 <col:7, col:14> '<bound member function type>' .reserve 0x95a1f60
      (DeclRefExpr 0x96b0cf8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x96b0c90 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x96b0d68 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x96b0d30 <col:22> 'int' 32)))
  (BinaryOperator 0x96b0e68 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x96b0d74 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x96b09e0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x96b0e38 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x96b0da0 <col:15> '<bound member function type>' ->_M_extract_float 0x96a1ab0
        (CXXThisExpr 0x96b0d90 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x96b0dc0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x96b09e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b0dd8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x96b0a20 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b0df0 <col:46> 'class std::ios_base' lvalue ParmVar 0x96b0a70 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96b0e08 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b0ae0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x96b0e20 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x96b0c90 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x96b1068 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0x96b1058 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x96b0ff0 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9665830 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9665080 '__convert_to_v')))
    (CXXMemberCallExpr 0x96b0f18 <col:27, col:40> 'const char *'
      (MemberExpr 0x96b0ef4 <col:27, col:34> '<bound member function type>' .c_str 0x95b1ce0
        (ImplicitCastExpr 0x96b0f38 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x96b0edc <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x96b0c90 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x96b0f44 <col:43> 'double' lvalue ParmVar 0x96b0b30 '__v' 'double &')
    (DeclRefExpr 0x96b0f5c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b0ae0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x96b1098 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x96b0fa0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x96b0f90 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96b0f74 <col:55> '__c_locale (void)' lvalue CXXMethod 0x95e63d0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x96b1218 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96b1138 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x96b10d8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
      (DeclRefExpr 0x96b10a4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x96b09e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b10bc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x96b0a20 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x96b11f0 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x96b11e0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96b11c8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x96b115c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b0ae0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x96b11b8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x96b1194 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x96b1250 <line:711:7, col:14>
    (DeclRefExpr 0x96b1234 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x96b09e0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x96b1db0 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0x96b1838 <line:737:7, col:20>
    0x96b17e0 "string __xtrc =
      (CXXConstructExpr 0x96b1818 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x96b1898 <line:738:7, col:24> 'void'
    (MemberExpr 0x96b1860 <col:7, col:14> '<bound member function type>' .reserve 0x95a1f60
      (DeclRefExpr 0x96b1848 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x96b17e0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x96b18b8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x96b1880 <col:22> 'int' 32)))
  (BinaryOperator 0x96b19b8 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x96b18c4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x96b1530 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x96b1988 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x96b18f0 <col:15> '<bound member function type>' ->_M_extract_float 0x96a1ab0
        (CXXThisExpr 0x96b18e0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x96b1910 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x96b1530 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b1928 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x96b1570 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b1940 <col:46> 'class std::ios_base' lvalue ParmVar 0x96b15c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96b1958 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b1630 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x96b1970 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x96b17e0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x96b1bb8 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0x96b1ba8 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x96b1b40 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9665d90 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9665080 '__convert_to_v')))
    (CXXMemberCallExpr 0x96b1a68 <col:27, col:40> 'const char *'
      (MemberExpr 0x96b1a44 <col:27, col:34> '<bound member function type>' .c_str 0x95b1ce0
        (ImplicitCastExpr 0x96b1a88 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x96b1a2c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x96b17e0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x96b1a94 <col:43> 'long double' lvalue ParmVar 0x96b1680 '__v' 'long double &')
    (DeclRefExpr 0x96b1aac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b1630 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x96b1be8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x96b1af0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x96b1ae0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96b1ac4 <col:55> '__c_locale (void)' lvalue CXXMethod 0x95e63d0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x96b1d68 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96b1c88 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x96b1c28 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
      (DeclRefExpr 0x96b1bf4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x96b1530 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b1c0c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x96b1570 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x96b1d40 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x96b1d30 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96b1d18 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x96b1cac <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b1630 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x96b1d08 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x96b1ce4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x96b1da0 <line:743:7, col:14>
    (DeclRefExpr 0x96b1d84 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x96b1530 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x96b2df8 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0x96b2390 <line:753:7, col:49>
    0x96b2360 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0x96b24a0 <line:754:7, col:42>
    0x96b23c0 "const fmtflags __fmt =
      (CXXMemberCallExpr 0x96b2470 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x96b244c <col:30, col:35> '<bound member function type>' .flags 0x9611a00
          (ImplicitCastExpr 0x96b2490 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96b23f4 <col:30> 'class std::ios_base' lvalue ParmVar 0x96b2110 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0x96b26f0 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x96b26cc <col:7, col:12> '<bound member function type>' .flags 0x9611af0
      (DeclRefExpr 0x96b24b0 <col:7> 'class std::ios_base' lvalue ParmVar 0x96b2110 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x96b26a8 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x96b2698 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96b2680 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x96044c0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x96b2618 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x96b25f0 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x96b25e0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96b25c8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x96b25b8 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96b2508 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b23c0 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0x96b2598 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x96b2588 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96b2570 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9604900 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x96b2560 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96b253c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0x96b2670 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x96b264c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0x96b2af0 <line:757:7, line:759:57>
    0x96b2ac0 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0x96b2b58 <line:761:7, col:24>
    0x96b2b20 "_UIntPtrType __ul")
  (BinaryOperator 0x96b2c78 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0x96b2b68 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x96b2080 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x96b2c48 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x96b2b90 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0x96b2bcc <col:30> 'iter_type':'_InIter' lvalue ParmVar 0x96b2080 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b2be4 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0x96b20c0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x96b2bfc <col:44> 'class std::ios_base' lvalue ParmVar 0x96b2110 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96b2c14 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96b2180 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x96b2c2c <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0x96b2b20 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0x96b2d20 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x96b2d00 <col:7, col:12> '<bound member function type>' .flags 0x9611af0
      (DeclRefExpr 0x96b2c90 <col:7> 'class std::ios_base' lvalue ParmVar 0x96b2110 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x96b2d40 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96b2ce8 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b23c0 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0x96b2db8 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0x96b2d4c <col:7> 'void *' lvalue ParmVar 0x96b21d0 '__v' 'void *&')
    (CXXReinterpretCastExpr 0x96b2da0 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0x96b2d90 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x96b2d64 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0x96b2b20 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0x96b2de8 <line:768:7, col:14>
    (DeclRefExpr 0x96b2dd0 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x96b2080 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0x96b3758 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0x96b36a0 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x96b35d8 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0x96b360c <col:51> 'class std::ios_base' lvalue ParmVar 0x96b3160 '__io' 'class std::ios_base &')
    (DeclRefExpr 0x96b3624 <col:57> '_CharT' lvalue ParmVar 0x96b30d0 '__fill' '_CharT')
    (DeclRefExpr 0x96b363c <col:65> '_CharT *' lvalue ParmVar 0x96b31d0 '__new' '_CharT *')
    (DeclRefExpr 0x96b3654 <line:782:9> 'const _CharT *' lvalue ParmVar 0x96b3240 '__cs' 'const _CharT *')
    (DeclRefExpr 0x96b366c <col:15> 'streamsize':'int' lvalue ParmVar 0x96b3110 '__w' 'streamsize':'int')
    (DeclRefExpr 0x96b3684 <col:20> 'int' lvalue ParmVar 0x96b3290 '__len' 'int &'))
  (BinaryOperator 0x96b3740 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0x96b36d4 <col:7> 'int' lvalue ParmVar 0x96b3290 '__len' 'int &')
    (CXXStaticCastExpr 0x96b3728 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0x96b3718 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x96b36ec <col:32> 'streamsize':'int' lvalue ParmVar 0x96b3110 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0x96b4a60 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0x96b3b80 <line:793:7, col:31>
    0x96b3b30 "_CharT *__buf =
      (DeclRefExpr 0x96b3b64 <col:23> '_CharT *' lvalue ParmVar 0x96b3850 '__bufend' '_CharT *')")
  (IfStmt 0x96b4998 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x96b3c38 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0x96b3be0 <col:11, col:39> 'long'
        (ImplicitCastExpr 0x96b3bd0 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96b3b90 <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x96b3c18 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x96b3c08 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x96b3ba8 <col:28> '_Bool' lvalue ParmVar 0x96b39b0 '__dec' '_Bool')))
        (ImplicitCastExpr 0x96b3c28 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x96b3bc0 <col:35> '_Bool' true))))
    (CompoundStmt 0x96b3f28 <line:795:2, line:803:2>
      (DoStmt 0x96b3f10 <line:797:4, line:802:19>
        (CompoundStmt 0x96b3e40 <line:798:6, line:801:6>
          (BinaryOperator 0x96b3dd8 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0x96b3c78 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x96b3c60 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x96b3c44 <col:11> '_CharT *' lvalue Var 0x96b3b30 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0x96b3dc0 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0x96b3c8c <col:19> 'const _CharT *' lvalue ParmVar 0x96b3900 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0x96b3d98 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0x96b3d48 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                (ParenExpr 0x96b3cf0 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0x96b3cd8 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0x96b3ca4 <col:26> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
                    (IntegerLiteral 0x96b3cc0 <col:32> 'int' 10)))
                (DeclRefExpr 0x96b3d24 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0x96b3e20 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x96b3df0 <col:8> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
            (IntegerLiteral 0x96b3e08 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0x96b3ee8 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x96b3e88 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
          (DeclRefExpr 0x96b3e58 <col:11> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
          (IntegerLiteral 0x96b3e70 <col:18> 'int' 0))))
    (IfStmt 0x96b4978 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0x96b4090 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0x96b4070 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0x96b4008 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0x96b3fe0 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x96b3fd0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96b3fb8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x96b3f98 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b3f3c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x96b3970 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x96b3fa8 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b3f74 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0x96b4080 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0x96b4060 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96b403c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0x96b43d8 <line:805:2, line:813:2>
        (DoStmt 0x96b43c0 <line:807:4, line:812:19>
          (CompoundStmt 0x96b42f0 <line:808:6, line:811:6>
            (BinaryOperator 0x96b4288 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0x96b40d8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x96b40c0 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x96b40a8 <col:11> '_CharT *' lvalue Var 0x96b3b30 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x96b4270 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0x96b40ec <col:19> 'const _CharT *' lvalue ParmVar 0x96b3900 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x96b4248 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0x96b41f8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                  (ParenExpr 0x96b41a0 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x96b4178 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x96b4138 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
                      (DeclRefExpr 0x96b4104 <col:26> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
                      (IntegerLiteral 0x96b4120 <col:32> 'int' 7)))
                  (DeclRefExpr 0x96b41d4 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0x96b42d0 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x96b42a0 <col:8> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
              (IntegerLiteral 0x96b42b8 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0x96b4398 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x96b4338 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
            (DeclRefExpr 0x96b4308 <col:11> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
            (IntegerLiteral 0x96b4320 <col:18> 'int' 0))))
      (CompoundStmt 0x96b4958 <line:815:2, line:826:2>
        (DeclStmt 0x96b4510 <line:817:4, col:58>
          0x96b4400 "const bool __uppercase =
            (ImplicitCastExpr 0x96b4500 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0x96b44d8 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0x96b44c8 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x96b44b0 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0x96b4490 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x96b4434 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x96b3970 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0x96b44a0 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x96b446c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96085d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0x96b4640 <line:818:4, line:819:66>
          0x96b4530 "const int __case_offset =
            (ImplicitCastExpr 0x96b4630 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0x96b4610 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0x96b4600 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96b4564 <col:30> 'const _Bool' lvalue Var 0x96b4400 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0x96b459c <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967de60 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0x96b45dc <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0x96b4940 <line:820:4, line:825:19>
          (CompoundStmt 0x96b4870 <line:821:6, line:824:6>
            (BinaryOperator 0x96b4808 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0x96b4680 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x96b4668 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x96b4650 <col:11> '_CharT *' lvalue Var 0x96b3b30 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x96b47f0 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x96b4694 <col:19> 'const _CharT *' lvalue ParmVar 0x96b3900 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x96b47c8 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0x96b4778 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                  (ParenExpr 0x96b4748 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x96b4720 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x96b46e0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
                      (DeclRefExpr 0x96b46ac <col:26> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
                      (IntegerLiteral 0x96b46c8 <col:32> 'int' 15)))
                  (DeclRefExpr 0x96b475c <col:39> 'const int' lvalue Var 0x96b4530 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0x96b4850 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x96b4820 <col:8> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
              (IntegerLiteral 0x96b4838 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0x96b4918 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x96b48b8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
            (DeclRefExpr 0x96b4888 <col:11> '_ValueT' lvalue ParmVar 0x96b3890 '__v' '_ValueT')
            (IntegerLiteral 0x96b48a0 <col:18> 'int' 0))))))
  (ReturnStmt 0x96b4a50 <line:827:7, col:25>
    (CXXOperatorCallExpr 0x96b4a28 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x96b49e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (DeclRefExpr 0x96b49b4 <col:14> '_CharT *' lvalue ParmVar 0x96b3850 '__bufend' '_CharT *')
      (DeclRefExpr 0x96b49cc <col:25> '_CharT *' lvalue Var 0x96b3b30 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x96b5328 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0x96b5250 <line:838:7, line:839:42>
    0x96b5070 "_CharT *__p =
      (CallExpr 0x96b5218 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0x96b50c0 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666a40)
        (DeclRefExpr 0x96b50f4 <col:41> '_CharT *' lvalue ParmVar 0x96b4e60 '__new' '_CharT *')
        (DeclRefExpr 0x96b510c <col:48> '_CharT' lvalue ParmVar 0x96b4da0 '__sep' '_CharT')
        (DeclRefExpr 0x96b5124 <col:55> 'const char *' lvalue ParmVar 0x96b4d20 '__grouping' 'const char *')
        (DeclRefExpr 0x96b513c <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0x96b4d60 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x96b5154 <col:23> '_CharT *' lvalue ParmVar 0x96b4eb0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x96b51f0 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x96b51a0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96b516c <col:29> '_CharT *' lvalue ParmVar 0x96b4eb0 '__cs' '_CharT *')
          (DeclRefExpr 0x96b5184 <col:36> 'int' lvalue ParmVar 0x96b4f00 '__len' 'int &')))")
  (BinaryOperator 0x96b5310 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0x96b5260 <col:7> 'int' lvalue ParmVar 0x96b4f00 '__len' 'int &')
    (CXXOperatorCallExpr 0x96b52e8 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x96b52a8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
      (DeclRefExpr 0x96b5278 <col:15> '_CharT *' lvalue Var 0x96b5070 '__p' '_CharT *')
      (DeclRefExpr 0x96b5290 <col:21> '_CharT *' lvalue ParmVar 0x96b4e60 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0x96b9218 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0x96b5928 <line:850:2, col:33>
    0x96b58c0 "Using__gnu_cxx::;")
  (DeclStmt 0x96b5a50 <line:851:2, col:66>
    0x96b5a20 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x96b5b40 <line:852:2, col:60>
    0x96b5b10 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x96b5c48 <line:853:2, col:32>
    0x96b5c10 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x96b5d10 <line:854:2, col:40>
    0x96b5c70 "const std::locale &__loc =
      (CXXMemberCallExpr 0x96b5ce0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x96b5cbc <col:24, col:29> '<bound member function type>' ._M_getloc 0x96123e0
          (ImplicitCastExpr 0x96b5d00 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96b5ca4 <col:24> 'class std::ios_base' lvalue ParmVar 0x96b5690 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x96b5dd8 <line:855:2, col:40>
    0x96b5d50 "const __cache_type *__lc =
      (CallExpr 0x96b5db8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x96b5d84 <col:29> '__use_cache<__cache_type>' lvalue Var 0x96b5c10 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x96b5d9c <col:34> 'const class std::locale' lvalue Var 0x96b5c70 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x96b5ea8 <line:856:2, col:42>
    0x96b5e20 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x96b5e70 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x96b5e54 <col:24> 'const __cache_type *' lvalue Var 0x96b5d50 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x96b5fd0 <line:857:2, col:49>
    0x96b5ef0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x96b5fa0 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x96b5f7c <col:37, col:42> '<bound member function type>' .flags 0x9611a00
          (ImplicitCastExpr 0x96b5fc0 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96b5f24 <col:37> 'class std::ios_base' lvalue ParmVar 0x96b5690 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x96b6098 <line:860:2, col:40>
    0x96b5ff0 "const int __ilen =
      (ImplicitCastExpr 0x96b6088 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0x96b6070 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0x96b6060 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x96b6028 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0x96b6048 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0x96b62d8 <line:861:2, line:862:23>
    0x96b60e0 "_CharT *__cs =
      (CXXStaticCastExpr 0x96b62c0 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x96b6290 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0x96b6280 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96b61f4 <col:38> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x96b6268 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x96b6218 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x96b6258 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x96b6248 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x96b6230 <col:15> 'const int' lvalue Var 0x96b5ff0 '__ilen' 'const int'))))))")
  (DeclStmt 0x96b6420 <line:866:2, col:70>
    0x96b6320 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x96b63f8 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x96b63e8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96b63d0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x96b63b0 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96b6354 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b5ef0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x96b63c0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96b638c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x96b7480 <line:867:2, line:868:40>
    0x96b7280 "const bool __dec =
      (ParenExpr 0x96b7430 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0x96b7418 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0x96b7350 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0x96b7330 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96b7310 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b72b4 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b6320 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x96b7340 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96b7320 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b72ec <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x96b7400 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0x96b73e0 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96b73c0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b7368 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b6320 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x96b73f0 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96b73d0 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b739c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0x96b7718 <line:869:2, line:871:34>
    0x96b74b0 "const __unsigned_type __u =
      (ParenExpr 0x96b7700 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0x96b76e0 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0x96b75e8 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0x96b75d0 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0x96b7568 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0x96b7518 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
                (DeclRefExpr 0x96b74e4 <col:32> '_ValueT' lvalue ParmVar 0x96b5710 '__v' '_ValueT')
                (IntegerLiteral 0x96b7500 <col:38> 'int' 0))
              (UnaryOperator 0x96b75b8 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0x96b75a8 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x96b758c <col:44> 'const _Bool' lvalue Var 0x96b7280 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0x96b7620 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0x96b7608 <col:28> '_ValueT' lvalue ParmVar 0x96b5710 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0x96b76c0 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x96b7680 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (CXXUnresolvedConstructExpr 0x96b7660 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0x96b7648 <col:29> '_ValueT' lvalue ParmVar 0x96b5710 '__v' '_ValueT')))))")
  (DeclStmt 0x96b78e8 <line:872:3, col:71>
    0x96b7740 "int __len =
      (CallExpr 0x96b78b8 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0x96b7778 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0x96b3ae0)
        (CXXOperatorCallExpr 0x96b7830 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x96b77e0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96b77ac <col:29> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
          (DeclRefExpr 0x96b77c4 <col:36> 'const int' lvalue Var 0x96b5ff0 '__ilen' 'const int'))
        (DeclRefExpr 0x96b7854 <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x96b74b0 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x96b786c <col:49> 'const _CharT *' lvalue Var 0x96b5e20 '__lit' 'const _CharT *')
        (DeclRefExpr 0x96b7884 <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b5ef0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0x96b789c <col:65> 'const _Bool' lvalue Var 0x96b7280 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0x96b7978 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x96b78f8 <col:2> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
    (BinaryOperator 0x96b7960 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0x96b7940 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0x96b7910 <col:10> 'const int' lvalue Var 0x96b5ff0 '__ilen' 'const int'))
      (ImplicitCastExpr 0x96b7950 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0x96b7928 <col:19> 'int' lvalue Var 0x96b7740 '__len' 'int'))))
  (IfStmt 0x96b7ef0 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x96b79b0 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x96b7998 <col:6> 'const __cache_type *' lvalue Var 0x96b5d50 '__lc' 'const __cache_type *'))
    (CompoundStmt 0x96b7ed0 <line:877:4, line:886:4>
      (DeclStmt 0x96b7ba0 <line:880:6, line:882:16>
        0x96b7a00 "_CharT *__cs2 =
          (CXXStaticCastExpr 0x96b7b88 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x96b7b58 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0x96b7b48 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96b7a34 <col:43> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x96b7b30 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0x96b7af0 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x96b7a58 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x96b7ae0 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0x96b7ac8 <col:13, col:23> 'int'
                      (BinaryOperator 0x96b7ab0 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0x96b7aa0 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0x96b7a70 <col:14> 'int' lvalue Var 0x96b7740 '__len' 'int'))
                        (IntegerLiteral 0x96b7a88 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0x96b7b20 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x96b7b08 <col:13> 'int' 2)))))")
      (CallExpr 0x96b7dc0 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0x96b7bc0 <line:883:6> '<bound member function type>' ->_M_group_int 0x96b4fb0
          (CXXThisExpr 0x96b7bb0 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x96b7bf8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x96b7be0 <col:19> 'const __cache_type *' lvalue Var 0x96b5d50 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x96b7c48 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x96b7c2c <col:38> 'const __cache_type *' lvalue Var 0x96b5d50 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x96b7c98 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x96b7c7c <col:5> 'const __cache_type *' lvalue Var 0x96b5d50 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x96b7ccc <col:29> 'class std::ios_base' lvalue ParmVar 0x96b5690 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0x96b7d68 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x96b7d18 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96b7ce4 <col:35> '_CharT *' lvalue Var 0x96b7a00 '__cs2' '_CharT *')
          (IntegerLiteral 0x96b7d00 <col:43> 'int' 2))
        (DeclRefExpr 0x96b7d8c <col:46> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
        (DeclRefExpr 0x96b7da4 <col:52> 'int' lvalue Var 0x96b7740 '__len' 'int'))
      (BinaryOperator 0x96b7eb8 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0x96b7df8 <col:6> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x96b7e90 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x96b7e40 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96b7e10 <col:13> '_CharT *' lvalue Var 0x96b7a00 '__cs2' '_CharT *')
          (IntegerLiteral 0x96b7e28 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0x96b8c38 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x96b7fb8 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0x96b7f60 <col:6, col:34> 'long'
        (ImplicitCastExpr 0x96b7f50 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96b7f0c <col:6> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x96b7f98 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0x96b7f88 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x96b7f24 <col:23> 'const _Bool' lvalue Var 0x96b7280 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0x96b7fa8 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x96b7f40 <col:30> '_Bool' true))))
    (CompoundStmt 0x96b8538 <line:890:4, line:900:4>
      (IfStmt 0x96b8518 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x96b8080 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x96b8030 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
          (DeclRefExpr 0x96b7ffc <col:10> '_ValueT' lvalue ParmVar 0x96b5710 '__v' '_ValueT')
          (IntegerLiteral 0x96b8018 <col:17> 'int' 0))
        (CompoundStmt 0x96b83e8 <line:893:8, line:897:8>
          (IfStmt 0x96b83c8 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0x96b8298 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0x96b8188 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0x96b8178 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x96b8150 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x96b8140 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x96b8128 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x96b8108 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96b80b0 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b5ef0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x96b8118 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96b80e4 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96084b0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0x96b8260 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0x96b83b0 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0x96b8368 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0x96b82e0 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0x96b82c8 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0x96b82b0 <col:8> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0x96b8350 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0x96b82f4 <col:15> 'const _CharT *' lvalue Var 0x96b5e20 '__lit' 'const _CharT *')
                  (DeclRefExpr 0x96b832c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dcd0 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0x96b8398 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0x96b8380 <col:46> 'int' lvalue Var 0x96b7740 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0x96b8500 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0x96b84b8 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0x96b8430 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x96b8418 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x96b83fc <col:11> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0x96b84a0 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x96b8444 <col:18> 'const _CharT *' lvalue Var 0x96b5e20 '__lit' 'const _CharT *')
              (DeclRefExpr 0x96b847c <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dc90 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0x96b84e8 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0x96b84d0 <col:50> 'int' lvalue Var 0x96b7740 '__len' 'int')))))
    (IfStmt 0x96b8c18 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0x96b8660 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0x96b8630 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x96b8620 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0x96b85f8 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x96b85e8 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96b85d0 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x96b85b0 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b8558 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b5ef0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x96b85c0 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b858c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96083f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0x96b8648 <col:49> '_ValueT' lvalue ParmVar 0x96b5710 '__v' '_ValueT'))
      (CompoundStmt 0x96b8c00 <line:902:4, line:914:4>
        (IfStmt 0x96b8be0 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0x96b8710 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0x96b86f0 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96b86d0 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b8678 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b6320 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x96b8700 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96b86e0 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x96b86ac <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x96b8828 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0x96b87e0 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0x96b8758 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x96b8740 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x96b8728 <col:11> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x96b87c8 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x96b876c <col:18> 'const _CharT *' lvalue Var 0x96b5e20 '__lit' 'const _CharT *')
                (DeclRefExpr 0x96b87a4 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0x96b8810 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0x96b87f8 <col:51> 'int' lvalue Var 0x96b7740 '__len' 'int')))
          (CompoundStmt 0x96b8bc0 <line:906:8, line:913:8>
            (DeclStmt 0x96b8960 <line:908:3, col:57>
              0x96b8850 "const bool __uppercase =
                (ImplicitCastExpr 0x96b8950 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x96b8928 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x96b8918 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x96b8900 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x96b88e0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96b8884 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96b5ef0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x96b88f0 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96b88bc <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96085d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0x96b8a88 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0x96b89a0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x96b8988 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x96b8970 <col:6> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x96b8a70 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x96b89b4 <col:13> 'const _CharT *' lvalue Var 0x96b5e20 '__lit' 'const _CharT *')
                (BinaryOperator 0x96b8a58 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0x96b8a28 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0x96b89ec <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dd10 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0x96b8a48 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x96b8a38 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x96b8a0c <col:39> 'const _Bool' lvalue Var 0x96b8850 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0x96b8b58 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0x96b8ad0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x96b8ab8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x96b8aa0 <col:6> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x96b8b40 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0x96b8ae4 <col:13> 'const _CharT *' lvalue Var 0x96b5e20 '__lit' 'const _CharT *')
                (DeclRefExpr 0x96b8b1c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x967dd90 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0x96b8ba0 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0x96b8b70 <col:3> 'int' lvalue Var 0x96b7740 '__len' 'int')
              (IntegerLiteral 0x96b8b88 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0x96b8d40 <line:917:2, col:37>
    0x96b8c60 "const streamsize __w =
      (CXXMemberCallExpr 0x96b8d10 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x96b8cec <col:25, col:30> '<bound member function type>' .width 0x9612000
          (ImplicitCastExpr 0x96b8d30 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96b8c94 <col:25> 'class std::ios_base' lvalue ParmVar 0x96b5690 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x96b9078 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0x96b8dc0 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x96b8db0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x96b8d50 <col:6> 'const streamsize':'const int' lvalue Var 0x96b8c60 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x96b8d98 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x96b8d88 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x96b8d68 <col:36> 'int' lvalue Var 0x96b7740 '__len' 'int'))))
    (CompoundStmt 0x96b9058 <line:919:4, line:924:4>
      (DeclStmt 0x96b8f08 <line:920:6, line:921:18>
        0x96b8df0 "_CharT *__cs3 =
          (CXXStaticCastExpr 0x96b8ef0 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x96b8ec0 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0x96b8eb0 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96b8e24 <col:43> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x96b8e98 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x96b8e48 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x96b8e88 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x96b8e78 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x96b8e60 <col:13> 'const streamsize':'const int' lvalue Var 0x96b8c60 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x96b8fd8 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0x96b8f28 <col:6> '<bound member function type>' ->_M_pad 0x96b3330
          (CXXThisExpr 0x96b8f18 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x96b8f48 <col:13> '_CharT' lvalue ParmVar 0x96b56d0 '__fill' '_CharT')
        (DeclRefExpr 0x96b8f60 <col:21> 'const streamsize':'const int' lvalue Var 0x96b8c60 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x96b8f78 <col:26> 'class std::ios_base' lvalue ParmVar 0x96b5690 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x96b8f90 <col:32> '_CharT *' lvalue Var 0x96b8df0 '__cs3' '_CharT *')
        (DeclRefExpr 0x96b8fa8 <col:39> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
        (DeclRefExpr 0x96b8fc0 <col:45> 'int' lvalue Var 0x96b7740 '__len' 'int'))
      (BinaryOperator 0x96b9040 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x96b900c <col:6> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
        (DeclRefExpr 0x96b9024 <col:13> '_CharT *' lvalue Var 0x96b8df0 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x96b9128 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0x96b9108 <col:2, col:7> '<bound member function type>' .width 0x96120c0
      (DeclRefExpr 0x96b9094 <col:2> 'class std::ios_base' lvalue ParmVar 0x96b5690 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x96b90f0 <col:13> 'int' 0))
  (ReturnStmt 0x96b9208 <line:929:2, col:38>
    (CallExpr 0x96b91e0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x96b9160 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
      (DeclRefExpr 0x96b9198 <col:22> '_OutIter' lvalue ParmVar 0x96b5640 '__s' '_OutIter')
      (DeclRefExpr 0x96b91b0 <col:27> '_CharT *' lvalue Var 0x96b60e0 '__cs' '_CharT *')
      (DeclRefExpr 0x96b91c8 <col:33> 'int' lvalue Var 0x96b7740 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x96b9fa8 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0x96b99b0 <line:942:7, col:52>
    0x96b9890 "const int __declen =
      (ConditionalOperator 0x96b9990 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0x96b98c4 <col:28> 'const _CharT *' lvalue ParmVar 0x96b9610 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0x96b9950 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x96b9910 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (DeclRefExpr 0x96b98dc <col:34> 'const _CharT *' lvalue ParmVar 0x96b9610 '__p' 'const _CharT *')
          (DeclRefExpr 0x96b98f4 <col:40> '_CharT *' lvalue ParmVar 0x96b96d0 '__cs' '_CharT *'))
        (DeclRefExpr 0x96b9974 <col:47> 'int' lvalue ParmVar 0x96b9720 '__len' 'int &'))")
  (DeclStmt 0x96b9bb0 <line:943:7, line:945:29>
    0x96b99d0 "_CharT *__p2 =
      (CallExpr 0x96b9b78 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0x96b9a20 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666a40)
        (DeclRefExpr 0x96b9a54 <col:42> '_CharT *' lvalue ParmVar 0x96b9680 '__new' '_CharT *')
        (DeclRefExpr 0x96b9a6c <col:49> '_CharT' lvalue ParmVar 0x96b95a0 '__sep' '_CharT')
        (DeclRefExpr 0x96b9a84 <col:56> 'const char *' lvalue ParmVar 0x96b9520 '__grouping' 'const char *')
        (DeclRefExpr 0x96b9a9c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0x96b9560 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x96b9ab4 <line:945:7> '_CharT *' lvalue ParmVar 0x96b96d0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x96b9b50 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x96b9b00 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96b9acc <col:13> '_CharT *' lvalue ParmVar 0x96b96d0 '__cs' '_CharT *')
          (DeclRefExpr 0x96b9ae4 <col:20> 'const int' lvalue Var 0x96b9890 '__declen' 'const int')))")
  (DeclStmt 0x96b9ca0 <line:948:7, col:34>
    0x96b9bd0 "int __newlen =
      (CXXOperatorCallExpr 0x96b9c78 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x96b9c38 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
        (DeclRefExpr 0x96b9c04 <col:22> '_CharT *' lvalue Var 0x96b99d0 '__p2' '_CharT *')
        (DeclRefExpr 0x96b9c1c <col:29> '_CharT *' lvalue ParmVar 0x96b9680 '__new' '_CharT *'))")
  (IfStmt 0x96b9f30 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0x96b9cb0 <line:949:11> 'const _CharT *' lvalue ParmVar 0x96b9610 '__p' 'const _CharT *')
    (CompoundStmt 0x96b9f18 <line:950:2, line:953:2>
      (CallExpr 0x96b9e50 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96b9d80 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x96b9db4 <col:30> '_CharT *' lvalue Var 0x96b99d0 '__p2' '_CharT *')
        (DeclRefExpr 0x96b9dcc <col:36> 'const _CharT *' lvalue ParmVar 0x96b9610 '__p' 'const _CharT *')
        (BinaryOperator 0x96b9e38 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0x96b9e18 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0x96b9de4 <col:41> 'int' lvalue ParmVar 0x96b9720 '__len' 'int &'))
          (ImplicitCastExpr 0x96b9e28 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0x96b9dfc <col:49> 'const int' lvalue Var 0x96b9890 '__declen' 'const int'))))
      (CompoundAssignOperator 0x96b9ef8 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x96b9e78 <col:4> 'int' lvalue Var 0x96b9bd0 '__newlen' 'int')
        (BinaryOperator 0x96b9ee0 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0x96b9ec0 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0x96b9e90 <col:16> 'int' lvalue ParmVar 0x96b9720 '__len' 'int &'))
          (ImplicitCastExpr 0x96b9ed0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0x96b9ea8 <col:24> 'const int' lvalue Var 0x96b9890 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0x96b9f90 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0x96b9f4c <col:7> 'int' lvalue ParmVar 0x96b9720 '__len' 'int &')
    (ImplicitCastExpr 0x96b9f80 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x96b9f64 <col:15> 'int' lvalue Var 0x96b9bd0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0x96bd168 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0x96ba680 <line:974:2, col:62>
    0x96ba650 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x96ba788 <line:975:2, col:32>
    0x96ba750 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x96ba850 <line:976:2, col:40>
    0x96ba7b0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x96ba820 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x96ba7fc <col:24, col:29> '<bound member function type>' ._M_getloc 0x96123e0
          (ImplicitCastExpr 0x96ba840 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96ba7e4 <col:24> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x96ba918 <line:977:2, col:40>
    0x96ba890 "const __cache_type *__lc =
      (CallExpr 0x96ba8f8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x96ba8c4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x96ba750 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x96ba8dc <col:34> 'const class std::locale' lvalue Var 0x96ba7b0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x96bab20 <line:980:2, col:71>
    0x96ba930 "const streamsize __prec =
      (ConditionalOperator 0x96bab00 <col:28, col:70> 'int'
        (BinaryOperator 0x96baa28 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0x96ba9e0 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0x96ba9bc <col:28, col:33> '<bound member function type>' .precision 0x9611e90
              (ImplicitCastExpr 0x96baa00 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x96ba964 <col:28> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0x96baa10 <col:47> 'int' 0))
        (IntegerLiteral 0x96baa40 <col:51> 'int' 6)
        (CXXMemberCallExpr 0x96baad0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0x96baab0 <col:55, col:60> '<bound member function type>' .precision 0x9611e90
            (ImplicitCastExpr 0x96baaf0 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x96baa58 <col:55> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0x96bac68 <line:982:2, line:983:52>
    0x96bab40 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0x96bac30 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0x96bacc8 <line:986:2, col:11>
    0x96bac90 "int __len")
  (DeclStmt 0x96bad48 <line:988:2, col:17>
    0x96bad10 "char __fbuf[16]")
  (CallExpr 0x96bae38 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0x96bae28 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x96bad80 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0x967e5f0 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0x96bae60 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0x96bada0 <col:30> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x96bae70 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0x96badb8 <col:36> 'char [16]' lvalue Var 0x96bad10 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0x96bae80 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0x96badd0 <col:44> 'char' lvalue ParmVar 0x96ba3a0 '__mod' 'char')))
  (DeclStmt 0x96baf30 <line:994:2, col:34>
    0x96baea0 "int __cs_size =
      (BinaryOperator 0x96baf18 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0x96baf08 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0x96baed4 <col:18> 'const int' lvalue Var 0x96bab40 '__max_digits' 'const int'))
        (IntegerLiteral 0x96baef0 <col:33> 'int' 3))")
  (DeclStmt 0x96bb030 <line:995:2, col:62>
    0x96baf50 "char *__cs =
      (CXXStaticCastExpr 0x96bb018 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0x96bafc8 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0x96bafb8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96baf84 <col:34> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0x96baff8 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x96bafe8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0x96baf9c <col:51> 'int' lvalue Var 0x96baea0 '__cs_size' 'int')))))")
  (BinaryOperator 0x96bb188 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0x96bb040 <line:996:2> 'int' lvalue Var 0x96bac90 '__len' 'int')
    (CallExpr 0x96bb150 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0x96bb070 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9502800 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0x96bb0b8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x96bb0a8 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96bb090 <col:32> '__c_locale (void)' lvalue CXXMethod 0x95e63d0 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0x96bb0d4 <col:51> 'char *' lvalue Var 0x96baf50 '__cs' 'char *')
      (DeclRefExpr 0x96bb0ec <col:57> 'int' lvalue Var 0x96baea0 '__cs_size' 'int')
      (DeclRefExpr 0x96bb104 <line:997:11> 'char [16]' lvalue Var 0x96bad10 '__fbuf' 'char [16]')
      (DeclRefExpr 0x96bb11c <col:19> 'const streamsize':'const int' lvalue Var 0x96ba930 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0x96bb134 <col:27> '_ValueT' lvalue ParmVar 0x96ba3e0 '__v' '_ValueT')))
  (IfStmt 0x96bb4e8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0x96bb1f0 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0x96bb1d0 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0x96bb1a0 <col:6> 'int' lvalue Var 0x96bac90 '__len' 'int'))
      (ImplicitCastExpr 0x96bb1e0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0x96bb1b8 <col:15> 'int' lvalue Var 0x96baea0 '__cs_size' 'int')))
    (CompoundStmt 0x96bb4c8 <line:1001:4, line:1006:4>
      (BinaryOperator 0x96bb278 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0x96bb208 <col:6> 'int' lvalue Var 0x96baea0 '__cs_size' 'int')
        (BinaryOperator 0x96bb260 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0x96bb250 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0x96bb220 <col:18> 'int' lvalue Var 0x96bac90 '__len' 'int'))
          (IntegerLiteral 0x96bb238 <col:26> 'int' 1)))
      (BinaryOperator 0x96bb350 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0x96bb290 <col:6> 'char *' lvalue Var 0x96baf50 '__cs' 'char *')
        (CXXStaticCastExpr 0x96bb338 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0x96bb2e8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0x96bb2d8 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96bb2a8 <col:32> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0x96bb318 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x96bb308 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0x96bb2c0 <col:49> 'int' lvalue Var 0x96baea0 '__cs_size' 'int'))))))
      (BinaryOperator 0x96bb4b0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0x96bb368 <line:1004:6> 'int' lvalue Var 0x96bac90 '__len' 'int')
        (CallExpr 0x96bb478 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0x96bb398 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9502800 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0x96bb3e0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0x96bb3d0 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96bb3b8 <col:36> '__c_locale (void)' lvalue CXXMethod 0x95e63d0 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0x96bb3fc <col:55> 'char *' lvalue Var 0x96baf50 '__cs' 'char *')
          (DeclRefExpr 0x96bb414 <col:61> 'int' lvalue Var 0x96baea0 '__cs_size' 'int')
          (DeclRefExpr 0x96bb42c <line:1005:8> 'char [16]' lvalue Var 0x96bad10 '__fbuf' 'char [16]')
          (DeclRefExpr 0x96bb444 <col:16> 'const streamsize':'const int' lvalue Var 0x96ba930 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0x96bb45c <col:24> '_ValueT' lvalue ParmVar 0x96ba3e0 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0x96bb750 <line:1028:2, col:65>
    0x96bb5d0 "const ctype<_CharT> &__ctype =
      (CallExpr 0x96bb730 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x96bb6b0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
        (DeclRefExpr 0x96bb718 <col:59> 'const class std::locale' lvalue Var 0x96ba7b0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x96bb8a8 <line:1030:2, line:1031:22>
    0x96bb790 "_CharT *__ws =
      (CXXStaticCastExpr 0x96bb890 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x96bb860 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0x96bb850 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96bb7c4 <col:38> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x96bb838 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x96bb7e8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x96bb828 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x96bb818 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x96bb800 <col:15> 'int' lvalue Var 0x96bac90 '__len' 'int'))))))")
  (CallExpr 0x96bb9a0 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x96bb8d0 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0x96bb8b8 <col:2> 'const ctype<_CharT>' lvalue Var 0x96bb5d0 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0x96bb904 <col:16> 'char *' lvalue Var 0x96baf50 '__cs' 'char *')
    (BinaryOperator 0x96bb970 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0x96bb950 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0x96bb91c <col:22> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
      (ImplicitCastExpr 0x96bb960 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0x96bb934 <col:29> 'int' lvalue Var 0x96bac90 '__len' 'int')))
    (DeclRefExpr 0x96bb988 <col:36> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *'))
  (DeclStmt 0x96bba30 <line:1035:2, col:18>
    0x96bb9e0 "_CharT *__wp =
      (IntegerLiteral 0x96bba18 <col:17> 'int' 0)")
  (DeclStmt 0x96bbc30 <line:1036:2, col:61>
    0x96bba50 "const char *__p =
      (CallExpr 0x96bbbb8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0x96bbba8 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96bbb00 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x90d2650 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0x96bbbf0 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0x96bbbe0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0x96bbb20 <col:44> 'char *' lvalue Var 0x96baf50 '__cs' 'char *')))
        (ImplicitCastExpr 0x96bbc10 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x96bbc00 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x96bbb38 <col:50> 'int' lvalue Var 0x96bac90 '__len' 'int')))
        (MaterializeTemporaryExpr 0x96bbc20 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0x96bbb50 <col:57> 'char'46)))")
  (IfStmt 0x96bbe68 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x96bbc68 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x96bbc58 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x96bbc40 <col:6> 'const char *' lvalue Var 0x96bba50 '__p' 'const char *')))
    (CompoundStmt 0x96bbe50 <line:1038:4, line:1041:4>
      (BinaryOperator 0x96bbda0 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0x96bbc74 <col:6> '_CharT *' lvalue Var 0x96bb9e0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x96bbd78 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x96bbd28 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96bbc8c <col:13> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
          (ParenExpr 0x96bbd10 <col:20, col:31> 'int'
            (BinaryOperator 0x96bbcf8 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0x96bbcd8 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x96bbca4 <col:21> 'const char *' lvalue Var 0x96bba50 '__p' 'const char *'))
              (ImplicitCastExpr 0x96bbce8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0x96bbcbc <col:27> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))))))
      (BinaryOperator 0x96bbe38 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0x96bbdd0 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0x96bbdb8 <col:7> '_CharT *' lvalue Var 0x96bb9e0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0x96bbe00 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x96bbde4 <col:14> 'const __cache_type *' lvalue Var 0x96ba890 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0x96bcb80 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0x96bc2d0 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x96bbea0 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x96bbe84 <col:6> 'const __cache_type *' lvalue Var 0x96ba890 '__lc' 'const __cache_type *'))
      (ParenExpr 0x96bc2b8 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0x96bc2a0 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0x96bbf48 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0x96bbed4 <col:10> '_CharT *' lvalue Var 0x96bb9e0 '__wp' '_CharT *')
            (BinaryOperator 0x96bbf30 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0x96bbf20 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0x96bbeec <col:18> 'int' lvalue Var 0x96bac90 '__len' 'int'))
              (IntegerLiteral 0x96bbf08 <col:26> 'int' 3)))
          (ParenExpr 0x96bc288 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0x96bc270 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0x96bc1a0 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0x96bc0d0 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0x96bc000 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0x96bbfe0 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x96bbfd0 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x96bbfa0 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0x96bbf90 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x96bbf60 <col:32> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
                          (IntegerLiteral 0x96bbf78 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0x96bbff0 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0x96bbfb8 <col:43> 'char'57)))
                  (BinaryOperator 0x96bc0b8 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0x96bc098 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x96bc088 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x96bc058 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0x96bc048 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x96bc018 <col:50> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
                          (IntegerLiteral 0x96bc030 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0x96bc0a8 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0x96bc070 <col:61> 'char'57))))
                (BinaryOperator 0x96bc188 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0x96bc168 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x96bc158 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0x96bc128 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0x96bc118 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0x96bc0e8 <col:14> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
                        (IntegerLiteral 0x96bc100 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0x96bc178 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0x96bc140 <col:25> 'char'48))))
              (BinaryOperator 0x96bc258 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0x96bc238 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x96bc228 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0x96bc1f8 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0x96bc1e8 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0x96bc1b8 <col:32> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
                      (IntegerLiteral 0x96bc1d0 <col:37> 'int' 2))))
                (ImplicitCastExpr 0x96bc248 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0x96bc210 <col:43> 'char'48))))))))
    (CompoundStmt 0x96bcb58 <line:1049:4, line:1069:4>
      (DeclStmt 0x96bc458 <line:1052:6, line:1053:24>
        0x96bc300 "_CharT *__ws2 =
          (CXXStaticCastExpr 0x96bc440 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x96bc410 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0x96bc400 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96bc334 <col:43> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x96bc3e8 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0x96bc3a8 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x96bc358 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x96bc398 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0x96bc388 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0x96bc370 <col:13> 'int' lvalue Var 0x96bac90 '__len' 'int'))))
                (ImplicitCastExpr 0x96bc3d8 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x96bc3c0 <col:21> 'int' 2)))))")
      (DeclStmt 0x96bc4c0 <line:1055:6, col:26>
        0x96bc470 "streamsize __off =
          (IntegerLiteral 0x96bc4a8 <col:25> 'int' 0)")
      (IfStmt 0x96bc7b8 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0x96bc640 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0x96bc570 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0x96bc550 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96bc540 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x96bc510 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0x96bc500 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x96bc4d0 <col:10> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
                  (IntegerLiteral 0x96bc4e8 <col:15> 'int' 0))))
            (ImplicitCastExpr 0x96bc560 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0x96bc528 <col:21> 'char'45)))
          (BinaryOperator 0x96bc628 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x96bc608 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0x96bc5f8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x96bc5c8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0x96bc5b8 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x96bc588 <col:28> 'char *' lvalue Var 0x96baf50 '__cs' 'char *'))
                  (IntegerLiteral 0x96bc5a0 <col:33> 'int' 0))))
            (ImplicitCastExpr 0x96bc618 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0x96bc5e0 <col:39> 'char'43))))
        (CompoundStmt 0x96bc798 <line:1057:8, line:1061:8>
          (BinaryOperator 0x96bc688 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0x96bc658 <col:3> 'streamsize':'int' lvalue Var 0x96bc470 '__off' 'streamsize':'int')
            (IntegerLiteral 0x96bc670 <col:11> 'int' 1))
          (BinaryOperator 0x96bc730 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0x96bc6d0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x96bc6a0 <col:3> '_CharT *' lvalue Var 0x96bc300 '__ws2' '_CharT *')
              (IntegerLiteral 0x96bc6b8 <col:9> 'int' 0))
            (ArraySubscriptExpr 0x96bc718 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0x96bc6e4 <col:14> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
              (IntegerLiteral 0x96bc700 <col:19> 'int' 0)))
          (CompoundAssignOperator 0x96bc778 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x96bc748 <col:3> 'int' lvalue Var 0x96bac90 '__len' 'int')
            (IntegerLiteral 0x96bc760 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0x96bca78 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0x96bc7e8 <line:1063:6> '<bound member function type>' ->_M_group_float 0x96b97d0
          (CXXThisExpr 0x96bc7d8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x96bc820 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0x96bc808 <col:21> 'const __cache_type *' lvalue Var 0x96ba890 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x96bc870 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x96bc854 <col:40> 'const __cache_type *' lvalue Var 0x96ba890 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x96bc8c0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0x96bc8a4 <col:7> 'const __cache_type *' lvalue Var 0x96ba890 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x96bc8f4 <col:31> '_CharT *' lvalue Var 0x96bb9e0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x96bc990 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x96bc940 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96bc90c <col:37> '_CharT *' lvalue Var 0x96bc300 '__ws2' '_CharT *')
          (DeclRefExpr 0x96bc924 <col:45> 'streamsize':'int' lvalue Var 0x96bc470 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0x96bca38 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0x96bc9e8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96bc9b4 <col:7> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
          (DeclRefExpr 0x96bc9cc <col:14> 'streamsize':'int' lvalue Var 0x96bc470 '__off' 'streamsize':'int'))
        (DeclRefExpr 0x96bca5c <col:21> 'int' lvalue Var 0x96bac90 '__len' 'int'))
      (CompoundAssignOperator 0x96bcaf0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x96bcab0 <col:6> 'int' lvalue Var 0x96bac90 '__len' 'int')
        (ImplicitCastExpr 0x96bcae0 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x96bcac8 <col:15> 'streamsize':'int' lvalue Var 0x96bc470 '__off' 'streamsize':'int')))
      (BinaryOperator 0x96bcb40 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x96bcb10 <col:6> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
        (DeclRefExpr 0x96bcb28 <col:13> '_CharT *' lvalue Var 0x96bc300 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0x96bcc90 <line:1072:2, col:37>
    0x96bcbb0 "const streamsize __w =
      (CXXMemberCallExpr 0x96bcc60 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x96bcc3c <col:25, col:30> '<bound member function type>' .width 0x9612000
          (ImplicitCastExpr 0x96bcc80 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96bcbe4 <col:25> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x96bcfc8 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0x96bcd10 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x96bcd00 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x96bcca0 <col:6> 'const streamsize':'const int' lvalue Var 0x96bcbb0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x96bcce8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x96bccd8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x96bccb8 <col:36> 'int' lvalue Var 0x96bac90 '__len' 'int'))))
    (CompoundStmt 0x96bcfa8 <line:1074:4, line:1079:4>
      (DeclStmt 0x96bce58 <line:1075:6, line:1076:18>
        0x96bcd40 "_CharT *__ws3 =
          (CXXStaticCastExpr 0x96bce40 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x96bce10 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0x96bce00 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96bcd74 <col:43> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x96bcde8 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x96bcd98 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x96bcdd8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x96bcdc8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x96bcdb0 <col:13> 'const streamsize':'const int' lvalue Var 0x96bcbb0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x96bcf28 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0x96bce78 <col:6> '<bound member function type>' ->_M_pad 0x96b3330
          (CXXThisExpr 0x96bce68 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x96bce98 <col:13> '_CharT' lvalue ParmVar 0x96ba360 '__fill' '_CharT')
        (DeclRefExpr 0x96bceb0 <col:21> 'const streamsize':'const int' lvalue Var 0x96bcbb0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x96bcec8 <col:26> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x96bcee0 <col:32> '_CharT *' lvalue Var 0x96bcd40 '__ws3' '_CharT *')
        (DeclRefExpr 0x96bcef8 <col:39> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
        (DeclRefExpr 0x96bcf10 <col:45> 'int' lvalue Var 0x96bac90 '__len' 'int'))
      (BinaryOperator 0x96bcf90 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x96bcf5c <col:6> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
        (DeclRefExpr 0x96bcf74 <col:13> '_CharT *' lvalue Var 0x96bcd40 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x96bd078 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0x96bd058 <col:2, col:7> '<bound member function type>' .width 0x96120c0
      (DeclRefExpr 0x96bcfe4 <col:2> 'class std::ios_base' lvalue ParmVar 0x96ba320 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x96bd040 <col:13> 'int' 0))
  (ReturnStmt 0x96bd158 <line:1084:2, col:38>
    (CallExpr 0x96bd130 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x96bd0b0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
      (DeclRefExpr 0x96bd0e8 <col:22> '_OutIter' lvalue ParmVar 0x96ba2d0 '__s' '_OutIter')
      (DeclRefExpr 0x96bd100 <col:27> '_CharT *' lvalue Var 0x96bb790 '__ws' '_CharT *')
      (DeclRefExpr 0x96bd118 <col:33> 'int' lvalue Var 0x96bac90 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0x96bee90 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0x96bd7a0 <line:1092:7, col:54>
    0x96bd6c0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x96bd770 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x96bd74c <col:42, col:47> '<bound member function type>' .flags 0x9611a00
          (ImplicitCastExpr 0x96bd790 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96bd6f4 <col:42> 'class std::ios_base' lvalue ParmVar 0x96bd4d0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x96bee48 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0x96bd8b8 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0x96bd8a8 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0x96bd878 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x96bd850 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x96bd840 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96bd828 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x96bd808 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96bd7b0 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96bd6c0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x96bd818 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96bd7e4 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608090 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0x96bd890 <col:46> 'int' 0))
    (CompoundStmt 0x96bda70 <line:1094:9, line:1097:9>
      (DeclStmt 0x96bd950 <line:1095:11, col:31>
        0x96bd8e0 "const long __l =
          (ImplicitCastExpr 0x96bd940 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0x96bd930 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96bd914 <col:28> '_Bool' lvalue ParmVar 0x96bd550 '__v' '_Bool')))")
      (BinaryOperator 0x96bda58 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0x96bd960 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x96bda28 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x96bd988 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0x96bd9c4 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x96bd9dc <col:36> 'class std::ios_base' lvalue ParmVar 0x96bd4d0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x96bd9f4 <col:42> 'char_type':'_CharT' lvalue ParmVar 0x96bd510 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0x96bda0c <col:50> 'const long' lvalue Var 0x96bd8e0 '__l' 'const long'))))
    (CompoundStmt 0x96bee10 <line:1099:9, line:1135:2>
      (DeclStmt 0x96bdb60 <line:1100:4, col:62>
        0x96bdb30 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x96bdc68 <line:1101:4, col:34>
        0x96bdc30 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x96bdd30 <line:1102:4, col:42>
        0x96bdc90 "const std::locale &__loc =
          (CXXMemberCallExpr 0x96bdd00 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x96bdcdc <col:26, col:31> '<bound member function type>' ._M_getloc 0x96123e0
              (ImplicitCastExpr 0x96bdd20 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x96bdcc4 <col:26> 'class std::ios_base' lvalue ParmVar 0x96bd4d0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x96bddf8 <line:1103:4, col:42>
        0x96bdd70 "const __cache_type *__lc =
          (CallExpr 0x96bddd8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x96bdda4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x96bdc30 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x96bddbc <col:36> 'const class std::locale' lvalue Var 0x96bdc90 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x96bdf60 <line:1105:4, line:1106:51>
        0x96bde40 "const _CharT *__name =
          (ConditionalOperator 0x96bdf40 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0x96bdf30 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96bde74 <col:27> '_Bool' lvalue ParmVar 0x96bd550 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x96bdea8 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x96bde8c <col:33> 'const __cache_type *' lvalue Var 0x96bdd70 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x96bdef8 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x96bdedc <col:33> 'const __cache_type *' lvalue Var 0x96bdd70 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x96be0a0 <line:1107:4, line:1108:45>
        0x96bdf80 "int __len =
          (ConditionalOperator 0x96be080 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0x96be070 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x96bdfb4 <col:16> '_Bool' lvalue ParmVar 0x96bd550 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x96bdfe8 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x96bdfcc <col:22> 'const __cache_type *' lvalue Var 0x96bdd70 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x96be038 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x96be01c <col:22> 'const __cache_type *' lvalue Var 0x96bdd70 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x96be1a0 <line:1110:4, col:39>
        0x96be0c0 "const streamsize __w =
          (CXXMemberCallExpr 0x96be170 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0x96be14c <col:27, col:32> '<bound member function type>' .width 0x9612000
              (ImplicitCastExpr 0x96be190 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x96be0f4 <col:27> 'class std::ios_base' lvalue ParmVar 0x96bd4d0 '__io' 'class std::ios_base &'))))")
      (IfStmt 0x96bec50 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0x96be220 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0x96be210 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x96be1b0 <col:8> 'const streamsize':'const int' lvalue Var 0x96be0c0 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0x96be1f8 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0x96be1e8 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0x96be1c8 <col:38> 'int' lvalue Var 0x96bdf80 '__len' 'int'))))
        (CompoundStmt 0x96bec28 <line:1112:6, line:1132:6>
          (DeclStmt 0x96be2e0 <line:1113:8, col:45>
            0x96be240 "const streamsize __plen =
              (BinaryOperator 0x96be2c8 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0x96be2a8 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x96be274 <col:34> 'const streamsize':'const int' lvalue Var 0x96be0c0 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0x96be2b8 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0x96be28c <col:40> 'int' lvalue Var 0x96bdf80 '__len' 'int')))")
          (DeclStmt 0x96be438 <line:1114:8, line:1116:18>
            0x96be320 "_CharT *__ps =
              (CXXStaticCastExpr 0x96be420 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0x96be3f0 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0x96be3e0 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x96be354 <col:26> 'void *(unsigned int)' lvalue Function 0x96b6120 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0x96be3c8 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0x96be378 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0x96be3b8 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0x96be3a8 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x96be390 <col:10> 'const streamsize':'const int' lvalue Var 0x96be240 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0x96be580 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96be500 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0x96be534 <col:36> '_CharT *' lvalue Var 0x96be320 '__ps' '_CharT *')
            (DeclRefExpr 0x96be54c <col:42> 'const streamsize':'const int' lvalue Var 0x96be240 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0x96be564 <col:50> 'char_type':'_CharT' lvalue ParmVar 0x96bd510 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0x96be638 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0x96be618 <col:8, col:13> '<bound member function type>' .width 0x96120c0
              (DeclRefExpr 0x96be5a8 <col:8> 'class std::ios_base' lvalue ParmVar 0x96bd4d0 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0x96be600 <col:19> 'int' 0))
          (IfStmt 0x96bebe0 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0x96be7a8 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0x96be788 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0x96be720 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0x96be6f8 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x96be6e8 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x96be6d0 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x96be6b0 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96be658 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96bd6c0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x96be6c0 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x96be68c <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608630 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0x96be798 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0x96be778 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x96be754 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608270 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0x96be9d0 <line:1122:3, line:1125:3>
              (BinaryOperator 0x96be8c8 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x96be7ec <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x96be8a0 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x96be820 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
                  (DeclRefExpr 0x96be858 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x96be870 <col:29> 'const _CharT *' lvalue Var 0x96bde40 '__name' 'const _CharT *')
                  (DeclRefExpr 0x96be888 <col:37> 'int' lvalue Var 0x96bdf80 '__len' 'int')))
              (BinaryOperator 0x96be9b8 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x96be8e0 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x96be990 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x96be910 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
                  (DeclRefExpr 0x96be948 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x96be960 <col:29> '_CharT *' lvalue Var 0x96be320 '__ps' '_CharT *')
                  (DeclRefExpr 0x96be978 <col:35> 'const streamsize':'const int' lvalue Var 0x96be240 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0x96bebc8 <line:1127:3, line:1130:3>
              (BinaryOperator 0x96beac0 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x96be9e8 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x96bea98 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x96bea18 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
                  (DeclRefExpr 0x96bea50 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x96bea68 <col:29> '_CharT *' lvalue Var 0x96be320 '__ps' '_CharT *')
                  (DeclRefExpr 0x96bea80 <col:35> 'const streamsize':'const int' lvalue Var 0x96be240 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0x96bebb0 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x96bead8 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x96beb88 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x96beb08 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
                  (DeclRefExpr 0x96beb40 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x96beb58 <col:29> 'const _CharT *' lvalue Var 0x96bde40 '__name' 'const _CharT *')
                  (DeclRefExpr 0x96beb70 <col:37> 'int' lvalue Var 0x96bdf80 '__len' 'int')))))
          (ReturnStmt 0x96bec18 <line:1131:8, col:15>
            (DeclRefExpr 0x96bebfc <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0x96bed00 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0x96bece0 <col:4, col:9> '<bound member function type>' .width 0x96120c0
          (DeclRefExpr 0x96bec6c <col:4> 'class std::ios_base' lvalue ParmVar 0x96bd4d0 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0x96becc8 <col:15> 'int' 0))
      (BinaryOperator 0x96bedf8 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0x96bed20 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x96bedd0 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x96bed50 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9666f50 0x9667310)
          (DeclRefExpr 0x96bed88 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x96beda0 <col:28> 'const _CharT *' lvalue Var 0x96bde40 '__name' 'const _CharT *')
          (DeclRefExpr 0x96bedb8 <col:36> 'int' lvalue Var 0x96bdf80 '__len' 'int')))))
  (ReturnStmt 0x96bee80 <line:1136:7, col:14>
    (DeclRefExpr 0x96bee64 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x96bd480 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0x96bfba8 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0x96bfb98 <col:7, col:60>
    (CallExpr 0x96bfb68 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0x96bfab0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x96bfaec <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x96bf150 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x96bfb04 <col:35> 'class std::ios_base' lvalue ParmVar 0x96bf1a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96bfb1c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x96bf1e0 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0x96bfb40 <col:49, col:54> 'char')
      (DeclRefExpr 0x96bfb50 <col:57> 'double' lvalue ParmVar 0x96bf230 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0x96c0188 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0x96c0178 <col:7, col:57>
    (CallExpr 0x96c0148 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0x96c0090 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x96c00cc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x96bfe60 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x96c00e4 <col:35> 'class std::ios_base' lvalue ParmVar 0x96bfeb0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96c00fc <col:41> 'char_type':'_CharT' lvalue ParmVar 0x96bfef0 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0x96c0118 <col:49> 'char'76)
      (DeclRefExpr 0x96c012c <col:54> 'long double' lvalue ParmVar 0x96bff40 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0x96c1018 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0x96c0770 <line:1166:7, col:54>
    0x96c0690 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x96c0740 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x96c071c <col:42, col:47> '<bound member function type>' .flags 0x9611a00
          (ImplicitCastExpr 0x96c0760 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x96c06c4 <col:42> 'class std::ios_base' lvalue ParmVar 0x96c0490 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x96c0940 <line:1167:7, line:1168:29>
    0x96c07b0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x96c0920 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x96c0910 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96c08f8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9604900 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0x96c08e0 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x96c08b8 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x96c08a8 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x96c0890 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x96044c0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x96c0870 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96c0810 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x96c0880 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x96c084c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96085d0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0x96c0be0 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x96c0bbc <col:7, col:12> '<bound member function type>' .flags 0x9611af0
      (DeclRefExpr 0x96c0950 <col:7> 'class std::ios_base' lvalue ParmVar 0x96c0490 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x96c0b98 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x96c0b88 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x96c0b70 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x96044c0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x96c0a48 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x96c0a20 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x96c0a10 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96c09f8 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x96c09d8 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96c09a8 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96c0690 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x96c09e8 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96c09c0 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96c07b0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0x96c0b58 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x96c0b30 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x96c0b20 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x96c0b08 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x96044c0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x96c0ae8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96c0a88 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x96c0af8 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x96c0ac4 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96083f0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0x96c0dd0 <line:1171:7, line:1173:57>
    0x96c0da0 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0x96c0f18 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0x96c0de0 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0x96c0440 '__s' 'iter_type':'_OutIter')
    (CallExpr 0x96c0ee8 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0x96c0e08 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0x96c0e44 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0x96c0440 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x96c0e5c <col:32> 'class std::ios_base' lvalue ParmVar 0x96c0490 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x96c0e74 <col:38> 'char_type':'_CharT' lvalue ParmVar 0x96c04d0 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0x96c0ed0 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0x96c0ec0 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0x96c0ea0 <col:37> 'const void *' lvalue ParmVar 0x96c0520 '__v' 'const void *')))))
  (CXXMemberCallExpr 0x96c0fc0 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x96c0fa0 <col:7, col:12> '<bound member function type>' .flags 0x9611af0
      (DeclRefExpr 0x96c0f30 <col:7> 'class std::ios_base' lvalue ParmVar 0x96c0490 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x96c0fe0 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x96c0f88 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96c0690 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x96c1008 <line:1178:7, col:14>
    (DeclRefExpr 0x96c0fec <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x96c0440 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0x96c2ec0 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0x96c16b0 <line:1196:7, col:69>
    0x96c15e0 "const size_t __plen =
      (CXXStaticCastExpr 0x96c1698 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0x96c1688 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0x96c1668 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0x96c1648 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x96c1614 <col:49> 'streamsize':'int' lvalue ParmVar 0x96c1450 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0x96c1658 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x96c162c <col:60> 'streamsize':'int' lvalue ParmVar 0x96c1490 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0x96c1870 <line:1197:7, col:79>
    0x96c16f0 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0x96c1848 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x96c1838 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96c1820 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9604290 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x96c17a0 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x96c177c <col:43, col:48> '<bound member function type>' .flags 0x9611a00
            (ImplicitCastExpr 0x96c17c0 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x96c1724 <col:43> 'class std::ios_base' lvalue ParmVar 0x96c12f0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x96c1810 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96c17ec <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608630 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0x96c1bb0 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0x96c1918 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x96c18f8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96c18d8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96c1880 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96c16f0 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x96c1908 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96c18e8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96c18b4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608270 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x96c1b90 <line:1201:2, line:1205:2>
      (CallExpr 0x96c1a08 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0x96c1998 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0x96c19bc <col:18> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
        (DeclRefExpr 0x96c19d4 <col:26> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
        (DeclRefExpr 0x96c19ec <col:34> 'streamsize':'int' lvalue ParmVar 0x96c1490 '__oldlen' 'streamsize':'int'))
      (CallExpr 0x96c1b58 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0x96c1a58 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x96c1b00 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x96c1ab0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
          (DeclRefExpr 0x96c1a7c <col:20> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
          (DeclRefExpr 0x96c1a94 <col:29> 'streamsize':'int' lvalue ParmVar 0x96c1490 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0x96c1b24 <col:39> 'const size_t':'const unsigned int' lvalue Var 0x96c15e0 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0x96c1b3c <col:47> '_CharT' lvalue ParmVar 0x96c1330 '__fill' '_CharT'))
      (ReturnStmt 0x96c1b80 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0x96c1c40 <line:1207:7, col:23>
    0x96c1be0 "size_t __mod =
      (ImplicitCastExpr 0x96c1c30 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x96c1c18 <col:22> 'int' 0))")
  (IfStmt 0x96c2ba0 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0x96c1ce8 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x96c1cc8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96c1ca8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96c1c50 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96c16f0 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x96c1cd8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x96c1cb8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x96c1c84 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608210 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x96c2b80 <line:1209:2, line:1234:2>
      (DeclStmt 0x96c1de0 <line:1213:11, col:49>
        0x96c1d40 "const std::locale &__loc =
          (CXXMemberCallExpr 0x96c1db0 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0x96c1d8c <col:33, col:38> '<bound member function type>' ._M_getloc 0x96123e0
              (ImplicitCastExpr 0x96c1dd0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x96c1d74 <col:33> 'class std::ios_base' lvalue ParmVar 0x96c12f0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x96c2040 <line:1214:4, col:67>
        0x96c1ec0 "const ctype<_CharT> &__ctype =
          (CallExpr 0x96c2020 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0x96c1fa0 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
            (DeclRefExpr 0x96c2008 <col:61> 'const class std::locale' lvalue Var 0x96c1d40 '__loc' 'const class std::locale &'))")
      (IfStmt 0x96c2b60 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0x96c2300 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x96c2180 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x96c2120 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (CallExpr 0x96c20b8 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96c2068 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x96c2050 <col:8> 'const ctype<_CharT>' lvalue Var 0x96c1ec0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x96c20a0 <col:22> 'char'45))
            (ArraySubscriptExpr 0x96c2108 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x96c20d8 <col:30> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
              (IntegerLiteral 0x96c20f0 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0x96c22d8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x96c2278 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (CallExpr 0x96c2210 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x96c21c0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0x96c21a4 <col:11> 'const ctype<_CharT>' lvalue Var 0x96c1ec0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x96c21f8 <col:25> 'char'43))
            (ArraySubscriptExpr 0x96c2260 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0x96c2230 <col:33> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
              (IntegerLiteral 0x96c2248 <col:40> 'int' 0))))
        (CompoundStmt 0x96c2448 <line:1218:6, line:1222:6>
          (BinaryOperator 0x96c23a8 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0x96c2348 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x96c2318 <col:8> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
              (IntegerLiteral 0x96c2330 <col:15> 'int' 0))
            (ArraySubscriptExpr 0x96c2390 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x96c235c <col:20> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
              (IntegerLiteral 0x96c2378 <col:27> 'int' 0)))
          (BinaryOperator 0x96c2400 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0x96c23c0 <col:8> 'size_t':'unsigned int' lvalue Var 0x96c1be0 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0x96c23f0 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0x96c23d8 <col:16> 'int' 1)))
          (UnaryOperator 0x96c2430 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x96c2418 <col:10> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')))
        (IfStmt 0x96c2b40 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0x96c2910 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0x96c2618 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x96c2598 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x96c2538 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                (CallExpr 0x96c24d0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x96c2480 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0x96c2464 <col:13> 'const ctype<_CharT>' lvalue Var 0x96c1ec0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0x96c24b8 <col:27> 'char'48))
                (ArraySubscriptExpr 0x96c2520 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x96c24f0 <col:35> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
                  (IntegerLiteral 0x96c2508 <col:42> 'int' 0)))
              (BinaryOperator 0x96c2600 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0x96c25f0 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x96c25bc <col:9> 'streamsize':'int' lvalue ParmVar 0x96c1490 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0x96c25d8 <col:20> 'int' 1)))
            (ParenExpr 0x96c28f8 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0x96c28e0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0x96c2760 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0x96c2700 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (CallExpr 0x96c2698 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x96c2648 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x96c2630 <col:10> 'const ctype<_CharT>' lvalue Var 0x96c1ec0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x96c2680 <col:24> 'char'120))
                  (ArraySubscriptExpr 0x96c26e8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x96c26b8 <col:32> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x96c26d0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0x96c28b8 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0x96c2858 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (CallExpr 0x96c27f0 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x96c27a0 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0x96c2784 <col:13> 'const ctype<_CharT>' lvalue Var 0x96c1ec0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x96c27d8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0x96c2840 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0x96c2810 <col:35> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x96c2828 <col:42> 'int' 1))))))
          (CompoundStmt 0x96c2b20 <line:1227:6, line:1232:6>
            (BinaryOperator 0x96c29b8 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x96c2958 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x96c2928 <col:8> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
                (IntegerLiteral 0x96c2940 <col:15> 'int' 0))
              (ArraySubscriptExpr 0x96c29a0 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x96c296c <col:20> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
                (IntegerLiteral 0x96c2988 <col:27> 'int' 0)))
            (BinaryOperator 0x96c2a60 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x96c2a00 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x96c29d0 <col:8> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
                (IntegerLiteral 0x96c29e8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0x96c2a48 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x96c2a14 <col:20> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
                (IntegerLiteral 0x96c2a30 <col:27> 'int' 1)))
            (BinaryOperator 0x96c2ab8 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0x96c2a78 <col:8> 'size_t':'unsigned int' lvalue Var 0x96c1be0 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0x96c2aa8 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x96c2a90 <col:16> 'int' 2)))
            (CompoundAssignOperator 0x96c2b00 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x96c2ad0 <col:8> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
              (IntegerLiteral 0x96c2ae8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0x96c2c58 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0x96c2be8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0x96c2c0c <col:23> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
    (DeclRefExpr 0x96c2c24 <col:31> 'const size_t':'const unsigned int' lvalue Var 0x96c15e0 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0x96c2c3c <col:39> '_CharT' lvalue ParmVar 0x96c1330 '__fill' '_CharT'))
  (CallExpr 0x96c2e98 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0x96c2ca8 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0x96c2d50 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x96c2d00 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
      (DeclRefExpr 0x96c2ccc <col:21> '_CharT *' lvalue ParmVar 0x96c13a0 '__news' '_CharT *')
      (DeclRefExpr 0x96c2ce4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0x96c15e0 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0x96c2df8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x96c2da8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
      (DeclRefExpr 0x96c2d74 <col:38> 'const _CharT *' lvalue ParmVar 0x96c1410 '__olds' 'const _CharT *')
      (DeclRefExpr 0x96c2d8c <col:47> 'size_t':'unsigned int' lvalue Var 0x96c1be0 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0x96c2e80 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0x96c2e70 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x96c2e50 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x96c2e1c <col:54> 'streamsize':'int' lvalue ParmVar 0x96c1490 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0x96c2e60 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x96c2e34 <col:65> 'size_t':'unsigned int' lvalue Var 0x96c1be0 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0x96c4200 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0x96c32e0 <line:1245:7, col:23>
    0x96c3280 "size_t __idx =
      (ImplicitCastExpr 0x96c32d0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x96c32b8 <col:22> 'int' 0))")
  (DeclStmt 0x96c3360 <line:1246:7, col:23>
    0x96c3300 "size_t __ctr =
      (ImplicitCastExpr 0x96c3350 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x96c3338 <col:22> 'int' 0))")
  (WhileStmt 0x96c3950 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0x96c3758 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0x96c35d8 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x96c34c0 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x96c3470 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (CXXOperatorCallExpr 0x96c33e0 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x96c33a0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (DeclRefExpr 0x96c3370 <col:14> 'const _CharT *' lvalue ParmVar 0x96c3110 '__last' 'const _CharT *')
            (DeclRefExpr 0x96c3388 <col:23> 'const _CharT *' lvalue ParmVar 0x96c30c0 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0x96c3458 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0x96c3438 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x96c3404 <col:33> 'const char *' lvalue ParmVar 0x96c3010 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0x96c3448 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x96c341c <col:40> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0x96c35c0 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0x96c35b0 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0x96c3580 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0x96c3570 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0x96c3560 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0x96c3538 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0x96c3518 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0x96c34e4 <col:35> 'const char *' lvalue ParmVar 0x96c3010 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0x96c3528 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x96c34fc <col:42> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0x96c3598 <col:52> 'int' 0)))
      (BinaryOperator 0x96c3740 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0x96c3710 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0x96c3700 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0x96c3640 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0x96c3620 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x96c35f0 <col:10> 'const char *' lvalue ParmVar 0x96c3010 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0x96c3630 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x96c3608 <col:17> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0x96c3730 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x96c3720 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0x96c36e0 <col:27, col:62> 'const char':'const char' lvalue Var 0x969fd60 '__max' 'const char':'const char')))))
    (CompoundStmt 0x96c3938 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0x96c37f0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x96c3770 <col:4> 'const _CharT *' lvalue ParmVar 0x96c3110 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0x96c37d8 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0x96c37b8 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x96c3788 <col:14> 'const char *' lvalue ParmVar 0x96c3010 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0x96c37c8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x96c37a0 <col:21> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0x96c3918 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0x96c38a0 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0x96c3890 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x96c3810 <col:4> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0x96c3878 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0x96c3858 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x96c3828 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0x96c3050 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0x96c3868 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x96c3840 <col:22> 'int' 1))))
        (UnaryOperator 0x96c38d0 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x96c38b8 <col:28> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0x96c3900 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x96c38e4 <col:38> 'size_t':'unsigned int' lvalue Var 0x96c3300 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0x96c3af8 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96c39f8 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x96c3998 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (DeclRefExpr 0x96c3964 <col:14> 'const _CharT *' lvalue ParmVar 0x96c30c0 '__first' 'const _CharT *')
      (DeclRefExpr 0x96c397c <col:25> 'const _CharT *' lvalue ParmVar 0x96c3110 '__last' 'const _CharT *'))
    (BinaryOperator 0x96c3ae0 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x96c3a68 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0x96c3a50 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0x96c3a1c <col:3> '_CharT *' lvalue ParmVar 0x96c2f80 '__s' '_CharT *')))
      (UnaryOperator 0x96c3ac8 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0x96c3ab0 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0x96c3a7c <col:12> 'const _CharT *' lvalue ParmVar 0x96c30c0 '__first' 'const _CharT *')))))
  (WhileStmt 0x96c3e60 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x96c3b40 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x96c3b28 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x96c3b0c <col:14> 'size_t':'unsigned int' lvalue Var 0x96c3300 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0x96c3e48 <line:1260:2, line:1264:2>
      (BinaryOperator 0x96c3bc8 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x96c3b98 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x96c3b80 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x96c3b4c <col:5> '_CharT *' lvalue ParmVar 0x96c2f80 '__s' '_CharT *')))
        (DeclRefExpr 0x96c3bac <col:13> '_CharT' lvalue ParmVar 0x96c2fc0 '__sep' '_CharT'))
      (ForStmt 0x96c3e20 <line:1262:4, line:1263:23>
        (DeclStmt 0x96c3ca0 <line:1262:9, col:33>
          0x96c3bf0 "char __i =
            (ImplicitCastExpr 0x96c3c90 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x96c3c78 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x96c3c58 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x96c3c24 <col:20> 'const char *' lvalue ParmVar 0x96c3010 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x96c3c68 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x96c3c3c <col:27> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x96c3d00 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x96c3cf0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x96c3ce0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x96c3cb0 <col:35> 'char' lvalue Var 0x96c3bf0 '__i' 'char')))
          (IntegerLiteral 0x96c3cc8 <col:41> 'int' 0))
        (UnaryOperator 0x96c3d30 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x96c3d18 <col:46> 'char' lvalue Var 0x96c3bf0 '__i' 'char'))
        (BinaryOperator 0x96c3e08 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x96c3d90 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x96c3d78 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x96c3d44 <col:7> '_CharT *' lvalue ParmVar 0x96c2f80 '__s' '_CharT *')))
          (UnaryOperator 0x96c3df0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x96c3dd8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x96c3da4 <col:16> 'const _CharT *' lvalue ParmVar 0x96c30c0 '__first' 'const _CharT *')))))))
  (WhileStmt 0x96c41c0 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x96c3ea8 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x96c3e90 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x96c3e74 <col:14> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0x96c41a8 <line:1267:2, line:1271:2>
      (BinaryOperator 0x96c3f30 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x96c3f00 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x96c3ee8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x96c3eb4 <col:5> '_CharT *' lvalue ParmVar 0x96c2f80 '__s' '_CharT *')))
        (DeclRefExpr 0x96c3f14 <col:13> '_CharT' lvalue ParmVar 0x96c2fc0 '__sep' '_CharT'))
      (ForStmt 0x96c4180 <line:1269:4, line:1270:23>
        (DeclStmt 0x96c4000 <line:1269:9, col:33>
          0x96c3f50 "char __i =
            (ImplicitCastExpr 0x96c3ff0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x96c3fd8 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x96c3fb8 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x96c3f84 <col:20> 'const char *' lvalue ParmVar 0x96c3010 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x96c3fc8 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x96c3f9c <col:27> 'size_t':'unsigned int' lvalue Var 0x96c3280 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x96c4060 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x96c4050 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x96c4040 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x96c4010 <col:35> 'char' lvalue Var 0x96c3f50 '__i' 'char')))
          (IntegerLiteral 0x96c4028 <col:41> 'int' 0))
        (UnaryOperator 0x96c4090 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x96c4078 <col:46> 'char' lvalue Var 0x96c3f50 '__i' 'char'))
        (BinaryOperator 0x96c4168 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x96c40f0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x96c40d8 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x96c40a4 <col:7> '_CharT *' lvalue ParmVar 0x96c2f80 '__s' '_CharT *')))
          (UnaryOperator 0x96c4150 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x96c4138 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x96c4104 <col:16> 'const _CharT *' lvalue ParmVar 0x96c30c0 '__first' 'const _CharT *')))))))
  (ReturnStmt 0x96c41f0 <line:1273:7, col:14>
    (DeclRefExpr 0x96c41d4 <col:14> '_CharT *' lvalue ParmVar 0x96c2f80 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0x96e8360 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0x96e8300 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0x96e8268 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x96e824c <col:12> 'const _Facet *' lvalue ParmVar 0x96e8100 '__f' 'const _Facet *'))
    (CallExpr 0x96e82e0 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0x96e82d0 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x96e82b4 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x922b210 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x96e8350 <line:51:7, col:15>
    (UnaryOperator 0x96e8338 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0x96e831c <col:15> 'const _Facet *' lvalue ParmVar 0x96e8100 '__f' 'const _Facet *'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0x96ece70 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0x96ece60 <col:9, col:62>
    (ConditionalOperator 0x96ece40 <col:16, col:62> '<dependent type>'
      (CallExpr 0x96ecdb0 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ecd78 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x96ecd68 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x96ecdd0 <col:31> 'int' 0)
      (CXXConstCastExpr 0x96ece28 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0x96ecde8 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0x96ecf00 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0x96ecef0 <col:9, col:27>
    (CallExpr 0x96eced0 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96ece98 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x96ece88 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0x96ecf58 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0x96ecf48 <col:9, col:16>
    (MemberExpr 0x96ecf28 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x96094c0
      (CXXThisExpr 0x96ecf18 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0x96ecd40 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x96ecd24 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0x96ed0c0 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0x96ed0a0 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x96ecf80 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x96ecf70 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x96ed078 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x96ed038 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x96044c0 0x9605880 0x9606af0)
      (CallExpr 0x96ed000 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ecfc8 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x96ecfb8 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x96ed01c <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96e96f0 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0x96ed298 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0x96ed158 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0x96ed120 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9607170)
    (MemberExpr 0x96ed0e8 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x96094c0
      (CXXThisExpr 0x96ed0d8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96ed108 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96e97b0 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0x96ed278 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96ed240 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x96ed200 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (CallExpr 0x96ed1c8 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ed190 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x96ed180 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x96ed1e4 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96e97b0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0x96ed268 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0x96ed3c8 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0x96ed3b8 <col:9, col:35>
    (CXXOperatorCallExpr 0x96ed390 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x96ed330 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
      (CallExpr 0x96ed2f8 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ed2c0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x96ed2b0 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x96ed318 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0x96ed590 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0x96ed580 <col:9, col:46>
    (CXXOperatorCallExpr 0x96ed558 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x96ed4f8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (ParenExpr 0x96ed4c8 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x96ed4a0 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x96ed460 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
          (CallExpr 0x96ed428 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96ed3f0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x96ed3e0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x96ed444 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x96ed4e0 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0x96ed7f8 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0x96ed7e8 <col:9, col:58>
    (CXXOperatorCallExpr 0x96ed7c0 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x96ed760 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (ParenExpr 0x96ed730 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0x96ed708 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x96ed6c8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
          (CallExpr 0x96ed5f0 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96ed5b8 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x96ed5a8 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0x96ed6b0 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0x96ed688 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0x96ed678 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x96ed660 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9606af0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0x96ed640 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x96ed60c <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0x96ed650 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x96ed624 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0x96ed748 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0x96ed9c0 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0x96ed9b0 <col:9, col:46>
    (CXXOperatorCallExpr 0x96ed988 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x96ed928 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (ParenExpr 0x96ed8f8 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x96ed8d0 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x96ed890 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
          (CallExpr 0x96ed858 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x96ed820 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x96ed810 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x96ed874 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x96ed910 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0x96eda18 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0x96eda08 <col:9, col:16>
    (MemberExpr 0x96ed9e8 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0x9609480
      (CXXThisExpr 0x96ed9d8 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0x96edb28 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0x96eda78 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0x96eda40 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9609480
      (CXXThisExpr 0x96eda30 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96eda60 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96eb580 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0x96edb08 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x96edaa0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x96eda90 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x96edae8 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x96094c0
      (CXXThisExpr 0x96edad8 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0x96edb98 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0x96edc18 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x96edc68 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0x96edcb8 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0x96edd08 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0x96edd58 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0x96ede48 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0x96ede28 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x96eddd8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x96eddc8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96ede0c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x96eb770 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0x96ede60 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0x96edeb0 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0x96edea0 <col:9, col:16>
    (MemberExpr 0x96ede80 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0x96e8fe0
      (CXXThisExpr 0x96ede70 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0x96ee100 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0x96ee068 <line:300:9, col:55>
    0x96ee000 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0x96ee048 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x96e8fe0
        (CXXThisExpr 0x96ee038 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x96ee0c0 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0x96ee088 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x96e8fe0
      (CXXThisExpr 0x96ee078 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96ee0a8 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0x96ebd00 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0x96ee0f0 <line:302:9, col:16>
    (DeclRefExpr 0x96ee0d8 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0x96ee000 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0x96ee160 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0x96ee150 <col:9, col:16>
    (MemberExpr 0x96ee130 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0x96e91d0
      (CXXThisExpr 0x96ee120 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0x96ee368 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0x96ee308 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0x96ee1b8 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x96ee1a8 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0x96ee188 <col:7> '_Bool' lvalue ->_M_fill_init 0x96e9070
          (CXXThisExpr 0x96ee178 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0x96ee2f0 <line:364:4, line:367:4>
      (BinaryOperator 0x96ee280 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0x96ee1e0 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0x96e9030
          (CXXThisExpr 0x96ee1d0 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96ee260 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96ee210 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x96ee200 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0x96ee248 <col:28> 'char'32)))
      (BinaryOperator 0x96ee2d8 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0x96ee2a8 <col:6> '_Bool' lvalue ->_M_fill_init 0x96e9070
          (CXXThisExpr 0x96ee298 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x96ee2c8 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0x96ee358 <line:368:2, col:9>
    (MemberExpr 0x96ee338 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0x96e9030
      (CXXThisExpr 0x96ee328 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0x96ee4c8 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0x96ee430 <line:383:2, col:32>
    0x96ee390 "char_type __old =
      (CallExpr 0x96ee410 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ee3d8 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0x96ee3c8 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0x96ee488 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0x96ee450 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0x96e9030
      (CXXThisExpr 0x96ee440 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96ee470 <col:12> 'char_type':'_CharT' lvalue ParmVar 0x96ec590 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0x96ee4b8 <line:385:2, col:9>
    (DeclRefExpr 0x96ee4a0 <col:9> 'char_type':'_CharT' lvalue Var 0x96ee390 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x96ee610 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0x96ee600 <col:9, col:60>
    (CallExpr 0x96ee5d8 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96ee570 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x96ee550 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x96ee4e8 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
          (MemberExpr 0x96ee530 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x96e9260
            (CXXThisExpr 0x96ee520 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x96ee5a4 <col:47> 'char_type':'_CharT' lvalue ParmVar 0x96ec750 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x96ee5bc <col:52> 'char' lvalue ParmVar 0x96ec790 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0x96ee730 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0x96ee720 <col:9, col:49>
    (CallExpr 0x96ee700 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96ee6b0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x96ee690 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x96ee628 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
          (MemberExpr 0x96ee670 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x96e9260
            (CXXThisExpr 0x96ee660 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x96ee6e4 <col:46> 'char' lvalue ParmVar 0x96ec880 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0x96ee7a8 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0x96ee800 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0x96ee858 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x96ee8a8 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0x96ee8f8 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0x96ee948 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0x96ee998 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0x96eea08 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0x96ecd40 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x96ecd24 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0x96ef250 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0x96ef008 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0x96eeea0 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96eee68 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0x96eee58 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0x96eef08 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0x96eeed0 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x96094c0
        (CXXThisExpr 0x96eeec0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0x96eeef0 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96eed70 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0x96eeff0 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0x96eef30 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x96094c0
        (CXXThisExpr 0x96eef20 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x96eefc8 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x96eefb8 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x96eefa0 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9606af0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x96eef80 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x96eef50 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x96eed70 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0x96eef90 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x96eef68 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0x96ef230 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96ef138 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x96ef0f8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (CallExpr 0x96ef070 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ef038 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x96ef028 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x96ef0d8 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96ef0a0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x96ef090 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0x96ef200 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0x96ef1f0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x96ef1d4 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9242a50 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x96ef220 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x96ef1c0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x96ef194 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x96efbf8 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0x96efaf8 <line:55:7, col:61>
    0x96efa90 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0x96efad8 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x96e91d0
        (CXXThisExpr 0x96efac8 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x96efb50 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0x96efb18 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x96e91d0
      (CXXThisExpr 0x96efb08 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96efb38 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x96ef710 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0x96efbb0 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x96efb78 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x96efb68 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0x96efbe8 <line:58:7, col:14>
    (DeclRefExpr 0x96efbcc <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0x96efa90 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0x96f1658 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0x96f1600 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96f02d0 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x96f0270 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (CXXThisExpr 0x96f01e8 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0x96f0250 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x96f0210 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (DeclRefExpr 0x96f01f8 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0x96f15a0 <line:68:2, line:107:2>
      (DeclStmt 0x96f06f0 <line:73:4, line:74:69>
        0x96f0310 "std::ios_base::_Words *__words =
          (ConditionalOperator 0x96f06d0 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0x96f0428 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0x96f0400 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x96f03b0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
                (CXXDependentScopeMemberExpr 0x96f0360 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x96f0344 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0x96f0394 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0x9609f90 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0x96f0450 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x960a0c0
              (CXXThisExpr 0x96f0440 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0x96f0690 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0x96f0488 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0x96f0470 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0x96f0798 <line:77:4, col:45>
        0x96f0710 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0x96f0760 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x96f0744 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0x96f0848 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0x96f07d0 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x96f07c0 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0x96f07a8 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0x96f0710 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0x96f0828 <line:79:6, col:29> 'void'
          (MemberExpr 0x96f0804 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0x96099b0
            (ImplicitCastExpr 0x96f07f8 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0x96f07dc <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0x96f0710 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0x96f08b0 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0x96f0878 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9609b80
          (CXXThisExpr 0x96f0868 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x96f0898 <col:22> 'enum std::ios_base::event' EnumConstant 0x9608f40 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0x96f0a78 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x96f0990 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x96f0930 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
          (MemberExpr 0x96f08e0 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x960a160
            (CXXThisExpr 0x96f08d0 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0x96f0910 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x960a0c0
            (CXXThisExpr 0x96f0900 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0x96f0a60 <line:82:6, line:85:6>
          (CXXDeleteExpr 0x96f09e8 <line:83:8, col:18> 'void'
            (MemberExpr 0x96f09c8 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x960a160
              (CXXThisExpr 0x96f09b8 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0x96f0a48 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0x96f0a10 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x960a160
              (CXXThisExpr 0x96f0a00 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0x96f0a30 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0x96f0ac8 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0x96f0aa8 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0x9609c40
          (CXXThisExpr 0x96f0a98 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0x96f0b30 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0x96f0af8 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0x9609aa0
          (CXXThisExpr 0x96f0ae8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x96f0b18 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0x96f0710 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0x96f0dd0 <line:90:4, line:91:38>
        (DeclStmt 0x96f0bb0 <line:90:9, col:20>
          0x96f0b60 "int __i =
            (IntegerLiteral 0x96f0b98 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0x96f0c78 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x96f0c28 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
          (DeclRefExpr 0x96f0bc0 <col:22> 'int' lvalue Var 0x96f0b60 '__i' 'int')
          (CXXDependentScopeMemberExpr 0x96f0bf0 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x96f0bd8 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0x96f0cb8 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0x96f0c9c <col:50> 'int' lvalue Var 0x96f0b60 '__i' 'int'))
        (BinaryOperator 0x96f0db8 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0x96f0d20 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0x96f0d00 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0x96f0ccc <col:6> 'struct std::ios_base::_Words *' lvalue Var 0x96f0310 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0x96f0d10 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0x96f0ce4 <col:14> 'int' lvalue Var 0x96f0b60 '__i' 'int')))
          (ArraySubscriptExpr 0x96f0da0 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x96f0d50 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0x96f0d34 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0x96f0d84 <col:35> 'int' lvalue Var 0x96f0b60 '__i' 'int'))))
      (BinaryOperator 0x96f0e40 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0x96f0e08 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x960a160
          (CXXThisExpr 0x96f0df8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x96f0e28 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0x96f0310 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0x96f0ed8 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0x96f0e68 <col:4> 'int' lvalue ->_M_word_size 0x960a100
          (CXXThisExpr 0x96f0e58 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0x96f0ea0 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x96f0e88 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0x96f0fa8 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f0f00 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x96f0ef0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f0f88 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f0f50 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x96f0f34 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x96f1080 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f0fd8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x96f0fc8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f1060 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f1028 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x96f100c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x96f1158 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f10b0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x96f10a0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f1138 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f1100 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x96f10e4 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x96f1230 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f1188 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x96f1178 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f1210 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f11d8 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0x96f11bc <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x96f1308 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f1260 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x96f1250 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f12e8 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f12b0 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0x96f1294 <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0x96f13c8 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0x96f1338 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0x960a2f0
          (CXXThisExpr 0x96f1328 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f13a8 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f1370 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x96f1358 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x96f1440 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0x96f13f0 <col:4> '<bound member function type>' ->_M_cache_locale 0x96eccc0
          (CXXThisExpr 0x96f13e0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0x96f1420 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0x960a2f0
          (CXXThisExpr 0x96f1410 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x96f14a8 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0x96f1470 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9609b80
          (CXXThisExpr 0x96f1460 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x96f1490 <col:22> 'enum std::ios_base::event' EnumConstant 0x9608fc0 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0x96f1580 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f14d8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x96f14c8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x96f1560 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f1528 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0x96f150c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x96effa0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0x96f1648 <line:108:7, col:15>
    (UnaryOperator 0x96f1630 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x96f1620 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0x96f1e38 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0x96f1ac0 <line:116:7, col:35>
    0x96f1a00 "std::locale __old =
      (ParenListExpr 0x96f1aa0 <col:19, col:34> 'class std::locale'
        (CallExpr 0x96f1a80 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f1a48 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x96f1a38 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0x96f1b50 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0x96f1b08 <col:7, col:17> '<bound member function type>' ->imbue 0x96122b0
      (CXXThisExpr 0x96f1af8 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96f1b34 <col:23> 'const class std::locale' lvalue ParmVar 0x96f1910 '__loc' 'const class std::locale &'))
  (CallExpr 0x96f1bb8 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0x96f1b80 <col:7> '<bound member function type>' ->_M_cache_locale 0x96eccc0
      (CXXThisExpr 0x96f1b70 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96f1ba0 <col:23> 'const class std::locale' lvalue ParmVar 0x96f1910 '__loc' 'const class std::locale &'))
  (IfStmt 0x96f1db8 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x96f1cb8 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x96f1c58 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (CallExpr 0x96f1c20 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x96f1be8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x96f1bd8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x96f1c40 <col:28> 'int' 0))
    (CallExpr 0x96f1d98 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x96f1d48 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0x96f1d28 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x96f1cf0 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0x96f1ce0 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x96f1d7c <col:26> 'const class std::locale' lvalue ParmVar 0x96f1910 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0x96f1e28 <line:121:7, col:14>
    (CXXConstructExpr 0x96f1e00 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x96f1df0 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x96f1dd4 <col:14> 'class std::locale' lvalue Var 0x96f1a00 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x96f26d0 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0x96f23a0 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0x96f2370 <col:7, col:17> '<bound member function type>' ->_M_init 0x960a340
      (CXXThisExpr 0x96f2360 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0x96f2420 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0x96f23d0 <col:7> '<bound member function type>' ->_M_cache_locale 0x96eccc0
      (CXXThisExpr 0x96f23c0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x96f2400 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0x960a2f0
      (CXXThisExpr 0x96f23f0 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0x96f2490 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0x96f2450 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0x96e9030
      (CXXThisExpr 0x96f2440 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0x96f2478 <col:17, col:24> '_CharT'))
  (BinaryOperator 0x96f24e8 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0x96f24b8 <col:7> '_Bool' lvalue ->_M_fill_init 0x96e9070
      (CXXThisExpr 0x96f24a8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0x96f24d8 <col:22> '_Bool' false))
  (BinaryOperator 0x96f2548 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0x96f2510 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x96e8fe0
      (CXXThisExpr 0x96f2500 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0x96f2530 <col:16> 'int' 0))
  (BinaryOperator 0x96f25a8 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0x96f2570 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9609480
      (CXXThisExpr 0x96f2560 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96f2590 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0x96f2608 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0x96f25d0 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x96e91d0
      (CXXThisExpr 0x96f25c0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x96f25f0 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x96f2220 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0x96f26b8 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0x96f2630 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x96094c0
      (CXXThisExpr 0x96f2620 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0x96f2698 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0x96f2650 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x96f2220 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x96f2668 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0x96f2680 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0x96f9948 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0x96f2d30 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0x96f2b58 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0x96f2a84 <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x96f2b28 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x96f2aa8 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0x95f7110)
        (DeclRefExpr 0x96f2b10 <col:52> 'const class std::locale' lvalue ParmVar 0x96f29a0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x96f2b48 <col:60> '_Bool' true))
    (BinaryOperator 0x96f2cb8 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0x96f2b90 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x96e9260
        (CXXThisExpr 0x96f2b80 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x96f2c98 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x96f2c58 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CallExpr 0x96f2c38 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x96f2bb8 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96f2c20 <col:38> 'const class std::locale' lvalue ParmVar 0x96f29a0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x96f2d18 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0x96f2ce0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x96e9260
        (CXXThisExpr 0x96f2cd0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x96f2d00 <col:13> 'int' 0)))
  (IfStmt 0x96f2ff8 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0x96f2e20 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0x96f2d4c <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x96f2df0 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x96f2d70 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x95f7110)
        (DeclRefExpr 0x96f2dd8 <col:54> 'const class std::locale' lvalue ParmVar 0x96f29a0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x96f2e10 <col:62> '_Bool' true))
    (BinaryOperator 0x96f2f80 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0x96f2e58 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x96e92f0
        (CXXThisExpr 0x96f2e48 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x96f2f60 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x96f2f20 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CallExpr 0x96f2f00 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x96f2e80 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96f2ee8 <col:42> 'const class std::locale' lvalue ParmVar 0x96f29a0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x96f2fe0 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0x96f2fa8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x96e92f0
        (CXXThisExpr 0x96f2f98 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x96f2fc8 <col:15> 'int' 0)))
  (IfStmt 0x96f9928 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0x96f30e8 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0x96f3014 <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x96f30b8 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x96f3038 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x95f7110)
        (DeclRefExpr 0x96f30a0 <col:54> 'const class std::locale' lvalue ParmVar 0x96f29a0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x96f30d8 <col:62> '_Bool' true))
    (BinaryOperator 0x96f3248 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0x96f3120 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x96e9380
        (CXXThisExpr 0x96f3110 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x96f3228 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x96f31e8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CallExpr 0x96f31c8 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x96f3148 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
          (DeclRefExpr 0x96f31b0 <col:42> 'const class std::locale' lvalue ParmVar 0x96f29a0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x96f9910 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0x96f98d8 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x96e9380
        (CXXThisExpr 0x96f3260 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x96f98f8 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0x9703db8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0x9703d98 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9703d48 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9703d38 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9703d7c <col:20> '__streambuf_type *' lvalue ParmVar 0x9700990 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9703dd0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0x9703e50 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0x9703e40 <line:114:2, col:19>
    (CallExpr 0x9703e20 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0x9703de0 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0x9700d50 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0x9703e08 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9703df8 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9703f00 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0x9703ea8 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9703e64 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9700fc0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9703e90 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9703e80 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9703ef0 <line:124:2, col:10>
    (UnaryOperator 0x9703ed8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9703ec8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9703fb0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0x9703f58 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9703f18 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x97011a0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9703f40 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9703f30 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9703fa0 <line:134:2, col:10>
    (UnaryOperator 0x9703f88 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9703f78 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0x9704060 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0x9704050 <col:9, col:29>
    (CallExpr 0x9704030 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9703fd8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9704014 <col:26> 'long' lvalue ParmVar 0x97012c0 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0x9704110 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0x9704100 <col:9, col:29>
    (CallExpr 0x97040e0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9704088 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97040c4 <col:26> 'unsigned long' lvalue ParmVar 0x97013e0 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0x97041c0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0x97041b0 <col:9, col:29>
    (CallExpr 0x9704190 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9704138 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9704174 <col:26> '_Bool' lvalue ParmVar 0x97014f0 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0x97042b8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0x97042a8 <line:185:2, col:50>
    (CallExpr 0x9704288 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x97041e8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9704270 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9704260 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9704250 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9704224 <col:46> 'unsigned short' lvalue ParmVar 0x9701730 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0x97043b0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0x97043a0 <line:196:2, col:50>
    (CallExpr 0x9704380 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x97042e0 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9704368 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9704358 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9704348 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x970431c <col:46> 'unsigned int' lvalue ParmVar 0x9702990 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0x9704460 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0x9704450 <col:9, col:29>
    (CallExpr 0x9704430 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x97043d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9704414 <col:26> 'long long' lvalue ParmVar 0x9702ab0 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0x9704510 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0x9704500 <col:9, col:29>
    (CallExpr 0x97044e0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9704488 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97044c4 <col:26> 'unsigned long long' lvalue ParmVar 0x9702bd0 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0x97045c0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0x97045b0 <col:9, col:29>
    (CallExpr 0x9704590 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9704538 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9704574 <col:26> 'double' lvalue ParmVar 0x9702cf0 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0x97046b8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0x97046a8 <line:218:2, col:43>
    (CallExpr 0x9704688 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0x97045e8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9704670 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0x9704660 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0x9704650 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0x9704624 <col:39> 'float' lvalue ParmVar 0x9702e10 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0x9704768 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0x9704758 <col:9, col:29>
    (CallExpr 0x9704738 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x97046e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x970471c <col:26> 'long double' lvalue ParmVar 0x9702f30 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0x9704818 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0x9704808 <col:9, col:29>
    (CallExpr 0x97047e8 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9704790 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97047cc <col:26> 'const void *' lvalue ParmVar 0x9703050 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0x9704ab0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0x9704970 <line:290:2, col:57>
    0x9704840 "const streamsize __put =
      (CallExpr 0x9704948 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97048e0 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0x97048c0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9704888 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0x9704878 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9704914 <col:48> 'const char_type *' lvalue ParmVar 0x97033e0 '__s' 'const char_type *')
        (DeclRefExpr 0x970492c <col:53> 'streamsize':'int' lvalue ParmVar 0x9703420 '__n' 'streamsize':'int'))")
  (IfStmt 0x9704a90 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0x97049d0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0x97049b0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9704980 <col:6> 'const streamsize':'const int' lvalue Var 0x9704840 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x97049c0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9704998 <col:15> 'streamsize':'int' lvalue ParmVar 0x9703420 '__n' 'streamsize':'int')))
    (CallExpr 0x9704a70 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x97049f8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x97049e8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9704a4c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9704b48 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0x9704b28 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9704ad8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9704ac8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9704b10 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0x9705950 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0x9705930 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0x97055e0 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0x97054e8 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0x97054c0 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9705480 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
          (CallExpr 0x9705420 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97053e8 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0x97053c8 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9704fb0
                (CXXThisExpr 0x97053b8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0x970545c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608570 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0x97055c8 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0x97055a8 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0x9705598 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x970553c <col:50> '_Bool (void) throw()' lvalue Function 0x92cf5e0 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0x9705918 <line:410:4, line:414:4>
      (IfStmt 0x97058f8 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0x9705818 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0x9705660 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9705628 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0x9705608 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9704fb0
                (CXXThisExpr 0x97055f8 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0x97057f0 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9705790 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (CallExpr 0x9705740 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9705708 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0x97056e8 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x97056b0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0x9705690 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9704fb0
                      (CXXThisExpr 0x9705680 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0x9705778 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0x9705760 <col:56> 'int' 1))))
        (CallExpr 0x97058d8 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9705860 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0x9705840 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9704fb0
              (CXXThisExpr 0x9705830 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0x97058b4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0x97059c8 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0x97059b8 <col:9, col:16>
    (MemberExpr 0x9705998 <col:16> 'const _Bool' lvalue ->_M_ok 0x9704e50
      (CXXThisExpr 0x9705988 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0x9705f78 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0x9705f68 <col:7, col:45>
    (CallExpr 0x9705f40 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9705e60 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x951c810)
      (DeclRefExpr 0x9705e94 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9705ca0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0x9705f08 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9705ec8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (DeclRefExpr 0x9705eac <col:39> '_CharT' lvalue ParmVar 0x9705ce0 '__c' '_CharT'))
      (IntegerLiteral 0x9705f28 <col:44> 'int' 1))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0x9706540 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0x9706530 <col:7, col:40>
    (ParenExpr 0x9706518 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0x97064f0 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x97064b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x97063e0 0x9705e30 0x95639a0)
        (DeclRefExpr 0x9706410 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9706250 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0x9706490 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9706440 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0x9706428 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9706250 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0x9706474 <col:36> 'char' lvalue ParmVar 0x9706290 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0x9706ad0 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0x9706ac0 <col:7, col:45>
    (CallExpr 0x9706a98 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9706a00 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x951c810)
      (DeclRefExpr 0x9706a34 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9706840 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0x9706a68 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0x9706a4c <col:39> 'char' lvalue ParmVar 0x9706880 '__c' 'char'))
      (IntegerLiteral 0x9706a80 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0x9707038 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0x9707028 <col:7, col:46>
    (ParenExpr 0x9707010 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9706fe8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9706fa0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9706f00 0x97069d0 0x97063e0 0x9705e30 0x95639a0)
        (DeclRefExpr 0x9706f30 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9706d60 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9706f88 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9706f78 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9706f68 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0x9706f48 <col:42> 'signed char' lvalue ParmVar 0x9706db0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0x9707598 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0x9707588 <col:7, col:46>
    (ParenExpr 0x9707570 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9707548 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9707500 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9707460 0x9706f00 0x97069d0 0x97063e0 0x9705e30 0x95639a0)
        (DeclRefExpr 0x9707490 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x97072c0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x97074e8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x97074d8 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x97074c8 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0x97074a8 <col:42> 'unsigned char' lvalue ParmVar 0x9707310 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0x9707cc0 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0x9707c78 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0x9707a78 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9707a60 <col:12> 'const _CharT *' lvalue ParmVar 0x97078e0 '__s' 'const _CharT *'))
    (CallExpr 0x9707b20 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9707aa8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9707a8c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9707870 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9707afc <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9707c50 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9707b40 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0x951c810)
      (DeclRefExpr 0x9707b74 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9707870 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0x9707b8c <col:26> 'const _CharT *' lvalue ParmVar 0x97078e0 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0x9707c38 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9707c10 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9707bd0 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9707bf4 <col:45> 'const _CharT *' lvalue ParmVar 0x97078e0 '__s' 'const _CharT *')))))
  (ReturnStmt 0x9707cb0 <line:499:7, col:14>
    (DeclRefExpr 0x9707c94 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9707870 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0x9708830 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0x97087e8 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0x97085e8 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x97085d8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x97085c8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x97085b0 <col:12> 'const char *' lvalue ParmVar 0x9708430 '__s' 'const char *'))))
    (CallExpr 0x9708690 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9708618 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x97085fc <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x97083e0 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0x970866c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x97087c0 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0x97086b0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0x951c810)
      (DeclRefExpr 0x97086e4 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x97083e0 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0x97086fc <col:26> 'const char *' lvalue ParmVar 0x9708430 '__s' 'const char *')
      (CXXStaticCastExpr 0x97087a8 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9708780 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9708740 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9708764 <col:45> 'const char *' lvalue ParmVar 0x9708430 '__s' 'const char *')))))
  (ReturnStmt 0x9708820 <line:516:7, col:14>
    (DeclRefExpr 0x9708804 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x97083e0 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0x9708dc0 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0x9708db0 <col:7, col:58>
    (ParenExpr 0x9708d98 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9708d70 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9708d18 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9708c80 0x9708580 0x9708140 0x9707a30 0x9707460 0x9706f00 0x97069d0 0x97063e0 0x9705e30 0x95639a0)
        (DeclRefExpr 0x9708cb0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9708ac0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9708d00 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9708cf0 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0x9708cc8 <col:54> 'const signed char *' lvalue ParmVar 0x9708b30 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0x9709358 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0x9709348 <col:7, col:58>
    (ParenExpr 0x9709330 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9709308 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x97092a8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9709210 0x9708c80 0x9708580 0x9708140 0x9707a30 0x9707460 0x9706f00 0x97069d0 0x97063e0 0x9705e30 0x95639a0)
        (DeclRefExpr 0x9709240 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9709050 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9709290 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9709280 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9709258 <col:54> 'const unsigned char *' lvalue ParmVar 0x97090c0 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9709908 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0x97098f8 <col:7, col:46>
    (CallExpr 0x97098d8 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x97097b0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0x97098b8 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97097f8 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x97097e0 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9709630 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0x9709898 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9709848 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x970982c <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9709630 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0x9709880 <col:40> 'char'10))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9709de0 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0x9709dd0 <col:7, col:31>
    (CallExpr 0x9709db0 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9709d58 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9709d3c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9709be0 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0x9709d98 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x970a2a0 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0x970a290 <col:7, col:25>
    (CallExpr 0x970a270 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x970a238 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x970a21c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970a0c0 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0x970e738 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0x970e788 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970e610 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0x970eb58 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0x970e9a0 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0x970e8c0 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0x970e830 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x970e7f8 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x970e7e0 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970e610 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0x970e8a0 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x970e868 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x970e84c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970e610 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0x970e980 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x970e948 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0x970e928 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x970e8f0 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0x970e8d8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970e610 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0x970eb38 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0x970ea10 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x970e9d8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x970e9bc <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970e610 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0x970ea70 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0x970ea40 <col:2> '_Bool' lvalue ->_M_ok 0x9704e50
        (CXXThisExpr 0x970ea30 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0x970ea60 <col:10> '_Bool' true))
    (CallExpr 0x970eb18 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x970eaa0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x970ea88 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x970e610 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x970eaf4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0x970fae8 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0x970f290 <line:67:2, col:22>
    0x970f210 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x970f270 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x970f258 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x970f248 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x970fa90 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0x970f2a0 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0x970f210 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x970fa68 <line:69:4, line:86:4>
      (DeclStmt 0x970f378 <line:70:6, col:49>
        0x970f2f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x970f368 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x970f344 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x970f780 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x970f388 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x970f768 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0x970f4d8 <line:73:3, col:63>
            0x970f400 "const __num_put_type &__np =
              (CallExpr 0x970f4b8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x970f438 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
                (CXXDependentScopeMemberExpr 0x970f480 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x970f470 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0x970f748 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0x970f670 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x970f638 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0x970f608 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x970f500 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0x970f4e8 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x970f400 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0x970f548 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x970f538 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0x970f570 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x970f560 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0x970f5d0 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x970f598 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x970f588 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0x970f5ec <col:44> '_ValueT' lvalue ParmVar 0x970ef50 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0x970f720 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x970f710 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x970f6f8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x970f68c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x970f2f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x970f6e8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x970f6c4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x970f880 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x970f7a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x970f868 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0x970f838 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x970f7c0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x970f7b0 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x970f814 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x970f858 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0x970f970 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x970f8a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x970f958 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0x970f938 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x970f8c0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x970f8b0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x970f914 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x970fa48 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x970f9b8 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x970f9a8 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x970f98c <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x970f2f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x970fa28 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x970f9d8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x970f9c8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x970fa0c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x970f2f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x970fad8 <line:87:2, col:10>
    (UnaryOperator 0x970fac0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x970fab0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0x97105f8 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0x9710258 <line:97:7, col:75>
    0x9710110 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9710230 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x97101f0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CallExpr 0x9710190 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9710158 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9710148 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x97101cc <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x97105d8 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0x97103c8 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9710300 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x97102e0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x97102c0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9710268 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9710110 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x97102f0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x97102d0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x971029c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x97103b0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9710390 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9710370 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9710318 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9710110 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x97103a0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9710380 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x971034c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x97104e8 <line:99:2, col:70>
      (CallExpr 0x97104c8 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0x97103f0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x97104b0 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x97104a0 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9710478 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0x9710468 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0x9710458 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0x971042c <col:65> 'short' lvalue ParmVar 0x970fe90 '__n' 'short'))))))))
    (ReturnStmt 0x97105c8 <line:101:2, col:41>
      (CallExpr 0x97105a8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9710508 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9710590 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9710580 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9710570 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0x9710544 <col:37> 'short' lvalue ParmVar 0x970fe90 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0x97110f8 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0x9710d58 <line:111:7, col:75>
    0x9710c10 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9710d30 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9710cf0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CallExpr 0x9710c90 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9710c58 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9710c48 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9710ccc <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608690 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x97110d8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0x9710ec8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9710e00 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9710de0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9710dc0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9710d68 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9710c10 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9710df0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9710dd0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9710d9c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96082d0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9710eb0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9710e90 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9710e70 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9710e18 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9710c10 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9710ea0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9710e80 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9710e4c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x96081b0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9710fe8 <line:113:2, col:68>
      (CallExpr 0x9710fc8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0x9710ef0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9710fb0 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9710fa0 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9710f78 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0x9710f68 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0x9710f58 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9710f2c <col:63> 'int' lvalue ParmVar 0x9710990 '__n' 'int'))))))))
    (ReturnStmt 0x97110c8 <line:115:2, col:41>
      (CallExpr 0x97110a8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9711008 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9711090 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9711080 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9711070 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0x9711044 <col:37> 'int' lvalue ParmVar 0x9710990 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0x9711ee8 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0x9711798 <line:123:7, col:50>
    0x9711710 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9711788 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9711764 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9711830 <line:124:7, col:27>
    0x97117b0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9711810 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x97117f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x97117e8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9711db8 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0x9711870 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9711840 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0x97117b0 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0x9711858 <col:21> '__streambuf_type *' lvalue ParmVar 0x9711490 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0x9711c90 <line:126:2, line:139:2>
      (IfStmt 0x9711a80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9711888 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9711a68 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0x9711a48 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0x9711978 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0x9711950 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9711898 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9634c60)
                (DeclRefExpr 0x97118cc <col:31> '__streambuf_type *' lvalue ParmVar 0x9711490 '__sbin' '__streambuf_type *')
                (CallExpr 0x9711930 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x97118f8 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0x97118e8 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0x9711a20 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9711a10 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x97119f8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x971198c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9711710 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x97119e8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x97119c4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9711b80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9711aa0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9711b68 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0x9711b38 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9711ac0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9711ab0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9711b14 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9711b58 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0x9711c70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9711ba0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9711c58 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0x9711c38 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9711bc0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9711bb0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9711c14 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9711d98 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0x9711cc8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9711cac <col:17> '__streambuf_type *' lvalue ParmVar 0x9711490 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9711d70 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9711d60 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9711d48 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9711cdc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9711710 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9711d38 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9711d14 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9711e90 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9711e00 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9711df0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9711dd4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9711710 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9711e70 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9711e20 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9711e10 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9711e54 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9711710 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9711ed8 <line:144:7, col:15>
    (UnaryOperator 0x9711ec0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9711eb0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0x9712d40 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0x9712560 <line:158:7, col:27>
    0x97124e0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9712540 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9712528 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9712518 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9712ce8 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0x9712570 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0x97124e0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9712cc0 <line:160:2, line:177:2>
      (DeclStmt 0x9712648 <line:161:4, col:47>
        0x97125c0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9712638 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9712614 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x97129d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9712658 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x97129c0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0x97127a0 <line:164:8, col:56>
            0x9712690 "const int_type __put =
              (CallExpr 0x9712780 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9712730 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9712710 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x97126d8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0x97126c8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9712764 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9712290 '__c' 'char_type':'_CharT'))")
          (IfStmt 0x97129a0 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0x97128c0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97127f8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x971282c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9712690 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0x97128a0 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9712868 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9712978 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9712968 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9712950 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x97128e4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97125c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9712940 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x971291c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9712ad8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97129f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9712ac0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0x9712a90 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9712a18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9712a08 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9712a6c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9712ab0 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0x9712bc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9712af8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9712bb0 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0x9712b90 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9712b18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9712b08 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9712b6c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9712ca0 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9712c10 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9712c00 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9712be4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97125c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9712c80 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9712c30 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9712c20 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9712c64 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97125c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9712d30 <line:178:7, col:15>
    (UnaryOperator 0x9712d18 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9712d08 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0x9713770 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0x9713410 <line:193:7, col:27>
    0x9713390 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x97133f0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x97133d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x97133c8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9713718 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0x9713420 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0x9713390 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x97136f8 <line:195:2, line:205:2>
      (IfStmt 0x97134e8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9713438 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x97134d0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0x97134a8 <col:8, col:25> '<dependent type>'
            (MemberExpr 0x9713458 <col:8> '<bound member function type>' ->_M_write 0x97034c0
              (CXXThisExpr 0x9713448 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9713478 <col:17> 'const _CharT *' lvalue ParmVar 0x9713100 '__s' 'const _CharT *')
            (DeclRefExpr 0x9713490 <col:22> 'streamsize':'int' lvalue ParmVar 0x9713140 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0x97135e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9713508 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97135d0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0x97135a0 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9713528 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9713518 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x971357c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x97135c0 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0x97136d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9713608 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97136c0 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0x97136a0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9713628 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9713618 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x971367c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9713760 <line:206:7, col:15>
    (UnaryOperator 0x9713748 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9713738 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0x97143d0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0x9713da8 <line:217:7, col:50>
    0x9713d20 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9713d98 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9713d74 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x97140b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9713db8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9714098 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0x9714078 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0x9713fa8 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0x9713e10 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9713dd8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9713dc8 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0x9713f80 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0x9713f20 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
            (CallExpr 0x9713ed0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9713e98 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0x9713e78 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9713e40 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0x9713e30 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0x9713f08 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0x9713ef0 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0x9714050 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0x9714040 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9714028 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0x9713fc0 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9713d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0x9714018 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9713ff4 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x97141b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x97140d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9714198 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0x9714168 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97140f0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x97140e0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9714144 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9714188 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0x97142a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x97141d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9714288 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0x9714268 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97141f0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x97141e0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9714244 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9714378 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x97142e8 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x97142d8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x97142bc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9713d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9714358 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9714308 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x97142f8 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x971433c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9713d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x97143c0 <line:232:7, col:15>
    (UnaryOperator 0x97143a8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9714398 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0x9714f00 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0x9714a60 <line:240:7, col:36>
    0x97149d0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9714a40 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9714a28 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9714a10 <col:34> 'int' 1)))")
  (IfStmt 0x9714cc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9714a70 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9714cb0 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0x9714c90 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0x9714ae8 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9714ac8 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9714a90 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9714a80 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0x9714c78 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0x9714afc <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x97149d0 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0x9714c50 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9714b80 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0x9714b60 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9714b28 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9714b18 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0x9714bb8 <col:40> 'int' 0)
            (DeclRefExpr 0x9714bec <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9608c60 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0x9714c2c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9714dc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9714ce8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9714db0 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0x9714d80 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9714d08 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9714cf8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9714d5c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9714da0 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0x9714eb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9714de8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9714ea0 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0x9714e80 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9714e08 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9714df8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9714e5c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9714ef0 <line:253:7, col:14>
    (DeclRefExpr 0x9714ed4 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x97149d0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0x9715d30 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0x97155b8 <line:261:7, col:50>
    0x9715530 "ios_base::iostate __err =
      (ImplicitCastExpr 0x97155a8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9715584 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9715a10 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x97155c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x97159f8 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0x97159d8 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0x9715640 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9715620 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97155e8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x97155d8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x97159c0 <line:265:6, line:274:6>
          (DeclStmt 0x97157b8 <line:268:8, line:269:27>
            0x9715660 "const pos_type __p =
              (CallExpr 0x9715790 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9715700 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x97156e0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x97156a8 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9715698 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9715734 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x97152b0 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0x971576c <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x97159a0 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x97158c0 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9715860 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x97157c8 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9715660 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9715840 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9715820 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9715808 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x97157f0 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9715978 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9715968 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9715950 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x97158e4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9715530 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9715940 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x971591c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9715b10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9715a30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9715af8 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0x9715ac8 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9715a50 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9715a40 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9715aa4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9715ae8 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0x9715c00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9715b30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9715be8 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0x9715bc8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9715b50 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9715b40 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9715ba4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9715cd8 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9715c48 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9715c38 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9715c1c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9715530 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9715cb8 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9715c68 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9715c58 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9715c9c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9715530 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9715d20 <line:285:7, col:15>
    (UnaryOperator 0x9715d08 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9715cf8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9719268 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0x9716458 <line:293:7, col:50>
    0x97163d0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9716448 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9716424 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9718f48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9716468 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9718f30 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0x9718f10 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0x97164e0 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x97164c0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9716488 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9716478 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9718ef8 <line:297:6, line:306:6>
          (DeclStmt 0x9718cf0 <line:300:8, line:301:27>
            0x9716500 "const pos_type __p =
              (CallExpr 0x9718cc8 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97165a0 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9716580 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9716548 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9716538 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x97165d4 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x97160e0 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0x9718c70 <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9716150 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9718ca4 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9718ed8 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9718df8 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9718d98 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
              (DeclRefExpr 0x9718d00 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9716500 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9718d78 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9718d58 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9718d40 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9718d28 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9718eb0 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9718ea0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9718e88 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9718e1c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97163d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9718e78 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9718e54 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9719048 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9718f68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9719030 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0x9719000 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9718f88 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9718f78 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9718fdc <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9719020 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0x9719138 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9719068 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9719120 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0x9719100 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9719088 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9719078 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x97190dc <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9719210 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9719180 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9719170 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9719154 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97163d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x97191f0 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x97191a0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9719190 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x97191d4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97163d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9719258 <line:317:7, col:15>
    (UnaryOperator 0x9719240 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9719230 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0x971a668 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0x971a620 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0x9719758 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9719748 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9719738 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x971971c <col:12> 'const char *' lvalue ParmVar 0x97195a0 '__s' 'const char *'))))
    (CallExpr 0x9719800 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9719788 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x971976c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9719550 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x97197dc <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0x971a600 <line:327:2, line:353:2>
      (DeclStmt 0x9719978 <line:330:4, col:56>
        0x9719830 "const size_t __clen =
          (CallExpr 0x9719948 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x9719938 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x97198e0 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x90d2480 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0x9719968 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9719900 <col:52> 'const char *' lvalue ParmVar 0x97195a0 '__s' 'const char *')))")
      (IfStmt 0x971a3e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9719988 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x971a3c0 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0x9719fc8 <line:333:8, line:339:35>
            0x97199a0 "struct __ptr_guard;"
            0x9719ed0 "struct __ptr_guard __pg =
              (ParenListExpr 0x9719fa0 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0x9719f60 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0x9719f04 <col:27> 'const size_t':'const unsigned int' lvalue Var 0x9719830 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0x971a098 <line:341:8, col:35>
            0x9719ff0 "_CharT *__ws =
              (CallExpr 0x971a078 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x971a040 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0x971a024 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0x9719ed0 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0x971a2f0 <line:342:8, line:343:35>
            (DeclStmt 0x971a110 <line:342:13, col:28>
              0x971a0b0 "size_t __i =
                (ImplicitCastExpr 0x971a100 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x971a0e8 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0x971a170 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0x971a150 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x971a120 <col:30> 'size_t':'unsigned int' lvalue Var 0x971a0b0 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x971a160 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x971a138 <col:36> 'const size_t':'const unsigned int' lvalue Var 0x9719830 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0x971a1a0 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0x971a188 <col:46> 'size_t':'unsigned int' lvalue Var 0x971a0b0 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0x971a2d8 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0x971a1e8 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x971a1b4 <col:3> '_CharT *' lvalue Var 0x9719ff0 '__ws' '_CharT *')
                (DeclRefExpr 0x971a1cc <col:8> 'size_t':'unsigned int' lvalue Var 0x971a0b0 '__i' 'size_t':'unsigned int'))
              (CallExpr 0x971a2b8 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x971a218 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x971a1fc <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9719550 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0x971a2a0 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0x971a280 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0x971a24c <col:27> 'const char *' lvalue ParmVar 0x97195a0 '__s' 'const char *'))
                  (ImplicitCastExpr 0x971a290 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x971a264 <col:31> 'size_t':'unsigned int' lvalue Var 0x971a0b0 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0x971a398 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x971a318 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0x951c810)
            (DeclRefExpr 0x971a34c <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9719550 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0x971a364 <col:32> '_CharT *' lvalue Var 0x9719ff0 '__ws' '_CharT *')
            (DeclRefExpr 0x971a37c <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9719830 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0x971a4e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x971a400 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x971a4d0 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0x971a4a0 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x971a428 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x971a410 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9719550 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x971a47c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x971a4c0 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0x971a5e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x971a508 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x971a5c8 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0x971a5a8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x971a530 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x971a518 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9719550 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x971a584 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0x971a658 <line:354:7, col:14>
    (DeclRefExpr 0x971a63c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9719550 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0x9731de0 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9731dc8 <col:30> 'int' 0))
) (CompoundStmt 0x9731ed8 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0x9731eb8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9731e68 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9731e58 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9731e9c <col:20> '__streambuf_type *' lvalue ParmVar 0x972ece0 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0x9731f70 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0x9731f58 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0x9731f00 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9731ef0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0x9731f40 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0x9731f28 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0x9731ff8 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0x9731fe8 <col:9, col:26>
    (CallExpr 0x9731fc8 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0x9731f84 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0x972f0a0 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0x9731fb0 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9731fa0 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x97320a8 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0x9732050 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0x973200c <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x972f2b0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9732038 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9732028 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9732098 <line:128:2, col:10>
    (UnaryOperator 0x9732080 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9732070 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9732158 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0x9732100 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0x97320c0 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x972f430 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x97320e8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x97320d8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9732148 <line:135:2, col:10>
    (UnaryOperator 0x9732130 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9732120 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0x9732208 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0x97321f8 <col:9, col:30>
    (CallExpr 0x97321d8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732180 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97321bc <col:27> '_Bool' lvalue ParmVar 0x972f550 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0x97322b8 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0x97322a8 <col:9, col:30>
    (CallExpr 0x9732288 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732230 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973226c <col:27> 'unsigned short' lvalue ParmVar 0x972f790 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0x9732368 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0x9732358 <col:9, col:30>
    (CallExpr 0x9732338 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x97322e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973231c <col:27> 'unsigned int' lvalue ParmVar 0x972f9d0 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0x9732418 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0x9732408 <col:9, col:30>
    (CallExpr 0x97323e8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732390 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97323cc <col:27> 'long' lvalue ParmVar 0x972faf0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0x97324c8 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0x97324b8 <col:9, col:30>
    (CallExpr 0x9732498 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732440 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973247c <col:27> 'unsigned long' lvalue ParmVar 0x972fc10 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0x9732578 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0x9732568 <col:9, col:30>
    (CallExpr 0x9732548 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x97324f0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973252c <col:27> 'long long' lvalue ParmVar 0x972fd30 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0x9732628 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0x9732618 <col:9, col:30>
    (CallExpr 0x97325f8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x97325a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97325dc <col:27> 'unsigned long long' lvalue ParmVar 0x972fe50 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0x97326d8 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0x97326c8 <col:9, col:30>
    (CallExpr 0x97326a8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732650 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973268c <col:27> 'float' lvalue ParmVar 0x972ff70 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0x9732788 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0x9732778 <col:9, col:30>
    (CallExpr 0x9732758 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732700 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973273c <col:27> 'double' lvalue ParmVar 0x9730090 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0x9732838 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0x9732828 <col:9, col:30>
    (CallExpr 0x9732808 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x97327b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x97327ec <col:27> 'long double' lvalue ParmVar 0x97301b0 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0x97328e8 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0x97328d8 <col:9, col:30>
    (CallExpr 0x97328b8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9732860 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x973289c <col:27> 'void *' lvalue ParmVar 0x97302d0 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0x9732958 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0x9732948 <col:9, col:16>
    (MemberExpr 0x9732928 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9732918 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0x9732aa0 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0x9732a90 <col:9, col:53>
    (CallExpr 0x9732a68 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9732980 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9732970 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x97329b4 <col:26> 'char_type *' lvalue ParmVar 0x9730950 '__s' 'char_type *')
      (DeclRefExpr 0x97329cc <col:31> 'streamsize':'int' lvalue ParmVar 0x9730990 '__n' 'streamsize':'int')
      (CallExpr 0x9732a48 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97329f8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x97329e8 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9732a30 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0x9732bd0 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0x9732bc0 <col:9, col:49>
    (CallExpr 0x9732b98 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9732ac8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9732ab8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9732afc <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9730c50 '__sb' '__streambuf_type &')
      (CallExpr 0x9732b78 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9732b28 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9732b18 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9732b60 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0x9732d18 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0x9732d08 <col:9, col:57>
    (CallExpr 0x9732ce0 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9732bf8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9732be8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9732c2c <col:30> 'char_type *' lvalue ParmVar 0x9730ed0 '__s' 'char_type *')
      (DeclRefExpr 0x9732c44 <col:35> 'streamsize':'int' lvalue ParmVar 0x9730f10 '__n' 'streamsize':'int')
      (CallExpr 0x9732cc0 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9732c70 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0x9732c60 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9732ca8 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0x9732d50 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9732d38 <col:30> 'int' 0))
) (CompoundStmt 0x9732e30 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0x9732e10 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9732dc0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9732db0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9732df8 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0x975fb10 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0x975fb98 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0x975fb88 <col:9, col:16>
    (MemberExpr 0x975fb64 <col:16> 'const _Bool' lvalue ->_M_ok 0x975f380
      (CXXThisExpr 0x975fb38 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0x9760610 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0x9760600 <col:7, col:51>
    (ParenExpr 0x97605e8 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x97605c0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9760580 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x97604e0 0x9760030 0x9642030 0x9641a60)
        (DeclRefExpr 0x9760510 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9760340 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9760568 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x9760528 <col:47> 'unsigned char' lvalue ParmVar 0x9760390 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0x9760bc8 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0x9760bb8 <col:7, col:51>
    (ParenExpr 0x9760ba0 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9760b78 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9760b30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9760a90 0x97604e0 0x9760030 0x9642030 0x9641a60)
        (DeclRefExpr 0x9760ac0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x97608f0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9760b18 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x9760ad8 <col:47> 'signed char' lvalue ParmVar 0x9760940 '__c' 'signed char &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0x9761cd0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0x9761cc0 <col:7, col:51>
    (ParenExpr 0x9761ca8 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9761c80 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9761c38 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9761ba0 0x9761040 0x9760a90 0x97604e0 0x9760030 0x9642030)
        (DeclRefExpr 0x9761bd0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9761a00 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9761c20 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x9761c10 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9761be8 <col:47> 'unsigned char *' lvalue ParmVar 0x9761a50 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0x9762238 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0x9762228 <col:7, col:51>
    (ParenExpr 0x9762210 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x97621e8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9762198 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9762100 0x9761ba0 0x9761040 0x9760a90 0x97604e0 0x9760030 0x9642030)
        (DeclRefExpr 0x9762130 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9761f60 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9762180 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x9762170 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0x9762148 <col:47> 'signed char *' lvalue ParmVar 0x9761fb0 '__s' 'signed char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0x9762ef8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9762c90 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0x9762f68 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9762c90 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0x9762fe0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0x9762ff0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0x9763080 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0x975fb10 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0x9763c28 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0x9764c98 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0x9763d38 <line:50:7, col:50>
    0x9763cb0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9763d28 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9763d04 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9764970 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0x9763d98 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9763d60 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x9763d48 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0x9764958 <line:52:2, line:73:2>
      (IfStmt 0x9763ef0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0x9763e08 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9763dd0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0x9763db4 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0x9763ed0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9763e98 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0x9763e78 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9763e40 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9763e24 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0x9764938 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9764090 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0x9763f38 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9763f28 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9763f0c <col:9> '_Bool' lvalue ParmVar 0x9763b00 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0x9764070 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0x9764048 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9764008 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
              (CallExpr 0x9763fa8 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9763f70 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x9763f58 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0x9763fe4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9608510 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0x9764910 <line:56:6, line:72:6>
          (DeclStmt 0x97641a0 <line:57:8, col:51>
            0x97640d0 "const __int_type __eof =
              (CallExpr 0x9764180 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9764148 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0x9764298 <line:58:8, col:45>
            0x97641f0 "__streambuf_type *__sb =
              (CallExpr 0x9764278 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9764240 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x9764224 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9764358 <line:59:8, col:38>
            0x97642b0 "__int_type __c =
              (CallExpr 0x9764338 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9764300 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x97642e4 <col:25> '__streambuf_type *' lvalue Var 0x97641f0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9764490 <line:61:8, col:63>
            0x97643b0 "const __ctype_type &__ct =
              (CallExpr 0x9764470 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x97643e8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
                (CXXDependentScopeMemberExpr 0x9764438 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0x976441c <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0x9764768 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0x97646b0 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0x9764550 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0x9764528 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x97644c0 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0x97644f4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0x97642b0 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x976450c <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x97640d0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0x9764688 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9764580 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0x9764564 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x97643b0 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0x97645d4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0x9657ec0 'space' 'const mask':'const unsigned short')
                (CallExpr 0x9764668 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9764618 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0x976464c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0x97642b0 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0x9764750 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x97646c8 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0x97642b0 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0x9764730 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97646f8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x97646e0 <col:9> '__streambuf_type *' lvalue Var 0x97641f0 '__sb' '__streambuf_type *')))))
          (IfStmt 0x97648f0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0x9764810 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97647a8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x97647dc <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0x97642b0 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x97647f4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x97640d0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x97648c8 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x97648b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x97648a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9764834 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9763cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9764890 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x976486c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9764c78 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0x9764ab0 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0x97649e0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97649a8 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x976498c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0x9764a98 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0x9764a78 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9764a58 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97649fc <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9763cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0x9764a88 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9764a68 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9764a34 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0x9764b08 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0x9764ad8 <col:2> '_Bool' lvalue ->_M_ok 0x975f380
        (CXXThisExpr 0x9764ac8 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0x9764af8 <col:10> '_Bool' true))
    (CompoundStmt 0x9764c60 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0x9764bb0 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9764ba0 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9764b88 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9764b20 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9763cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9764b78 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9764b54 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0x9764c40 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9764bf0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9764bd4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9763ac0 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0x9764c24 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9763cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0x9765b00 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0x9765410 <line:90:2, col:29>
    0x9765380 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x97653f0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0x97653c8 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x97653b8 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x97653e0 <col:23> '_Bool' false))")
  (IfStmt 0x9765aa8 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0x9765420 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0x9765380 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9765a80 <line:92:4, line:108:4>
      (DeclStmt 0x97654f8 <line:93:6, col:49>
        0x9765470 "ios_base::iostate __err =
          (ImplicitCastExpr 0x97654e8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97654c4 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9765798 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9765508 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9765780 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0x9765658 <line:96:3, col:63>
            0x9765580 "const __num_get_type &__ng =
              (CallExpr 0x9765638 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x97655b8 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
                (CXXDependentScopeMemberExpr 0x9765600 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x97655f0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9765750 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9765680 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0x9765668 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9765580 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x97656c8 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0x97656b8 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x97656e0 <col:19> 'int' 0)
            (UnaryOperator 0x9765708 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0x97656f8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976571c <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9765470 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9765734 <col:36> '_ValueT' lvalue ParmVar 0x97650c0 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0x9765898 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97657b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9765880 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0x9765850 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97657d8 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x97657c8 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976582c <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9765870 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0x9765988 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97658b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9765970 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0x9765950 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97658d8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x97658c8 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976592c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9765a60 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x97659d0 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x97659c0 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97659a4 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9765470 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9765a40 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97659f0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x97659e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9765a24 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9765470 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9765af0 <line:109:2, col:10>
    (UnaryOperator 0x9765ad8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9765ac8 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0x9768008 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0x9766180 <line:119:7, col:34>
    0x97660f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9766160 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9766138 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9766128 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9766150 <col:28> '_Bool' false))")
  (IfStmt 0x9767fb0 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0x9766190 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0x97660f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9767f88 <line:121:2, line:153:2>
      (DeclStmt 0x9766268 <line:122:4, col:47>
        0x97661e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9766258 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9766234 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9767ca0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9766278 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9767c80 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0x97662d8 <line:125:8, col:16>
            0x97662a0 "long __l")
          (DeclStmt 0x97663d8 <line:126:8, col:68>
            0x9766300 "const __num_get_type &__ng =
              (CallExpr 0x97663b8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9766338 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
                (CXXDependentScopeMemberExpr 0x9766380 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x9766370 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x97664d0 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9766400 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x97663e8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9766300 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9766448 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9766438 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9766460 <col:24> 'int' 0)
            (UnaryOperator 0x9766488 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9766478 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976649c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97661e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x97664b4 <col:41> 'long' lvalue Var 0x97662a0 '__l' 'long'))
          (IfStmt 0x9767c60 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0x9767698 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0x9767668 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9766500 <col:12> 'long' lvalue Var 0x97662a0 '__l' 'long'))
              (ImplicitCastExpr 0x9767688 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9767678 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9767648 <col:18, col:54> 'const short':'const short' lvalue Var 0x9766d60 '__min' 'const short':'const short'))))
            (CompoundStmt 0x9767888 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0x9767770 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9767760 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9767748 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x97676dc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97661e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9767738 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9767714 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9767870 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0x9767794 <col:5> 'short' lvalue ParmVar 0x9765ea0 '__n' 'short &')
                (ImplicitCastExpr 0x9767860 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9767840 <col:11, col:47> 'const short':'const short' lvalue Var 0x9766d60 '__min' 'const short':'const short'))))
            (IfStmt 0x9767c40 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0x97679a0 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0x9767970 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x97678a0 <col:17> 'long' lvalue Var 0x97662a0 '__l' 'long'))
                (ImplicitCastExpr 0x9767990 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9767980 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9767950 <col:23, col:59> 'const short':'const short' lvalue Var 0x9767000 '__max' 'const short':'const short'))))
              (CompoundStmt 0x9767b98 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0x9767a80 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9767a70 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9767a58 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x97679ec <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97661e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9767a48 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9767a24 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9767b80 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0x9767aa4 <col:5> 'short' lvalue ParmVar 0x9765ea0 '__n' 'short &')
                  (ImplicitCastExpr 0x9767b70 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9767b50 <col:11, col:47> 'const short':'const short' lvalue Var 0x9767000 '__max' 'const short':'const short'))))
              (BinaryOperator 0x9767c28 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0x9767bb0 <col:3> 'short' lvalue ParmVar 0x9765ea0 '__n' 'short &')
                (CXXFunctionalCastExpr 0x9767c10 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0x9767c00 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0x9767bf0 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9767bd4 <col:15> 'long' lvalue Var 0x97662a0 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9767da0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9767cc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9767d88 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0x9767d58 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9767ce0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9767cd0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9767d34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9767d78 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0x9767e90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9767dc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9767e78 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0x9767e58 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9767de0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9767dd0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9767e34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9767f68 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9767ed8 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9767ec8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9767eac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97661e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9767f48 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9767ef8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9767ee8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9767f2c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97661e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9767ff8 <line:154:7, col:15>
    (UnaryOperator 0x9767fe0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9767fd0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0x9769468 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0x9768690 <line:164:7, col:34>
    0x9768600 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9768670 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9768648 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9768638 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9768660 <col:28> '_Bool' false))")
  (IfStmt 0x9769410 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0x97686a0 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0x9768600 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x97693e8 <line:166:2, line:198:2>
      (DeclStmt 0x9768788 <line:167:4, col:47>
        0x9768700 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9768778 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9768754 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9769100 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9768798 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x97690e0 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0x97687f8 <line:170:8, col:16>
            0x97687c0 "long __l")
          (DeclStmt 0x97688f8 <line:171:8, col:68>
            0x9768820 "const __num_get_type &__ng =
              (CallExpr 0x97688d8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9768858 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x96e8220)
                (CXXDependentScopeMemberExpr 0x97688a0 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x9768890 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x97689f0 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9768920 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9768908 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9768820 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9768968 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9768958 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9768980 <col:24> 'int' 0)
            (UnaryOperator 0x97689a8 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9768998 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x97689bc <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9768700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x97689d4 <col:41> 'long' lvalue Var 0x97687c0 '__l' 'long'))
          (IfStmt 0x97690c0 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0x9768b20 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0x9768af0 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9768a20 <col:12> 'long' lvalue Var 0x97687c0 '__l' 'long'))
              (ImplicitCastExpr 0x9768b10 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9768b00 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x9768ad0 <col:18, col:52> 'const int':'const int' lvalue Var 0x9343d00 '__min' 'const int':'const int'))))
            (CompoundStmt 0x9768d18 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0x9768c00 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9768bf0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9768bd8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9768b6c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9768700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9768bc8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9768ba4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9768d00 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0x9768c24 <col:5> 'int' lvalue ParmVar 0x97683b0 '__n' 'int &')
                (ImplicitCastExpr 0x9768cf0 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x9768cd0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9343d00 '__min' 'const int':'const int'))))
            (IfStmt 0x97690a0 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0x9768e30 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0x9768e00 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x9768d30 <col:17> 'long' lvalue Var 0x97687c0 '__l' 'long'))
                (ImplicitCastExpr 0x9768e20 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9768e10 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x9768de0 <col:23, col:57> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))))
              (CompoundStmt 0x9768ff8 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0x9768ed8 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9768ec8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9768eb0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9768e48 <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9768700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9768ea0 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9768e7c <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9768fe0 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0x9768efc <col:5> 'int' lvalue ParmVar 0x97683b0 '__n' 'int &')
                  (ImplicitCastExpr 0x9768fd0 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x9768fb0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))))
              (BinaryOperator 0x9769088 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0x9769010 <col:3> 'int' lvalue ParmVar 0x97683b0 '__n' 'int &')
                (CXXFunctionalCastExpr 0x9769070 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9769060 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9769050 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9769034 <col:13> 'long' lvalue Var 0x97687c0 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9769200 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9769120 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97691e8 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0x97691b8 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9769140 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9769130 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9769194 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x97691d8 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0x97692f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9769220 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97692d8 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0x97692b8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9769240 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9769230 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9769294 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x97693c8 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9769338 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9769328 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x976930c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9768700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x97693a8 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9769358 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9769348 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x976938c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9768700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9769458 <line:199:7, col:15>
    (UnaryOperator 0x9769440 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9769430 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0x976a3e8 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0x9769b18 <line:207:7, col:50>
    0x9769a90 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9769b08 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9769ae4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9769bc0 <line:208:7, col:34>
    0x9769b30 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9769ba0 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9769b78 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9769b68 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9769b90 <col:28> '_Bool' false))")
  (IfStmt 0x976a2b8 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0x9769c00 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9769bd0 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9769b30 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0x9769be8 <col:21> '__streambuf_type *' lvalue ParmVar 0x9769810 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0x976a190 <line:210:2, line:226:2>
      (IfStmt 0x9769f80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9769c18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9769f60 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0x9769c68 <line:213:8, col:20>
            0x9769c30 "bool __ineof")
          (IfStmt 0x9769e40 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0x9769d70 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0x9769d48 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0x9769c78 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9634100)
                (CallExpr 0x9769cf8 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9769cc0 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x9769cb0 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0x9769d14 <col:50> '__streambuf_type *' lvalue ParmVar 0x9769810 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0x9769d2c <col:59> '_Bool' lvalue Var 0x9769c30 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0x9769e18 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9769e08 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9769df0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9769d84 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9769a90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9769de0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9769dbc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0x9769f40 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0x9769e78 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9769e5c <col:12> '_Bool' lvalue Var 0x9769c30 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0x9769f18 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9769f08 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9769ef0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9769e84 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9769a90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9769ee0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9769ebc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x976a080 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9769fa0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976a068 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0x976a038 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9769fc0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9769fb0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976a014 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x976a058 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0x976a170 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976a0a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976a158 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0x976a138 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976a0c0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976a0b0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976a114 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x976a298 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0x976a1c8 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x976a1ac <col:17> '__streambuf_type *' lvalue ParmVar 0x9769810 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x976a270 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x976a260 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x976a248 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x976a1dc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9769a90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x976a238 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x976a214 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x976a390 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x976a300 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x976a2f0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976a2d4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9769a90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x976a370 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x976a320 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x976a310 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x976a354 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9769a90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x976a3d8 <line:231:7, col:15>
    (UnaryOperator 0x976a3c0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x976a3b0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0x976b4f0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0x976aae0 <line:239:7, col:48>
    0x976aa10 "const int_type __eof =
      (CallExpr 0x976aac0 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x976aa88 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0x976ab50 <line:240:7, col:27>
    0x976ab00 "int_type __c =
      (DeclRefExpr 0x976ab34 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976aa10 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0x976aba8 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0x976ab70 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x976ab60 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x976ab90 <col:19> 'int' 0))
  (DeclStmt 0x976ac78 <line:242:7, col:50>
    0x976abf0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x976ac68 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976ac44 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x976ad20 <line:243:7, col:33>
    0x976ac90 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x976ad00 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x976acd8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x976acc8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x976acf0 <col:28> '_Bool' true))")
  (IfStmt 0x976b290 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0x976ad30 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0x976ac90 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x976b270 <line:245:2, line:262:2>
      (IfStmt 0x976b060 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976ad48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x976b048 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0x976ae30 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0x976ad58 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x976ab00 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x976ae10 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x976add8 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x976adb8 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976ad80 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x976ad70 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x976b028 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0x976aef8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0x976aed0 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976ae68 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x976ae9c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x976ab00 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x976aeb4 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976aa10 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0x976af58 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0x976af20 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                (CXXThisExpr 0x976af10 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x976af40 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0x976b000 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x976aff0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x976afd8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x976af70 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976abf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x976afc8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x976afa4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x976b160 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976b080 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976b148 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0x976b118 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976b0a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976b090 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976b0f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x976b138 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0x976b250 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976b180 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976b238 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0x976b218 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976b1a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976b190 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976b1f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x976b3d0 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0x976b300 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x976b2f0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x976b2e0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x976b2c0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
            (CXXThisExpr 0x976b2b0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x976b3a8 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x976b398 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x976b380 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x976b314 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976abf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x976b370 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976b34c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x976b4a8 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x976b418 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x976b408 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976b3ec <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976abf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x976b488 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x976b438 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x976b428 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x976b46c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976abf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x976b4e0 <line:267:7, col:14>
    (DeclRefExpr 0x976b4c4 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x976ab00 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0x976c5f8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0x976bb40 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0x976bb08 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x976baf8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x976bb28 <col:19> 'int' 0))
  (DeclStmt 0x976bc18 <line:276:7, col:50>
    0x976bb90 "ios_base::iostate __err =
      (ImplicitCastExpr 0x976bc08 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976bbe4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x976bcc0 <line:277:7, col:33>
    0x976bc30 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x976bca0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x976bc78 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x976bc68 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x976bc90 <col:28> '_Bool' true))")
  (IfStmt 0x976c388 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0x976bcd0 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0x976bc30 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x976c368 <line:279:2, line:299:2>
      (IfStmt 0x976c158 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976bce8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x976c140 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0x976bdf8 <line:282:8, col:53>
            0x976bd00 "const int_type __cb =
              (CallExpr 0x976bdd8 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976bda0 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0x976bd80 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x976bd48 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x976bd38 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x976c120 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0x976bf18 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0x976bef0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976be28 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x976be5c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976bd00 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0x976bed0 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976be98 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0x976c050 <line:285:3, line:288:3>
              (BinaryOperator 0x976bf78 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0x976bf40 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                  (CXXThisExpr 0x976bf30 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0x976bf60 <col:17> 'int' 1))
              (BinaryOperator 0x976c038 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x976bf90 <col:5> 'char_type':'_CharT' lvalue ParmVar 0x976b8b0 '__c' 'char_type &')
                (CallExpr 0x976c018 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976bfc8 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0x976bffc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976bd00 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0x976c0f8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x976c0e8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x976c0d0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x976c068 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976bb90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x976c0c0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x976c09c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x976c258 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976c178 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976c240 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0x976c210 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976c198 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976c188 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976c1ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x976c230 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0x976c348 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976c278 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976c330 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0x976c310 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976c298 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976c288 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976c2ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x976c4c8 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0x976c3f8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x976c3e8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x976c3d8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x976c3b8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
            (CXXThisExpr 0x976c3a8 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x976c4a0 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x976c490 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x976c478 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x976c40c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976bb90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x976c468 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976c444 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x976c5a0 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x976c510 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x976c500 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976c4e4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976bb90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x976c580 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x976c530 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x976c520 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x976c564 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976bb90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x976c5e8 <line:304:7, col:15>
    (UnaryOperator 0x976c5d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x976c5c0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x976de20 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0x976ccd8 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0x976cca0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x976cc90 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x976ccc0 <col:19> 'int' 0))
  (DeclStmt 0x976cda8 <line:313:7, col:50>
    0x976cd20 "ios_base::iostate __err =
      (ImplicitCastExpr 0x976cd98 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976cd74 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x976ce50 <line:314:7, col:33>
    0x976cdc0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x976ce30 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x976ce08 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x976cdf8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x976ce20 <col:28> '_Bool' true))")
  (IfStmt 0x976dad0 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0x976ce60 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0x976cdc0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x976dab0 <line:316:2, line:342:2>
      (IfStmt 0x976d8a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976ce78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x976d878 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0x976cf58 <line:319:8, col:67>
            0x976ce90 "const int_type __idelim =
              (CallExpr 0x976cf38 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976cee8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x976cf1c <col:59> 'char_type':'_CharT' lvalue ParmVar 0x976ca30 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x976d020 <line:320:8, col:49>
            0x976cf70 "const int_type __eof =
              (CallExpr 0x976d000 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976cfc8 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x976d0e0 <line:321:8, col:46>
            0x976d040 "__streambuf_type *__sb =
              (CallExpr 0x976d0c0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976d088 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x976d078 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x976d1a8 <line:322:8, col:36>
            0x976d100 "int_type __c =
              (CallExpr 0x976d188 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976d150 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x976d134 <col:23> '__streambuf_type *' lvalue Var 0x976d040 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x976d6d0 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0x976d4a8 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0x976d3c8 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x976d2d8 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0x976d288 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                  (CXXOperatorCallExpr 0x976d248 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0x976d200 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                    (MemberExpr 0x976d1c8 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x976d1b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x976d1e8 <col:27> 'int' 1))
                  (DeclRefExpr 0x976d26c <col:31> 'streamsize':'int' lvalue ParmVar 0x976c9f0 '__n' 'streamsize':'int'))
                (UnaryOperator 0x976d3b0 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0x976d388 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x976d320 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x976d354 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x976d100 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x976d36c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976cf70 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x976d490 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0x976d468 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976d400 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x976d434 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x976d100 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x976d44c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976ce90 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x976d6b0 <line:327:3, line:331:3>
              (BinaryOperator 0x976d5b0 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0x976d508 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x976d4f0 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x976d4c0 <col:6> 'char_type *' lvalue ParmVar 0x976c9b0 '__s' 'char_type *')))
                (CallExpr 0x976d590 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976d540 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0x976d574 <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0x976d100 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x976d5f8 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x976d5d8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                  (CXXThisExpr 0x976d5c8 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x976d698 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x976d60c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x976d100 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x976d678 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976d640 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x976d624 <col:11> '__streambuf_type *' lvalue Var 0x976d040 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x976d858 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0x976d778 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x976d710 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x976d744 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x976d100 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x976d75c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976cf70 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x976d830 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x976d820 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x976d808 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x976d79c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976cd20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x976d7f8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x976d7d4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x976d9a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976d8c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976d988 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0x976d958 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976d8e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976d8d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976d934 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x976d978 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0x976da90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976d9c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976da78 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0x976da58 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976d9e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976d9d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976da34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x976dbb0 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0x976db30 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x976db20 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x976daec <col:11> 'streamsize':'int' lvalue ParmVar 0x976c9f0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x976db08 <col:17> 'int' 0))
    (BinaryOperator 0x976db98 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x976db60 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x976db48 <col:3> 'char_type *' lvalue ParmVar 0x976c9b0 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x976db80 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x976dcf0 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0x976dc20 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x976dc10 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x976dc00 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x976dbe0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
            (CXXThisExpr 0x976dbd0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x976dcc8 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x976dcb8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x976dca0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x976dc34 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976cd20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x976dc90 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976dc6c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x976ddc8 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x976dd38 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x976dd28 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976dd0c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976cd20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x976dda8 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x976dd58 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x976dd48 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x976dd8c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976cd20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x976de10 <line:351:7, col:15>
    (UnaryOperator 0x976ddf8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x976dde8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0x976f5a0 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0x976e4a0 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0x976e468 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x976e458 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x976e488 <col:19> 'int' 0))
  (DeclStmt 0x976e578 <line:360:7, col:50>
    0x976e4f0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x976e568 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976e544 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x976e620 <line:361:7, col:33>
    0x976e590 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x976e600 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x976e5d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x976e5c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x976e5f0 <col:28> '_Bool' true))")
  (IfStmt 0x976f330 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0x976e630 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0x976e590 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x976f310 <line:363:2, line:390:2>
      (IfStmt 0x976f100 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976e648 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x976f0d0 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0x976e728 <line:366:8, col:67>
            0x976e660 "const int_type __idelim =
              (CallExpr 0x976e708 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976e6b8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x976e6ec <col:59> 'char_type':'_CharT' lvalue ParmVar 0x976e210 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x976e7f0 <line:367:8, col:49>
            0x976e740 "const int_type __eof =
              (CallExpr 0x976e7d0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976e798 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x976e8b0 <line:368:8, col:51>
            0x976e810 "__streambuf_type *__this_sb =
              (CallExpr 0x976e890 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976e858 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0x976e848 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x976e978 <line:369:8, col:41>
            0x976e8d0 "int_type __c =
              (CallExpr 0x976e958 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976e920 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0x976e904 <col:23> '__streambuf_type *' lvalue Var 0x976e810 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0x976ea58 <line:370:8, col:55>
            0x976e990 "char_type __c2 =
              (CallExpr 0x976ea38 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976e9e8 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0x976ea1c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x976e8d0 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0x976ef28 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0x976ed48 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0x976ebf8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0x976eb18 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0x976eaf0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x976ea88 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0x976eabc <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0x976e8d0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x976ead4 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976e740 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0x976ebe0 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0x976ebb8 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x976eb50 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x976eb84 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x976e8d0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x976eb9c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976e660 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x976ed30 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0x976ed08 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976ec30 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0x976ecd0 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x976ec80 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x976ec64 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x976e1d0 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0x976ecb4 <col:48> 'char_type':'_CharT' lvalue Var 0x976e990 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0x976ecf0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976e740 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x976ef08 <line:375:3, line:379:3>
              (UnaryOperator 0x976ed90 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x976ed70 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                  (CXXThisExpr 0x976ed60 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x976ee30 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0x976eda4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x976e8d0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x976ee10 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976edd8 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0x976edbc <col:11> '__streambuf_type *' lvalue Var 0x976e810 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0x976eef0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x976ee48 <col:5> 'char_type':'_CharT' lvalue Var 0x976e990 '__c2' 'char_type':'_CharT')
                (CallExpr 0x976eed0 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x976ee80 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x976eeb4 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x976e8d0 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0x976f0b0 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0x976efd0 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x976ef68 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x976ef9c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x976e8d0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x976efb4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976e740 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x976f088 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x976f078 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x976f060 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x976eff4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976e4f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x976f050 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x976f02c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x976f200 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976f120 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976f1e8 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0x976f1b8 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976f140 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976f130 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976f194 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x976f1d8 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0x976f2f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976f220 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x976f2d8 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0x976f2b8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x976f240 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x976f230 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x976f294 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x976f470 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0x976f3a0 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x976f390 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x976f380 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x976f360 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
            (CXXThisExpr 0x976f350 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x976f448 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x976f438 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x976f420 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x976f3b4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976e4f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x976f410 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976f3ec <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x976f548 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x976f4b8 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x976f4a8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976f48c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976e4f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x976f528 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x976f4d8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x976f4c8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x976f50c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976e4f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x976f590 <line:395:7, col:15>
    (UnaryOperator 0x976f578 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x976f568 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9771048 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0x976fc78 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0x976fc40 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x976fc30 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x976fc60 <col:19> 'int' 0))
  (DeclStmt 0x976fd48 <line:404:7, col:50>
    0x976fcc0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x976fd38 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x976fd14 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x976fdf0 <line:405:7, col:33>
    0x976fd60 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x976fdd0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x976fda8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x976fd98 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x976fdc0 <col:28> '_Bool' true))")
  (IfStmt 0x9770cf8 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0x976fe00 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0x976fd60 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9770cd8 <line:407:9, line:443:9>
      (IfStmt 0x9770ac8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x976fe18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9770aa0 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0x976fef8 <line:410:15, col:74>
            0x976fe30 "const int_type __idelim =
              (CallExpr 0x976fed8 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976fe88 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0x976febc <col:66> 'char_type':'_CharT' lvalue ParmVar 0x976f9d0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x976ffc0 <line:411:15, col:56>
            0x976ff10 "const int_type __eof =
              (CallExpr 0x976ffa0 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x976ff68 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9770080 <line:412:15, col:53>
            0x976ffe0 "__streambuf_type *__sb =
              (CallExpr 0x9770060 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9770028 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9770018 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9770148 <line:413:15, col:43>
            0x97700a0 "int_type __c =
              (CallExpr 0x9770128 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97700f0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x97700d4 <col:30> '__streambuf_type *' lvalue Var 0x976ffe0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9770670 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0x9770448 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0x9770368 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9770278 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9770228 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                  (CXXOperatorCallExpr 0x97701e8 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x97701a0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                    (MemberExpr 0x9770168 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9770158 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x9770188 <col:34> 'int' 1))
                  (DeclRefExpr 0x977020c <col:38> 'streamsize':'int' lvalue ParmVar 0x976f990 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9770350 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0x9770328 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x97702c0 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0x97702f4 <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x97700a0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x977030c <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976ff10 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9770430 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0x9770408 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x97703a0 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0x97703d4 <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x97700a0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x97703ec <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976fe30 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9770650 <line:418:17, line:422:17>
              (BinaryOperator 0x9770550 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0x97704a8 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9770490 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9770460 <col:20> 'char_type *' lvalue ParmVar 0x976f950 '__s' 'char_type *')))
                (CallExpr 0x9770530 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x97704e0 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9770514 <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0x97700a0 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0x97705f0 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0x9770568 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0x97700a0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x97705d0 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9770598 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9770580 <col:25> '__streambuf_type *' lvalue Var 0x976ffe0 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0x9770638 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0x9770618 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                  (CXXThisExpr 0x9770608 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0x9770a80 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0x9770728 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97706b0 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x97706f8 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x97700a0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9770710 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976ff10 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x97707e0 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x97707d0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x97707b8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x977074c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976fcc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x97707a8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9770784 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0x9770a68 <line:426:17, line:434:17>
              (IfStmt 0x9770a48 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0x9770898 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9770830 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9770864 <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0x97700a0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x977087c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x976fe30 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0x9770978 <line:428:21, line:431:21>
                  (CallExpr 0x9770910 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x97708d8 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0x97708bc <col:23> '__streambuf_type *' lvalue Var 0x976ffe0 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x9770960 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0x9770940 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9770930 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0x9770a20 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9770a10 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x97709f8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9770990 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976fcc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x97709e8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x97709c4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9770bc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9770ae8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9770bb0 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0x9770b80 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9770b08 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9770af8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9770b5c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9770ba0 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0x9770cb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9770be8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9770ca0 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0x9770c80 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9770c08 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9770bf8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9770c5c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9770dd8 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0x9770d58 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9770d48 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9770d14 <col:11> 'streamsize':'int' lvalue ParmVar 0x976f990 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9770d30 <col:17> 'int' 0))
    (BinaryOperator 0x9770dc0 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9770d88 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9770d70 <col:3> 'char_type *' lvalue ParmVar 0x976f950 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x9770da8 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9770f18 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0x9770e48 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9770e38 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9770e28 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9770e08 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
            (CXXThisExpr 0x9770df8 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9770ef0 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9770ee0 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9770ec8 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9770e5c <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976fcc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9770eb8 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9770e94 <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9770ff0 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0x9770f60 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9770f50 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9770f34 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976fcc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9770fd0 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9770f80 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9770f70 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9770fb4 <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x976fcc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9771038 <line:452:7, col:15>
    (UnaryOperator 0x9771020 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9771010 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0x9771f90 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0x9771678 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9771640 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9771630 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9771660 <col:19> 'int' 0))
  (DeclStmt 0x9771730 <line:464:7, col:33>
    0x97716a0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9771710 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x97716e8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x97716d8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9771700 <col:28> '_Bool' true))")
  (IfStmt 0x9771f38 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0x9771740 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0x97716a0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9771f10 <line:466:2, line:487:2>
      (DeclStmt 0x9771818 <line:467:4, col:47>
        0x9771790 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9771808 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97717e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9771c28 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9771828 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9771c08 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0x97718f0 <line:470:8, col:49>
            0x9771840 "const int_type __eof =
              (CallExpr 0x97718d0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9771898 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x97719b0 <line:471:8, col:46>
            0x9771910 "__streambuf_type *__sb =
              (CallExpr 0x9771990 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9771958 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9771948 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9771be8 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0x9771aa8 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97719e8 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0x9771a70 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9771a38 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9771a1c <col:37> '__streambuf_type *' lvalue Var 0x9771910 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0x9771a8c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9771840 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9771b60 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9771b50 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9771b38 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9771acc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9771790 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9771b28 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9771b04 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x9771bd0 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0x9771b98 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                (CXXThisExpr 0x9771b88 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x9771bb8 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0x9771d28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9771c48 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9771d10 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0x9771ce0 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9771c68 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9771c58 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9771cbc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9771d00 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0x9771e18 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9771d48 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9771e00 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0x9771de0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9771d68 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9771d58 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9771dbc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9771ef0 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9771e60 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9771e50 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9771e34 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9771790 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9771ed0 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9771e80 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9771e70 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9771eb4 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9771790 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9771f80 <line:488:7, col:15>
    (UnaryOperator 0x9771f68 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9771f58 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0x9773740 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0x97725c0 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9772588 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9772578 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x97725a8 <col:19> 'int' 0))
  (DeclStmt 0x9772670 <line:497:7, col:33>
    0x97725e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9772650 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9772628 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9772618 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9772640 <col:28> '_Bool' true))")
  (IfStmt 0x97736e8 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0x97726f0 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x9772680 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x97725e0 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x97726d8 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x97726c8 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9772698 <col:21> 'streamsize':'int' lvalue ParmVar 0x9772330 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x97726b0 <col:27> 'int' 0)))
    (CompoundStmt 0x97736c0 <line:499:9, line:549:9>
      (DeclStmt 0x97727c8 <line:500:11, col:54>
        0x9772740 "ios_base::iostate __err =
          (ImplicitCastExpr 0x97727b8 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9772794 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x97733d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97727d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x97733a8 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0x97728a0 <line:503:15, col:56>
            0x97727f0 "const int_type __eof =
              (CallExpr 0x9772880 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9772848 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9772960 <line:504:15, col:53>
            0x97728c0 "__streambuf_type *__sb =
              (CallExpr 0x9772940 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9772908 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x97728f8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9772a28 <line:505:15, col:43>
            0x9772980 "int_type __c =
              (CallExpr 0x9772a08 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97729d0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x97729b4 <col:30> '__streambuf_type *' lvalue Var 0x97728c0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9772a88 <line:514:8, col:35>
            0x9772a40 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x9772a78 <col:30> '_Bool' false)")
          (WhileStmt 0x97730c0 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9772a98 <line:515:15> '_Bool' true)
            (CompoundStmt 0x97730a8 <line:516:3, line:532:3>
              (WhileStmt 0x9772d48 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0x9772c30 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0x9772b40 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0x9772af0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                    (MemberExpr 0x9772ab8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9772aa8 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9772ad8 <col:24> 'streamsize':'int' lvalue ParmVar 0x9772330 '__n' 'streamsize':'int'))
                  (UnaryOperator 0x9772c18 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0x9772bf0 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9772b88 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9772bbc <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9772980 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9772bd4 <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x97727f0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x9772d30 <line:519:7, line:522:7>
                  (UnaryOperator 0x9772c78 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x9772c58 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9772c48 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x9772d18 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x9772c8c <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9772980 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x9772cf8 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9772cc0 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x9772ca4 <col:15> '__streambuf_type *' lvalue Var 0x97728c0 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x9773088 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0x9772f20 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0x9772e40 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0x9772e20 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9772d5c <col:9> 'streamsize':'int' lvalue ParmVar 0x9772330 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0x9772e30 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0x9772e00 <col:16, col:57> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int')))
                  (UnaryOperator 0x9772f08 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0x9772ee0 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9772e78 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9772eac <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9772980 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9772ec4 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x97727f0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x9773068 <line:525:7, line:529:7>
                  (BinaryOperator 0x9773010 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0x9772f48 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9772f38 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9772ff0 <line:527:4, col:45> 'const int':'const int' lvalue Var 0x9343d00 '__min' 'const int':'const int'))
                  (BinaryOperator 0x9773050 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9773028 <col:9> '_Bool' lvalue Var 0x9772a40 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x9773040 <col:26> '_Bool' true)))
                (BreakStmt 0x9773080 <line:531:7>))))
          (IfStmt 0x97731f8 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x97730f0 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x97730d4 <col:12> '_Bool' lvalue Var 0x9772a40 '__large_ignore' '_Bool'))
            (BinaryOperator 0x97731e0 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0x9773110 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                (CXXThisExpr 0x9773100 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x97731c0 <col:15, col:56> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x9773388 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0x97732a8 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9773240 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9773274 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9772980 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x977328c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x97727f0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9773360 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9773350 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9773338 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x97732cc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9772740 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9773328 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9773304 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x97734d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97733f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97734c0 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0x9773490 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9773418 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9773408 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977346c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x97734b0 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0x97735c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97734f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97735b0 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0x9773590 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9773518 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9773508 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977356c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x97736a0 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x9773610 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9773600 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97735e4 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9772740 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9773680 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9773630 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x9773620 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9773664 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9772740 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9773730 <line:550:7, col:15>
    (UnaryOperator 0x9773718 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9773708 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0x9775410 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0x9773db0 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9773d78 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9773d68 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9773d98 <col:19> 'int' 0))
  (DeclStmt 0x9773e60 <line:559:7, col:33>
    0x9773dd0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9773e40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9773e18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9773e08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9773e30 <col:28> '_Bool' true))")
  (IfStmt 0x97753b8 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0x9773ee0 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x9773e70 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9773dd0 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x9773ec8 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x9773eb8 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9773e88 <col:21> 'streamsize':'int' lvalue ParmVar 0x9773ae0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9773ea0 <col:27> 'int' 0)))
    (CompoundStmt 0x9775390 <line:561:9, line:614:9>
      (DeclStmt 0x9773fb8 <line:562:11, col:54>
        0x9773f30 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9773fa8 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9773f84 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x97750a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9773fc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9775078 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0x9774090 <line:565:15, col:56>
            0x9773fe0 "const int_type __eof =
              (CallExpr 0x9774070 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9774038 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9774150 <line:566:15, col:53>
            0x97740b0 "__streambuf_type *__sb =
              (CallExpr 0x9774130 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97740f8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x97740e8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9774218 <line:567:15, col:43>
            0x9774170 "int_type __c =
              (CallExpr 0x97741f8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97741c0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x97741a4 <col:30> '__streambuf_type *' lvalue Var 0x97740b0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9774278 <line:570:8, col:35>
            0x9774230 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x9774268 <col:30> '_Bool' false)")
          (WhileStmt 0x9774a70 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9774288 <line:571:15> '_Bool' true)
            (CompoundStmt 0x9774a58 <line:572:3, line:590:3>
              (WhileStmt 0x9774618 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0x9774500 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0x9774420 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0x9774330 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0x97742e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                      (MemberExpr 0x97742a8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                        (CXXThisExpr 0x9774298 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0x97742c8 <col:24> 'streamsize':'int' lvalue ParmVar 0x9773ae0 '__n' 'streamsize':'int'))
                    (UnaryOperator 0x9774408 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0x97743e0 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9774378 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0x97743ac <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x97743c4 <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9773fe0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x97744e8 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0x97744c0 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9774458 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x977448c <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x97744a4 <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9773b20 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x9774600 <line:576:7, line:579:7>
                  (UnaryOperator 0x9774548 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x9774528 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9774518 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x97745e8 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x977455c <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x97745c8 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9774590 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x9774574 <col:15> '__streambuf_type *' lvalue Var 0x97740b0 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x9774a38 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0x97748d0 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0x97747f0 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0x9774710 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0x97746f0 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x977462c <col:9> 'streamsize':'int' lvalue ParmVar 0x9773ae0 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0x9774700 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0x97746d0 <col:16, col:57> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int')))
                    (UnaryOperator 0x97747d8 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0x97747b0 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9774748 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0x977477c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x9774794 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9773fe0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x97748b8 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0x9774890 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9774828 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x977485c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9774874 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9773b20 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x9774a18 <line:583:7, line:587:7>
                  (BinaryOperator 0x97749c0 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0x97748f8 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x97748e8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x97749a0 <line:585:4, col:45> 'const int':'const int' lvalue Var 0x9343d00 '__min' 'const int':'const int'))
                  (BinaryOperator 0x9774a00 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x97749d8 <col:9> '_Bool' lvalue Var 0x9774230 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x97749f0 <col:26> '_Bool' true)))
                (BreakStmt 0x9774a30 <line:589:7>))))
          (IfStmt 0x9774ba8 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x9774aa0 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9774a84 <col:12> '_Bool' lvalue Var 0x9774230 '__large_ignore' '_Bool'))
            (BinaryOperator 0x9774b90 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0x9774ac0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                (CXXThisExpr 0x9774ab0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9774b70 <col:15, col:56> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x9775058 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0x9774c58 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9774bf0 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x9774c24 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9774c3c <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9773fe0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9774d10 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9774d00 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9774ce8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9774c7c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9773f30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9774cd8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9774cb4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x9775038 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0x9774dc8 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9774d60 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0x9774d94 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x9774170 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x9774dac <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9773b20 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0x9775020 <line:598:3, line:603:3>
                (IfStmt 0x9774f90 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9774f20 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0x9774ed0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
                    (MemberExpr 0x9774e00 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9774df0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9774eb0 <line:600:11, col:52> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
                  (UnaryOperator 0x9774f78 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0x9774f58 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                      (CXXThisExpr 0x9774f48 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0x9775000 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9774fc8 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0x9774fac <col:5> '__streambuf_type *' lvalue Var 0x97740b0 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x97751a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97750c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9775190 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0x9775160 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97750e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x97750d8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977513c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9775180 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0x9775298 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97751c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9775280 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0x9775260 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97751e8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x97751d8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977523c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9775370 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x97752e0 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x97752d0 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97752b4 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9773f30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9775350 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9775300 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x97752f0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9775334 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9773f30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9775400 <line:615:7, col:15>
    (UnaryOperator 0x97753e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x97753d8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0x9776348 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0x9775ae0 <line:623:7, col:40>
    0x9775a30 "int_type __c =
      (CallExpr 0x9775ac0 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9775a88 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0x9775b38 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9775b00 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9775af0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9775b20 <col:19> 'int' 0))
  (DeclStmt 0x9775bf0 <line:625:7, col:33>
    0x9775b60 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9775bd0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9775ba8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9775b98 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9775bc0 <col:28> '_Bool' true))")
  (IfStmt 0x9776300 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0x9775c00 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0x9775b60 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x97762d8 <line:627:2, line:644:2>
      (DeclStmt 0x9775cd8 <line:628:4, col:47>
        0x9775c50 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9775cc8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9775ca4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9775ff0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9775ce8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9775fd8 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0x9775dd0 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9775cf8 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9775a30 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x9775db0 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9775d78 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x9775d58 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9775d20 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x9775d10 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x9775fb8 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0x9775ed8 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9775e10 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9775e44 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9775a30 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0x9775eb8 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9775e80 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9775f90 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9775f80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9775f68 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9775efc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9775c50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9775f58 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9775f34 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x97760f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9776010 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97760d8 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0x97760a8 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9776030 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9776020 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9776084 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x97760c8 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0x97761e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9776110 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97761c8 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0x97761a8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9776130 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9776120 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9776184 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x97762b8 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9776228 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9776218 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x97761fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9775c50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9776298 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9776248 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9776238 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977627c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9775c50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9776338 <line:645:7, col:14>
    (DeclRefExpr 0x977631c <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x9775a30 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0x97772a0 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0x97769c0 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9776988 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9776978 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x97769a8 <col:19> 'int' 0))
  (DeclStmt 0x9776a70 <line:654:7, col:33>
    0x97769e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9776a50 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9776a28 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9776a18 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9776a40 <col:28> '_Bool' true))")
  (IfStmt 0x9777248 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0x9776a80 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0x97769e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9777220 <line:656:2, line:673:2>
      (DeclStmt 0x9776b58 <line:657:4, col:47>
        0x9776ad0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9776b48 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9776b24 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9776f38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9776b68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9776f20 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0x9776ca0 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0x9776b88 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
              (CXXThisExpr 0x9776b78 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0x9776c78 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9776c10 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0x9776bf0 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9776bb8 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0x9776ba8 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0x9776c44 <col:41> 'char_type *' lvalue ParmVar 0x97766f0 '__s' 'char_type *')
              (DeclRefExpr 0x9776c5c <col:46> 'streamsize':'int' lvalue ParmVar 0x9776730 '__n' 'streamsize':'int')))
          (IfStmt 0x9776f00 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9776d60 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0x9776d00 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
              (MemberExpr 0x9776cc8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                (CXXThisExpr 0x9776cb8 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9776ce8 <col:25> 'streamsize':'int' lvalue ParmVar 0x9776730 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0x9776ed8 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9776ec8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9776eb0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9776d84 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9776ad0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x9776e98 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x9776e70 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x9776e60 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9776e48 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9606af0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x9776e28 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9776dc8 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x9776e38 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9776e04 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9777038 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9776f58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9777020 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0x9776ff0 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9776f78 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9776f68 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9776fcc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9777010 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0x9777128 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9777058 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9777110 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0x97770f0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9777078 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9777068 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x97770cc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9777200 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9777170 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9777160 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9777144 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9776ad0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x97771e0 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9777190 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9777180 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x97771c4 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9776ad0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9777290 <line:674:7, col:15>
    (UnaryOperator 0x9777278 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9777268 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0x9778140 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0x97776e0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0x97776a8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9777698 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x97776c8 <col:19> 'int' 0))
  (DeclStmt 0x9777790 <line:683:7, col:33>
    0x9777700 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9777770 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9777748 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9777738 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9777760 <col:28> '_Bool' true))")
  (IfStmt 0x97780e0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0x97777a0 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0x9777700 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x97780b8 <line:685:2, line:705:2>
      (DeclStmt 0x9777878 <line:686:4, col:47>
        0x97777f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9777868 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9777844 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9777dd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9777888 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9777db8 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0x9777998 <line:690:8, col:58>
            0x97778a0 "const streamsize __num =
              (CallExpr 0x9777978 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9777940 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0x9777920 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x97778e8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x97778d8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x9777d98 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0x97779e8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0x97779d8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x97779a8 <col:12> 'const streamsize':'const int' lvalue Var 0x97778a0 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0x97779c0 <col:20> 'int' 0))
            (BinaryOperator 0x9777c38 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0x9777a10 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
                (CXXThisExpr 0x9777a00 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0x9777c10 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9777a98 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0x9777a78 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9777a40 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0x9777a30 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9777acc <col:36> 'char_type *' lvalue ParmVar 0x9777560 '__s' 'char_type *')
                (CallExpr 0x9777bd8 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9777bc8 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9777ba0 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0x96323e0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x92aa0a0 'min')))
                  (DeclRefExpr 0x9777b40 <col:50> 'const streamsize':'const int' lvalue Var 0x97778a0 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0x9777c00 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0x9777b58 <col:57> 'streamsize':'int' lvalue ParmVar 0x97775a0 '__n' 'streamsize':'int')))))
            (IfStmt 0x9777d78 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0x9777ca8 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0x9777c98 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9777c50 <col:17> 'const streamsize':'const int' lvalue Var 0x97778a0 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0x9777c80 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0x9777c68 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0x9777d50 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9777d40 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9777d28 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9777cc0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97777f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9777d18 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9777cf4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x9777ed0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9777df0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9777eb8 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0x9777e88 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9777e10 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9777e00 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9777e64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9777ea8 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0x9777fc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9777ef0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9777fa8 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0x9777f88 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9777f10 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9777f00 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9777f64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9778098 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9778008 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9777ff8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9777fdc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97777f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9778078 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9778028 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9778018 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977805c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x97777f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9778130 <line:706:7, col:14>
    (MemberExpr 0x9778110 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9778100 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0x9779278 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0x9778780 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9778748 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9778738 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9778768 <col:19> 'int' 0))
  (CallExpr 0x9778960 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97787a8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9778798 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9778938 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x97788f8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (CallExpr 0x9778828 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97787f0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x97787e0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x97788d8 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x97788c8 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9778898 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9606f30 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9778888 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9778864 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9778a20 <line:719:7, col:33>
    0x9778990 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9778a00 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x97789d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x97789c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x97789f0 <col:28> '_Bool' true))")
  (IfStmt 0x9779220 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0x9778a30 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0x9778990 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x97791f8 <line:721:2, line:740:2>
      (DeclStmt 0x9778b08 <line:722:4, col:47>
        0x9778a80 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9778af8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9778ad4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9778f10 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9778b18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9778ef0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0x9778be0 <line:725:8, col:49>
            0x9778b30 "const int_type __eof =
              (CallExpr 0x9778bc0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9778b88 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9778ca0 <line:726:8, col:46>
            0x9778c00 "__streambuf_type *__sb =
              (CallExpr 0x9778c80 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9778c48 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9778c38 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9778ed0 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0x9778e00 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0x9778cc8 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x9778cb0 <col:13> '__streambuf_type *' lvalue Var 0x9778c00 '__sb' '__streambuf_type *'))
              (CallExpr 0x9778dd8 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9778d00 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x9778da0 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9778d50 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9778d34 <col:33> '__streambuf_type *' lvalue Var 0x9778c00 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0x9778d84 <col:49> 'char_type':'_CharT' lvalue ParmVar 0x97784e0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0x9778dc0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9778b30 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x9778ea8 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9778e98 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9778e80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9778e18 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9778a80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9778e70 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9778e4c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9779010 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9778f30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9778ff8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0x9778fc8 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9778f50 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9778f40 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9778fa4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9778fe8 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0x9779100 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9779030 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x97790e8 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0x97790c8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9779050 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9779040 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x97790a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x97791d8 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9779148 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9779138 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977911c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9778a80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x97791b8 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9779168 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9779158 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977919c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9778a80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9779268 <line:741:7, col:15>
    (UnaryOperator 0x9779250 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9779240 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0x977a360 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0x9779898 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9779860 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x972ec30
      (CXXThisExpr 0x9779850 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9779880 <col:19> 'int' 0))
  (CallExpr 0x9779a60 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97798c0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x97798b0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9779a38 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x97799f8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (CallExpr 0x9779940 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9779908 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x97798f8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x97799d8 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x97799c8 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x97799b0 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9606f30 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x97799a0 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x977997c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9779b20 <line:754:7, col:33>
    0x9779a90 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9779b00 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9779ad8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9779ac8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9779af0 <col:28> '_Bool' true))")
  (IfStmt 0x977a308 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0x9779b30 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0x9779a90 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x977a2e0 <line:756:2, line:775:2>
      (DeclStmt 0x9779c08 <line:757:4, col:47>
        0x9779b80 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9779bf8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9779bd4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9779ff8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9779c18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9779fd8 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0x9779ce0 <line:760:8, col:49>
            0x9779c30 "const int_type __eof =
              (CallExpr 0x9779cc0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9779c88 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9779da0 <line:761:8, col:46>
            0x9779d00 "__streambuf_type *__sb =
              (CallExpr 0x9779d80 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9779d48 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9779d38 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9779fb8 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0x9779ee8 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0x9779dc8 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x9779db0 <col:13> '__streambuf_type *' lvalue Var 0x9779d00 '__sb' '__streambuf_type *'))
              (CallExpr 0x9779ec0 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9779e00 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x9779e88 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9779e50 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9779e34 <col:33> '__streambuf_type *' lvalue Var 0x9779d00 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0x9779ea4 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9779c30 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x9779f90 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9779f80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9779f68 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9779f00 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9779b80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9779f58 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9779f34 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x977a0f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977a018 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977a0e0 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0x977a0b0 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977a038 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977a028 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977a08c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x977a0d0 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0x977a1e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977a118 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977a1d0 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0x977a1b0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977a138 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977a128 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977a18c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x977a2c0 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x977a230 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x977a220 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977a204 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9779b80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x977a2a0 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x977a250 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x977a240 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977a284 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9779b80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x977a350 <line:776:7, col:15>
    (UnaryOperator 0x977a338 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x977a328 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0x977b018 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0x977a788 <line:786:7, col:21>
    0x977a720 "int __ret =
      (UnaryOperator 0x977a770 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0x977a758 <col:20> 'int' 1))")
  (DeclStmt 0x977a830 <line:787:7, col:33>
    0x977a7a0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x977a810 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x977a7e8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x977a7d8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x977a800 <col:28> '_Bool' true))")
  (IfStmt 0x977afc0 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0x977a840 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0x977a7a0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x977af98 <line:789:2, line:811:2>
      (DeclStmt 0x977a918 <line:790:4, col:47>
        0x977a890 "ios_base::iostate __err =
          (ImplicitCastExpr 0x977a908 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977a8e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x977acb0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977a928 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x977ac98 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0x977a9f0 <line:793:8, col:46>
            0x977a950 "__streambuf_type *__sb =
              (CallExpr 0x977a9d0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977a998 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x977a988 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x977ac78 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0x977aa00 <line:794:12> '__streambuf_type *' lvalue Var 0x977a950 '__sb' '__streambuf_type *')
            (CompoundStmt 0x977ac60 <line:795:3, line:800:3>
              (IfStmt 0x977ac40 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x977ab18 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x977aab8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (CallExpr 0x977aa68 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x977aa30 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x977aa18 <col:9> '__streambuf_type *' lvalue Var 0x977a950 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x977aaa0 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0x977aa88 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0x977abd0 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x977abc0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x977aba8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x977ab3c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977a890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x977ab98 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x977ab74 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x977ac28 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0x977abf4 <col:7> 'int' lvalue Var 0x977a720 '__ret' 'int')
                  (IntegerLiteral 0x977ac10 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x977adb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977acd0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977ad98 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0x977ad68 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977acf0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977ace0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977ad44 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x977ad88 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0x977aea0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977add0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977ae88 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0x977ae68 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977adf0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977ade0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977ae44 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x977af78 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x977aee8 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x977aed8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977aebc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977a890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x977af58 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x977af08 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x977aef8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977af3c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977a890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x977b008 <line:812:7, col:14>
    (ImplicitCastExpr 0x977aff8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x977afdc <col:14> 'int' lvalue Var 0x977a720 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0x977bc98 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0x977b6f0 <line:822:7, col:36>
    0x977b660 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x977b6d0 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x977b6b8 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x977b6a0 <col:34> 'int' 1)))")
  (DeclStmt 0x977b7a0 <line:823:7, col:33>
    0x977b710 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x977b780 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x977b758 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x977b748 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x977b770 <col:28> '_Bool' true))")
  (IfStmt 0x977bc50 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0x977b7b0 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0x977b710 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x977bc30 <line:825:2, line:839:2>
      (IfStmt 0x977ba20 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977b7c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x977ba08 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0x977b9e8 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0x977b840 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x977b820 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977b7e8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x977b7d8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0x977b9d0 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0x977b854 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x977b660 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0x977b9a8 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977b8d8 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x977b8b8 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x977b880 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x977b870 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0x977b910 <col:37> 'int' 0)
                (DeclRefExpr 0x977b944 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9608c60 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0x977b984 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x977bb20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977ba40 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977bb08 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0x977bad8 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977ba60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977ba50 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977bab4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x977baf8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0x977bc10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977bb40 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977bbf8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0x977bbd8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977bb60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977bb50 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977bbb4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x977bc88 <line:840:7, col:14>
    (DeclRefExpr 0x977bc6c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x977b660 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0x977cd98 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0x977c438 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x977c298 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x977c288 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x977c410 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x977c3d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (CallExpr 0x977c318 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x977c2e0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x977c2d0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x977c3b0 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x977c3a0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x977c388 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9606f30 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x977c378 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x977c354 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x977c4f0 <line:852:7, col:33>
    0x977c460 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x977c4d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x977c4a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x977c498 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x977c4c0 <col:28> '_Bool' true))")
  (IfStmt 0x977cd40 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0x977c500 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0x977c460 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x977cd18 <line:854:2, line:878:2>
      (DeclStmt 0x977c5d8 <line:855:4, col:47>
        0x977c550 "ios_base::iostate __err =
          (ImplicitCastExpr 0x977c5c8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977c5a4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x977ca30 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977c5e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x977ca18 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0x977c9f8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0x977c660 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x977c640 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977c608 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x977c5f8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x977c9e0 <line:859:3, line:867:3>
              (DeclStmt 0x977c7d8 <line:861:5, line:862:23>
                0x977c680 "const pos_type __p =
                  (CallExpr 0x977c7b0 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x977c720 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x977c700 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x977c6c8 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x977c6b8 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x977c754 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x977c040 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0x977c78c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x977c9c0 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x977c8e0 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x977c880 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (DeclRefExpr 0x977c7e8 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x977c680 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x977c860 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x977c840 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x977c828 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x977c810 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x977c998 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x977c988 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x977c970 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x977c904 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977c550 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x977c960 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x977c93c <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x977cb30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977ca50 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977cb18 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0x977cae8 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977ca70 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977ca60 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977cac4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x977cb08 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0x977cc20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977cb50 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977cc08 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0x977cbe8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977cb70 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977cb60 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977cbc4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x977ccf8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x977cc68 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x977cc58 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977cc3c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977c550 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x977ccd8 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x977cc88 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x977cc78 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977ccbc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977c550 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x977cd88 <line:879:7, col:15>
    (UnaryOperator 0x977cd70 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x977cd60 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x977df20 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0x977d5a8 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x977d408 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x977d3f8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x977d580 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x977d540 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (CallExpr 0x977d488 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x977d450 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x977d440 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x977d520 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x977d510 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x977d4f8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9606f30 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x977d4e8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x977d4c4 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x977d660 <line:891:7, col:33>
    0x977d5d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x977d640 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x977d618 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x977d608 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x977d630 <col:28> '_Bool' true))")
  (IfStmt 0x977dec8 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0x977d670 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0x977d5d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x977dea0 <line:893:2, line:917:2>
      (DeclStmt 0x977d748 <line:894:4, col:47>
        0x977d6c0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x977d738 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977d714 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x977dbb8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977d758 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x977dba0 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0x977db80 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0x977d7d0 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x977d7b0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977d778 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x977d768 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x977db68 <line:898:3, line:906:3>
              (DeclStmt 0x977d960 <line:900:5, line:901:23>
                0x977d7f0 "const pos_type __p =
                  (CallExpr 0x977d938 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x977d890 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x977d870 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x977d838 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x977d828 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x977d8c4 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x977d140 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0x977d8dc <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x977d1b0 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0x977d914 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x977db48 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x977da68 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x977da08 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
                  (DeclRefExpr 0x977d970 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x977d7f0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x977d9e8 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x977d9c8 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x977d9b0 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x977d998 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x977db20 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x977db10 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x977daf8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x977da8c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977d6c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x977dae8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x977dac4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x977dcb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977dbd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977dca0 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0x977dc70 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977dbf8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977dbe8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977dc4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x977dc90 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0x977dda8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977dcd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977dd90 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0x977dd70 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977dcf8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x977dce8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x977dd4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x977de80 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x977ddf0 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x977dde0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977ddc4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977d6c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x977de60 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x977de10 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x977de00 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x977de44 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977d6c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x977df10 <line:918:7, col:15>
    (UnaryOperator 0x977def8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x977dee8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0x977f000 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0x977e530 <line:926:7, col:61>
    0x977e500 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x977e5f0 <line:927:7, col:67>
    0x977e5c0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x977e6e0 <line:929:7, col:58>
    0x977e660 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x977e6c0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x977e694 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977e200 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x977e6b0 <col:52> '_Bool' false))")
  (IfStmt 0x977efb8 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0x977e6f0 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0x977e660 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x977ef90 <line:931:2, line:950:2>
      (DeclStmt 0x977e7c8 <line:932:4, col:47>
        0x977e740 "ios_base::iostate __err =
          (ImplicitCastExpr 0x977e7b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977e794 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x977ec90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977e7d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x977ec78 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0x977e910 <line:935:8, col:54>
            0x977e810 "const __int_type __cb =
              (CallExpr 0x977e8f0 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977e8b8 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0x977e898 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x977e860 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0x977e844 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977e200 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0x977ec58 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0x977ea18 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0x977e9f0 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0x977e948 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0x977e96c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x977e810 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0x977e9d0 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x977e9a8 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0x977eac8 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x977ea2c <col:3> '_CharT' lvalue ParmVar 0x977e270 '__c' '_CharT &')
              (CallExpr 0x977eaa8 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0x977ea68 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x977ea8c <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x977e810 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0x977ec30 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x977ec20 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x977ec08 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x977eae0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977e740 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x977ebf0 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x977ebc8 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x977ebb8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x977eba0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9606af0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x977eb80 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x977eb20 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x977eb90 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x977eb5c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x977ed98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977ecb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977ed80 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0x977ed50 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977ecd8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x977ecc0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977e200 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x977ed2c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x977ed70 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0x977ee90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977edb8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x977ee78 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0x977ee58 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x977ede0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x977edc8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977e200 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x977ee34 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x977ef70 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0x977eed8 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x977eec8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x977eeac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977e740 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x977ef50 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x977ef00 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0x977eee4 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977e200 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0x977ef34 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977e740 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x977eff0 <line:951:7, col:14>
    (DeclRefExpr 0x977efd4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977e200 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0x9780e38 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0x977f600 <line:958:7, col:61>
    0x977f5d0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x977f750 <line:959:7, col:73>
    0x977f720 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x977f800 <line:960:7, col:51>
    0x977f7d0 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0x977f850 <line:961:7, col:35>
    0x977f820 "typedef _CharT char_type")
  (DeclStmt 0x977f940 <line:962:7, col:44>
    0x977f910 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x977f9b0 <line:964:7, col:33>
    0x977f960 "streamsize __extracted =
      (IntegerLiteral 0x977f998 <col:32> 'int' 0)")
  (DeclStmt 0x977fa78 <line:965:7, col:50>
    0x977f9f0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x977fa68 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x977fa44 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96088c0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x977fb90 <line:966:7, col:58>
    0x977fb10 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x977fb70 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x977fb44 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x977fb60 <col:52> '_Bool' false))")
  (IfStmt 0x9780be8 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0x977fba0 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0x977fb10 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9780bc8 <line:968:2, line:1006:2>
      (IfStmt 0x97809a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x977fbb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9780970 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0x977fc78 <line:972:8, col:39>
            0x977fbd0 "streamsize __num =
              (CallExpr 0x977fc58 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x977fc20 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0x977fc04 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0x977fdc8 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0x977fcc8 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0x977fcb8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x977fc88 <col:12> 'streamsize':'int' lvalue Var 0x977fbd0 '__num' 'streamsize':'int'))
              (IntegerLiteral 0x977fca0 <col:21> 'int' 0))
            (BinaryOperator 0x977fdb0 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0x977fce0 <col:3> 'streamsize':'int' lvalue Var 0x977fbd0 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0x977fda0 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0x977fd80 <col:11, col:52> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0x977ff68 <line:976:8, col:73>
            0x977fe30 "const __ctype_type &__ct =
              (CallExpr 0x977ff48 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x977fe70 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
                (CallExpr 0x977ff28 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x977fef0 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x977fed8 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9780040 <line:978:8, col:45>
            0x977ffa0 "const int_type __eof =
              (CallExpr 0x9780020 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0x977fff8 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0x9780138 <line:979:8, col:45>
            0x9780090 "__streambuf_type *__sb =
              (CallExpr 0x9780118 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97800e0 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x97800c4 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x97801f8 <line:980:8, col:36>
            0x9780150 "int_type __c =
              (CallExpr 0x97801d8 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97801a0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9780184 <col:23> '__streambuf_type *' lvalue Var 0x9780090 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x97806c0 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0x97804c0 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0x9780358 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0x9780288 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0x9780278 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9780208 <col:15> 'streamsize':'int' lvalue Var 0x977f960 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0x9780260 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0x9780250 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9780220 <col:29> 'streamsize':'int' lvalue Var 0x977fbd0 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0x9780238 <col:37> 'int' 1)))
                (UnaryOperator 0x9780340 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9780318 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x97802c0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x97802e4 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x9780150 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x97802fc <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x977ffa0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x97804a8 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0x9780480 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9780388 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9780370 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x977fe30 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0x97803dc <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0x9657ec0 'space' 'const mask':'const unsigned short')
                  (CallExpr 0x9780460 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9780420 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9780444 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0x9780150 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0x97806a0 <line:986:3, line:990:3>
              (BinaryOperator 0x97805b8 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0x9780520 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9780508 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x97804d8 <col:6> '_CharT *' lvalue ParmVar 0x977f360 '__s' '_CharT *')))
                (CallExpr 0x9780598 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9780558 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x978057c <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0x9780150 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x97805e8 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x97805d0 <col:7> 'streamsize':'int' lvalue Var 0x977f960 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0x9780688 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x97805fc <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9780150 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9780668 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9780630 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9780614 <col:11> '__streambuf_type *' lvalue Var 0x9780090 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x9780850 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0x9780770 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9780718 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x978073c <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x9780150 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9780754 <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x977ffa0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9780828 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9780818 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9780800 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9780794 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977f9f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x97807f0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x97807cc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0x97808d0 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0x9780888 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0x978086c <col:9> '_CharT *' lvalue ParmVar 0x977f360 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0x97808b8 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0x9780950 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9780900 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x97808e8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9780938 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9780ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x97809c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9780a98 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0x9780a68 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97809f0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x97809d8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9780a44 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9780a88 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0x9780ba8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9780ad0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9780b90 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0x9780b70 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9780af8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9780ae0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9780b4c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x96087a0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9780d10 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0x9780c40 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9780c30 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9780c20 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9780c04 <col:12> 'streamsize':'int' lvalue Var 0x977f960 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0x9780ce8 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9780cd8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9780cc0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9607170 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9780c54 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977f9f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9780cb0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9780c8c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608860 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9780df0 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0x9780d58 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9780d48 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9780d2c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977f9f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9780dd0 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9780d80 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9780d64 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9780db4 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x977f9f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9780e28 <line:1011:7, col:14>
    (DeclRefExpr 0x9780e0c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x977f2f0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0x9781f98 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0x9781400 <line:1019:7, col:61>
    0x97813d0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9781550 <line:1020:7, col:73>
    0x9781520 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x9781610 <line:1021:7, col:60>
    0x97815e0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9781700 <line:1022:7, col:44>
    0x97816d0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9781888 <line:1024:7, col:72>
    0x9781750 "const __ctype_type &__ct =
      (CallExpr 0x9781868 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0x9781790 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0x95f76a0)
        (CallExpr 0x9781848 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9781810 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x97817f8 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9781140 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0x9781968 <line:1025:7, col:46>
    0x97818c0 "const __int_type __eof =
      (CallExpr 0x9781948 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9781920 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0x9781a68 <line:1026:7, col:44>
    0x97819c0 "__streambuf_type *__sb =
      (CallExpr 0x9781a48 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9781a10 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x97819f4 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9781140 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0x9781b28 <line:1027:7, col:37>
    0x9781a80 "__int_type __c =
      (CallExpr 0x9781b08 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9781ad0 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9781ab4 <col:24> '__streambuf_type *' lvalue Var 0x97819c0 '__sb' '__streambuf_type *')))")
  (WhileStmt 0x9781de0 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0x9781d28 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0x9781bd8 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0x9781bb0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9781b58 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0x9781b7c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9781a80 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0x9781b94 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x97818c0 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0x9781d00 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9781c08 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9781bec <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9781750 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0x9781c5c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0x9657ec0 'space' 'const mask':'const unsigned short')
        (CallExpr 0x9781ce0 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9781ca0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0x9781cc4 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9781a80 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0x9781dc8 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0x9781d40 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9781a80 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0x9781da8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9781d70 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9781d58 <col:8> '__streambuf_type *' lvalue Var 0x97819c0 '__sb' '__streambuf_type *')))))
  (IfStmt 0x9781f50 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0x9781e78 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9781e20 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0x9781e44 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9781a80 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0x9781e5c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x97818c0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0x9781f30 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9781eb8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9781e9c <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9781140 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9781f0c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9608800 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9781f88 <line:1035:7, col:14>
    (DeclRefExpr 0x9781f6c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9781140 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0x978c748 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978c738 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978c720 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978c700 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c69c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978c710 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c6dc <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0x978cb48 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x978b480 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0x978cbe8 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0x978c838 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978c828 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978c810 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978c7f0 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c78c <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978c800 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c7cc <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0x978ccc8 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x978cc90 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0x978cc78 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x978b5d0 '__str' 'const __string_type &')))
, (CallExpr 0x978cd38 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x978cd00 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0x978cce4 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x978b5d0 '__str' 'const __string_type &')))
) (CompoundStmt 0x978ce30 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0x978ce10 <col:9, col:33> '<dependent type>'
    (MemberExpr 0x978cdd8 <col:9> '<bound member function type>' ->_M_stringbuf_init 0x978b9e0
      (CXXThisExpr 0x978cdc8 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x978cdf8 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x978b640 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0x978d398 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0x978ce88 <line:123:2, col:21>
    0x978ce50 "__string_type __ret")
  (IfStmt 0x978d350 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0x978cf00 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x978cec8 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0x978ceb8 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0x978d2d8 <line:125:4, line:131:4>
      (IfStmt 0x978d2b8 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x978d040 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x978cff0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
          (CallExpr 0x978cf68 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978cf30 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x978cf20 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x978cfd0 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978cf98 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0x978cf88 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x978d178 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0x978d064 <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x978ce50 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x978d158 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x978d0d0 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x978d098 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0x978d088 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x978d138 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x978d100 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x978d0f0 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0x978d2a0 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0x978d190 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x978ce50 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x978d280 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x978d1f8 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x978d1c0 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x978d1b0 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x978d260 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x978d228 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x978d218 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0x978d338 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0x978d2ec <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x978ce50 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0x978d318 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
        (CXXThisExpr 0x978d308 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0x978d388 <line:134:2, col:9>
    (DeclRefExpr 0x978d36c <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x978ce50 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0x978d5a8 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0x978d500 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x978d3e8 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0x978d3c8 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
        (CXXThisExpr 0x978d3b8 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0x978d470 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x978d438 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0x978d41c <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x978b810 '__s' 'const __string_type &')))
    (CallExpr 0x978d4e0 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x978d4a8 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x978d48c <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x978b810 '__s' 'const __string_type &'))))
  (CallExpr 0x978d588 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0x978d538 <col:2> '<bound member function type>' ->_M_stringbuf_init 0x978b9e0
      (CXXThisExpr 0x978d528 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0x978d568 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
      (CXXThisExpr 0x978d558 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0x978da40 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0x978d608 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0x978d5d0 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
      (CXXThisExpr 0x978d5c0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x978d5f0 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x978b990 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0x978d680 <line:158:2, col:23>
    0x978d630 "__size_type __len =
      (IntegerLiteral 0x978d668 <col:22> 'int' 0)")
  (IfStmt 0x978d8e8 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x978d808 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x978d7d0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9605650)
      (MemberExpr 0x978d6a0 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
        (CXXThisExpr 0x978d690 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0x978d7b8 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0x978d790 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x978d780 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x978d768 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x978d748 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x978d6e8 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x96089d0 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0x978d758 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x978d724 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608970 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0x978d8d0 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0x978d82c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0x978d630 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0x978d8b0 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x978d878 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0x978d858 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x978d848 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0x978da18 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0x978d918 <col:2> '<bound member function type>' ->_M_sync 0x978c3c0
      (CXXThisExpr 0x978d908 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0x978d9d0 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0x978d9a0 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x978d968 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0x978d948 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x978d938 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0x978d9e8 <col:52> 'int' 0)
    (DeclRefExpr 0x978da00 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0x978d630 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0x978dde0 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0x978dad8 <line:167:2, col:23>
    0x978da70 "streamsize __ret =
      (UnaryOperator 0x978dac0 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0x978daa8 <col:22> 'int' 1))")
  (IfStmt 0x978dd88 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x978db90 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x978db58 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9605650)
      (MemberExpr 0x978daf8 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
        (CXXThisExpr 0x978dae8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x978db34 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0x978dd70 <line:169:4, line:172:4>
      (CallExpr 0x978dbe8 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0x978dbc8 <col:6> '<bound member function type>' ->_M_update_egptr 0x978c450
          (CXXThisExpr 0x978dbb8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0x978dd58 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0x978dc04 <col:6> 'streamsize':'int' lvalue Var 0x978da70 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0x978dd30 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x978dcf0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CallExpr 0x978dc68 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978dc30 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x978dc20 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x978dcd0 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978dc98 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x978dc88 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0x978ddd0 <line:173:2, col:9>
    (ImplicitCastExpr 0x978ddc0 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x978dda4 <col:9> 'streamsize':'int' lvalue Var 0x978da70 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0x978c8a8 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x978c880 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0x978c910 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x978c8e8 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0x978e008 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0x978dfc8 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0x978de70 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0x978ddfc <col:6> 'char_type *' lvalue ParmVar 0x978bd60 '__s' 'char_type *')
      (BinaryOperator 0x978de58 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0x978de48 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x978de14 <col:13> 'streamsize':'int' lvalue ParmVar 0x978bda0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x978de30 <col:20> 'int' 0)))
    (CompoundStmt 0x978dfb0 <line:200:4, line:211:4>
      (CallExpr 0x978def0 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x978deb8 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0x978de98 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x978de88 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x978df88 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0x978df20 <col:6> '<bound member function type>' ->_M_sync 0x978c3c0
          (CXXThisExpr 0x978df10 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x978df40 <col:14> 'char_type *' lvalue ParmVar 0x978bd60 '__s' 'char_type *')
        (DeclRefExpr 0x978df58 <col:19> 'streamsize':'int' lvalue ParmVar 0x978bda0 '__n' 'streamsize':'int')
        (IntegerLiteral 0x978df70 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0x978dff8 <line:212:2, col:9>
    (CXXThisExpr 0x978dfe8 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x978c9f8 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978c9e8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978c9d0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978c9b0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c94c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978c9c0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c98c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x978cae8 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978cad8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978cac0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978caa0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978ca3c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978cab0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978ca7c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0x978e6e0 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0x978e138 <line:234:2, col:46>
    0x978e030 "const bool __testin =
      (CXXOperatorCallExpr 0x978e110 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x978e0d8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9605650)
        (MemberExpr 0x978e078 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
          (CXXThisExpr 0x978e068 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x978e0b4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x978e6c0 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0x978e2f8 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0x978e190 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x978e158 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x978e148 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0x978e2d0 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x978e280 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
        (CallExpr 0x978e1f8 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x978e1c0 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0x978e1b0 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x978e260 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x978e228 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x978e218 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x978e6a8 <line:236:4, line:241:4>
      (IfStmt 0x978e688 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0x978e328 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x978e310 <col:10> 'const _Bool' lvalue Var 0x978e030 '__testin' 'const _Bool'))
        (CallExpr 0x978e4b8 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x978e348 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x978e338 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x978e3c8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978e390 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x978e380 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x978e430 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978e3f8 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x978e3e8 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x978e498 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978e460 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0x978e450 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x978e660 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x978e4f0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x978e4e0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x978e570 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978e538 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x978e528 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x978e5d8 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978e5a0 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0x978e590 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x978e640 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x978e608 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x978e5f8 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x978f868 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x978f844 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0x978f9b8 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978f9a8 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978f990 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978f970 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978f918 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x978f290 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978f980 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978f94c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x978fb30 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0x978fb10 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x978fa48 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x978fa38 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x978faf0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x978fab0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (MemberExpr 0x978fa90 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x978f1f0
        (CXXThisExpr 0x978fa80 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x978f8b8 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x978f894 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0x978fb88 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x978f3b0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x978fc40 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978fc30 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978fc18 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978fbf8 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978fba0 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x978f420 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978fc08 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978fbd4 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x978fda8 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0x978fd88 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x978fcc0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x978fcb0 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x978fd68 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x978fd28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (MemberExpr 0x978fd08 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x978f1f0
        (CXXThisExpr 0x978fcf8 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x978fdc0 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x978feb0 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0x978fea0 <col:9, col:59>
    (CXXConstCastExpr 0x978fe88 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x978fe58 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x978fe18 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (MemberExpr 0x978fdf8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x978f1f0
          (CXXThisExpr 0x978fde8 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x978ff60 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0x978ff50 <col:9, col:33>
    (CallExpr 0x978ff30 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x978fef8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x978fed8 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x978f1f0
          (CXXThisExpr 0x978fec8 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9790018 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0x978fff8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x978ffa8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x978ff88 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x978f1f0
        (CXXThisExpr 0x978ff78 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x978ffdc <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x978f740 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x9793e28 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9793e04 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0x9793f78 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9793f68 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9793f50 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9793f30 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9793ed8 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9793890 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9793f40 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9793f0c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x97940f0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0x97940d0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9794008 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9793ff8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x97940b0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9794070 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (MemberExpr 0x9794050 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97937f0
        (CXXThisExpr 0x9794040 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x9793e78 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9793e54 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0x9794148 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x97939b0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x9794200 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x97941f0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x97941d8 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x97941b8 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9794160 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9793a20 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x97941c8 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9794194 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9794368 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0x9794348 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9794280 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9794270 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9794328 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x97942e8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (MemberExpr 0x97942c8 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97937f0
        (CXXThisExpr 0x97942b8 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9794380 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9794470 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0x9794460 <col:9, col:59>
    (CXXConstCastExpr 0x9794448 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9794418 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x97943d8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (MemberExpr 0x97943b8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97937f0
          (CXXThisExpr 0x97943a8 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9794520 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0x9794510 <col:9, col:33>
    (CallExpr 0x97944f0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x97944b8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9794498 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97937f0
          (CXXThisExpr 0x9794488 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x97945d8 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0x97945b8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9794568 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9794548 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97937f0
        (CXXThisExpr 0x9794538 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x979459c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9793d00 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0x97957a0 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9795790 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9795778 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9795758 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x97956f4 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9795768 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9795734 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9795908 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9795180 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9795a70 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0x9795a50 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9795988 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9795978 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9795a30 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x97959f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (MemberExpr 0x97959d0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97950e0
        (CXXThisExpr 0x97959c0 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0x9795890 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9795880 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9795868 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9795848 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x97957e4 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9795858 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9795824 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9795ac8 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x97952a0 '__str' 'const __string_type &')
, (DeclRefExpr 0x9795ae0 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9795310 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9795c38 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0x9795c18 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9795b50 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9795b40 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9795bf8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9795bb8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
      (MemberExpr 0x9795b98 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97950e0
        (CXXThisExpr 0x9795b88 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9795c50 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9795d40 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0x9795d30 <col:9, col:59>
    (CXXConstCastExpr 0x9795d18 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9795ce8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9795ca8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (MemberExpr 0x9795c88 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97950e0
          (CXXThisExpr 0x9795c78 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9795df0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0x9795de0 <col:9, col:33>
    (CallExpr 0x9795dc0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9795d88 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9795d68 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97950e0
          (CXXThisExpr 0x9795d58 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9795ea8 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0x9795e88 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9795e38 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9795e18 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x97950e0
        (CXXThisExpr 0x9795e08 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9795e6c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x97955f0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0x978c8a8 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x978c880 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0x97972a8 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0x97967a0 <line:49:7, col:42>
    0x97966f0 "int_type __ret =
      (CallExpr 0x9796780 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9796748 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0x9797260 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x97968d0 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9796880 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
      (CallExpr 0x97967f8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97967c0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x97967b0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9796860 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9796828 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9796818 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0x9797248 <line:51:2, line:74:2>
      (DeclStmt 0x97969e8 <line:54:4, col:63>
        0x9796900 "const bool __testeof =
          (CallExpr 0x97969c0 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9796958 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0x979698c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9796470 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0x97969a4 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0x97966f0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0x9797228 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0x9796a20 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9796a10 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x97969f8 <col:9> 'const _Bool' lvalue Var 0x9796900 '__testeof' 'const _Bool')))
        (CompoundStmt 0x9797098 <line:56:6, line:68:6>
          (DeclStmt 0x9796c38 <line:57:8, line:59:28>
            0x9796a40 "const bool __testeq =
              (CallExpr 0x9796c10 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9796a98 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0x9796b40 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9796af0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9796b24 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9796470 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0x9796bf8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x9796ba8 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9796b70 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x9796b60 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0x9796be0 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0x9796bc8 <col:25> 'int' 1))))")
          (DeclStmt 0x9796d78 <line:60:8, col:60>
            0x9796c50 "const bool __testout =
              (CXXOperatorCallExpr 0x9796d50 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0x9796d10 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
                (CXXDependentScopeMemberExpr 0x9796c98 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9796c88 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9796cec <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9797078 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0x9796dd8 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0x9796db8 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9796d88 <col:12> 'const _Bool' lvalue Var 0x9796a40 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0x9796dc8 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9796da0 <col:24> 'const _Bool' lvalue Var 0x9796c50 '__testout' 'const _Bool')))
            (CompoundStmt 0x9797058 <line:62:3, line:67:3>
              (CallExpr 0x9796e68 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9796e00 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9796df0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0x9796e50 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0x9796e38 <col:18> 'int' 1)))
              (IfStmt 0x9796ff0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0x9796eb0 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9796ea0 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9796e88 <col:10> 'const _Bool' lvalue Var 0x9796a40 '__testeq' 'const _Bool')))
                (BinaryOperator 0x9796fd8 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0x9796f30 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0x9796f10 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9796ed8 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0x9796ec8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0x9796fb8 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9796f68 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9796f9c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9796470 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0x9797040 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0x979700c <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x97966f0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0x9797024 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9796470 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0x9797210 <line:70:6, line:73:6>
          (CallExpr 0x9797130 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97970c8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x97970b8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0x9797118 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0x9797100 <col:21> 'int' 1)))
          (BinaryOperator 0x97971f8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0x9797150 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x97966f0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x97971d8 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9797188 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0x97971bc <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9796470 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0x9797298 <line:75:7, col:14>
    (DeclRefExpr 0x979727c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x97966f0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0x978c910 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x978c8e8 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0x9799278 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0x9797b48 <line:83:7, col:59>
    0x9797a20 "const bool __testout =
      (CXXOperatorCallExpr 0x9797b20 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0x9797ae0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CXXDependentScopeMemberExpr 0x9797a68 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0x9797a58 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9797abc <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9797cb0 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0x9797c18 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9797bd0 <col:11, col:45> 'long'
        (ImplicitCastExpr 0x9797bc0 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9797b58 <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9797bf8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0x9797b98 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9797b88 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9797b70 <col:29> 'const _Bool' lvalue Var 0x9797a20 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0x9797c08 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9797bb0 <col:40> '_Bool' false))))
    (ReturnStmt 0x9797ca0 <line:85:2, col:26>
      (CallExpr 0x9797c80 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9797c48 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x9797e28 <line:87:7, col:79>
    0x9797ce0 "const bool __testeof =
      (CallExpr 0x9797e00 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9797d38 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0x9797d6c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x97977a0 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9797de0 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9797da8 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0x9797f90 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0x9797ee0 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9797e88 <col:11, col:44> 'long'
        (ImplicitCastExpr 0x9797e78 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9797e38 <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9797ec0 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9797eb0 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9797e50 <col:28> 'const _Bool' lvalue Var 0x9797ce0 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0x9797ed0 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9797e68 <col:39> '_Bool' false))))
    (ReturnStmt 0x9797f80 <line:89:2, col:33>
      (CallExpr 0x9797f60 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9797f10 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0x9797f44 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x97977a0 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0x9798080 <line:91:7, col:58>
    0x9797fc0 "const __size_type __capacity =
      (CallExpr 0x9798060 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798028 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9798008 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x9797ff8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9798160 <line:92:7, col:58>
    0x97980a0 "const __size_type __max_size =
      (CallExpr 0x9798140 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798108 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x97980e8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x97980d8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9798300 <line:93:7, col:58>
    0x9798180 "const bool __testput =
      (CXXOperatorCallExpr 0x97982d8 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9798288 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
        (CallExpr 0x9798200 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97981c8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x97981b8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9798268 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9798230 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0x9798220 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x97984f8 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0x9798448 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0x9798310 <col:11> 'long (long, long)' lvalue Function 0x95418a0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9798420 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0x9798350 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9798340 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9798328 <col:29> 'const _Bool' lvalue Var 0x9798180 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0x97983f8 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9798398 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274160 0x928b9e0 0x928e490 0x92e0240 0x92e05d0 0x9319a60 0x93890d0 0x955af70 0x955b9e0 0x955c220 0x955c790 0x965c750)
          (DeclRefExpr 0x9798364 <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9797fc0 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0x979837c <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x97980a0 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0x9798438 <col:68> '_Bool' false))
    (ReturnStmt 0x97984e8 <line:95:2, col:26>
      (CallExpr 0x97984c8 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798490 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x97985e8 <line:99:7, col:62>
    0x9798520 "const char_type __conv =
      (CallExpr 0x97985c8 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798578 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x97985ac <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x97977a0 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x97991b0 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0x9798620 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9798610 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x97985f8 <col:12> 'const _Bool' lvalue Var 0x9798180 '__testput' 'const _Bool')))
    (CompoundStmt 0x97990d0 <line:101:2, line:122:2>
      (DeclStmt 0x97987a8 <line:111:4, line:112:25>
        0x9798640 "const __size_type __opt_len =
          (CallExpr 0x9798780 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9798698 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa3b0 0x92ab180)
            (CXXUnresolvedConstructExpr 0x9798720 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0x9798708 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0x97986d8 <col:55> 'int' 2)
                (DeclRefExpr 0x97986f0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9797fc0 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0x9798760 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0x9798748 <col:20> 'int' 512)))")
      (DeclStmt 0x97988a0 <line:113:4, col:61>
        0x97987c0 "const __size_type __len =
          (CallExpr 0x9798878 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9798810 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x92aa0a0 0x92aadf0)
            (DeclRefExpr 0x9798848 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9798640 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0x9798860 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x97980a0 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0x97988f8 <line:114:4, col:23>
        0x97988c0 "__string_type __tmp")
      (CallExpr 0x9798970 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798920 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9798908 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x97988c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9798954 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x97987c0 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0x9798c10 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0x97989d8 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97989a0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9798990 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9798be8 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9798a10 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0x97989f4 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x97988c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0x9798a90 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9798a58 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9798a48 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9798bc0 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0x9798b80 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
            (CallExpr 0x9798af8 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9798ac0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9798ab0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9798b60 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9798b28 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0x9798b18 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0x9798c98 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798c48 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9798c2c <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x97988c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9798c7c <col:20> 'const char_type':'const _CharT' lvalue Var 0x9798520 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0x9798d38 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9798ce8 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0x9798cc8 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x9798cb8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9798d1c <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x97988c0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0x97990a8 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0x9798d68 <line:120:4> '<bound member function type>' ->_M_sync 0x978c3c0
          (CXXThisExpr 0x9798d58 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0x9798e20 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0x9798df0 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9798db8 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0x9798d98 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
                (CXXThisExpr 0x9798d88 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0x9798f48 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9798f08 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CallExpr 0x9798e80 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9798e48 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0x9798e38 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9798ee8 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9798eb0 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9798ea0 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9799080 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9799040 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
          (CallExpr 0x9798fb8 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9798f80 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0x9798f70 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9799020 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9798fe8 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0x9798fd8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0x9799198 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0x9799168 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0x9799148 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9799110 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0x9799100 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x979917c <col:18> 'const char_type':'const _CharT' lvalue Var 0x9798520 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0x9799230 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97991e0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x97991d0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9799218 <col:19> 'int' 1))
  (ReturnStmt 0x9799268 <line:126:7, col:14>
    (DeclRefExpr 0x9799250 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x97977a0 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0x9799f40 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0x9799a80 <line:134:7, col:42>
    0x97999d0 "int_type __ret =
      (CallExpr 0x9799a60 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9799a28 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0x9799bc8 <line:135:7, col:57>
    0x9799aa0 "const bool __testin =
      (CXXOperatorCallExpr 0x9799ba0 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9799b60 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
        (CXXDependentScopeMemberExpr 0x9799ae8 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0x9799ad8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9799b3c <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9799ef8 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9799bf0 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9799bd8 <col:11> 'const _Bool' lvalue Var 0x9799aa0 '__testin' 'const _Bool'))
    (CompoundStmt 0x9799ee0 <line:137:2, line:143:2>
      (CallExpr 0x9799c30 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0x9799c10 <col:4> '<bound member function type>' ->_M_update_egptr 0x978c450
          (CXXThisExpr 0x9799c00 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0x9799ec0 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9799d70 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9799d20 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9274810 0x928be80 0x928e9b0 0x931a230 0x955de80 0x955e3e0 0x955e910)
          (CallExpr 0x9799c98 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9799c60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9799c50 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9799d00 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9799cc8 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0x9799cb8 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9799ea8 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0x9799d94 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x97999d0 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0x9799e88 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9799dd0 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0x9799e70 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0x9799e50 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9799e18 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9799e08 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9799f30 <line:144:7, col:14>
    (DeclRefExpr 0x9799f14 <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x97999d0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x978c9f8 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978c9e8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978c9d0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978c9b0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c94c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978c9c0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978c98c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x97a0ab8 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0x979a888 <line:152:7, col:47>
    0x979a7d0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x979a868 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x979a848 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x979a830 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x979a818 <col:44> 'int' 1))))")
  (DeclStmt 0x979ab08 <line:153:7, col:67>
    0x979a8a0 "bool __testin =
      (CXXOperatorCallExpr 0x979aae0 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x979aa80 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
        (ParenExpr 0x979aa50 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0x979aa28 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0x979a9e8 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
            (CXXOperatorCallExpr 0x979a9a8 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0x979a968 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
              (DeclRefExpr 0x979a900 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x979a930 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0x979a920 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x979a9cc <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x979a530 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x979aa68 <col:66> 'int' 0))")
  (DeclStmt 0x979ad88 <line:154:7, col:69>
    0x979ab20 "bool __testout =
      (CXXOperatorCallExpr 0x979ad60 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x979ad00 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
        (ParenExpr 0x979acd0 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0x979aca8 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x979ac68 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
            (CXXOperatorCallExpr 0x979ac28 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0x979abe8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
              (DeclRefExpr 0x979ab80 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x979abb0 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x979aba0 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x979ac4c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x979a530 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x979ace8 <col:68> 'int' 0))")
  (DeclStmt 0x979af40 <line:155:7, col:78>
    0x979ada0 "const bool __testboth =
      (BinaryOperator 0x979aef0 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0x979ae28 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0x979ae08 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x979add4 <col:31> '_Bool' lvalue Var 0x979a8a0 '__testin' '_Bool'))
          (ImplicitCastExpr 0x979ae18 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x979adec <col:43> '_Bool' lvalue Var 0x979ab20 '__testout' '_Bool')))
        (BinaryOperator 0x979aed8 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0x979aeb8 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0x979ae98 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x979ae40 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x979a4c0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x979aec8 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0x979aea8 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x979ae74 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9608c60 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0x979b080 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x979af50 <col:7> '_Bool' lvalue Var 0x979a8a0 '__testin' '_Bool')
    (ImplicitCastExpr 0x979b070 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x979b058 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x979b048 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x979b030 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x979b008 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x979aff8 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x979afe0 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605650 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x979afc0 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x979af68 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x979a530 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x979afd0 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x979af9c <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0x979b1d0 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x979b0a0 <col:7> '_Bool' lvalue Var 0x979ab20 '__testout' '_Bool')
    (ImplicitCastExpr 0x979b1c0 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x979b1a8 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x979b198 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x979b180 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x979b158 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x979b148 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x979b130 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605650 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x979b110 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x979b0b8 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x979a530 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x979b120 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x979b0ec <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0x979b370 <line:161:7, col:72>
    0x979b220 "const char_type *__beg =
      (ConditionalOperator 0x979b350 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x979b340 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x979b254 <col:32> '_Bool' lvalue Var 0x979a8a0 '__testin' '_Bool'))
        (CallExpr 0x979b2b8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x979b280 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x979b270 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x979b320 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x979b2e8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x979b2d8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x97a0a70 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0x979f920 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0x979f848 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0x979f830 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0x979f7e8 <col:12> 'const char_type *' lvalue Var 0x979b220 '__beg' 'const char_type *')
          (UnaryOperator 0x979f818 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0x979f800 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x979a450 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0x979f908 <col:32, col:68> '_Bool'
        (BinaryOperator 0x979f8f0 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0x979f8b0 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0x979f890 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x979f85c <col:33> '_Bool' lvalue Var 0x979a8a0 '__testin' '_Bool'))
            (ImplicitCastExpr 0x979f8a0 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x979f874 <col:45> '_Bool' lvalue Var 0x979ab20 '__testout' '_Bool')))
          (ImplicitCastExpr 0x979f8e0 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x979f8c8 <col:58> 'const _Bool' lvalue Var 0x979ada0 '__testboth' 'const _Bool')))))
    (CompoundStmt 0x97a0a48 <line:163:2, line:191:2>
      (CallExpr 0x979f968 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0x979f948 <col:4> '<bound member function type>' ->_M_update_egptr 0x978c450
          (CXXThisExpr 0x979f938 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x979f9e0 <line:166:4, col:30>
        0x979f990 "off_type __newoffi =
          (DeclRefExpr 0x979f9c4 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x979a450 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0x979fa50 <line:167:4, col:34>
        0x979fa00 "off_type __newoffo =
          (DeclRefExpr 0x979fa34 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0x979ffc0 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0x979faf8 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0x979fad8 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0x979fab8 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x979fa60 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x979a4c0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x979fae8 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0x979fac8 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x979fa94 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9608c60 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0x979fd50 <line:169:6, line:172:6>
          (CompoundAssignOperator 0x979fc10 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x979fb10 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x979fbe8 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x979fba8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CallExpr 0x979fb70 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x979fb38 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x979fb28 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x979fb8c <col:36> 'const char_type *' lvalue Var 0x979b220 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0x979fd30 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x979fc30 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x979fa00 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x979fd08 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x979fcc8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CallExpr 0x979fc90 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x979fc58 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x979fc48 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x979fcac <col:36> 'const char_type *' lvalue Var 0x979b220 '__beg' 'const char_type *'))))
        (IfStmt 0x979ffa0 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0x979fe00 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0x979fde0 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0x979fdc0 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x979fd68 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x979a4c0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0x979fdf0 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0x979fdd0 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x979fd9c <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9608cc0 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0x979ff88 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0x979fe4c <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0x979fa00 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0x979ff68 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x979fe64 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0x979ff40 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x979ff00 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                (CallExpr 0x979fec8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x979fe90 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0x979fe80 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x979fee4 <col:47> 'const char_type *' lvalue Var 0x979b220 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0x97a0570 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0x97a0298 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0x97a0108 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0x97a0048 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0x97a0030 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0x97a0010 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x979ffdc <col:9> '_Bool' lvalue Var 0x979a8a0 '__testin' '_Bool'))
                (ImplicitCastExpr 0x97a0020 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x979fff4 <col:21> 'const _Bool' lvalue Var 0x979ada0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x97a00e0 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x97a0090 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
              (DeclRefExpr 0x97a005c <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x97a0078 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x97a0270 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x97a0220 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
            (CXXOperatorCallExpr 0x97a01e0 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x97a01a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CallExpr 0x97a0168 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a0130 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a0120 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x97a0184 <col:27> 'const char_type *' lvalue Var 0x979b220 '__beg' 'const char_type *'))
            (DeclRefExpr 0x97a0204 <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x97a0558 <line:179:6, line:183:6>
          (CallExpr 0x97a04c0 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x97a02c0 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x97a02b0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x97a0340 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97a0308 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0x97a02f8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x97a0430 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x97a03e0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
              (CallExpr 0x97a03a8 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a0370 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a0360 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x97a03c4 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0x97a04a0 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97a0468 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0x97a0458 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0x97a0540 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x97a04e8 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x979a7d0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x97a0520 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x97a0508 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x979f990 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0x97a0a28 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0x97a0848 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0x97a06b8 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0x97a05f8 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0x97a05e0 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0x97a05c0 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x97a058c <col:9> '_Bool' lvalue Var 0x979ab20 '__testout' '_Bool'))
                (ImplicitCastExpr 0x97a05d0 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x97a05a4 <col:22> 'const _Bool' lvalue Var 0x979ada0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x97a0690 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x97a0640 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
              (DeclRefExpr 0x97a060c <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x979fa00 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x97a0628 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x97a0820 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x97a07d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9276600 0x928d3c0 0x920da90 0x931bde0 0x9561150 0x9561690 0x9561bc0)
            (CXXOperatorCallExpr 0x97a0790 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x97a0750 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
              (CallExpr 0x97a0718 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a06e0 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a06d0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x97a0734 <col:27> 'const char_type *' lvalue Var 0x979b220 '__beg' 'const char_type *'))
            (DeclRefExpr 0x97a07b4 <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x979fa00 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x97a0a10 <line:187:6, line:190:6>
          (CallExpr 0x97a0978 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0x97a0870 <col:8> '<bound member function type>' ->_M_pbump 0x978c610
              (CXXThisExpr 0x97a0860 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x97a08d8 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97a08a0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x97a0890 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x97a0940 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97a0908 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0x97a08f8 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x97a095c <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0x979fa00 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0x97a09f8 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x97a09a0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x979a7d0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x97a09d8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x97a09c0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x979fa00 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x97a0aa8 <line:192:7, col:14>
    (DeclRefExpr 0x97a0a8c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x979a7d0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x978cae8 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x978cad8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x978cac0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9605880 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x978caa0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978ca3c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x978cab0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x978ca7c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x97a23d8 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0x97a1378 <line:200:7, col:47>
    0x97a12c0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x97a1358 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x97a1338 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x97a1320 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x97a1308 <col:44> 'int' 1))))")
  (DeclStmt 0x97a15f8 <line:201:7, col:73>
    0x97a1390 "const bool __testin =
      (CXXOperatorCallExpr 0x97a15d0 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x97a1570 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
        (ParenExpr 0x97a1540 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0x97a1518 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0x97a14d8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
            (CXXOperatorCallExpr 0x97a1498 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x97a1458 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
              (DeclRefExpr 0x97a13f0 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x97a1420 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x97a1410 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x97a14bc <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x97a1030 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x97a1558 <col:72> 'int' 0))")
  (DeclStmt 0x97a1878 <line:202:7, col:75>
    0x97a1610 "const bool __testout =
      (CXXOperatorCallExpr 0x97a1850 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x97a17f0 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
        (ParenExpr 0x97a17c0 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0x97a1798 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x97a1758 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
            (CXXOperatorCallExpr 0x97a1718 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x97a16d8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9604290 0x9605650 0x96068c0)
              (DeclRefExpr 0x97a1670 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x97a16a0 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0x97a1690 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x97a173c <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x97a1030 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x97a17d8 <col:74> 'int' 0))")
  (DeclStmt 0x97a19f0 <line:204:7, col:72>
    0x97a18a0 "const char_type *__beg =
      (ConditionalOperator 0x97a19d0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x97a19c0 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x97a18d4 <col:32> 'const _Bool' lvalue Var 0x97a1390 '__testin' 'const _Bool'))
        (CallExpr 0x97a1938 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97a1900 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x97a18f0 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x97a19a0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97a1968 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x97a1958 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x97a2390 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0x97a1b20 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0x97a1a88 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0x97a1a70 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0x97a1a00 <col:12> 'const char_type *' lvalue Var 0x97a18a0 '__beg' 'const char_type *')
          (UnaryOperator 0x97a1a58 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0x97a1a38 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0x97a1a20 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x97a0fc0 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0x97a1b08 <col:41, col:63> '_Bool'
        (BinaryOperator 0x97a1af0 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0x97a1ad0 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x97a1a9c <col:42> 'const _Bool' lvalue Var 0x97a1390 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0x97a1ae0 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x97a1ab4 <col:54> 'const _Bool' lvalue Var 0x97a1610 '__testout' 'const _Bool')))))
    (CompoundStmt 0x97a2370 <line:206:2, line:221:2>
      (CallExpr 0x97a1b68 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0x97a1b48 <col:4> '<bound member function type>' ->_M_update_egptr 0x978c450
          (CXXThisExpr 0x97a1b38 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x97a1c00 <line:209:4, col:30>
        0x97a1b90 "const off_type __pos =
          (ParenListExpr 0x97a1be0 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0x97a1bc4 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x97a0fc0 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0x97a1ea8 <line:210:4, line:211:41>
        0x97a1c20 "const bool __testpos =
          (ParenExpr 0x97a1e90 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0x97a1e78 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x97a1cd8 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x97a1c88 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
                (IntegerLiteral 0x97a1c58 <col:28> 'int' 0)
                (DeclRefExpr 0x97a1c70 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x97a1b90 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0x97a1e50 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x97a1e00 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92760b0 0x928cfa0 0x928f780 0x931b890 0x9560070 0x95605b0 0x9560ae0)
                (DeclRefExpr 0x97a1cfc <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x97a1b90 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0x97a1dd8 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0x97a1d98 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928d910 0x920e010 0x93202c0)
                  (CallExpr 0x97a1d60 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x97a1d28 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0x97a1d18 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0x97a1d7c <col:35> 'const char_type *' lvalue Var 0x97a18a0 '__beg' 'const char_type *')))))")
      (IfStmt 0x97a2350 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x97a1ed0 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x97a1eb8 <col:8> 'const _Bool' lvalue Var 0x97a1c20 '__testpos' 'const _Bool'))
        (CompoundStmt 0x97a2330 <line:213:6, line:220:6>
          (IfStmt 0x97a2140 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0x97a1ef8 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x97a1edc <col:12> 'const _Bool' lvalue Var 0x97a1390 '__testin' 'const _Bool'))
            (CallExpr 0x97a2118 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x97a1f18 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x97a1f08 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x97a1f98 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a1f60 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a1f50 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x97a2088 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x97a2038 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
                (CallExpr 0x97a2000 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x97a1fc8 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x97a1fb8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x97a201c <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x97a1b90 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0x97a20f8 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a20c0 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a20b0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0x97a22c8 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0x97a2178 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x97a215c <col:12> 'const _Bool' lvalue Var 0x97a1610 '__testout' 'const _Bool'))
            (CallExpr 0x97a22a0 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0x97a2198 <col:3> '<bound member function type>' ->_M_pbump 0x978c610
                (CXXThisExpr 0x97a2188 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x97a2200 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a21c8 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a21b8 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0x97a2268 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x97a2230 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0x97a2220 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x97a2284 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x97a1b90 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0x97a2318 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0x97a22e4 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x97a12c0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0x97a22fc <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x97a0fc0 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x97a23c8 <line:222:7, col:14>
    (DeclRefExpr 0x97a23ac <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x97a12c0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0x97a3420 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0x97a2a18 <line:230:7, col:51>
    0x97a2910 "const bool __testin =
      (CXXOperatorCallExpr 0x97a29f0 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x97a29b8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9605650)
        (MemberExpr 0x97a2958 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
          (CXXThisExpr 0x97a2948 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x97a2994 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608a90 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x97a2b38 <line:231:7, col:53>
    0x97a2a30 "const bool __testout =
      (CXXOperatorCallExpr 0x97a2b10 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x97a2ad8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9605650)
        (MemberExpr 0x97a2a78 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x978b3a0
          (CXXThisExpr 0x97a2a68 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x97a2ab4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9608af0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x97a2cb0 <line:232:7, col:52>
    0x97a2b60 "char_type *__endg =
      (CXXOperatorCallExpr 0x97a2c88 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x97a2c38 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (DeclRefExpr 0x97a2b94 <col:27> 'char_type *' lvalue ParmVar 0x97a2780 '__base' 'char_type *')
        (CallExpr 0x97a2c18 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97a2be0 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x97a2bc0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
              (CXXThisExpr 0x97a2bb0 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0x97a2e20 <line:233:7, col:56>
    0x97a2cd0 "char_type *__endp =
      (CXXOperatorCallExpr 0x97a2df8 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x97a2da8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (DeclRefExpr 0x97a2d04 <col:27> 'char_type *' lvalue ParmVar 0x97a2780 '__base' 'char_type *')
        (CallExpr 0x97a2d88 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97a2d50 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x97a2d30 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
              (CXXThisExpr 0x97a2d20 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0x97a3058 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x97a2f30 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x97a2ed0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275010 0x928c320 0x928eeb0 0x92e1010 0x92e1380 0x931a900 0x93894c0 0x955ce20 0x955d320 0x955d830 0x965cc60)
      (DeclRefExpr 0x97a2e30 <col:11> 'char_type *' lvalue ParmVar 0x97a2780 '__base' 'char_type *')
      (CallExpr 0x97a2eb0 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97a2e78 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0x97a2e58 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x978b3e0
            (CXXThisExpr 0x97a2e48 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x97a3038 <line:236:2, line:241:2>
      (CompoundAssignOperator 0x97a2f88 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x97a2f54 <col:4> 'char_type *' lvalue Var 0x97a2b60 '__endg' 'char_type *')
        (DeclRefExpr 0x97a2f6c <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x97a27c0 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0x97a2fd8 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x97a2fa8 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x97a27c0 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0x97a2fc0 <col:10> 'int' 0))
      (BinaryOperator 0x97a3020 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0x97a2ff0 <col:4> 'char_type *' lvalue Var 0x97a2cd0 '__endp' 'char_type *')
        (DeclRefExpr 0x97a3008 <col:13> 'char_type *' lvalue Var 0x97a2b60 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0x97a31e8 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0x97a3090 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x97a3074 <col:11> 'const _Bool' lvalue Var 0x97a2910 '__testin' 'const _Bool'))
    (CallExpr 0x97a31c0 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x97a30b0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x97a30a0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x97a30e4 <col:13> 'char_type *' lvalue ParmVar 0x97a2780 '__base' 'char_type *')
      (CXXOperatorCallExpr 0x97a3180 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x97a3130 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x928deb0 0x9322770 0x9324900 0x9556f00 0x9584560 0x9585170 0x95581f0 0x955a5c0)
        (DeclRefExpr 0x97a30fc <col:21> 'char_type *' lvalue ParmVar 0x97a2780 '__base' 'char_type *')
        (DeclRefExpr 0x97a3114 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x97a27c0 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0x97a31a4 <col:35> 'char_type *' lvalue Var 0x97a2b60 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0x97a3400 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x97a3220 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x97a3204 <col:11> 'const _Bool' lvalue Var 0x97a2a30 '__testout' 'const _Bool'))
    (CompoundStmt 0x97a33e8 <line:246:2, line:253:2>
      (CallExpr 0x97a32a8 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0x97a3240 <col:4> '<bound member function type>' ->_M_pbump 0x978c610
          (CXXThisExpr 0x97a3230 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x97a3260 <col:13> 'char_type *' lvalue ParmVar 0x97a2780 '__base' 'char_type *')
        (DeclRefExpr 0x97a3278 <col:21> 'char_type *' lvalue Var 0x97a2cd0 '__endp' 'char_type *')
        (DeclRefExpr 0x97a3290 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x97a2800 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0x97a33c8 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0x97a32f8 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x97a32e8 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x97a32d0 <col:9> 'const _Bool' lvalue Var 0x97a2910 '__testin' 'const _Bool')))
        (CallExpr 0x97a33a0 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x97a3320 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x97a3310 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x97a3354 <col:17> 'char_type *' lvalue Var 0x97a2b60 '__endg' 'char_type *')
          (DeclRefExpr 0x97a336c <col:25> 'char_type *' lvalue Var 0x97a2b60 '__endg' 'char_type *')
          (DeclRefExpr 0x97a3384 <col:33> 'char_type *' lvalue Var 0x97a2b60 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0x97a3e00 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0x97a39d8 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97a3970 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x97a3960 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x97a39a4 <col:18> 'char_type *' lvalue ParmVar 0x97a37d0 '__pbeg' 'char_type *')
    (DeclRefExpr 0x97a39bc <col:26> 'char_type *' lvalue ParmVar 0x97a3820 '__pend' 'char_type *'))
  (WhileStmt 0x97a3d68 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x97a3b20 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x97a3ad0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9275560 0x928cbb0 0x928f330 0x931b370 0x955ef80 0x955f4c0 0x955f9f0)
      (DeclRefExpr 0x97a39fc <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x97a3860 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x97a3ab0 <col:22, col:56> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
    (CompoundStmt 0x97a3d50 <line:263:2, line:266:2>
      (CallExpr 0x97a3c40 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x97a3b58 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x97a3b48 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x97a3c20 <col:16, col:50> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0x97a3d30 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x97a3c60 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x97a3860 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0x97a3d10 <col:13, col:47> 'const int':'const int' lvalue Var 0x9343f10 '__max' 'const int':'const int'))))
  (CallExpr 0x97a3de0 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97a3d90 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x97a3d80 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x97a3dc4 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x97a3860 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0x97c0f78 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x97c0e20 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0x97c0df0 <col:18> 'int' 1)
    (IntegerLiteral 0x97c0e08 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0x97c0f88 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x97c0ea8 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0x97c0e78 <col:24> 'int' 1)
    (IntegerLiteral 0x97c0e90 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0x97c0f98 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x97c0f28 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0x97c0ef8 <col:23> 'int' 1)
    (IntegerLiteral 0x97c0f10 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0x97c7f98 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x97c7dc0 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0x97c81f0 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0x97c80d0 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x97c80c0 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0x97c80b0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0x97c8094 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0x97c7fb0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0x97c81b8 <line:277:5, line:283:5>
      (CaseStmt 0x97c8108 <line:278:9, line:280:20>
        (ImplicitCastExpr 0x97c81e0 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0x97c80ec <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x97c7de0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0x97c8140 <line:279:9, line:280:20>
          (ImplicitCastExpr 0x97c81d0 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0x97c8128 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x97c7e20 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0x97c8170 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0x97c8160 <col:20> '_Bool' false))))
      (DefaultStmt 0x97c81a0 <line:281:9, line:282:20>
        (ReturnStmt 0x97c8190 <col:13, col:20>
          (CXXBoolLiteralExpr 0x97c8180 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0x97c84b0 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0x97c8300 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x97c82f0 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0x97c82e0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0x97c82c4 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0x97c8210 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0x97c8458 <line:290:5, line:298:5>
      (CaseStmt 0x97c8338 <line:291:9, line:295:20>
        (ImplicitCastExpr 0x97c84a0 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0x97c831c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x97c7de0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0x97c8370 <line:292:9, line:295:20>
          (ImplicitCastExpr 0x97c8490 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0x97c8358 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x97c7e20 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0x97c83a8 <line:293:9, line:295:20>
            (ImplicitCastExpr 0x97c8480 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0x97c8390 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x97c7e60 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0x97c83e0 <line:294:9, line:295:20>
              (ImplicitCastExpr 0x97c8470 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0x97c83c8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x97c7ea0 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0x97c8410 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0x97c8400 <col:20> '_Bool' true))))))
      (DefaultStmt 0x97c8440 <line:296:9, line:297:20>
        (ReturnStmt 0x97c8430 <col:13, col:20>
          (CXXBoolLiteralExpr 0x97c8420 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0x97c89e0 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x97c89c8 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0x97c8a08 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x97c89f0 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0x97c8af4 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0x97c7f60 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0x97c94a0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9488 <col:14> 'int' 0))
, const char *param2 = (ImplicitCastExpr 0x97c9510 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c94f8 <col:14> 'int' 0))
, const char *param3 = (ImplicitCastExpr 0x97c9580 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9568 <col:14> 'int' 0))
, const char *param4 = (ImplicitCastExpr 0x97c95f0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c95d8 <col:14> 'int' 0))
, const char *param5 = (ImplicitCastExpr 0x97c9660 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9648 <col:14> 'int' 0))
, const char *param6 = (ImplicitCastExpr 0x97c96d0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c96b8 <col:14> 'int' 0))
, const char *param7 = (ImplicitCastExpr 0x97c9740 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9728 <col:14> 'int' 0))
, const char *param8 = (ImplicitCastExpr 0x97c97b0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9798 <col:14> 'int' 0))
, const char *param9 = (ImplicitCastExpr 0x97c9820 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9808 <col:14> 'int' 0))
, const char *param10 = (ImplicitCastExpr 0x97c9890 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9878 <col:14> 'int' 0))
, const char *param11 = (ImplicitCastExpr 0x97c9900 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c98e8 <col:14> 'int' 0))
, const char *param12 = (ImplicitCastExpr 0x97c9970 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97c9958 <col:14> 'int' 0))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0x97cca38 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0x97cca28 <line:395:5, col:51>
    (BinaryOperator 0x97cca10 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0x97cc808 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x97cc7d0 <col:14, col:22> '_Bool'
          (MemberExpr 0x97cc7b0 <col:14, col:16> '<bound member function type>' .empty 0x95c73e0
            (DeclRefExpr 0x97cc798 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x97cc4b0 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0x97cca00 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0x97cc9b8 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0x97cc9a8 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x97cc98c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9184ea0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0x97cc9e0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0x97cc8a0 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0x97cc9f0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x97cc960 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x97cc940 <col:44, col:46> '<bound member function type>' .at 0x95c7d70
                (DeclRefExpr 0x97cc8d0 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x97cc4b0 'x' 'const wcstring &'))
              (ImplicitCastExpr 0x97cc980 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x97cc928 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0x97ca770 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0x97c9fa8 <line:354:5, col:13>
    0x97c9f70 "T result")
  (DeclStmt 0x97ca6f0 <line:355:5, col:33>
    0x97ca010 "std::wstringstream stream =
      (CXXConstructExpr 0x97ca6c8 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0x97ca044 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x97c9e30 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0x97ca6b0 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x97ca730 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0x97ca700 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x97ca010 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0x97ca718 <col:15> 'T' lvalue Var 0x97c9f70 'result' 'T'))
  (ReturnStmt 0x97ca760 <line:357:5, col:12>
    (DeclRefExpr 0x97ca748 <col:12> 'T' lvalue Var 0x97c9f70 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0x97cc478 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0x97cc468 <line:389:5, col:50>
    (BinaryOperator 0x97cc450 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0x97cc250 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x97cc230 <col:14, col:22> '_Bool'
          (MemberExpr 0x97cc210 <col:14, col:16> '<bound member function type>' .empty 0x95a2040
            (DeclRefExpr 0x97cc1f8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x97cbf10 'x' 'const std::string &'))))
      (ImplicitCastExpr 0x97cc440 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0x97cc3e8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0x97cc3d8 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x97cc37c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x97bb9e0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0x97cc410 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x97cc29c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0x97cc430 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0x97cc420 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0x97cc350 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0x97cc330 <col:43, col:45> '<bound member function type>' .at 0x95a2990
                  (DeclRefExpr 0x97cc2c0 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x97cbf10 'x' 'const std::string &'))
                (ImplicitCastExpr 0x97cc370 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x97cc318 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0x97cb160 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0x97ca9b8 <line:363:5, col:19>
    0x97ca960 "T result =
      (CXXUnresolvedConstructExpr 0x97ca9a0 <col:16, col:18> 'T')")
  (DeclStmt 0x97cb0e0 <line:364:5, col:32>
    0x97caa20 "std::stringstream stream =
      (CXXConstructExpr 0x97cb0b8 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0x97caa54 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x97ca820 'x' 'const std::string &')
        (CXXDefaultArgExpr 0x97cb0a0 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x97cb120 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0x97cb0f0 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0x97caa20 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0x97cb108 <col:15> 'T' lvalue Var 0x97ca960 'result' 'T'))
  (ReturnStmt 0x97cb150 <line:366:5, col:12>
    (DeclRefExpr 0x97cb138 <col:12> 'T' lvalue Var 0x97ca960 'result' 'T')))

;
template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0x97ccf70 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0x97ccf60 <line:401:5, col:42>
    (ExprWithCleanups 0x97ccf40 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x97ccee0)
      (CXXConstructExpr 0x97ccf18 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x97ccf08 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x97ccef8 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x97ccee8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x97ccee0)
              (CallExpr 0x97ccea8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0x97cce98 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x97cce40 <col:12> 'wcstring (const long &)' lvalue Function 0x97cb710 'to_string' 'wcstring (const long &)' (FunctionTemplate 0x97cb310 'to_string')))
                (MaterializeTemporaryExpr 0x97ccec8 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0x97ccdf8 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0x97ccde8 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0x97ccdd8 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0x97ccdac <col:40> 'const int' lvalue ParmVar 0x97cca70 'x' 'const int &')))))))))))))

template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0x97cbea8 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0x97cba08 <line:381:5, col:22>
    0x97cb9d0 "wchar_t buff[128]")
  (CallExpr 0x97cbac8 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0x97cbab8 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0x97cba80 <col:5> 'void (wchar_t *, long)' lvalue Function 0x97c9d50 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0x97cbaf0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0x97cba50 <col:22> 'wchar_t [128]' lvalue Var 0x97cb9d0 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0x97cbb00 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0x97cba68 <col:28> 'const long' lvalue ParmVar 0x97cb670 'x' 'const long &')))
  (ReturnStmt 0x97cbe98 <line:383:5, col:25>
    (ExprWithCleanups 0x97cbe78 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x97cbb80)
      (CXXTemporary 0x97cbe00)
      (CXXConstructExpr 0x97cbe50 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x97cbe40 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x97cbe30 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0x97cbe18 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0x97cbe08 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x97cbe00)
                (CXXConstructExpr 0x97cbdd8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0x97cbb40 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0x97cbb30 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0x97cbb18 <col:21> 'wchar_t [128]' lvalue Var 0x97cb9d0 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0x97cbdc0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0x97cb610 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0x97cb458 <line:372:5, col:30>
    0x97cb370 "std::wstringstream stream =
      (CXXConstructExpr 0x97cb430 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0x97cb418 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x97cb498 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0x97cb468 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x97cb370 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0x97cb480 <col:15> 'const T' lvalue ParmVar 0x97cb210 'x' 'const T &'))
  (ReturnStmt 0x97cb600 <line:374:5, col:23>
    (ExprWithCleanups 0x97cb5e0 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x97cb580)
      (CXXConstructExpr 0x97cb5b8 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x97cb5a8 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x97cb598 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x97cb588 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0x97cb580)
              (CXXMemberCallExpr 0x97cb528 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0x97cb508 <col:12, col:19> '<bound member function type>' .str 0x97b71d0
                  (ImplicitCastExpr 0x97cb568 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0x97cb4b0 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x97cb370 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0x97cbea8 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0x97cba08 <line:381:5, col:22>
    0x97cb9d0 "wchar_t buff[128]")
  (CallExpr 0x97cbac8 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0x97cbab8 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0x97cba80 <col:5> 'void (wchar_t *, long)' lvalue Function 0x97c9d50 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0x97cbaf0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0x97cba50 <col:22> 'wchar_t [128]' lvalue Var 0x97cb9d0 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0x97cbb00 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0x97cba68 <col:28> 'const long' lvalue ParmVar 0x97cb670 'x' 'const long &')))
  (ReturnStmt 0x97cbe98 <line:383:5, col:25>
    (ExprWithCleanups 0x97cbe78 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x97cbb80)
      (CXXTemporary 0x97cbe00)
      (CXXConstructExpr 0x97cbe50 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x97cbe40 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x97cbe30 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0x97cbe18 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0x97cbe08 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x97cbe00)
                (CXXConstructExpr 0x97cbdd8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0x97cbb40 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0x97cbb30 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0x97cbb18 <col:21> 'wchar_t [128]' lvalue Var 0x97cb9d0 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0x97cbdc0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0x97cc478 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0x97cc468 <line:389:5, col:50>
    (BinaryOperator 0x97cc450 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0x97cc250 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x97cc230 <col:14, col:22> '_Bool'
          (MemberExpr 0x97cc210 <col:14, col:16> '<bound member function type>' .empty 0x95a2040
            (DeclRefExpr 0x97cc1f8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x97cbf10 'x' 'const std::string &'))))
      (ImplicitCastExpr 0x97cc440 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0x97cc3e8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0x97cc3d8 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x97cc37c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x97bb9e0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0x97cc410 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x97cc29c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0x97cc430 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0x97cc420 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0x97cc350 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0x97cc330 <col:43, col:45> '<bound member function type>' .at 0x95a2990
                  (DeclRefExpr 0x97cc2c0 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x97cbf10 'x' 'const std::string &'))
                (ImplicitCastExpr 0x97cc370 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x97cc318 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0x97cca38 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0x97cca28 <line:395:5, col:51>
    (BinaryOperator 0x97cca10 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0x97cc808 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x97cc7d0 <col:14, col:22> '_Bool'
          (MemberExpr 0x97cc7b0 <col:14, col:16> '<bound member function type>' .empty 0x95c73e0
            (DeclRefExpr 0x97cc798 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x97cc4b0 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0x97cca00 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0x97cc9b8 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0x97cc9a8 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x97cc98c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9184ea0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0x97cc9e0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0x97cc8a0 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0x97cc9f0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x97cc960 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x97cc940 <col:44, col:46> '<bound member function type>' .at 0x95c7d70
                (DeclRefExpr 0x97cc8d0 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x97cc4b0 'x' 'const wcstring &'))
              (ImplicitCastExpr 0x97cc980 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x97cc928 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0x97ccf70 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0x97ccf60 <line:401:5, col:42>
    (ExprWithCleanups 0x97ccf40 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x97ccee0)
      (CXXConstructExpr 0x97ccf18 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x97ccf08 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x97ccef8 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x97ccee8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x97ccee0)
              (CallExpr 0x97ccea8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0x97cce98 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x97cce40 <col:12> 'wcstring (const long &)' lvalue Function 0x97cb710 'to_string' 'wcstring (const long &)' (FunctionTemplate 0x97cb310 'to_string')))
                (MaterializeTemporaryExpr 0x97ccec8 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0x97ccdf8 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0x97ccde8 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0x97ccdd8 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0x97ccdac <col:40> 'const int' lvalue ParmVar 0x97cca70 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0x97ce7a8 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0x97ce5a0 <line:421:9, col:23>
    0x97ce540 "size_t len =
      (ImplicitCastExpr 0x97ce590 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x97ce578 <col:22> 'int' 0))")
  (IfStmt 0x97ce750 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0x97ce630 <line:422:13, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
      (MemberExpr 0x97ce5f4 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0x97cd7a0
        (CXXThisExpr 0x97ce5c8 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (IntegerLiteral 0x97ce618 </usr/include/linux/stddef.h:8:14> 'int' 0))
    (CompoundStmt 0x97ce738 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0x97ce720 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0x97ce6c0 <line:424:20, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0x97ce690 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0x97ce658 <col:20> 'CharType_t **const' lvalue ->array 0x97cd7a0
              (CXXThisExpr 0x97ce648 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0x97ce678 <col:26> 'size_t':'unsigned int' lvalue Var 0x97ce540 'len' 'size_t':'unsigned int'))
          (IntegerLiteral 0x97ce6a8 </usr/include/linux/stddef.h:8:14> 'int' 0))
        (CompoundStmt 0x97ce708 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0x97ce6f0 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0x97ce6d8 <col:17> 'size_t':'unsigned int' lvalue Var 0x97ce540 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0x97ce798 <line:429:9, col:16>
    (ImplicitCastExpr 0x97ce788 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x97ce76c <col:16> 'size_t':'unsigned int' lvalue Var 0x97ce540 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0x97ce8e8 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0x97ce868 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0x97ce858 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x97ce7dc <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9154e80 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x97ce840 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0x97ce810 <col:24> 'CharType_t **' lvalue ->array 0x97cd7a0
        (CXXThisExpr 0x97ce800 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0x97ce8d0 <line:435:9, /usr/include/linux/stddef.h:8:14> '<dependent type>' '='
    (MemberExpr 0x97ce898 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0x97cd7a0
      (CXXThisExpr 0x97ce888 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (IntegerLiteral 0x97ce8b8 </usr/include/linux/stddef.h:8:14> 'int' 0)))


public:
public:
    null_terminated_array_t<CharType_t>() : array((IntegerLiteral 0x97ce900 </usr/include/linux/stddef.h:8:14> 'int' 0)
) (CompoundStmt 0x97ce960 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0x97ce9c0 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0x97ce970 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0x97cd470 0x97cd040)
  (DeclRefExpr 0x97ce9a8 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0x97ce110 'argv' 'const string_list_t &'))
) (CompoundStmt 0x97cea20 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0x97cea98 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0x97cea78 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97cea40 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x97cea30 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0x97cebe8 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0x97ceaf8 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97ceac0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x97ceab0 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0x97cebd0 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x97ceb28 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x97ceb18 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0x97cebb0 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x97ceb60 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0x97cd470 0x97cd040)
      (DeclRefExpr 0x97ceb98 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0x97ce2d0 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0x97cec40 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0x97cec30 <line:457:9, col:16>
    (MemberExpr 0x97cec10 <col:16> 'CharType_t **const' lvalue ->array 0x97cd7a0
      (CXXThisExpr 0x97cec00 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0x97cecc0 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0x97ceca0 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x97cec68 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x97cec58 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0x97cf8a8 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0x97cf888 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0x97cf878 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x97cf860 <col:9> 'void (void *) throw()' lvalue Function 0x9154e80 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x97cf848 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0x97cf838 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0x97cf828 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0x97cf7f8 <col:22> 'const char *' lvalue ->str 0x97cf240
            (CXXThisExpr 0x97cf7e8 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0x97cf8d8 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x97cf8c0 <col:14> 'int' 0))
) (CompoundStmt 0x97d3050 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0x97d32a0 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0x97d3138 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0x97d3128 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x97d3110 <col:9> 'void (void *) throw()' lvalue Function 0x9154e80 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x97d30f8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0x97d30e8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0x97d30d8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0x97d30a8 <col:22> 'const char *' lvalue ->str 0x97cf240
            (CXXThisExpr 0x97d3098 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0x97d3288 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0x97d3168 <col:9> 'const char *' lvalue ->str 0x97cf240
      (CXXThisExpr 0x97d3158 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0x97d3278 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0x97d3258 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0x97d3248 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x97d3214 <col:15> 'char *(const wchar_t *)' lvalue Function 0x97c1930 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0x97d31f8 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0x97d31d8 <col:23, col:25> '<bound member function type>' .c_str 0x95d7110
            (DeclRefExpr 0x97d31c0 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x97cf630 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0x97d3328 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0x97d3318 <line:495:9, col:16>
    (ImplicitCastExpr 0x97d3308 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0x97d32e8 <col:16> 'const char *const' lvalue ->str 0x97cf240
        (CXXThisExpr 0x97d32d8 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0x97d424c <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0x97d3ed0 'r' 'T *')
), saved_value((UnaryOperator 0x97d42c0 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0x97d42a8 <col:45> 'T *' lvalue ParmVar 0x97d3ed0 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0x97d4318 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0x97d4378 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0x97d4388 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0x97d3fe0 'r' 'T *')
), saved_value((UnaryOperator 0x97d43f0 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0x97d43d8 <col:66> 'T *' lvalue ParmVar 0x97d3fe0 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0x97d4448 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0x97d4508 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0x97d44f0 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0x97d44c0 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0x97d44a4 <col:10> 'T *' lvalue ParmVar 0x97d3fe0 'r' 'T *'))
    (DeclRefExpr 0x97d44d4 <col:14> 'const T' lvalue ParmVar 0x97d4050 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0x97d4588 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0x97d4568 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0x97d4548 <col:9> '<bound member function type>' ->restore 0x97d41f0
      (CXXThisExpr 0x97d4538 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0x97d4788 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0x97d4768 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0x97d45e0 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0x97d45d0 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0x97d45b0 <col:14> '_Bool' lvalue ->restored 0x97d3e50
          (CXXThisExpr 0x97d45a0 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0x97d4750 <line:551:9, line:554:9>
      (CallExpr 0x97d46d0 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x97d4618 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x9272240 0x9272780 0x931c370 0x95622a0)
        (UnaryOperator 0x97d4688 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0x97d4668 <col:24> 'T *const' lvalue ->ref 0x97d3dd0
            (CXXThisExpr 0x97d4658 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0x97d46b0 <col:29> 'T' lvalue ->saved_value 0x97d3e10
          (CXXThisExpr 0x97d46a0 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0x97d4738 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0x97d4708 <col:13> '_Bool' lvalue ->restored 0x97d3e50
          (CXXThisExpr 0x97d46f8 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0x97d4728 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int commo